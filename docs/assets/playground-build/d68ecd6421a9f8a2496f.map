{"version":3,"sources":["/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/mapping/mappingContext.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/mapping/mappingProvider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/theme/themeContext.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/theme/theme.service.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/theme/themeProvider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/style/styleProvider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/modal/modalResolver.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/modal/modal.service.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/modal/modalPanel.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/style/style.service.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/application/applicationProvider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/style/styleConsumer.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/style/styled.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/theme/withStyles.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/animation/animation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/animation/pulseAnimation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/animation/shakeAnimation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/animation/zoomAnimation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/devsupport/components/falsyFC/falsyFC.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/text/text.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/devsupport/components/falsyText/falsyText.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/devsupport/components/touchableWithoutFeedback.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/devsupport/components/touchableWeb.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/devsupport/components/measure/type.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/devsupport/components/measure/measure.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/devsupport/services/web/webEventResponder.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/devsupport/services/rtl/rtlFlexMap.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/devsupport/services/rtl/rtl.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/devsupport/services/props/props.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/devsupport/typings.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/input/input.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/list/list.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/popover/type.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/popover/popoverView.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/popover/placement.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/popover/popover.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/autocomplete/autocomplete.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/list/listItem.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/autocomplete/autocompleteItem.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/avatar/avatar.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/shared/tabIndicator.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/bottomNavigation/bottomNavigation.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/bottomNavigation/bottomNavigationTab.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/button/button.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/buttonGroup/buttonGroup.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/divider/divider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/shared/chevronDown.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/shared/chevronLeft.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/shared/chevronRight.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/components/calendarHeader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/components/calendarMonthHeader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/components/picker/calendarPickerRow.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/components/picker/calendarPickerCell.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/i18n/type.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/components/picker/calendarPicker.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/components/calendarDateContent.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/type.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/service/date.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/i18n/en.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/service/nativeDate.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/service/helpers.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/service/calendarData.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/baseCalendar.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/calendar.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/card/card.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/service/rangeDate.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/rangeCalendar.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/shared/checkmark.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/shared/minus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/checkbox/checkbox.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/datepicker/baseDatepicker.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/datepicker/datepicker.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/datepicker/rangeDatepicker.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/menu/menu.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/menu/menu.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/drawer/drawer.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/menu/menuItem.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/menu/menuGroup.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/drawer/drawerGroup.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/drawer/drawerItem.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/select/select.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/select/select.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/select/selectItem.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/select/selectGroup.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/icon/service/iconRegistry.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/icon/icon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/icon/iconAnimation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/icon/iconRegistry.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/layout/layout.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/modal/modal.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/overflowMenu/overflowMenu.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/radio/radio.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/radioGroup/radioGroup.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/spinner/animation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/spinner/spinner.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/tab/tabBar.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/viewPager/viewPager.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/tab/tabView.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/tab/tab.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/toggle/toggle.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/popover/popoverIndicator.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/tooltip/tooltip.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/topNavigation/topNavigation.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/topNavigation/topNavigationAction.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/services/theme.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/eva-icons/evaIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/eva-icons/index.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/eva-icons/createIconsMap.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/app/themes.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/showcaseIFrame.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/autocomplete/autocompleteAccessories.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/autocomplete/autocompleteAsync.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/autocomplete/autocompleteHandleKeyboard.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/autocomplete/autocompleteSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/avatar/avatarShape.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/avatar/avatarSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/avatar/avatarSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/bottomNavigation/bottomNavigationAccessories.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/bottomNavigation/bottomNavigationSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/bottomNavigation/bottomNavigationStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/bottomNavigation/bottomNavigationTabSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/bottomNavigation/bottomNavigationWithoutIndicator.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/button/buttonAccessories.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/button/buttonAppearances.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/button/buttonGhost.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/button/buttonOutline.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/button/buttonSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/button/buttonSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/button/buttonStates.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/button/buttonStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/button/buttonStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/buttonGroup/buttonGroupAppearance.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/buttonGroup/buttonGroupOutline.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/buttonGroup/buttonGroupSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/buttonGroup/buttonGroupSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/buttonGroup/buttonGroupStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/buttonGroup/buttonGroupWithIcons.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/calendar/calendarBoundingMonth.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/calendar/calendarBounds.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/calendar/calendarCustomDay.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/calendar/calendarCustomLocale.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/calendar/calendarFilter.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/moment/momentDate.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/calendar/calendarMoment.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/calendar/calendarSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/calendar/calendarStartDayOfWeek.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/calendar/rangeCalendarSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/card/cardAccessories.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/card/cardSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/card/cardStatuses.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/checkbox/checkboxIndeterminate.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/checkbox/checkboxSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/checkbox/checkboxStates.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/checkbox/checkboxStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/checkbox/checkboxStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/datepicker/datepickerAccessories.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/datepicker/datepickerCustomDay.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/datepicker/datepickerFilters.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/datepicker/datepickerLocaleSettings.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/datepicker/datepickerMoment.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/datepicker/datepickerSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/datepicker/datepickerSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/datepicker/datepickerStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/datepicker/rangeDatepickerSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/drawer/drawerAccessories.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/drawer/drawerGroups.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/drawer/drawerItemSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/drawer/drawerSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/drawer/drawerStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/icon/iconAnimation.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/icon/iconSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/icon/iconWithinComponents.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/input/inputAccessories.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/input/inputSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/input/inputSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/input/inputStates.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/input/inputStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/input/inputStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/layout/layoutLevel.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/layout/layoutSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/list/listAccessories.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/list/listItemSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/list/listSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/list/listStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/menu/menuAccessories.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/menu/menuDisabledOptions.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/menu/menuGroups.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/menu/menuItemSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/menu/menuSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/menu/menuStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/modal/modalSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/modal/modalWithBackdrop.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/overflowMenu/overflowMenuExternalSourceIcons.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/overflowMenu/overflowMenuPlacement.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/overflowMenu/overflowMenuSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/overflowMenu/overflowMenuStyledBackdrop.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/overflowMenu/overflowMenuWithDisabledItems.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/overflowMenu/overflowMenuWithIcons.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/overflowMenu/overflowMenuWithoutDivider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/popover/popoverFullWidth.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/popover/popoverPlacement.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/popover/popoverSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/popover/popoverStyledBackdrop.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/radio/radioSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/radio/radioStates.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/radio/radioStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/radio/radioStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/radioGroup/radioGroupSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/select/selectAccessories.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/select/selectDisabledOptions.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/select/selectItemSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/select/selectMultiSelect.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/select/selectSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/select/selectSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/select/selectStates.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/select/selectStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/select/selectStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/select/selectWithGroups.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/spinner/spinnerDataLoading.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/spinner/spinnerSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/spinner/spinnerSizes.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/spinner/spinnerStatuses.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/styled/styledComponentSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/styled/styledComponentStates.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/styled/styledComponentVariants.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/tab/tabBarAccessories.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/tab/tabBarSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/tab/tabSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/tab/tabStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/tab/tabViewLazyLoading.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/tab/tabViewSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/text/textAppearances.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/text/textSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/text/textStatuses.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/themeProvider/themeProviderSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/toggle/toggleSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/toggle/toggleStates.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/toggle/toggleStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/toggle/toggleStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/tooltip/tooltipInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/tooltip/tooltipPlacement.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/tooltip/tooltipSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/tooltip/tooltipStyledBackdrop.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/tooltip/tooltipWithExternalSourceIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/tooltip/tooltipWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/topNavigation/topNavigationAccessories.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/topNavigation/topNavigationActionSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/topNavigation/topNavigationSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/topNavigation/topNavigationStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/useStyleSheet/useStyleSheetSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/useTheme/useThemeSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/viewPager/viewPagerLazyLoading.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/viewPager/viewPagerSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/components/withStyles/withStylesSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/navigation/app.navigator.web.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/app/app.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/App.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/web-build/register-service-worker.js","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/assets/icon.png","/Users/artyorsh/Repositories/react-native-ui-kitten/src/showcases/node_modules/moment/locale sync /^/.//.*$","/Users/artyorsh/Repositories/react-native-ui-kitten/node_modules/moment/locale sync /^/.//.*$"],"names":["MappingContext","React","MappingProvider","this","styles","children","value","ThemeContext","useTheme","ThemeService","create","Object","getValue","themeKey","findValue","theme","isReference","createKeyFromReference","ThemeProvider","StyleProvider","ModalResolver","style","source","componentChildren","StyleSheet","activeOpacity","onPress","defaultProps","visible","ModalServiceType","ModalService","panel","element","config","identifier","update","ModalPanel","components","Math","key","backdropStyle","onBackdropPress","Array","state","setState","panelChild","get","childElement","props","areThereAnyComponents","container","flex","ApplicationProvider","schemaProcessor","customizedMapping","merge","mapping","customMapping","Interaction","State","StyleService","createThemed","createThemedEntry","StyleConsumerService","name","meta","safe","generatedConfig","docRoot","message","console","appearance","styleInfo","getStyleInfo","generatedMapping","getGeneratedStyleMapping","JSON","withValidParameters","styleKeys","componentStyles","query","invalidParameters","variantProps","getDerivedVariants","stateProps","getDerivedStates","variants","states","matches","isDefault","p","isState","isAssigned","nextValue","transform","info","keyQuery","lhs","rhs","acc","reducer","styled","Component","Wrapper","interaction","eva","dispatch","forwardedRef","restProps","ref","ResultComponent","WrappingElement","hoistNonReactStatics","DEFAULT_CONFIG","cycles","useNativeDriver","Platform","default","web","Animation","counter","running","endCallback","animation","start","stop","end","easing","Easing","duration","PulseAnimation","Animated","restConfig","startAnimation","toValue","endAnimation","scale","offset","ShakeAnimation","translateX","ZoomAnimation","FalsyFC","component","fallback","TextComponent","textProps","styledComponentName","Text","FalsyText","TouchableWithoutFeedback","left","top","right","bottom","hitSlop","useDefaultHitSlop","TouchableWeb","touchableProps","outlineWidth","Point","x","y","other","Size","width","height","Frame","origin","size","equals","window","Dimensions","point","MeasureElement","onUIManagerMeasure","frame","bindToWindow","measureSelf","node","findNodeHandle","UIManager","onLayout","WebEventResponderInstance","eventHandlers","WebEventResponder","onMouseEnter","onMouseLeave","onFocus","onBlur","FlexStartEndMapper","toRTL","rtl","FLEX_PREFIX","RtlFlexMap","alignContent","alignItems","alignSelf","justifyContent","flexDirection","FLEX_ROW_PREFIX","flexWrap","FLEX_WRAP_PREFIX","RTLServiceStatic","RTLService","I18nManager","ltr","isRTL","rtlStyle","currentStyleValue","i18nStyleValue","FlexStyleProps","PropsService","from","rest","allOf","styleName","IndexPath","row","section","InputComponent","flatStyles","inputContainerStyle","containerStyle","textMarginHorizontal","textFontFamily","textFontSize","textFontWeight","textColor","placeholderColor","iconWidth","iconHeight","iconMarginHorizontal","iconTintColor","labelColor","labelFontSize","labelLineHeight","labelMarginBottom","labelFontWeight","captionMarginTop","captionColor","captionFontSize","captionLineHeight","captionFontWeight","captionIconWidth","captionIconHeight","captionIconMarginRight","captionIconTintColor","inputContainer","captionContainer","marginTop","text","marginHorizontal","fontFamily","fontSize","fontWeight","color","placeholder","icon","tintColor","label","lineHeight","marginBottom","captionIcon","marginRight","captionLabel","textStyle","caption","accessoryLeft","accessoryRight","textInputProps","evaStyle","getComponentStyle","placeholderTextColor","webEventResponder","platformStyles","editable","flexGrow","flexShrink","flexBasis","textAlign","android","paddingVertical","Input","ListComponent","index","listRef","current","scrollToOffset","params","keyExtractor","flatListProps","List","Offsets","offsetKeys","flatStyle","offsetValue","MARGIN","MARGIN_HORIZONTAL","MARGIN_VERTICAL","MARGIN_LEFT","MARGIN_TOP","MARGIN_RIGHT","MARGIN_BOTTOM","PlacementOptions","bounds","offsets","PopoverPlacements","LEFT","options","direction","alignment","fitsStart","fitsTop","fitsBottom","LEFT_START","parent","LEFT_END","TOP","fitsLeft","fitsRight","TOP_START","TOP_END","RIGHT","fitsEnd","RIGHT_START","RIGHT_END","BOTTOM","BOTTOM_START","BOTTOM_END","PopoverViewComponent","indicatorWidth","indicatorHeight","indicatorBackgroundColor","content","indicator","backgroundColor","getDirectionStyle","isVertical","isStart","isEnd","isReverse","indicatorRotate","indicatorReverseRotate","containerTranslate","INDICATOR_WIDTH","indicatorTranslate","i18nVerticalIndicatorTranslate","rotate","contentContainerStyle","viewProps","directionStyle","PopoverView","PLACEMENT_FAMILIES","PopoverPlacementService","findRecursive","preferredValue","oneOfCurrentFamily","findFromFamily","placement","oneOfReversedFamily","families","firstTruthy","nextPlacement","preferredFrame","familyFrame","familyValue","Popover","childFrame","anchorFrame","forceMeasure","placementOptions","displayFrame","contentFrame","contentElement","fullWidthStyle","onMeasure","modalId","contentPosition","hide","force","popoverView","position","Autocomplete","listVisible","hasData","inputProps","fullWidth","anchor","data","bounces","renderItem","popover","maxHeight","overflow","list","ListItemComponent","titleMarginHorizontal","titleFontFamily","titleFontSize","titleLineHeight","titleFontWeight","titleColor","descriptionFontFamily","descriptionFontSize","descriptionFontWeight","descriptionLineHeight","descriptionColor","descriptionMarginHorizontal","accessoryMarginHorizontal","title","description","accessory","webStyles","onPressIn","onPressOut","renderTemplateChildren","contentContainer","ListItem","AutocompleteItem","AvatarComponent","roundCoefficient","containerParameters","baseStyle","borderRadius","imageProps","Avatar","TabIndicator","event","animated","contentOffset","addListener","nextProps","scrollToIndex","removeAllListeners","createOffsetAnimation","selectedPosition","BottomNavigationComponent","indicatorStyle","selectedIndex","positions","selected","onSelect","tabElements","renderComponentChildren","indicatorElement","item","BottomNavigation","BottomNavigationTabComponent","iconMarginVertical","textMarginVertical","textLineHeight","marginVertical","BottomNavigationTab","ButtonComponent","Button","ButtonGroupComponent","dividerBackgroundColor","dividerWidth","borderWidth","button","borderColor","isFirstElement","isLastElement","renderButtonElement","status","shapeStyle","borderEndWidth","borderEndColor","startShapeStyle","borderTopStartRadius","borderBottomStartRadius","endShapeStyle","borderTopEndRadius","borderBottomEndRadius","renderButtonElements","ButtonGroup","DividerComponent","Divider","ChevronDown","viewBox","data-name","opacity","d","ChevronLeft","ChevronRight","CalendarHeader","svgProps","fill","IconComponent","onTitlePress","lateralNavigationAllowed","headerButtonText","headerButtonIcon","lateralIcon","subContainer","CalendarMonthHeader","CalendarPickerRow","CalendarPickerCellComponent","getContainerBorderRadius","firstRangeItem","lastRangeItem","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","contentBorderWidth","contentBorderRadius","contentBorderColor","contentBackgroundColor","contentTextFontSize","contentTextLineHeight","contentTextFontWeight","contentTextColor","contentTextFontFamily","contentText","renderContentElement","CalendarPickerCell","CalendarPicker","range","isFirstRangeItem","isLastRangeItem","date","disabled","bounding","today","shouldComponentUpdate","CalendarDateContent","VIEW_MODE_DATE","id","navigationNext","VIEW_MODE_YEAR","pickNext","VIEW_MODE_MONTH","CalendarViewModes","DATE","MONTH","YEAR","DateService","locale","date1","compareDates","isBetweenIncluding","isSameDay","isSameMonth","isSameYear","DAYS_IN_WEEK","MONTHS_IN_YEAR","TranslationWidth","EN","dayNames","short","long","monthNames","DEFAULT_OPTIONS","format","startDayOfWeek","NativeDateService","i18nSettings","fecha","i18n","isNaN","parse","SHORT","getFechaDayNames","Date","month","createDate","getMonthEnd","date2","result","year","dayNamesShort","monthNamesShort","batch","target","chunkIndex","res","producer","i","arr","DEFAULT_DATE_OPTIONS","holiday","CalendarDataService","dateService","weeks","yearStart","monthRange","rows","yearRange","numberOfDayPickers","numberOfYears","numberOfYearPickers","days","createDateRangeForMonth","activeMonth","withRangedDates","startOfWeekDayDiff","getStartOfWeekDayDiff","calendarRange","day","isSameStartDate","isSameEndDate","withBoundingMonths","isShouldAddPrevBoundingMonth","addPrevBoundingMonth","isShouldAddNextBoundingMonth","addNextBoundingMonth","firstWeek","numberOfBoundingDates","createPrevBoundingDays","lastWeek","createNextBoundingDays","addMonth","daysInMonth","getNumberOfDaysInMonth","startOfMonth","getMonthStart","getDayOfWeek","BaseCalendarComponent","viewMode","visibleDate","nextVisibleDate","headerContainer","paddingHorizontal","divider","daysHeaderContainer","minHeight","minDayStart","maxDayStart","fitsFilter","minMonthStart","maxMonthStart","minYearStart","maxYearStart","PICKER_ROWS","rowStyle","isItemSelected","isItemDisabled","isItemToday","shouldItemUpdate","titleSelector","titleStyle","iconStyle","onNavigationLeftPress","onNavigationRightPress","getCalendarStyle","renderHeaderElement","renderPickerElement","renderFooterElement","getYearStart","getYearEnd","boundingMonth","startView","CalendarComponent","compareDatesSafe","selectionChanged","disablingChanged","Calendar","CardComponent","bodyPaddingVertical","bodyPaddingHorizontal","accentHeight","accentBackgroundColor","headerPaddingVertical","headerPaddingHorizontal","footerPaddingVertical","footerPaddingHorizontal","body","accent","header","footer","renderStatusAccent","Card","RangeDateService","startDate","endDate","RangeCalendarComponent","rangeDateService","createRange","rangeChanged","rangeStartPlaceChanged","rangeEndPlaceChanged","RangeCalendar","CheckMark","Minus","CheckBoxComponent","outlineHeight","outlineBorderRadius","outlineBackgroundColor","selectContainer","stroke","strokeWidth","highlight","renderIconElement","Icon","highlightContainer","CheckBox","BaseDatepickerComponent","popoverWidth","control","numberOfLines","ellipsizeMode","DatepickerComponent","min","max","filter","renderDay","renderMonth","renderYear","Datepicker","RangeDatepickerComponent","renderFooter","RangeDatepicker","MenuService","groupIndices","groupDescriptor","MenuComponent","service","clear","onItemPress","descriptor","cloneItemWithProps","nestedElements","listProps","ItemSeparatorComponent","shouldRenderDividers","Menu","DrawerComponent","menuProps","showsVerticalScrollIndicator","Drawer","MenuItemComponent","paddingLeft","titleStyles","indicatorStyles","iconStyles","MenuItem","POSITION_OUTSCREEN","MenuGroup","submenuHeight","expandValue","evaProps","itemProps","renderGroupedItemsIfNeeded","inputRange","outputRange","CHEVRON_DEG_COLLAPSED","CHEVRON_DEG_EXPANDED","outscreen","submenu","DrawerGroup","DrawerItem","SelectService","multiSelect","SelectComponent","selectedIndices","popoverMaxHeight","popoverBorderRadius","popoverBorderColor","popoverBorderWidth","input","el","Select","SelectItemComponent","onAccessoryCheckedChange","textStyles","renderAccessory","checked","onChange","SelectItem","SelectGroup","accessoryProps","groupedProps","renderGroupedItems","selectedElements","indeterminate","createAccessoryProps","throwPackNotFoundError","Error","RegistryService","IconRegistryService","packs","Map","has","pack","iconsPack","getPackOrThrow","getIconFromPack","set","shouldThrow","throwIconNotFoundError","getIconAnimation","release","iconProps","registeredIcon","IconRegistry","requestedPackIndex","defaultIconPack","icons","defaultIcons","registerIcons","LayoutComponent","Layout","Modal","show","derivedStyle","centerX","centerY","modalView","OverflowMenuComponent","initialNumToRender","popoverProps","menu","OverflowMenu","RadioComponent","iconBorderRadius","Radio","RadioGroupComponent","onRadioChange","itemMarginVertical","renderRadioElements","radioElements","RadioGroup","BaseBezierEasing","StartArcEasing","EndArcEasing","PI2","SpinnerAnimation","OFFSET_MAX","progress","boundedProgress","animationValue","setValue","containerInterpolation","startArcInterpolation","createArcInterpolation","endArcInterpolation","toStyleTransformProp","translateY","SpinnerComponent","arc","arcSize","animatingChanged","animating","prevProps","stopAnimation","containerSize","renderArcElement","noOverflow","Spinner","TabBarComponent","indicatorBorderRadius","tabIndicator","renderTabElements","TabBar","ViewPager","PanResponder","i18nOffset","nextSelectedIndex","selectedPageOffset","animationDuration","contentView","childCount","getChildCount","contentWidth","panResponder","shouldLoadComponent","TabViewChildren","tabs","contents","TabView","viewPager","tabBar","tabCount","tab","tabBarStyle","onOffsetChange","TabComponent","Tab","ToggleComponent","gestureState","thumbHeight","thumbBorderRadius","thumbBackgroundColor","ellipseContainer","ellipse","thumb","elevation","callback","toggleContainer","Toggle","PopoverIndicator","borderLeftWidth","borderRightWidth","borderBottomWidth","borderBottomColor","borderLeftColor","borderRightColor","TooltipComponent","Tooltip","TopNavigationComponent","titleContainer","rightControlsContainer","titleTextAlign","subtitleTextAlign","subtitleFontFamily","subtitleFontSize","subtitleLineHeight","subtitleFontWeight","subtitleColor","subtitle","evaStyles","alignmentStyles","getAlignmentDependentStyles","containerCentered","titleContainerCentered","leftControlContainer","zIndex","rightControlsContainerStart","TopNavigation","TopNavigationActionComponent","TopNavigationAction","EvaIcon","fillColor","EvaIconsPack","findIconByName","themes","Eva","Light","Dark","Material","material","AppMapping","AppTheme","setMapping","setTheme","isDarkMode","ColorPaletteIcon","ShowcaseIFrame","menuVisible","setMenuVisible","themeContext","onThemesButtonPress","postLayoutChangeEvent","nativeEvent","layoutChangeMessage","category","renderThemeButton","onEvaLightPress","onEvaDarkPress","onMaterialLightPress","onMaterialDarkPress","optionsContainer","showcaseContainer","movies","StarIcon","AutocompleteAccessoriesShowcase","setData","clearInput","renderCloseIcon","onChangeText","renderOption","requestDataWithDebounce","AwesomeDebouncePromise","requestData","fetch","AutocompleteAsyncShowcase","setQuery","updateData","response","json","applyFilter","showEvent","hideEvent","AutocompleteHandleKeyboardShowcase","setPlacement","keyboardShowListener","Keyboard","keyboardHideListener","AutocompleteSimpleUsageShowcase","AvatarShapeShowcase","shape","require","avatar","margin","AvatarSimpleUsageShowcase","AvatarSizeShowcase","padding","PersonIcon","BellIcon","EmailIcon","useBottomNavigationState","initialState","setSelectedIndex","BottomNavigationAccessoriesShowcase","topState","bottomState","bottomNavigation","BottomNavigationSimpleUsageShowcase","MyBottomNavigationTab","BottomNavigationStylingShowcase","BottomNavigationTabSimpleUsageShowcase","BottomNavigationWithoutIndicatorShowcase","LoadingIndicator","ButtonAccessoriesShowcase","ButtonAppearancesShowcase","ButtonGhostShowcase","controlContainer","ButtonOutlineShowcase","ButtonSimpleUsageShowcase","setCounter","ButtonSizeShowcase","ButtonStatesShowcase","ButtonStatusShowcase","MyButton","ButtonStylingShowcase","ButtonGroupAppearanceShowcase","buttonGroup","ButtonGroupOutlineShowcase","ButtonGroupSimpleUsageShowcase","setText","ButtonGroupSizeShowcase","ButtonGroupStatusShowcase","ButtonGroupWithIconsShowcase","CalendarBoundingMonthShowcase","setDate","nextDate","now","minDate","maxDate","CalendarBoundsShowcase","DayCell","CalendarCustomDayShowcase","dayContainer","aspectRatio","CalendarCustomLocaleShowcase","CalendarFilterShowcase","moment","_rollupMoment","MomentDateService","setMomentLocaleData","months","years","getYear","getMonth","getDate","localeData","momentLocaleData","firstDayOfWeek","defaultFormat","CalendarMomentShowcase","CalendarSimpleUsageShowcase","CalendarStartDayOfWeekShowcase","RangeCalendarSimpleUsageShowcase","setRange","nextRange","Header","Footer","CardAccessoriesShowcase","topContainer","card","footerContainer","footerControl","CardSimpleUsageShowcase","CardStatusesShowcase","CheckboxIndeterminateShowcase","allChecked","setAllChecked","setIndeterminate","readChecked","setReadChecked","writeChecked","setWriteChecked","updateGroup","someChecked","everyChecked","onGroupCheckedChange","onReadCheckedChange","onWriteCheckedChange","group","option","CheckboxSimpleUsageShowcase","setChecked","nextChecked","CheckboxStatesShowcase","activeChecked","setActiveChecked","indeterminateChecked","setIndeterminateChecked","onIndeterminateChange","checkbox","useCheckboxChanges","initialCheck","onCheckedChange","CheckboxStatusShowcase","primaryCheckboxChanges","successCheckboxChanges","infoCheckboxChanges","warningCheckboxChanges","dangerCheckboxChanges","basicCheckboxChanges","controlCheckboxChanges","MyCheckBox","CheckboxStylingShowcase","CalendarIcon","DatepickerAccessoriesShowcase","DatepickerCustomDayShowcase","useDatepickerChanges","initialDate","yesterday","tomorrow","DatepickerFiltersShowcase","minMaxPickerChanges","filterPickerChanges","boundingPickerChanges","rowContainer","picker","localeDateService","formatDateService","DatepickerLocaleSettingsShowcase","dateFormatPickerChanges","localePickerChanges","DatepickerMomentShowcase","DatepickerSimpleUsageShowcase","useDatepickerState","DatepickerSizeShowcase","smallDatepickerState","mediumDatepickerState","largeDatepickerState","datepicker","DatepickerStatusShowcase","primaryDatepickerState","successDatepickerState","infoDatepickerState","warningDatepickerState","dangerDatepickerState","basicDatepickerState","RangeDatepickerSimpleUsageShowcase","ForwardIcon","DrawerAccessoriesShowcase","SmartphoneIcon","BrowserIcon","DrawerGroupsShowcase","DrawerItemSimpleUsageShowcase","DrawerSimpleUsageShowcase","selectedTitle","setSelectedTitle","MyDrawerItem","DrawerStylingShowcase","IconAnimationShowcase","zoomIconRef","pulseIconRef","shakeIconRef","infiniteAnimationIconRef","renderZoomIcon","renderPulseIcon","renderShakeIcon","renderInfiniteAnimationIcon","animationConfig","IconSimpleUsageShowcase","HeartIcon","IconWithinComponentsShowcase","secureTextEntry","setSecureTextEntry","selectIndex","setSelectIndex","tooltipVisible","setTooltipVisible","toggleSecureEntry","toggleTooltip","toggleMenu","renderInputIcon","renderMenuButton","renderTooltipButton","buttonContainer","AlertIcon","InputAccessoriesShowcase","renderIcon","InputSimpleUsageShowcase","useInputChanges","initialValue","InputSizeShowcase","smallInputChanges","mediumInputChanges","largeInputChanges","InputStatesShowcase","useInputState","InputStatusShowcase","primaryInputState","successInputState","infoInputState","warningInputState","dangerInputState","basicInputState","controlInputState","MyInput","inputText","InputStylingShowcase","LayoutLevelShowcase","level","layout","LayoutSimpleUsageShowcase","ListAccessoriesShowcase","renderItemAccessory","renderItemIcon","InstallButton","ItemImage","ListItemSimpleUsageShowcase","ListSimpleUsageShowcase","MyListItem","ListStylingShowcase","useMenuState","MenuAccessoriesShowcase","leftMenuState","rightMenuState","MenuDisabledOptionsShowcase","MenuGroupsShowcase","Linking","MenuItemSimpleUsageShowcase","MenuSimpleUsageShowcase","MyMenuItem","MenuStylingShowcase","ModalSimpleUsageShowcase","setVisible","toggleModal","modalContainer","ModalWithBackdropShowcase","backdrop","RemoteStarIcon","uri","OverflowMenuExternalSourceIconsShowcase","renderToggleButton","onItemSelect","placements","OverflowMenuPlacementShowcase","placementIndex","setPlacementIndex","findPlacementForIndexPath","onPlacementItemPress","renderPlacementItem","onPlacementSelect","renderPlacementGroup","OverflowMenuSimpleUsageShowcase","OverflowMenuStyledBackdropShowcase","OverflowMenuWithDisabledItemsShowcase","OverflowMenuWithIconsShowcase","OverflowMenuWithoutDividerShowcase","PopoverFullWidthShowcase","togglePopover","popoverContent","likeButton","PopoverPlacementShowcase","PopoverSimpleUsageShowcase","PopoverStyledBackdropShowcase","RadioSimpleUsageShowcase","RadioStatesShowcase","onActiveCheckedChange","radio","useRadioState","RadioStatusShowcase","primaryRadioState","successRadioState","infoRadioState","warningRadioState","dangerRadioState","basicRadioState","controlRadioState","MyRadio","RadioStylingShowcase","RadioGroupSimpleUsageShowcase","SelectAccessoriesShowcase","SelectDisabledOptionsShowcase","SelectItemSimpleUsageShowcase","SelectMultiSelectShowcase","SelectSimpleUsageShowcase","useSelectChanges","SelectSizeShowcase","smallSelectChanges","mediumSelectChanges","largeSelectChanges","select","SelectStatesShowcase","SelectStatusShowcase","primarySelectChanges","successSelectChanges","infoSelectChanges","warningSelectChanges","dangerSelectChanges","basicSelectChanges","controlSelectChanges","MySelectItem","MySelect","SelectStylingShowcase","SelectWithGroupsShowcase","multiSelectedIndex","setMultiSelectedIndex","onDefaultSelect","onMultiSelect","DATA","SpinnerDataLoadingShowcase","setTimeout","loadData","renderDataItem","loading","SpinnerSimpleUsageShowcase","SpinnerSizesShowcase","SpinnerStatusesShowcase","StyledComponentSimpleUsageShowcase","StyledComponent","StyledComponentShowcase","styledComponentMapping","parameters","type","appearances","variantGroups","StyledComponentStatesShowcase","active","priority","StyledComponentVariantsShowcase","primary","danger","useTabBarState","TabBarAccessoriesShowcase","TabBarSimpleUsageShowcase","TabSimpleUsageShowcase","MyTab","TabStylingShowcase","TabViewLazyLoadingShowcase","tabContainer","TabViewSimpleUsageShowcase","TextAppearancesShowcase","column","alternativeContainer","TextSimpleUsageShowcase","TextStatusesShowcase","ThemeProviderSimpleUsageShowcase","ToggleSimpleUsageShowcase","ToggleStatesShowcase","toggle","useToggleState","ToggleStatusShowcase","primaryToggleState","successToggleState","infoToggleState","warningToggleState","dangerToggleState","basicToggleState","controlToggleState","MyToggle","ToggleStylingShowcase","TooltipText","TooltipInlineStylingShowcase","TooltipPlacementShowcase","TooltipSimpleUsageShowcase","TooltipStyledBackdropShowcase","InfoIcon","TooltipWithExternalSourceIconShowcase","TooltipWithIconShowcase","BackIcon","EditIcon","MenuIcon","LogoutIcon","TopNavigationAccessoriesShowcase","renderMenuAction","renderBackAction","renderRightActions","TopNavigationActionSimpleUsageShowcase","BackAction","TopNavigationSimpleUsageShowcase","TopNavigationStylingShowcase","renderTitle","logo","UseStyleSheetSimpleUsageShowcase","useStyleSheet","themedStyles","UseThemeSimpleUsageShowcase","ViewPagerLazyLoadingShowcase","ViewPagerSimpleUsageShowcase","WithStylesSimpleUsageShowcase","withStyles","createStyles","ThemedComponent","themedStyle","routes","AutocompleteAccessories","AutocompleteAsync","AutocompleteHandleKeyboard","AutocompleteSimpleUsage","AvatarShape","AvatarSimpleUsage","AvatarSize","BottomNavigationAccessories","BottomNavigationSimpleUsage","BottomNavigationStyling","BottomNavigationTabSimpleUsage","BottomNavigationWithoutIndicator","ButtonAccessories","ButtonAppearances","ButtonGhost","ButtonOutline","ButtonSimpleUsage","ButtonSize","ButtonStates","ButtonStatus","ButtonStyling","ButtonGroupAppearance","ButtonGroupOutline","ButtonGroupSimpleUsage","ButtonGroupSize","ButtonGroupStatus","ButtonGroupWithIcons","CalendarBoundingMonth","CalendarBounds","CalendarCustomDay","CalendarCustomLocale","CalendarFilter","CalendarMoment","CalendarSimpleUsage","CalendarStartDayOfWeek","RangeCalendarSimpleUsage","CardAccessories","CardSimpleUsage","CardStatuses","CheckboxIndeterminate","CheckboxSimpleUsage","CheckboxStates","CheckboxStatus","CheckboxStyling","DatepickerAccessories","DatepickerCustomDay","DatepickerFilters","DatepickerLocaleSettings","DatepickerMoment","DatepickerSimpleUsage","DatepickerSize","DatepickerStatus","RangeDatepickerSimpleUsage","DrawerAccessories","DrawerGroups","DrawerItemSimpleUsage","DrawerSimpleUsage","DrawerStyling","IconAnimation","IconSimpleUsage","IconWithinComponents","InputAccessories","InputSimpleUsage","InputSize","InputStates","InputStatus","InputStyling","LayoutLevel","LayoutSimpleUsage","ListAccessories","ListItemSimpleUsage","ListSimpleUsage","ListStyling","MenuAccessories","MenuDisabledOptions","MenuGroups","MenuItemSimpleUsage","MenuSimpleUsage","MenuStyling","ModalSimpleUsage","ModalWithBackdrop","OverflowMenuExternalSourceIcons","OverflowMenuPlacement","OverflowMenuSimpleUsage","OverflowMenuStyledBackdrop","OverflowMenuWithDisabledItems","OverflowMenuWithIcons","OverflowMenuWithoutDivider","PopoverFullWidth","PopoverPlacement","PopoverSimpleUsage","PopoverStyledBackdrop","RadioSimpleUsage","RadioStates","RadioStatus","RadioStyling","RadioGroupSimpleUsage","SelectAccessories","SelectDisabledOptions","SelectItemSimpleUsage","SelectMultiSelect","SelectSimpleUsage","SelectSize","SelectStates","SelectStatus","SelectStyling","SelectWithGroups","SpinnerDataLoading","SpinnerSimpleUsage","SpinnerSizes","SpinnerStatuses","StyledComponentSimpleUsage","StyledComponentStates","StyledComponentVariants","TabBarAccessories","TabBarSimpleUsage","TabSimpleUsage","TabStyling","TabViewLazyLoading","TabViewSimpleUsage","TextAppearances","TextSimpleUsage","TextStatuses","ThemeProviderSimpleUsage","ToggleSimpleUsage","ToggleStates","ToggleStatus","ToggleStyling","TooltipInlineStyling","TooltipPlacement","TooltipSimpleUsage","TooltipStyledBackdrop","TooltipWithExternalSourceIcon","TooltipWithIcon","TopNavigationAccessories","TopNavigationActionSimpleUsage","TopNavigationSimpleUsage","TopNavigationStyling","UseStyleSheetSimpleUsage","UseThemeSimpleUsage","ViewPagerLazyLoading","ViewPagerSimpleUsage","WithStylesSimpleUsage","AppStack","createStackNavigator","headerMode","AppNavigator","createBrowserApp","history","mappings","storedMapping","localStorage","applicationProviderConfig","themeContextProviderConfig","dispatchMappingChange","Updates","navigator","scope","error","module","exports","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","keys","resolve"],"mappings":"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d,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAASC,EAAeC,GACvB,IAAI3/B,EAAK4/B,EAAsBD,GAC/B,OAAOE,EAAoB7/B,GAE5B,SAAS4/B,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEL,EAAKE,GAAM,CACpC,IAAII,EAAI,IAAIrwB,MAAM,uBAAyBiwB,EAAM,KAEjD,MADAI,EAAEC,KAAO,mBACHD,EAEP,OAAON,EAAIE,GAEZD,EAAeO,KAAO,WACrB,OAAOtgD,OAAOsgD,KAAKR,IAEpBC,EAAeQ,QAAUN,EACzBL,EAAOC,QAAUE,EACjBA,EAAe1/B,GAAK,M","file":"static/js/app.395a3d43.chunk.js","sourcesContent":["import React from 'react';\nimport { ThemeStyleType } from '@eva-design/dss';\n\nconst defaultValue: ThemeStyleType = {};\n\nexport const MappingContext: React.Context<ThemeStyleType> = React.createContext(defaultValue);\n","import React from 'react';\nimport { ThemeStyleType } from '@eva-design/dss';\nimport { MappingContext } from './mappingContext';\n\nexport interface MappingProviderProps {\n  styles: ThemeStyleType;\n  children?: React.ReactNode;\n}\n\nexport class MappingProvider extends React.PureComponent<MappingProviderProps> {\n\n  public render(): React.ReactNode {\n    const { styles, children } = this.props;\n\n    return (\n      <MappingContext.Provider\n        value={styles}>\n        {children}\n      </MappingContext.Provider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ThemeType } from './theme.service';\n\nconst defaultTheme: ThemeType = {};\n\nexport const ThemeContext: React.Context<ThemeType> = React.createContext(defaultTheme);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ThemeContext } from './themeContext';\n\nexport type ThemeValue = string;\nexport type ThemeType = Record<string, ThemeValue>;\n\n/**\n * Takes an actual theme provided by ApplicationProvider or ThemeProvider and\n * @returns it to a functional component.\n *\n * @overview-example UseThemeSimpleUsage\n */\nexport const useTheme = (): ThemeType => {\n  return React.useContext(ThemeContext);\n};\n\n/**\n * Service for working with Eva themes\n */\nexport class ThemeService {\n\n  /**\n   * @returns compiled theme since Eva theme may contain variables referencing each other.\n   */\n  static create = (theme: ThemeType): ThemeType => {\n    return Object.keys(theme).reduce((acc: ThemeType, key: string): ThemeType => {\n      return { ...acc, [key]: ThemeService.getValue(key, theme, key) };\n    }, {});\n  };\n\n  /**\n   * Finds theme value recursively since eva theme variables can reference each other.\n   *\n   * @returns ThemeValue if found, fallback param otherwise.\n   */\n  static getValue = (name: string,\n                     theme: ThemeType,\n                     fallback?: ThemeValue): ThemeValue | undefined => {\n\n    if (ThemeService.isReference(name)) {\n      const themeKey: string = ThemeService.createKeyFromReference(name);\n      return ThemeService.findValue(themeKey, theme) || fallback;\n    }\n\n    return ThemeService.findValue(name, theme) || fallback;\n  };\n\n  /**\n   * Finds theme value recursively since eva theme variables can reference each other.\n   *\n   * @returns ThemeValue if found.\n   */\n  private static findValue = (name: string, theme: ThemeType): ThemeValue | undefined => {\n    const value: ThemeValue = theme[name];\n\n    if (ThemeService.isReference(value)) {\n      const themeKey: string = ThemeService.createKeyFromReference(value);\n      return ThemeService.findValue(themeKey, theme);\n    }\n\n    return value;\n  };\n\n  /**\n   * @returns true if theme value references to another\n   */\n  private static isReference = (value: ThemeValue): boolean => {\n    return `${value}`.startsWith('$');\n  };\n\n  /**\n   * Transforms reference key to theme key\n   */\n  private static createKeyFromReference = (value: ThemeValue): string => {\n    return `${value}`.substring(1);\n  };\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ThemeContext } from './themeContext';\nimport {\n  ThemeService,\n  ThemeType,\n} from './theme.service';\n\nexport interface ThemeProviderProps {\n  theme: ThemeType;\n  children?: React.ReactNode;\n}\n\n/**\n * Since ApplicationProvider is the root component of the application,\n * it provides same theme for all underlying components.\n *\n * ThemeProvider allows modifying this theme so that each component that is the child\n * of ThemeProvider will use modified theme.\n *\n * @overview-example ThemeProviderSimpleUsage\n */\nexport class ThemeProvider extends React.PureComponent<ThemeProviderProps> {\n\n  public render(): React.ReactNode {\n    const { theme, children } = this.props;\n\n    return (\n      <ThemeContext.Provider\n        value={ThemeService.create(theme)}>\n        {children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  MappingProvider,\n  MappingProviderProps,\n} from '../mapping/mappingProvider.component';\nimport {\n  ThemeProvider,\n  ThemeProviderProps,\n} from '../theme/themeProvider.component';\n\nexport type StyleProviderProps = MappingProviderProps & ThemeProviderProps;\n\nexport class StyleProvider extends React.PureComponent<StyleProviderProps> {\n\n  public render(): React.ReactNode {\n    const { styles, theme, children } = this.props;\n\n    return (\n      <MappingProvider styles={styles}>\n        <ThemeProvider theme={theme}>\n          {children}\n        </ThemeProvider>\n      </MappingProvider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TouchableOpacity,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { ModalPresentingConfig } from './modal.service';\n\ntype ChildElement = React.ReactElement;\ntype ChildrenProp = ChildElement | ChildElement[];\n\nexport interface ModalResolverProps extends ViewProps, ModalPresentingConfig {\n  visible: boolean;\n  children: ChildrenProp;\n  backdropStyle: StyleProp<ViewStyle>;\n  onBackdropPress: () => void;\n}\n\nexport class ModalResolver extends React.Component<ModalResolverProps> {\n\n  static defaultProps: Partial<ModalResolverProps> = {\n    visible: false,\n  };\n\n  private renderChildElement = (source: ChildElement): ChildElement => {\n    return React.cloneElement(source, {\n      style: [source.props.style, this.props.style],\n    });\n  };\n\n  private renderComponentChildren = (source: ChildrenProp): ChildElement[] => {\n    return React.Children.map(source, this.renderChildElement);\n  };\n\n  private renderComponent = (): React.ReactElement<ViewProps> => {\n    const componentChildren = this.renderComponentChildren(this.props.children);\n\n    return (\n      <View style={StyleSheet.absoluteFill}>\n        <TouchableOpacity\n          style={[StyleSheet.absoluteFill, this.props.backdropStyle]}\n          activeOpacity={1.0}\n          onPress={this.props.onBackdropPress}\n        />\n        {componentChildren}\n      </View>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> | undefined {\n    return this.props.visible && this.renderComponent();\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\n/**\n * Singleton service designed to manage modal components.\n *\n * @type ModalServiceType\n *\n * @method {(element: React.ReactElement<ModalPresentingBased>, config: ModalPresentingConfig) => string} show -\n * Shows component in a modal window. Returns its id.\n *\n * @method {(identifier: string) => string} hide - Hides component from a modal window and returns empty string.\n *\n * @method {(identifier: string, children: React.ReactNode) => void} update - Updates component from a modal window.\n *\n * @example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { Layout, Button, Text, ModalService } from '@ui-kitten/components';\n *\n * export const ModalServiceShowcase = () => {\n *\n *   const modalID = '';\n *\n *   const showModal = () => {\n *     const contentElement = this.renderModalContentElement();\n *     this.modalID = ModalService.show(contentElement, { onBackdropPress: this.hideModal });\n *   };\n *\n *   const hideModal = () => {\n *     ModalService.hide(this.modalID);\n *   };\n *\n *   const renderModalContentElement = () => {\n *     return (\n *       <Layout>\n *         <Text>Hi, I'm modal!</Text>\n *       </Layout>\n *     );\n *   };\n *\n *   return (\n *     <Layout>\n *       <Button onPress={showModal}>SHOW MODAL</Button>\n *       <Button onPress={hideModal}>HIDE MODAL</Button>\n *     </Layout>\n *   );\n * }\n * ```\n */\nclass ModalServiceType {\n\n  panel: ModalPresenting | null = null;\n\n  public mount(panel: ModalPresenting | null): void {\n    this.panel = panel;\n  }\n\n  public unmount(): void {\n    this.panel = null;\n  }\n\n  public show(element: React.ReactElement, config: ModalPresentingConfig): string {\n    if (this.panel) {\n      return this.panel.show(element, config);\n    }\n  }\n\n  public update(identifier: string, children: React.ReactElement): void {\n    if (this.panel) {\n      this.panel.update(identifier, children);\n    }\n  }\n\n  public hide(identifier: string): string {\n    if (this.panel) {\n      return this.panel.hide(identifier);\n    }\n  }\n}\n\nexport interface ModalPresentingConfig {\n  backdropStyle?: StyleProp<ViewStyle>;\n  onBackdropPress?: () => void;\n}\n\nexport interface ModalPresenting {\n  show(element: React.ReactElement, config: ModalPresentingConfig): string;\n\n  hide(identifier: string): string;\n\n  update(identifier: string, children: React.ReactElement): void;\n}\n\nexport const ModalService = new ModalServiceType();\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  StyleSheet,\n  ViewProps,\n} from 'react-native';\nimport {\n  ModalResolver,\n  ModalResolverProps,\n} from './modalResolver.component';\nimport {\n  ModalService,\n  ModalPresenting,\n  ModalPresentingConfig,\n} from './modal.service';\n\ninterface ModalPanelChild extends ModalPresentingConfig {\n  element: React.ReactElement;\n}\n\nexport interface ModalPanelProps {\n  children: React.ReactNode;\n}\n\ninterface ModalPanelState {\n  components: Map<string, ModalPanelChild>;\n}\n\nexport class ModalPanel extends React.Component<ModalPanelProps, ModalPanelState> implements ModalPresenting {\n\n  public state: ModalPanelState = {\n    components: new Map(),\n  };\n\n  public componentDidMount(): void {\n    ModalService.mount(this);\n  }\n\n  public componentWillUnmount(): void {\n    ModalService.unmount();\n  }\n\n  public hide = (identifier: string): string => {\n    const components: Map<string, ModalPanelChild> = this.state.components;\n    components.delete(identifier);\n    this.setState({ components });\n    return '';\n  };\n\n  public show(element: React.ReactElement, config: ModalPresentingConfig): string {\n    const key: string = this.generateUniqueComponentKey();\n    const components: Map<string, ModalPanelChild> = this.state.components\n      .set(key, { ...config, element });\n\n    this.setState({ components });\n\n    return key;\n  }\n\n  public update(identifier: string, children: React.ReactNode): void {\n    const panelChild: ModalPanelChild = this.state.components.get(identifier);\n\n    if (!panelChild) {\n      return;\n    }\n\n    const childElement: React.ReactElement = panelChild.element;\n\n    panelChild.element = React.cloneElement(childElement, childElement.props, children);\n\n    const components: Map<string, ModalPanelChild> = this.state.components;\n    components.delete(identifier);\n    components.set(identifier, panelChild);\n    this.setState({ components });\n  }\n\n  private generateUniqueComponentKey = (): string => {\n    return Math.random().toString(36).substring(2);\n  };\n\n  private areThereAnyComponents = (): boolean => {\n    return this.state.components && this.state.components.size !== 0;\n  };\n\n  private renderModal = (config: ModalPanelChild, index: number): React.ReactElement<ModalResolverProps> => {\n    return (\n      <ModalResolver\n        key={index}\n        visible={true}\n        backdropStyle={config.backdropStyle}\n        onBackdropPress={config.onBackdropPress}>\n        {config.element}\n      </ModalResolver>\n    );\n  };\n\n  private renderModals = (): React.ReactElement<ModalResolverProps>[] => {\n    return Array.from(this.state.components.values()).map(this.renderModal);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    return (\n      <View style={styles.container}>\n        {this.props.children}\n        {this.areThereAnyComponents() && this.renderModals()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { StyleSheet } from 'react-native';\nimport {\n  ThemeService,\n  ThemeType,\n  useTheme,\n} from '../theme/theme.service';\n\nexport type StyleType = Record<string, any>;\nexport type Styles<T> = StyleSheet.NamedStyles<T>;\n\n/**\n * User interactions that can be handled by Eva.\n */\nexport enum Interaction {\n  HOVER = 'hover',\n  ACTIVE = 'active',\n  FOCUSED = 'focused',\n  INDETERMINATE = 'indeterminate',\n  VISIBLE = 'visible',\n}\n\n/**\n * Component states that can be handled by Eva.\n */\nexport enum State {\n  CHECKED = 'checked',\n  SELECTED = 'selected',\n  DISABLED = 'disabled',\n}\n\n/**\n * Takes a theme provided by ApplicationProvider or ThemeProvider and applies it to style.\n * Consider not using this function when not using Eva theme variables.\n *\n * @overview-example UseStyleSheetSimpleUsage\n */\nexport const useStyleSheet = <T extends Styles<T>>(styles: Styles<T>): T => {\n  const theme: ThemeType = useTheme();\n\n  return StyleService.createThemed(styles, theme);\n};\n\n/**\n * Service for creating styles that fit current theme.\n * Unlike StyleSheet class exported from React Native package, it allows using Eva theme variables.\n */\nexport class StyleService {\n\n  /**\n   * Unlike `StyleSheet.create` from RN package,\n   * this does nothing with `styles` validation because of inability to process Eva theme variables\n   * and returns styles as it is just to support the syntax we used to.\n   *\n   * However, this may be useful to have this function\n   * because future RN versions may allow pre-processing.\n   * @see {StyleSheet.setStyleAttributePreprocessor}\n   *\n   * Notice it is better to use `StyleSheet.create` from RN package since it does style registering.\n   * You don't need to use this function if custom variables are not used.\n   *\n   * When using Eva theme variables, `useStyleSheet` should be called.\n   *\n   * @example\n   * ```\n   * const Component = () => {\n   *   const styles = useStyleSheet(themedStyles);\n   *   return (\n   *     <View style={styles.container} />\n   *   );\n   * };\n   *\n   * const themedStyles = StyleService.create({\n   *   container: { backgroundColor: 'color-primary-default' },\n   * });\n   * ```\n   */\n  static create = <T extends Styles<T>>(styles: T): T => {\n    return styles;\n  };\n\n  /**\n   * @returns stylesheet mapped to theme\n   */\n  static createThemed = <T extends Styles<T>>(styles: Styles<T>, theme: ThemeType): T => {\n    return Object.keys(styles).reduce((acc: T, key: string): T => {\n      return { ...acc, [key]: StyleService.createThemedEntry(styles[key], theme) };\n    }, {} as T);\n  };\n\n  /**\n   * @returns a style mapped to theme\n   */\n  static createThemedEntry = (style: StyleType, theme: ThemeType): StyleType => {\n    return Object.keys(style).reduce((acc: StyleType, key: string): StyleType => {\n      const value: any = style[key];\n      return { ...acc, [key]: ThemeService.getValue(value, theme, value) };\n    }, {});\n  };\n}\n\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport merge from 'lodash.merge';\nimport { SchemaProcessor } from '@eva-design/processor';\nimport {\n  CustomSchemaType,\n  SchemaType,\n  ThemeStyleType,\n} from '@eva-design/dss';\nimport { StyleProvider } from '../style/styleProvider.component';\nimport { ThemeProviderProps } from '../theme/themeProvider.component';\nimport { ModalPanel } from '../modal/modalPanel.component';\n\ninterface EvaRuntimeProcessingProps {\n  mapping: SchemaType;\n  customMapping?: CustomSchemaType;\n}\n\ninterface EvaBuildtimeProcessingProps {\n  styles: ThemeStyleType;\n}\n\ntype EvaProcessingProps = EvaRuntimeProcessingProps | EvaBuildtimeProcessingProps;\n\nexport type ApplicationProviderProps = EvaProcessingProps & ThemeProviderProps;\nexport type ApplicationProviderElement = React.ReactElement<ApplicationProviderProps>;\n\ninterface State {\n  styles: ThemeStyleType;\n}\n\n/**\n * Overall application container.\n * Provides Eva styles to UI Kitten components.\n *\n * @extends React.Component\n *\n * @property {ReactNode} children - Overall application component.\n * Usually, a router or nested providers.\n *\n * @property {SchemaType} mapping - Mapping for UI Kitten components.\n * This is designed to be provided from any `@eva-design/*` package.\n * If provided, will be merged with *customMapping* and compiled into styles during the runtime.\n * Can be improved with build-time processing with `@ui-kitten/metro-config` package.\n *\n * @property {CustomSchemaType} customMapping - Customized mapping.\n *\n * @property {ThemeType} theme - Current theme.\n * Designed to be provided from any `@eva-design/*` package.\n *\n * @property {ThemeStyleType} styles - Styles compiled by bootstrapping Eva packages.\n * If provided, will replace runtime styles processing.\n * Usually, can be provided by `@ui-kitten/metro-config` package.\n *\n * @overview-example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { ApplicationProvider, Layout, Text } from '@ui-kitten/components';\n * import * as eva from '@eva-design/eva';\n *\n * export default () => (\n *   <ApplicationProvider {...eva} theme={eva.light}>\n *     <Layout style={{ flex: 1 }}>\n *       <Text>Welcome to UI Kitten</Text>\n *     </Layout>\n *   </ApplicationProvider>\n * );\n * ```\n */\nexport class ApplicationProvider extends React.Component<ApplicationProviderProps, State> {\n\n  public state: State = {\n    styles: (this.props as EvaBuildtimeProcessingProps).styles,\n  };\n\n  private schemaProcessor: SchemaProcessor = new SchemaProcessor();\n\n  constructor(props: ApplicationProviderProps) {\n    super(props);\n\n    if (!this.state.styles) {\n      const { mapping, customMapping } = this.props as EvaRuntimeProcessingProps;\n      this.state.styles = this.createStyles(mapping, customMapping);\n    }\n  }\n\n  private createStyles = (mapping: SchemaType, custom: CustomSchemaType): ThemeStyleType => {\n    const customizedMapping: SchemaType = merge({}, mapping, custom);\n    return this.schemaProcessor.process(customizedMapping);\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <StyleProvider\n        theme={this.props.theme}\n        styles={this.state.styles}>\n        <ModalPanel>\n          {this.props.children}\n        </ModalPanel>\n      </StyleProvider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ControlMetaType,\n  ControlThemedStyleType,\n  ThemedStyleType,\n} from '@eva-design/dss';\nimport {\n  EvaProp,\n  StyledComponentProps,\n} from './styled';\nimport {\n  Interaction,\n  StyleService,\n  StyleType,\n} from './style.service';\nimport { ThemeType } from '../theme/theme.service';\n\nconst SEPARATOR_MAPPING_ENTRY: string = '.';\n\ninterface StyleInfo {\n  appearance: string;\n  variants: string[];\n  states: string[];\n}\n\nexport class StyleConsumerService {\n\n  private readonly name: string;\n  private readonly meta: ControlMetaType;\n\n  constructor(name: string, style: StyleType) {\n    this.name = name;\n\n    this.meta = this.safe(style[name], (generatedConfig): ControlMetaType => {\n      return generatedConfig.meta;\n    });\n\n    if (!this.meta) {\n      const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n      const message: string = [\n        `\\n${this.name}: unsupported configuration.`,\n        'Using UI Kitten components is only possible with configuring ApplicationProvider.',\n        `📖 Documentation: ${docRoot}/guides/getting-started#manual-installation`,\n        '\\nIn case you have all in place, there might be an incorrect usage of a \"styled\" function.',\n        `📖 Documentation: ${docRoot}/design-system/custom-component-mapping`,\n      ].join('\\n');\n\n      console.error(message);\n    }\n  }\n\n  public createDefaultProps<P extends object>(): StyledComponentProps {\n    const appearance: string = this.getDefaultAppearance();\n    const variants: { [key: string]: string } = this.getDefaultVariants();\n    const states: { [key: string]: boolean } = this.getDefaultStates();\n\n    return { appearance, ...variants, ...states };\n  }\n\n  public createStyleProp<P extends object>(source: P,\n                                           style: StyleType,\n                                           theme: ThemeType,\n                                           interaction: Interaction[]): StyleType {\n\n    const styleInfo: StyleInfo = this.getStyleInfo(source, interaction);\n\n    const generatedMapping: StyleType = this.getGeneratedStyleMapping(style, styleInfo);\n\n    if (!generatedMapping) {\n      const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n      const message: string = [\n        `${this.name}: unsupported configuration.`,\n        `Check one of the following prop values ${JSON.stringify(styleInfo, null, 2)}`,\n        `📖 Documentation: ${docRoot}/components/${this.name.toLowerCase()}/api`,\n      ].join('\\n');\n\n      console.warn(message);\n\n      return this.createStyleProp({ ...source, ...this.createDefaultProps() }, style, theme, interaction);\n    }\n\n    const mapping: StyleType = this.withValidParameters(generatedMapping);\n\n    return StyleService.createThemedEntry(mapping, theme);\n  }\n\n  private getGeneratedStyleMapping<P extends StyledComponentProps>(style: StyleType, info: StyleInfo): StyleType {\n\n    return this.safe(style[this.name], (componentStyles: ControlThemedStyleType): ThemedStyleType => {\n      const styleKeys: string[] = Object.keys(componentStyles.styles);\n      const query: string = this.findGeneratedQuery(info, styleKeys);\n\n      return componentStyles.styles[query];\n    });\n  }\n\n  private withValidParameters(mapping: StyleType): StyleType {\n    const invalidParameters: string[] = [];\n\n    Object.keys(mapping).forEach((key: string) => {\n      if (!Object.keys(this.meta.parameters).includes(key)) {\n        invalidParameters.push(key);\n        delete mapping[key];\n      }\n    });\n\n    if (invalidParameters.length !== 0) {\n      const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n      const message: string = [\n        `${this.name}: unsupported configuration.`,\n        `Unable to apply ${invalidParameters}`,\n        'There might be an incorrect usage of mapping',\n        `📖 Documentation: ${docRoot}/design-system/custom-component-mapping`,\n      ].join('\\n');\n\n      console.warn(message);\n    }\n\n    return mapping;\n  }\n\n  private getStyleInfo<P extends StyledComponentProps>(props: P,\n                                                       interaction: Interaction[]): StyleInfo {\n    const variantProps: Partial<P> = this.getDerivedVariants(this.meta, props);\n    const stateProps: Partial<P> = this.getDerivedStates(this.meta, props);\n\n    const variants: string[] = Object.keys(variantProps).map((variant: string): string => {\n      return variantProps[variant];\n    });\n\n    const states: string[] = Object.keys(stateProps);\n\n    return {\n      appearance: props.appearance,\n      variants: variants,\n      states: [...states, ...interaction],\n    };\n  }\n\n  private getDefaultAppearance(): string {\n    const matches: string[] = Object.keys(this.meta.appearances).filter((appearance: string): boolean => {\n      return this.meta.appearances[appearance].default === true;\n    });\n\n    return matches[matches.length - 1];\n  }\n\n  private getDefaultVariants(): { [key: string]: any } {\n    return this.transformObject(this.meta.variantGroups, (variants, group: string): string | undefined => {\n      return Object.keys(variants[group]).find((variant: string): boolean => {\n\n        return variants[group][variant].default === true;\n      });\n    });\n  }\n\n  private getDefaultStates(): { [key: string]: any } {\n    return this.transformObject(this.meta.states, (states, state: string): boolean | undefined => {\n      const isDefault: boolean = states[state].default === true;\n\n      return isDefault ? isDefault : undefined;\n    });\n  }\n\n  private getDerivedVariants<P extends StyledComponentProps>(meta: ControlMetaType, props: P): Partial<P> {\n    return this.transformObject(props, (p: P, prop: string): string | undefined => {\n      const isVariant: boolean = Object.keys(meta.variantGroups).includes(prop);\n\n      return isVariant ? p[prop] : undefined;\n    });\n  }\n\n  private getDerivedStates<P extends StyledComponentProps>(meta: ControlMetaType, props: P): Partial<P> {\n    return this.transformObject(props, (p: P, prop: string): boolean => {\n      const isState: boolean = Object.keys(meta.states).includes(prop);\n      const isAssigned: boolean = p[prop] === true;\n\n      return isState && isAssigned;\n    });\n  }\n\n  /**\n   * Iterates throw `value` object keys and fills it values with values provided by `transform` callback\n   * If `transform` returns `undefined`, then appends nothing\n   *\n   * @param value (V extends object) - object to transform\n   * @param transform - object key transformation callback\n   */\n  private transformObject<V extends object>(value: V, transform: (value: V, key: string) => any): Partial<V> {\n    return Object.keys(value).reduce((acc: Partial<V>, key: string): any => {\n      const nextValue: any = transform(value, key);\n\n      return nextValue ? {\n        ...acc,\n        [key]: nextValue,\n      } : acc;\n    }, {});\n  }\n\n  /**\n   * Finds identical keys across `source` keys array\n   *\n   * Example:\n   *\n   * source = ['default.error.small.checked', ...]\n   * info = { appearance: 'default', variants: ['small', 'error'], states: ['checked'] }\n   *\n   * will return ['default', 'error', 'small', 'checked']\n   *\n   * @param info (StyleInfo) - component style info\n   * @param source (string[]) - array of style keys\n   *\n   * @return (string | undefined) - key identical to some of `source` keys if presents\n   */\n  private findGeneratedQuery(info: StyleInfo, source: string[]): string | undefined {\n    const query: string[] = [\n      info.appearance,\n      ...info.variants,\n      ...info.states,\n    ];\n\n    const matches: string[] = source.filter((key: string): boolean => {\n      const keyQuery: string[] = key.split(SEPARATOR_MAPPING_ENTRY);\n\n      return this.compareArrays(query, keyQuery);\n    });\n\n    return matches[0];\n  }\n\n  /**\n   * @param lhs (string[]) - comparable array\n   * @param rhs (string[]) - comparing array\n   *\n   * @return true if all of lhs keys are included in rhs\n   */\n  private compareArrays(lhs: string[], rhs: string[]): boolean {\n    if (lhs.length !== rhs.length) {\n      return false;\n    }\n\n    return lhs.reduce((acc: boolean, current: string): boolean => acc && rhs.includes(current), true);\n  }\n\n  /**\n   * Safely retrieves R value of T object with reducer\n   *\n   * @param value (T | undefined) - unsafe object which should be processed\n   * @param reducer ((T) => R) - `value` processing lambda. Called if `value` is not `undefined`\n   * @param fallback (R) - fallback value to return. Optional\n   *\n   * @return (R | undefined) - object returned by `reducer` if `value` is not `undefined`, `fallback` otherwise\n   **/\n  private safe<T, R>(value: T | undefined, reducer: (value: T) => R, fallback?: R): R | undefined {\n    if (value) {\n      return reducer(value);\n    }\n\n    return fallback;\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ThemeStyleType } from '@eva-design/dss';\nimport { StyleConsumerService } from './styleConsumer.service';\nimport {\n  Interaction,\n  StyleType,\n} from './style.service';\nimport { MappingContext } from '../mapping/mappingContext';\nimport { ThemeContext } from '../theme/themeContext';\nimport { ThemeType } from '../theme/theme.service';\n\ninterface PrivateProps<T> {\n  forwardedRef?: React.Ref<T>;\n}\n\nexport interface EvaProp {\n  theme?: ThemeType;\n  style?: StyleType;\n  dispatch?: (interaction: Interaction[]) => void;\n}\n\nexport interface StyledComponentProps {\n  appearance?: string;\n  eva?: EvaProp;\n}\n\ninterface State {\n  interaction: Interaction[];\n}\n\nexport type StyledComponentClass<P> = React.ComponentClass<StyledComponentProps & P>;\n\n/**\n * High Order Function to apply style mapping on a component.\n * Used by all UI Kitten components and can be used when building custom components with Eva.\n *\n * Requires component to have a static `styledComponentName` property which defines\n * corresponding component name in mapping.\n *\n * Injects `eva` property into component props, which is `{ theme, style, dispatch }`.\n * Current theme, styles provided by Eva and dispatch function to request styles for a particular state.\n *\n * @property {string} appearance - Appearance of component. Default is provided by mapping.\n *\n * @property {EvaProp} eva - Additional property injected to all `styled` components. Includes following properties:\n * `theme` - current theme,\n * `style` - style provided by Eva,\n * `dispatch` - Function for requesting styles from Eva for current component state.\n *\n * @param Component - Type: {ComponentType}. Component to be styled.\n *\n * @overview-example StyledComponentSimpleUsage\n *\n * @overview-example StyledComponentStates\n *\n * @overview-example StyledComponentVariants\n */\nexport const styled = <P extends object>(Component: React.ComponentType<P>): StyledComponentClass<P> => {\n\n  // @ts-ignore\n  if (!Component.styledComponentName) {\n    console.warn('Styled components should specify corresponding style name.');\n    return null;\n  }\n\n  type WrappingProps = PrivateProps<WrappedElementInstance> & WrappedProps;\n  type WrappedProps = StyledComponentProps & P;\n  type WrappingElement = React.ReactElement<WrappingProps>;\n  type WrappedElement = React.ReactElement<WrappedProps>;\n  type WrappedElementInstance = React.ReactInstance;\n\n  class Wrapper extends React.Component<WrappingProps, State> {\n\n    public state: State = {\n      interaction: [],\n    };\n\n    private init: boolean = false;\n\n    // Yes. This is not static because it is calculated once we got some meta from style context.\n    private defaultProps: StyledComponentProps;\n    private service: StyleConsumerService;\n\n    private onInit = (style: ThemeStyleType, theme: ThemeType): void => {\n      // @ts-ignore\n      this.service = new StyleConsumerService(Component.styledComponentName, style, theme);\n      this.defaultProps = this.service.createDefaultProps();\n\n      this.init = true;\n    };\n\n    private onDispatch = (interaction: Interaction[]): void => {\n      this.setState({ interaction });\n    };\n\n    private withEvaProp = (sourceProps: P,\n                           sourceStyle: ThemeStyleType,\n                           theme: ThemeType): WrappedProps => {\n\n      const props: WrappingProps = { ...this.defaultProps, ...sourceProps };\n      const style: StyleType = this.service.createStyleProp(props, sourceStyle, theme, this.state.interaction);\n\n      return {\n        ...props,\n        eva: {\n          theme,\n          style,\n          dispatch: this.onDispatch,\n        },\n      };\n    };\n\n    private renderWrappedElement = (style: ThemeStyleType, theme: ThemeType): WrappedElement => {\n      if (!this.init) {\n        this.onInit(style, theme);\n      }\n\n      const { forwardedRef, ...restProps } = this.props;\n\n      return (\n        <Component\n          {...this.withEvaProp(restProps as P, style, theme)}\n          ref={forwardedRef}\n        />\n      );\n    };\n\n    public render(): React.ReactNode {\n      return (\n        <MappingContext.Consumer>{(style: ThemeStyleType): WrappedElement => (\n          <ThemeContext.Consumer>{(theme: ThemeType): WrappedElement => {\n            return this.renderWrappedElement(style, theme);\n          }}</ThemeContext.Consumer>\n        )}</MappingContext.Consumer>\n      );\n    }\n  }\n\n  const WrappingElement = (props: WrappingProps,\n                           ref: React.Ref<WrappedElementInstance>): WrappingElement => {\n    return (\n      // @ts-ignore\n\n      <Wrapper\n        {...props}\n        forwardedRef={ref}\n      />\n    );\n  };\n\n  const ResultComponent = React.forwardRef<WrappedElementInstance, WrappingProps>(WrappingElement);\n\n  ResultComponent.displayName = Component.displayName || Component.name;\n\n  hoistNonReactStatics(ResultComponent, Component);\n\n  // @ts-ignore\n  return ResultComponent;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ThemeContext } from './themeContext';\nimport { ThemeType } from './theme.service';\nimport { Styles } from '../style/style.service';\nimport { EvaProp } from '../style/styled';\n\ninterface PrivateProps<T> {\n  forwardedRef?: React.RefObject<T>;\n}\n\nexport interface ThemedComponentProps<T extends Styles<T> = any> {\n  eva?: EvaProp;\n}\n\nexport type ThemedComponentClass<P, S extends Styles<S>> = React.ComponentClass<ThemedComponentProps<S> & P>;\n\ninterface PrivateProps<T> {\n  forwardedRef?: React.RefObject<T>;\n}\n\ntype CreateStylesFunction<T extends Styles<T>> = (theme: ThemeType) => T;\n\n/**\n * High Order Function for creating styles mapped to current theme\n * Returns component class which can be used as themed component.\n *\n * Injects `eva` property into component props, which is `{ theme, style }`.\n * Current theme and styles provided by Eva.\n *\n * @property {EvaProp} eva - Additional property injected to all `styled` components. Includes following properties:\n * `theme` - current theme,\n * `style` - styles provided by Eva,\n *\n * @param Component - Type: {ComponentType}. Component to be themed.\n *\n * @param createStyles - Type: {(ThemeType) => NamedStyles}. Function used to create styles mapped on theme.\n *\n * @overview-example WithStylesSimpleUsage\n */\nexport const withStyles = <P extends object, S>(Component: React.ComponentType<P>,\n                                                createStyles?: CreateStylesFunction<S>): ThemedComponentClass<P, S> => {\n\n  type WrappingProps = PrivateProps<WrappedElementInstance> & WrappedProps;\n  type WrappedProps = ThemedComponentProps<S> & P;\n  type WrappingElement = React.ReactElement<WrappingProps>;\n  type WrappedElementInstance = React.ReactInstance;\n\n  class Wrapper extends React.Component<WrappingProps> {\n\n    private withThemedProps = (props: P, theme: ThemeType): WrappedProps => {\n      const style = createStyles && createStyles(theme);\n      return {\n        ...props,\n        eva: {\n          theme,\n          style,\n        },\n      };\n    };\n\n    private renderWrappedElement = (theme: ThemeType): React.ReactElement<ThemedComponentProps<S>> => {\n      const { forwardedRef, ...restProps } = this.props;\n      const props: WrappedProps = this.withThemedProps(restProps as P, theme);\n\n      return (\n        <Component\n          {...props}\n          ref={forwardedRef}\n        />\n      );\n    };\n\n    public render(): React.ReactElement {\n      return (\n        <ThemeContext.Consumer>\n          {this.renderWrappedElement}\n        </ThemeContext.Consumer>\n      );\n    }\n  }\n\n  const WrappingElement = (props: WrappingProps, ref: React.Ref<WrappedElementInstance>): WrappingElement => {\n    return (\n      // @ts-ignore\n      <Wrapper\n        {...props}\n        forwardedRef={ref}\n      />\n    );\n  };\n\n  const ThemedComponent = React.forwardRef<WrappedElementInstance, WrappingProps>(WrappingElement);\n\n  ThemedComponent.displayName = Component.displayName || Component.name;\n\n  hoistNonReactStatics(ThemedComponent, Component);\n\n  // @ts-ignore\n  return ThemedComponent;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Animated,\n  Platform,\n} from 'react-native';\n\nexport const DEFAULT_CONFIG: AnimationConfig = {\n  cycles: 1,\n  useNativeDriver: Platform.select({\n    default: true,\n    web: false,\n  }),\n};\n\n/**\n * @property {number} cycles - number of animation cycles. -1 for infinite\n */\nexport interface AnimationConfig extends Animated.AnimationConfig {\n  cycles?: number;\n}\n\nexport abstract class Animation<C extends AnimationConfig, R> {\n\n  protected abstract animation: Animated.CompositeAnimation;\n  protected counter: number = 0;\n  protected endCallback: Animated.EndCallback;\n  protected running: boolean = false;\n  protected config: C;\n\n  public abstract toProps(): R;\n\n  constructor(config?: C) {\n    this.config = {\n      ...DEFAULT_CONFIG,\n      ...config,\n    };\n  }\n\n  public start(callback?: Animated.EndCallback) {\n    this.endCallback = callback;\n    this.running = true;\n\n    this.animation.start(this.onAnimationEnd);\n  }\n\n  public stop() {\n    this.running = false;\n\n    this.animation.stop();\n  }\n\n  public release() {\n    this.stop();\n  }\n\n  protected onAnimationEnd = (result: Animated.EndResult) => {\n    this.counter += 1;\n    if (this.counter === this.config.cycles) {\n      this.stop();\n    }\n    if (this.running) {\n      this.start(this.endCallback);\n    }\n    if (!this.running) {\n      this.counter = 0;\n      this.endCallback && this.endCallback(result);\n      this.endCallback = null;\n    }\n  };\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Animated,\n  Easing,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: PulseAnimationConfig = {\n  start: 1.0,\n  end: 1.25,\n  easing: Easing.linear,\n  duration: 500,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface PulseAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  end?: number;\n}\n\nexport class PulseAnimation extends Animation<PulseAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, end, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: end,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: start,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  constructor(config?: PulseAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ scale: this.value }],\n      },\n    };\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Animated,\n  Easing,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: ShakeAnimationConfig = {\n  start: 0.0,\n  offset: 2.5,\n  easing: Easing.linear,\n  duration: 25,\n  cycles: 8,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface ShakeAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  offset?: number;\n}\n\nexport class ShakeAnimation extends Animation<ShakeAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, offset, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: this.counter % 2 !== 0 ? -offset : offset,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: this.counter % 2 !== 0 ? offset : -offset,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  constructor(config?: ShakeAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ translateX: this.value }],\n      },\n    };\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Animated,\n  Easing,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: ZoomAnimationConfig = {\n  start: 1.0,\n  end: 0.5,\n  easing: Easing.linear,\n  duration: 500,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface ZoomAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  end?: number;\n}\n\nexport class ZoomAnimation extends Animation<ZoomAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, end, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: end,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: start,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  constructor(config?: ZoomAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ scale: this.value }],\n      },\n    };\n  }\n}\n","import React from 'react';\n\nexport type RenderProp<Props = {}> = (props?: Props) => React.ReactElement;\n\nexport type FalsyFCProps<Props = {}> = Props & {\n  component?: RenderProp<Props>;\n  fallback?: React.ReactElement;\n};\n\n/**\n * Helper component for optional properties that should render a component.\n *\n * Accepts props of a component that is expected to be rendered,\n * and `component` which may be a string, a function, null or undefined.\n *\n * If it is a function, will call it with props passed to this component.\n * Otherwise, will return null.\n *\n * @property {RenderProp} component - Function component to be rendered.\n * @property {React.ReactElement} fallback - Element to render if children is null or undefined.\n *\n * @example Will render nothing.\n * ```\n * <FalsyFC />\n * ```\n *\n * @example Will render red title.\n * ```\n * const Title = () => (\n *   <FalsyFC\n *     style={{ color: 'red' }}\n *     component={props => <Text {...props}>Title</Text>}\n *   />\n * );\n * ```\n */\nexport class FalsyFC<Props = {}> extends React.Component<FalsyFCProps<Props>> {\n\n  public render(): React.ReactElement {\n    const { component, fallback, ...props } = this.props;\n\n    if (!component) {\n      return fallback || null;\n    }\n\n    return component(props as Props);\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Text as RNText,\n  TextProps as RNTextProps,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  styled,\n  StyledComponentProps,\n} from '../../theme';\nimport { EvaStatus } from '../../devsupport';\n\ntype TextStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | 'alternative' | 'hint' | string;\n}>;\n\ntype ChildElement = React.ReactText | TextElement;\n\nexport interface TextProps extends RNTextProps, TextStyledProps {\n  children?: ChildElement | ChildElement[];\n  category?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 's1' | 's2' | 'p1' | 'p2' | 'c1' | 'c2' | 'label' | string;\n  status?: EvaStatus;\n}\n\nexport type TextElement = React.ReactElement<TextProps>;\n\n/**\n * Basic text writing, including headings, paragraphs, captions, and more.\n *\n * @extends React.Component\n *\n * @property {ReactText | ReactElement<TextProps>} children - String or number to be rendered as text.\n * Also can be ReactElement<TextProps> - nested Text component.\n *\n * @property {string} appearance - Can be `default`, `alternative` or `hint`.\n * Use `alternative` for displaying light text on a dark content and vice versa.\n * Use `hint` for giving user a hint on something.\n *\n * @property {string} category - Can be `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `s1`, `s2`, `p1`, `p2`, `c1`, `c2`, `label`.\n * Defaults to *p1*.\n * Use *h* categories when needed to display headings.\n * Use *s* categories when needed to display subtitles.\n * Use *p* categories when needed to display regular text.\n * Use *c* and *label* categories when needed to give user a hint on something.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {TextProps} ...TextProps - Any props applied to Text component.\n *\n * @overview-example TextSimpleUsage\n *\n * @overview-example TextAppearances\n *\n * @overview-example TextStatuses\n */\nexport class TextComponent extends React.Component<TextProps> {\n\n  static styledComponentName: string = 'Text';\n\n  public render(): React.ReactElement<RNTextProps> {\n    const { eva, style, ...textProps } = this.props;\n\n    return (\n      <RNText\n        {...textProps}\n        style={[eva.style, style]}\n      />\n    );\n  }\n}\n\nexport const Text = styled<TextProps>(TextComponent);\n","import React from 'react';\nimport { RenderProp } from '../falsyFC/falsyFC.component';\nimport {\n  Text,\n  TextProps,\n} from '../../../ui/text/text.component';\n\nexport interface FalsyTextProps extends Omit<TextProps, 'children'> {\n  component?: RenderProp<TextProps> | React.ReactText;\n}\n\n/**\n * Helper component for optional text properties.\n *\n * Accepts same props as Text component,\n * and `component` which may be a string, a function, null or undefined.\n *\n * If it is null or undefined, will render nothing.\n * If it is a function, will call it with props passed to this component.\n * Otherwise, will render a Text with props passed to this component.\n *\n * @example Will render nothing.\n * ```\n * <FalsyText />\n * ```\n *\n * @example Will render red title.\n * ```\n * const Title = () => (\n *   <FalsyText style={{ color: 'red' }} component='Title' />\n * );\n * ```\n *\n * @example Will render image and red title.\n * ```\n * const renderTitle = (props) => (\n *   <React.Fragment>\n *     <Image source={require('../asset.png')}/>\n *     <Text {...props}>Title</Text>\n *   </React.Fragment>\n * );\n *\n * const Title = () => (\n *   <FalsyText\n *     style={{ color: 'red' }}\n *     component={renderTitle}\n *   />\n * );\n * ```\n */\nexport class FalsyText extends React.Component<FalsyTextProps> {\n\n  public render(): React.ReactElement {\n    const { component, ...textProps } = this.props;\n\n    if (!component) {\n      return null;\n    }\n\n    if (typeof component === 'function') {\n      return component(textProps as TextProps);\n    }\n\n    return (\n      <Text {...textProps}>\n        {component}\n      </Text>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Insets,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nexport interface TouchableWithoutFeedbackProps extends TouchableOpacityProps {\n  useDefaultHitSlop?: boolean;\n  children?: React.ReactNode;\n}\n\nexport type TouchableWithoutFeedbackElement = React.ReactElement<TouchableWithoutFeedbackProps>;\n\n/**\n * Helper component for the Touchable component with no opacity feedback.\n *\n * Applies recommended hitSlop by default.\n * @see https://reactnative.dev/docs/view#hitslop\n *\n * Allows passing ReactNode as children whereas original TouchableWithoutFeedback not.\n */\nexport class TouchableWithoutFeedback extends React.Component<TouchableWithoutFeedbackProps> {\n\n  private createHitSlopInsets = (): Insets => {\n    const flatStyle: ViewStyle = StyleSheet.flatten(this.props.style || {});\n\n    // @ts-ignore: `width` is restricted to be a number\n    const value: number = 40 - flatStyle.height || 0;\n\n    return {\n      left: value,\n      top: value,\n      right: value,\n      bottom: value,\n    };\n  };\n\n  public render(): React.ReactElement {\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        hitSlop={this.props.useDefaultHitSlop && this.createHitSlopInsets()}\n        {...this.props}\n      />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  NativeSyntheticEvent,\n  Platform,\n  StyleSheet,\n  TargetedEvent,\n} from 'react-native';\nimport {\n  TouchableWithoutFeedback,\n  TouchableWithoutFeedbackProps,\n} from './touchableWithoutFeedback.component';\n\nexport interface TouchableWebProps extends TouchableWithoutFeedbackProps {\n  onMouseEnter?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  onMouseLeave?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  onFocus?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  onBlur?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n}\n\nexport type TouchableWebElement = React.ReactElement<TouchableWebProps>;\n\n/**\n * Helper component for the Touchable component rendered on the web.\n */\nexport class TouchableWeb extends React.Component<TouchableWebProps> {\n\n  public render(): React.ReactElement {\n    const { style, ...touchableProps } = this.props;\n\n    return (\n      <TouchableWithoutFeedback\n        {...touchableProps}\n        style={[styles.container, style]}\n      />\n    );\n  }\n}\n\nconst styles = Platform.OS === 'web' && StyleSheet.create({\n  container: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n\n","import {\n  Dimensions,\n  ScaledSize,\n} from 'react-native';\n\nexport class Point {\n\n  constructor(readonly x: number,\n              readonly y: number) {\n  }\n\n  public equals(other: Point): boolean {\n    return this.x === other.x && this.y === other.y;\n  }\n\n  static zero(): Point {\n    return new Point(0, 0);\n  }\n\n  static outscreen(): Point {\n    return new Point(-999, -999);\n  }\n}\n\nexport class Size {\n\n  constructor(readonly width: number,\n              readonly height: number) {\n\n  }\n\n  public equals(other: Size): boolean {\n    return this.width === other.width && this.height === other.height;\n  }\n\n  static zero(): Size {\n    return new Size(0, 0);\n  }\n}\n\nexport class Frame {\n\n  readonly origin: Point;\n  readonly size: Size;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    this.origin = new Point(x, y);\n    this.size = new Size(width, height);\n  }\n\n  public equals(other: Frame): boolean {\n    return this.origin.equals(other.origin) && this.size.equals(other.size);\n  }\n\n  /**\n   * Creates new frame aligned to left of other\n   */\n  public leftOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x - this.size.width,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to top of other\n   */\n  public topOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y - this.size.height,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to right of other\n   */\n  public rightOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x + other.size.width,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to bottom of other\n   */\n  public bottomOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y + other.size.height,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame centered horizontally to other\n   */\n  public centerHorizontalOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x + (other.size.width - this.size.width) / 2,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame centered vertically to other\n   */\n  public centerVerticalOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y + (other.size.height - this.size.height) / 2,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  public centerOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x + (other.size.width - this.size.width) / 2,\n      other.origin.y + (other.size.height - this.size.height) / 2,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  static zero(): Frame {\n    return new Frame(0, 0, 0, 0);\n  }\n\n  static window(): Frame {\n    const window: ScaledSize = Dimensions.get('window');\n    return new Frame(0, 0, window.width, window.height);\n  }\n\n  static outscreen(): Frame {\n    const point: Point = Point.outscreen();\n    return new Frame(point.x, point.y, 0, 0);\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  findNodeHandle,\n  UIManager,\n} from 'react-native';\nimport { Frame } from './type';\n\nexport interface MeasureElementProps<P = any> {\n  force?: boolean;\n  onMeasure: (frame: Frame) => void;\n  children: React.ReactElement<P>;\n}\n\nexport type MeasuringElement<P = any> = React.ReactElement;\n\n/**\n * Measures child element size and it's screen position asynchronously.\n * Returns measure result in `onMeasure` callback.\n *\n * Usage:\n *\n * ```tsx\n * const onMeasure = (frame: Frame): void => {\n *   const { x, y } = frame.origin;\n *   const { width, height } = frame.size;\n *   ...\n * };\n *\n * <MeasureElement onMeasure={onMeasure}>\n *   <ElementToMeasure />\n * </MeasureElement>\n * ```\n *\n * By default, it measures each time onLayout is called,\n * but `force` property may be used to measure any time it's needed.\n * DON'T USE THIS FLAG IF THE COMPONENT RENDERS FIRST TIME OR YOU KNOW `onLayout` WILL BE CALLED.\n */\nexport const MeasureElement = (props: MeasureElementProps): MeasuringElement => {\n\n  const ref: React.RefObject<any> = React.useRef();\n\n  const bindToWindow = (frame: Frame, window: Frame): Frame => {\n    if (frame.origin.x < window.size.width) {\n      return frame;\n    }\n\n    const boundFrame: Frame = new Frame(\n      frame.origin.x - window.size.width,\n      frame.origin.y,\n      frame.size.width,\n      frame.size.height,\n    );\n\n    return bindToWindow(boundFrame, window);\n  };\n\n  const onUIManagerMeasure = (x: number, y: number, w: number, h: number): void => {\n    const frame: Frame = bindToWindow(new Frame(x, y, w, h), Frame.window());\n    props.onMeasure(frame);\n  };\n\n  const measureSelf = (): void => {\n    const node: number = findNodeHandle(ref.current);\n    UIManager.measureInWindow(node, onUIManagerMeasure);\n  };\n\n  if (props.force) {\n    measureSelf();\n  }\n\n  return React.cloneElement(props.children, { ref, onLayout: measureSelf });\n};\n","export interface WebEventResponderCallbacks {\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n}\n\nexport class WebEventResponderInstance {\n  readonly eventHandlers: WebEventResponderCallbacks;\n\n  constructor(props: WebEventResponderCallbacks) {\n    this.eventHandlers = props;\n  }\n}\n\nclass WebEventResponderStatic {\n  static create(config: WebEventResponderCallbacks): WebEventResponderInstance {\n    return new WebEventResponderInstance({\n      onMouseEnter: () => {\n        config.onMouseEnter && config.onMouseEnter();\n      },\n      onMouseLeave: () => {\n        config.onMouseLeave && config.onMouseLeave();\n      },\n      onFocus: () => {\n        config.onFocus && config.onFocus();\n      },\n      onBlur: () => {\n        config.onBlur && config.onBlur();\n      },\n    });\n  }\n}\n\nexport const WebEventResponder = WebEventResponderStatic;\n","const FLEX_PREFIX: string = 'flex';\nconst FLEX_ROW_PREFIX: string = 'row';\nconst FLEX_WRAP_PREFIX: string = 'wrap';\nconst FLEX_START_PREFIX: string = 'start';\nconst FLEX_END_PREFIX: string = 'end';\nconst FLEX_REVERSE_PREFIX: string = 'reverse';\n\n/**\n * Works with FlexBox style properties that starts with `flex` and ends with `-start` or `-end`\n *\n * E.g justifyContent: flex-start\n */\nconst FlexStartEndMapper: RTLFlexMapper<string> = {\n  toRTL(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(FLEX_END_PREFIX);\n\n    if (isReverse) {\n      return `${FLEX_PREFIX}-${FLEX_START_PREFIX}`;\n    }\n\n    return `${FLEX_PREFIX}-${FLEX_END_PREFIX}`;\n  },\n};\n\n/**\n * Works with FlexBox style properties that starts with `row` and optionally ends with `-reverse`\n *\n * E.g flexDirection: row-reverse\n */\nconst FlexRowMapper: RTLFlexMapper<string> = {\n  toRTL(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_ROW_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(FLEX_REVERSE_PREFIX);\n\n    if (isReverse) {\n      return FLEX_ROW_PREFIX;\n    }\n\n    return `${FLEX_ROW_PREFIX}-${FLEX_REVERSE_PREFIX}`;\n  },\n};\n\n/**\n * Works with FlexBox style properties that starts with `wrap` and optionally ends with `-reverse`\n *\n * E.g flexWrap: wrap-reverse\n */\nconst FlexWrapMapper: RTLFlexMapper<string> = {\n  toRTL(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_WRAP_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(`-${FLEX_REVERSE_PREFIX}`);\n\n    if (isReverse) {\n      return FLEX_WRAP_PREFIX;\n    }\n\n    return `${FLEX_WRAP_PREFIX}-${FLEX_REVERSE_PREFIX}`;\n  },\n};\n\n/**\n * Matches FlexBox style properties that can affect on Layout depending on LTR/RTL mode corresponding Mappers\n */\nexport const RtlFlexMap: Record<string, RTLFlexMapper<any>> = {\n  alignContent: FlexStartEndMapper,\n  alignItems: FlexStartEndMapper,\n  alignSelf: FlexStartEndMapper,\n  justifyContent: FlexStartEndMapper,\n  flexDirection: FlexRowMapper,\n  flexWrap: FlexWrapMapper,\n};\n\ninterface RTLFlexMapper<T> {\n  toRTL(value: T, rtl: boolean): T;\n}\n","import {\n  I18nManager,\n  ViewStyle,\n} from 'react-native';\nimport { RtlFlexMap } from './rtlFlexMap';\n\nclass RTLServiceStatic {\n\n  /**\n   * @returns true if it is Right-to-Left layout\n   */\n  public isRTL(): boolean {\n    return I18nManager.isRTL;\n  }\n\n  public select<T>(ltr: T, rtl: T): T {\n    return this.isRTL() ? rtl : ltr;\n  }\n\n  /**\n   * Iterates through {RtlFlexMap} and reverses style values if needed.\n   *\n   * @param {ViewStyle} source - style to convert\n   * @param {boolean} rtl - is layout currently in RTL mode (Needed for tests, because unable to mock this)\n   *\n   * @returns {ViewStyle} - style reversed to fit RTL\n   */\n  public ignoreRTL(source: ViewStyle, rtl: boolean = this.isRTL()): ViewStyle {\n    const rtlStyle: ViewStyle = Object.keys(RtlFlexMap).reduce((style: ViewStyle, prop: string): ViewStyle => {\n      const currentStyleValue = source[prop];\n      if (currentStyleValue) {\n        const i18nStyleValue = RtlFlexMap[prop].toRTL(currentStyleValue, rtl);\n        return {\n          ...style,\n          [prop]: i18nStyleValue,\n        };\n      }\n\n      return style;\n    }, {});\n\n    return { ...source, ...rtlStyle };\n  }\n}\n\nexport const RTLService = new RTLServiceStatic();\n","import { StyleType } from '../../../theme';\n\nexport const TextStyleProps: string[] = [\n\n  // TextStyle\n\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'lineHeight',\n  'textAlign',\n  'textAlign',\n  'textDecorationLine',\n  'textDecorationStyle',\n  'textDecorationColor',\n  'textShadowColor',\n  'textShadowColor',\n  'textShadowOffset',\n  'textShadowRadius',\n\n  // TextStyleIOS\n\n  'textTransform',\n  'writingDirection',\n\n  // TextStyleAndroid\n\n  'textAlignVertical',\n  'includeFontPadding',\n];\n\nexport const FlexStyleProps: string[] = [\n  'alignContent',\n  'alignItems',\n  'alignSelf',\n  'aspectRatio',\n  'borderBottomWidth',\n  'borderEndWidth',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderStartWidth',\n  'borderTopWidth',\n  'borderWidth',\n  'bottom',\n  'display',\n  'end',\n  'flex',\n  'flexBasis',\n  'flexDirection',\n  'flexGrow',\n  'flexShrink',\n  'flexWrap',\n  'height',\n  'justifyContent',\n  'left',\n  'margin',\n  'marginBottom',\n  'marginEnd',\n  'marginHorizontal',\n  'marginLeft',\n  'marginRight',\n  'marginStart',\n  'marginTop',\n  'marginVertical',\n  'maxHeight',\n  'maxWidth',\n  'minHeight',\n  'minWidth',\n  'overflow',\n  'padding',\n  'paddingBottom',\n  'paddingEnd',\n  'paddingHorizontal',\n  'paddingLeft',\n  'paddingRight',\n  'paddingStart',\n  'paddingTop',\n  'paddingVertical',\n  'position',\n  'right',\n  'start',\n  'top',\n  'width',\n  'zIndex',\n\n  // ios\n\n  'direction',\n];\n\nexport interface Props {\n  [key: string]: any;\n}\n\nexport interface RestProps {\n  rest?: Partial<Props>;\n}\n\nexport type AllOfProps = Partial<Props>;\nexport type AllWithRestProps = Partial<Props> & RestProps;\n\nclass NativePropsService {\n  /**\n   * Retrieves all props included in `from` array\n   *\n   * @param source (Props) - source object\n   * @param from (string[]) - array of keys needed to retrieve from `source`\n   *\n   * @return (Partial<Props>) - object with keys contained in `from` array\n   */\n\n  public all(source: Props | undefined, from: string[]): AllOfProps {\n    if (!source) {\n      return {};\n    }\n\n    return from.reduce((acc: Partial<AllOfProps>, prop: string): Partial<AllOfProps> => {\n      return { ...acc, [prop]: source[prop] };\n    }, {});\n  }\n\n  /**\n   * Retrieves all props included in `from` array, rest props includes in under the `rest` key\n   */\n  public allWithRest(source: Props | undefined, from: string[]): AllWithRestProps {\n    if (!source) {\n      return { rest: {} };\n    }\n\n    return Object.keys(source).reduce((acc: Partial<AllWithRestProps>, prop: string): Partial<AllWithRestProps> => {\n      const { rest, ...allOf } = acc;\n\n      if (from.includes(prop)) {\n        return { ...allOf, [prop]: source[prop], rest };\n      }\n\n      return { ...allOf, rest: { ...rest, [prop]: source[prop] } };\n    }, {});\n  }\n\n  /**\n   * Returns all styles with prefix\n   *\n   * @param {StyleType} source - Eva Styles\n   * @param {string} key - prefix\n   *\n   * @return {StyleType} - all styles with prefix\n   */\n  public allWithPrefix(source: StyleType, key: string): StyleType {\n    return Object.keys(source)\n                 .filter((styleName: string) => styleName.includes(key))\n                 .reduce((obj: StyleType, styleKey: string) => {\n                   return {\n                     ...obj,\n                     [styleKey]: source[styleKey],\n                   };\n                 }, {});\n  }\n}\n\nexport const PropsService = new NativePropsService();\n","import { ReactElement } from 'react';\n\nexport type ChildrenProp<Element extends ReactElement = ReactElement> = Element | Element[];\nexport type ChildrenWithProps<Props = {}> = ChildrenProp<ReactElement<Props>>;\n\nexport type EvaStatus = 'basic' | 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'control' | string;\nexport type EvaSize = 'tiny' | 'small' | 'medium' | 'large' | 'giant' | string;\nexport type EvaInputSize = 'small' | 'medium' | 'large' | string;\n\nexport class IndexPath {\n\n  constructor(readonly row: number, readonly section?: number) {\n  }\n\n  get groupIndex(): IndexPath {\n    return this.section >= 0 && new IndexPath(this.row);\n  }\n\n  public toString(): string {\n    if (this.section >= 0) {\n      return `${this.row + 1}.${this.section + 1}`;\n    }\n    return (this.row + 1).toString();\n  }\n\n  public equals = (other: IndexPath): boolean => {\n    if (!other) {\n      return false;\n    }\n    return this.row === other.row && this.section === other.section;\n  };\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  NativeSyntheticEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextInput,\n  TextInputFocusEventData,\n  TextInputProps,\n  TextStyle,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  EvaSize,\n  EvaStatus,\n  FalsyFC,\n  FalsyText,\n  FlexStyleProps,\n  PropsService,\n  RenderProp,\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\n\ntype InputStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\nexport interface InputProps extends TextInputProps, InputStyledProps {\n  status?: EvaStatus;\n  size?: EvaSize;\n  disabled?: boolean;\n  label?: RenderProp<TextProps> | React.ReactText;\n  caption?: RenderProp<TextProps> | React.ReactText;\n  captionIcon?: RenderProp<Partial<ImageProps>>;\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<Partial<ImageProps>>;\n  textStyle?: StyleProp<TextStyle>;\n}\n\nexport type InputElement = React.ReactElement<InputProps>;\n\n/**\n * Inputs let users enter and edit text.\n *\n * @extends React.Component\n *\n * @property {string} value - A value displayed in input field.\n *\n * @property {string} onChangeText - Called when the value should be changed.\n *\n * @property {() => void} onFocus - Called when input field becomes focused.\n *\n * @property {() => void} onBlur - Called when input field looses focus.\n *\n * @property {string} placeholder - A string to be displayed when there is no value.\n *\n * @property {boolean} disabled - Whether input field is disabled.\n * This property overrides `editable` property of TextInput.\n *\n * @property {ReactText | (TextProps) => ReactElement} label - String, number or a function component\n * to render above the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactText | (TextProps) => ReactElement} caption - String, number or a function component\n * to render below the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} captionIcon - Function component\n * to render to start of the *caption*.\n * Expected to return an Image.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Useful for giving user a hint on the input validity.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `small`, `medium` or `large`.\n * Defaults to *medium*.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes the style of the text field.\n *\n * @property {TextInputProps} ...TextInputProps - Any props applied to TextInput component.\n *\n * @overview-example InputSimpleUsage\n *\n * @overview-example InputStates\n *\n * @overview-example InputAccessories\n *\n * @overview-example InputStatus\n *\n * @overview-example InputSize\n *\n * @example InputStyling\n */\nexport class InputComponent extends React.Component<InputProps> implements WebEventResponderCallbacks {\n\n  static styledComponentName: string = 'Input';\n\n  private textInputRef: React.RefObject<TextInput> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public focus = (): void => {\n    this.textInputRef.current.focus();\n  };\n\n  public blur = (): void => {\n    this.textInputRef.current.blur();\n  };\n\n  public isFocused = (): boolean => {\n    return this.textInputRef.current.isFocused();\n  };\n\n  public clear = (): void => {\n    this.textInputRef.current.clear();\n  };\n\n  // WebEventResponderCallbacks\n\n  public onMouseEnter = (): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n  };\n\n  public onMouseLeave = (): void => {\n    this.props.eva.dispatch([]);\n  };\n\n  private onTextFieldFocus = (event: NativeSyntheticEvent<TextInputFocusEventData>): void => {\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  };\n\n  private onTextFieldBlur = (event: NativeSyntheticEvent<TextInputFocusEventData>): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const flatStyles: ViewStyle = StyleSheet.flatten(this.props.style);\n    const { rest: inputContainerStyle, ...containerStyle } = PropsService.allWithRest(flatStyles, FlexStyleProps);\n\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      placeholderColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      labelColor,\n      labelFontSize,\n      labelLineHeight,\n      labelMarginBottom,\n      labelFontWeight,\n      captionMarginTop,\n      captionColor,\n      captionFontSize,\n      captionLineHeight,\n      captionFontWeight,\n      captionIconWidth,\n      captionIconHeight,\n      captionIconMarginRight,\n      captionIconTintColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerStyle,\n      inputContainer: {\n        ...containerParameters,\n        ...inputContainerStyle,\n      },\n      captionContainer: {\n        marginTop: captionMarginTop,\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        // FIXME: RN issue (https://github.com/facebook/react-native/issues/7823)\n        // lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      placeholder: {\n        color: placeholderColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      label: {\n        color: labelColor,\n        fontSize: labelFontSize,\n        lineHeight: labelLineHeight,\n        marginBottom: labelMarginBottom,\n        fontWeight: labelFontWeight,\n      },\n      captionIcon: {\n        width: captionIconWidth,\n        height: captionIconHeight,\n        tintColor: captionIconTintColor,\n        marginRight: captionIconMarginRight,\n      },\n      captionLabel: {\n        fontSize: captionFontSize,\n        fontWeight: captionFontWeight,\n        lineHeight: captionLineHeight,\n        color: captionColor,\n      },\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const {\n      eva,\n      textStyle,\n      label,\n      caption,\n      accessoryLeft,\n      accessoryRight,\n      captionIcon,\n      ...textInputProps\n    } = this.props;\n\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <View style={evaStyle.container}>\n        <FalsyText\n          style={[evaStyle.label, styles.label]}\n          component={label}\n        />\n        <View style={[evaStyle.inputContainer, styles.inputContainer]}>\n          <FalsyFC\n            style={evaStyle.icon}\n            component={accessoryLeft}\n          />\n          <TextInput\n            ref={this.textInputRef}\n            placeholderTextColor={evaStyle.placeholder.color}\n            {...textInputProps}\n            {...this.webEventResponder.eventHandlers}\n            style={[evaStyle.text, styles.text, platformStyles.text, textStyle]}\n            editable={!textInputProps.disabled}\n            onFocus={this.onTextFieldFocus}\n            onBlur={this.onTextFieldBlur}\n          />\n          <FalsyFC\n            style={evaStyle.icon}\n            component={accessoryRight}\n          />\n        </View>\n        <View style={[evaStyle.captionContainer, styles.captionContainer]}>\n          <FalsyFC\n            style={evaStyle.captionIcon}\n            component={captionIcon}\n          />\n          <FalsyText\n            style={[evaStyle.captionLabel, styles.captionLabel]}\n            component={caption}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n  },\n  captionContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  text: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: 'auto',\n  },\n  label: {\n    textAlign: 'left',\n  },\n  captionLabel: {\n    textAlign: 'left',\n  },\n});\n\nconst platformStyles = StyleSheet.create({\n  text: Platform.select({\n    default: null,\n    android: {\n      paddingVertical: 0,\n    },\n    web: {\n      outlineWidth: 0,\n    },\n  }),\n});\n\nexport const Input = styled<InputProps>(InputComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  FlatList,\n  FlatListProps,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  styled,\n  StyledComponentProps,\n} from '../../theme';\n\ntype ListStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\nexport type ListProps<ItemT = any> = FlatListProps<ItemT> & ListStyledProps;\nexport type ListElement<ItemT = any> = React.ReactElement<ListProps<ItemT>>;\n\nexport interface BaseScrollParams {\n  animated?: boolean;\n}\n\nexport interface ViewScrollParams {\n  viewOffset?: number;\n  viewPosition?: number;\n}\n\nexport interface ScrollToIndexParams extends BaseScrollParams, ViewScrollParams {\n  index: number;\n}\n\nexport interface ScrollToOffsetParams extends BaseScrollParams {\n  offset: number;\n}\n\n/**\n * Performant interface for rendering simple, flat lists.\n * Lists should render ListItem components by providing them through `renderItem` property\n * to provide a useful component.\n *\n * @extends React.Component\n *\n * @property {any[]} data - An array of anything to be rendered within the list\n *\n * @property {(ListRenderItemInfo<ItemT>) => ReactElement} renderItem - Takes an\n * item from *data* and renders it into the list.\n *\n * @property {FlatListProps} ...FlatListProps - Any props applied to FlatList component.\n *\n * @overview-example ListSimpleUsage\n *\n * @overview-example ListAccessories\n *\n * @example ListStyling\n * ```\n */\nexport class ListComponent<ItemT = any> extends React.Component<ListProps> {\n\n  static styledComponentName: string = 'List';\n\n  private listRef: React.RefObject<FlatList<ItemT>> = React.createRef();\n\n  public scrollToEnd = (params?: BaseScrollParams): void => {\n    this.listRef.current.scrollToEnd(params);\n  };\n\n  public scrollToIndex = (params: ScrollToIndexParams): void => {\n    this.listRef.current.scrollToIndex(params);\n  };\n\n  public scrollToOffset(params: ScrollToOffsetParams): void {\n    this.listRef.current.scrollToOffset(params);\n  }\n\n  private keyExtractor = (item: ItemT, index: number): string => {\n    return index.toString();\n  };\n\n  public render(): React.ReactElement {\n    const { eva, style, keyExtractor, ...flatListProps } = this.props;\n\n    return (\n      <FlatList\n        keyExtractor={keyExtractor || this.keyExtractor}\n        {...flatListProps}\n        ref={this.listRef}\n        style={[eva.style, style]}\n      />\n    );\n  }\n}\n\nexport const List = styled<ListProps>(ListComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  FlexStyle,\n  StyleProp,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Frame,\n  RTLService,\n} from '../../devsupport';\n\nexport interface Offset {\n  rawValue: string;\n\n  apply(frame: Frame, value: number): Frame;\n}\n\nexport class Offsets {\n\n  static MARGIN: Offset = new class implements Offset {\n    rawValue: string = 'margin';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(value, value, value, value);\n    }\n  };\n\n  static MARGIN_HORIZONTAL: Offset = new class implements Offset {\n    rawValue: string = 'marginHorizontal';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(value, frame.origin.y, value, frame.size.height);\n    }\n  };\n\n  static MARGIN_VERTICAL: Offset = new class implements Offset {\n    rawValue: string = 'marginVertical';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(frame.origin.x, value, frame.size.width, value);\n    }\n  };\n\n  static MARGIN_LEFT: Offset = new class implements Offset {\n    rawValue: string = 'marginLeft';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(value, frame.origin.y, frame.size.width, frame.size.height);\n    }\n  };\n\n  static MARGIN_TOP: Offset = new class implements Offset {\n    rawValue: string = 'marginTop';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(frame.origin.x, value, frame.size.width, frame.size.height);\n    }\n  };\n\n  static MARGIN_RIGHT: Offset = new class implements Offset {\n    rawValue: string = 'marginRight';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(frame.origin.x, frame.origin.y, value, frame.size.height);\n    }\n  };\n\n  static MARGIN_BOTTOM: Offset = new class implements Offset {\n    rawValue: string = 'marginBottom';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(frame.origin.x, frame.origin.y, frame.size.width, value);\n    }\n  };\n\n  static find(source: StyleProp<FlexStyle>): Frame {\n    const offsetKeys: string[] = [\n      Offsets.MARGIN.rawValue,\n      Offsets.MARGIN_HORIZONTAL.rawValue,\n      Offsets.MARGIN_VERTICAL.rawValue,\n      Offsets.MARGIN_LEFT.rawValue,\n      Offsets.MARGIN_TOP.rawValue,\n      Offsets.MARGIN_RIGHT.rawValue,\n      Offsets.MARGIN_BOTTOM.rawValue,\n    ];\n\n    const flatStyle: FlexStyle = StyleSheet.flatten(source) || {};\n\n    return Object.keys(flatStyle)\n                 .filter((key: string): boolean => offsetKeys.includes(key))\n                 .reduce((acc: Frame, key: string): Frame => {\n\n                   const value: number = flatStyle[key];\n                   const offsetValue: Offset | undefined = Offsets.parse(key);\n\n                   return offsetValue ? offsetValue.apply(acc, value) : acc;\n                 }, Frame.zero());\n  }\n\n  static parse(value: string | Offset, fallback?: Offset): Offset | undefined {\n    return Offsets.typeOf(value) ? value : Offsets.parseString(value, fallback);\n  }\n\n  private static parseString(rawValue: string, fallback?: Offset): Offset | undefined {\n    switch (rawValue) {\n      case Offsets.MARGIN.rawValue:\n        return Offsets.MARGIN;\n      case Offsets.MARGIN_HORIZONTAL.rawValue:\n        return Offsets.MARGIN_HORIZONTAL;\n      case Offsets.MARGIN_VERTICAL.rawValue:\n        return Offsets.MARGIN_VERTICAL;\n      case Offsets.MARGIN_LEFT.rawValue:\n        return Offsets.MARGIN_LEFT;\n      case Offsets.MARGIN_TOP.rawValue:\n        return Offsets.MARGIN_TOP;\n      case Offsets.MARGIN_RIGHT.rawValue:\n        return Offsets.MARGIN_RIGHT;\n      case Offsets.MARGIN_BOTTOM.rawValue:\n        return Offsets.MARGIN_BOTTOM;\n      default:\n        return fallback;\n    }\n  }\n\n  private static typeOf(value: any): value is Offset {\n    const { rawValue } = (<Offset>value);\n\n    return rawValue !== undefined;\n  }\n}\n\nexport class PlacementOptions {\n  constructor(readonly source: Frame = Frame.zero(),\n              readonly other: Frame = Frame.zero(),\n              readonly bounds: Frame = Frame.zero(),\n              readonly offsets: Frame = Frame.zero()) {\n  }\n}\n\nexport interface PopoverPlacement {\n  rawValue: string;\n\n  frame(options: PlacementOptions): Frame;\n\n  flex(): FlexPlacement;\n\n  parent(): PopoverPlacement;\n\n  reverse(): PopoverPlacement;\n\n  family(): PopoverPlacement[];\n\n  fits(frame: Frame, other: Frame): boolean;\n}\n\nexport class PopoverPlacements {\n\n  static LEFT: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue: string = 'left';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.leftOf(options.other).centerVerticalOf(options.other);\n\n      const x: number = RTLService.select(\n        origin.x + options.offsets.origin.x,\n        options.bounds.size.width - size.width - (origin.x + options.offsets.size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.LEFT,\n        PopoverPlacements.LEFT_START,\n        PopoverPlacements.LEFT_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsStart(frame, other) && fitsTop(frame, other) && fitsBottom(frame, other);\n    }\n  };\n\n  static LEFT_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue: string = 'left start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y - (options.other.size.height - size.height) / 2 + options.offsets.origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static LEFT_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'left end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y + (options.other.size.height - size.height) / 2 - options.offsets.size.height,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static TOP: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.topOf(options.other).centerHorizontalOf(options.other);\n\n\n      const x: number = RTLService.select(\n        origin.x,\n        options.bounds.size.width - (origin.x + size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y + options.offsets.origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.TOP,\n        PopoverPlacements.TOP_START,\n        PopoverPlacements.TOP_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsTop(frame, other) && fitsLeft(frame, other) && fitsRight(frame, other);\n    }\n  };\n\n  static TOP_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x - (options.other.size.width - size.width) / 2 + options.offsets.origin.x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static TOP_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x + (options.other.size.width - size.width) / 2 - options.offsets.size.width,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static RIGHT: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.rightOf(options.other).centerVerticalOf(options.other);\n\n      const x: number = RTLService.select(\n        origin.x - options.offsets.size.width,\n        options.bounds.size.width - size.width - (origin.x - options.offsets.size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.RIGHT,\n        PopoverPlacements.RIGHT_START,\n        PopoverPlacements.RIGHT_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsEnd(frame, other) && fitsTop(frame, other) && fitsBottom(frame, other);\n    }\n  };\n\n  static RIGHT_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y - (options.other.size.height - size.height) / 2 + options.offsets.origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static RIGHT_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y + (options.other.size.height - size.height) / 2 - options.offsets.size.height,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static BOTTOM: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.bottomOf(options.other).centerHorizontalOf(options.other);\n\n      const x: number = RTLService.select(\n        origin.x,\n        options.bounds.size.width - (origin.x + size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y - options.offsets.size.height,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.BOTTOM,\n        PopoverPlacements.BOTTOM_START,\n        PopoverPlacements.BOTTOM_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsBottom(frame, other) && fitsLeft(frame, other) && fitsRight(frame, other);\n    }\n  };\n\n  static BOTTOM_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x - (options.other.size.width - size.width) / 2 + options.offsets.origin.x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static BOTTOM_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x + (options.other.size.width - size.width) / 2 - options.offsets.size.width,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static parse(value: string | PopoverPlacement, fallback?: PopoverPlacement): PopoverPlacement | undefined {\n    return PopoverPlacements.typeOf(value) ? value : PopoverPlacements.parseString(value, fallback);\n  }\n\n  private static parseString(rawValue: string, fallback?: PopoverPlacement): PopoverPlacement | undefined {\n    switch (rawValue) {\n      case PopoverPlacements.LEFT.rawValue:\n        return PopoverPlacements.LEFT;\n      case PopoverPlacements.TOP.rawValue:\n        return PopoverPlacements.TOP;\n      case PopoverPlacements.RIGHT.rawValue:\n        return PopoverPlacements.RIGHT;\n      case PopoverPlacements.BOTTOM.rawValue:\n        return PopoverPlacements.BOTTOM;\n      case PopoverPlacements.LEFT_START.rawValue:\n        return PopoverPlacements.LEFT_START;\n      case PopoverPlacements.LEFT_END.rawValue:\n        return PopoverPlacements.LEFT_END;\n      case PopoverPlacements.TOP_START.rawValue:\n        return PopoverPlacements.TOP_START;\n      case PopoverPlacements.TOP_END.rawValue:\n        return PopoverPlacements.TOP_END;\n      case PopoverPlacements.RIGHT_START.rawValue:\n        return PopoverPlacements.RIGHT_START;\n      case PopoverPlacements.RIGHT_END.rawValue:\n        return PopoverPlacements.RIGHT_END;\n      case PopoverPlacements.BOTTOM_START.rawValue:\n        return PopoverPlacements.BOTTOM_START;\n      case PopoverPlacements.BOTTOM_END.rawValue:\n        return PopoverPlacements.BOTTOM_END;\n      default:\n        return fallback;\n    }\n  }\n\n  private static typeOf(value: any): value is PopoverPlacement {\n    const { rawValue } = (<PopoverPlacement>value);\n\n    return rawValue !== undefined;\n  }\n}\n\nexport interface FlexPlacement {\n  direction: 'column' | 'row' | 'column-reverse' | 'row-reverse';\n  alignment: 'flex-start' | 'flex-end' | 'center';\n}\n\nconst fitsStart = (frame: Frame, other: Frame): boolean => {\n  return RTLService.select(fitsLeft, fitsRight)(frame, other);\n};\n\nconst fitsEnd = (frame: Frame, other: Frame): boolean => {\n  return RTLService.select(fitsRight, fitsLeft)(frame, other);\n};\n\nconst fitsLeft = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.x >= other.origin.x;\n};\n\nconst fitsRight = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.x + frame.size.width <= other.size.width;\n};\n\nconst fitsTop = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.y >= other.origin.y;\n};\n\nconst fitsBottom = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.y + frame.size.height <= other.size.height;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  TransformsStyle,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  FalsyFC,\n  RTLService,\n} from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport {\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\n\ntype AnimatedViewStyle = ViewStyle | any;\n\nexport interface PopoverViewProps extends ViewProps, StyledComponentProps {\n  contentContainerStyle?: StyleProp<AnimatedViewStyle>;\n  placement?: PopoverPlacement | string;\n  indicator?: (props: ViewProps) => React.ReactElement;\n}\n\nexport type PopoverViewElement = React.ReactElement<PopoverViewProps>;\n\nconst INDICATOR_OFFSET: number = 8;\nconst INDICATOR_WIDTH: number = 6;\n\nclass PopoverViewComponent extends React.Component<PopoverViewProps> {\n\n  static styledComponentName: string = 'Popover';\n\n  private get placement(): PopoverPlacement {\n    return PopoverPlacements.parse(this.props.placement);\n  }\n\n  private getComponentStyle = (source: StyleType) => {\n    const { indicatorWidth, indicatorHeight, indicatorBackgroundColor, ...containerParameters } = source;\n\n    return {\n      content: containerParameters,\n      indicator: {\n        width: indicatorWidth,\n        height: indicatorHeight,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private getDirectionStyle = () => {\n    const { direction, alignment } = this.placement.flex();\n\n    const isVertical: boolean = direction.startsWith('column');\n    const isStart: boolean = alignment.endsWith('start');\n    const isEnd: boolean = alignment.endsWith('end');\n    const isReverse: boolean = direction.endsWith('reverse');\n\n    // Rotate indicator by 90 deg if we have `row` direction (left/right placement)\n    // Rotate it again by 180 if we have `row-reverse` (bottom/right placement)\n    const indicatorRotate: number = isVertical ? 180 : 90;\n    const indicatorReverseRotate: number = isReverse ? 0 : 180;\n\n    // Translate container by half of `indicatorWidth`. Exactly half (because it has a square shape)\n    // Reverse if needed\n\n    // @ts-ignore: indicatorWidth type is always number\n    let containerTranslate: number = (this.props.indicator && !isVertical) ? INDICATOR_WIDTH / 2 : 0;\n    containerTranslate = isReverse ? containerTranslate : -containerTranslate;\n\n    // Translate indicator by passed `indicatorOffset`\n    // Reverse if needed\n\n    let indicatorTranslate: number = isVertical ? -INDICATOR_OFFSET : INDICATOR_OFFSET;\n    indicatorTranslate = isReverse ? -indicatorTranslate : indicatorTranslate;\n    const i18nVerticalIndicatorTranslate = RTLService.select(indicatorTranslate, -indicatorTranslate);\n    indicatorTranslate = isVertical ? i18nVerticalIndicatorTranslate : indicatorTranslate;\n\n    const contentTransforms: TransformsStyle = {\n      transform: [\n        { translateX: containerTranslate },\n      ],\n    };\n\n    const indicatorTransforms: TransformsStyle = {\n      transform: [\n        { rotate: `${indicatorRotate}deg` },\n        { rotate: `${indicatorReverseRotate}deg` },\n        // Translate indicator \"to start\" if we have `-start` alignment\n        // Or translate it \"to end\" if we have `-end` alignment\n        { translateX: isStart ? -indicatorTranslate : 0 },\n        { translateX: isEnd ? indicatorTranslate : 0 },\n      ],\n    };\n\n    return {\n      container: {\n        flexDirection: direction,\n        alignItems: alignment,\n      },\n      content: contentTransforms,\n      indicator: indicatorTransforms,\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, contentContainerStyle, onLayout, indicator, ...viewProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n    const directionStyle = this.getDirectionStyle();\n\n    return (\n      <View\n        style={[directionStyle.container, contentContainerStyle]}\n        onLayout={onLayout}>\n        <FalsyFC\n          style={[evaStyle.indicator, directionStyle.indicator]}\n          component={indicator}\n        />\n        <View\n          {...viewProps}\n          style={[evaStyle.content, directionStyle.content, style]}\n        />\n      </View>\n    );\n  }\n}\n\nexport const PopoverView = styled<PopoverViewProps>(PopoverViewComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  PlacementOptions,\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\nimport { Frame } from '../../devsupport';\n\nconst PLACEMENT_FAMILIES: string[] = [\n  PopoverPlacements.BOTTOM.rawValue,\n  PopoverPlacements.TOP.rawValue,\n  PopoverPlacements.LEFT.rawValue,\n  PopoverPlacements.RIGHT.rawValue,\n];\n\nexport class PopoverPlacementService {\n\n  public find(preferredValue: PopoverPlacement, options: PlacementOptions): PopoverPlacement {\n    const placement: PopoverPlacement = this.findRecursive(preferredValue, PLACEMENT_FAMILIES, options);\n\n    return placement || preferredValue;\n  }\n\n  private findRecursive(placement: PopoverPlacement, families: string[], options: PlacementOptions): PopoverPlacement {\n    const oneOfCurrentFamily: PopoverPlacement = this.findFromFamily(placement, options);\n\n    if (oneOfCurrentFamily) {\n      return oneOfCurrentFamily;\n    }\n\n    const oneOfReversedFamily: PopoverPlacement = this.findFromFamily(placement.reverse(), options);\n\n    if (oneOfReversedFamily) {\n      return oneOfReversedFamily;\n    }\n\n    delete families[families.indexOf(placement.parent().rawValue)];\n    delete families[families.indexOf(placement.reverse().parent().rawValue)];\n\n    const firstTruthy: string = families.filter(Boolean)[0];\n\n    if (firstTruthy) {\n      const nextPlacement: PopoverPlacement = PopoverPlacements.parse(firstTruthy);\n\n      return this.findRecursive(nextPlacement, families, options);\n    }\n\n    return null;\n  }\n\n  private findFromFamily(placement: PopoverPlacement, options: PlacementOptions): PopoverPlacement {\n    const preferredFrame: Frame = placement.frame(options);\n\n    if (placement.fits(preferredFrame, options.bounds)) {\n      return placement;\n    }\n\n    return placement.family().find((familyValue: PopoverPlacement): boolean => {\n      const familyFrame = familyValue.frame(options);\n\n      return familyValue.fits(familyFrame, options.bounds);\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  ViewProps,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  Frame,\n  MeasureElement,\n  MeasuringElement,\n  Point,\n  RenderProp,\n} from '../../devsupport';\nimport { ModalService } from '../../theme';\nimport { ModalProps } from '../modal/modal.component';\nimport {\n  PopoverView,\n  PopoverViewElement,\n  PopoverViewProps,\n} from './popoverView.component';\nimport { PopoverPlacementService } from './placement.service';\nimport {\n  PlacementOptions,\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\n\ntype PopoverModalProps = Overwrite<ModalProps, {\n  children?: React.ReactElement;\n}>;\n\nexport interface PopoverProps extends PopoverViewProps, PopoverModalProps {\n  anchor: RenderProp;\n  fullWidth?: boolean;\n}\n\nexport type PopoverElement = React.ReactElement<PopoverProps>;\n\ninterface State {\n  childFrame: Frame;\n  anchorFrame: Frame;\n  forceMeasure: boolean;\n}\n\n/**\n * Displays a content positioned relative to another view.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets `content` component visible.\n *\n * @method {() => void} hide - Sets `content` component invisible.\n *\n * @property {boolean} visible - Whether content component is visible.\n * Defaults to false.\n *\n * @property {() => ReactElement} anchor - A component relative to which content component will be shown.\n *\n * @property {ReactElement} children - A component displayed within the popover.\n *\n * @property {() => void} onBackdropPress - Called when popover is visible and the underlying view was touched.\n * Useful when needed to close the modal on outside touches.\n *\n * @property {boolean} fullWidth - Whether a content component should take the width of `anchor`.\n *\n * @property {string | PopoverPlacement} placement - Position of the content component relative to the `anchor`.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Defaults to *bottom*.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Style of backdrop.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example PopoverSimpleUsage\n *\n * @overview-example PopoverPlacement\n *\n * @overview-example PopoverStyledBackdrop\n */\nexport class Popover extends React.Component<PopoverProps, State> {\n\n  static defaultProps: Partial<PopoverProps> = {\n    placement: PopoverPlacements.BOTTOM,\n  };\n\n  public state: State = {\n    childFrame: Frame.zero(),\n    anchorFrame: Frame.zero(),\n    forceMeasure: false,\n  };\n\n  private modalId: string;\n  private contentPosition: Point = Point.outscreen();\n  private placementService: PopoverPlacementService = new PopoverPlacementService();\n\n  private actualPlacement: PopoverPlacement = this.preferredPlacement;\n\n  private get preferredPlacement(): PopoverPlacement {\n    return PopoverPlacements.parse(this.props.placement);\n  }\n\n  private get contentFlexPosition() {\n    const { x: left, y: top } = this.contentPosition;\n    return {\n      left,\n      top,\n    };\n  }\n\n  private get backdropConfig() {\n    const { onBackdropPress, backdropStyle } = this.props;\n    return {\n      onBackdropPress,\n      backdropStyle,\n    };\n  }\n\n  public show = (): void => {\n    this.modalId = ModalService.show(this.renderMeasuringPopoverElement(), this.backdropConfig);\n  };\n\n  public hide = (): void => {\n    this.modalId = ModalService.hide(this.modalId);\n  };\n\n  public componentDidUpdate(prevProps: PopoverProps): void {\n    if (!this.modalId && this.props.visible && !this.state.forceMeasure) {\n      this.setState({ forceMeasure: true });\n      return;\n    }\n\n    if (this.modalId && !this.props.visible) {\n      this.contentPosition = Point.outscreen();\n      this.hide();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.hide();\n  }\n\n  private onChildMeasure = (childFrame: Frame): void => {\n    this.state.childFrame = childFrame;\n\n    if (!this.modalId && this.props.visible) {\n      this.show();\n      return;\n    }\n\n    if (this.modalId && this.props.visible) {\n      ModalService.update(this.modalId, this.renderPopoverElement());\n    }\n  };\n\n  private onContentMeasure = (anchorFrame: Frame): void => {\n    this.state.anchorFrame = anchorFrame;\n\n    const placementOptions: PlacementOptions = this.findPlacementOptions(anchorFrame, this.state.childFrame);\n    this.actualPlacement = this.placementService.find(this.preferredPlacement, placementOptions);\n\n    const displayFrame: Frame = this.actualPlacement.frame(placementOptions);\n    this.contentPosition = displayFrame.origin;\n\n    ModalService.update(this.modalId, this.renderPopoverElement());\n  };\n\n  private findPlacementOptions = (contentFrame: Frame, childFrame: Frame): PlacementOptions => {\n    const width: number = this.props.fullWidth ? childFrame.size.width : contentFrame.size.width;\n    const frame: Frame = new Frame(contentFrame.origin.x, contentFrame.origin.y, width, contentFrame.size.height);\n\n    return new PlacementOptions(frame, childFrame, Frame.window(), Frame.zero());\n  };\n\n  private renderContentElement = (): React.ReactElement => {\n    const contentElement: React.ReactElement = this.props.children;\n    const fullWidthStyle = { width: this.state.childFrame.size.width };\n\n    return React.cloneElement(contentElement, {\n      style: [this.props.fullWidth && fullWidthStyle, contentElement.props.style],\n    });\n  };\n\n  private renderPopoverElement = (): PopoverViewElement => {\n    return (\n      <PopoverView\n        {...this.props}\n        contentContainerStyle={[this.props.contentContainerStyle, styles.popoverView, this.contentFlexPosition]}\n        placement={this.actualPlacement.reverse()}>\n        {this.renderContentElement()}\n      </PopoverView>\n    );\n  };\n\n  private renderMeasuringPopoverElement = (): MeasuringElement => {\n    return (\n      <MeasureElement onMeasure={this.onContentMeasure}>\n        {this.renderPopoverElement()}\n      </MeasureElement>\n    );\n  };\n\n  public render(): React.ReactElement {\n    return (\n      <MeasureElement\n        force={this.state.forceMeasure}\n        onMeasure={this.onChildMeasure}>\n        {this.props.anchor()}\n      </MeasureElement>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  popoverView: {\n    position: 'absolute',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ListRenderItemInfo,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TextInputFocusEventData,\n  View,\n} from 'react-native';\nimport { ChildrenWithProps } from '../../devsupport';\nimport {\n  Input,\n  InputElement,\n  InputProps,\n} from '../input/input.component';\nimport { List } from '../list/list.component';\nimport {\n  Popover,\n  PopoverElement,\n} from '../popover/popover.component';\nimport { PopoverPlacement } from '../popover/type';\nimport {\n  AutocompleteItemElement,\n  AutocompleteItemProps,\n} from './autocompleteItem.component';\n\nexport interface AutocompleteProps extends InputProps {\n  children?: ChildrenWithProps<AutocompleteItemProps>;\n  onSelect?: (index: number) => void;\n  placement?: string;\n}\n\nexport type AutocompleteElement = React.ReactElement<AutocompleteProps>;\n\ninterface State {\n  listVisible: boolean;\n}\n\n/**\n * Autocomplete is a normal text input enhanced by a panel of suggested options.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets data list visible.\n *\n * @method {() => void} hide - Sets data list invisible.\n *\n * @method {() => void} focus - Focuses an input field and sets data list visible.\n *\n * @method {() => void} blur - Removes focus from input field and sets data list invisible.\n *\n * @method {() => boolean} isFocused - Returns true if the input field is currently focused.\n *\n * @method {() => void} clear - Removes all text from the input field.\n *\n * @property {ReactElement<AutocompleteItemProps> | ReactElement<AutocompleteItemProps>[]} children -\n * Options displayed within list.\n *\n * @property {(number) => void} onSelect - Called when option is pressed.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Useful for giving user a hint on the input validity.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `small`, `medium` or `large`.\n * Defaults to *medium*.\n *\n * @property {ReactText | (TextProps) => ReactElement} label - String, number or a function component\n * to render to top of the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {string | PopoverPlacement} placement - Position of the options list relative to the input field.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Defaults to *bottom*.\n *\n * @property {() => void} onFocus - Called when options list becomes visible.\n *\n * @property {() => void} onBlur - Called when options list becomes invisible.\n *\n * @property {InputProps} ...InputProps - Any props applied to Input component.\n *\n * @overview-example AutocompleteSimpleUsage\n *\n * @overview-example AutocompleteAccessories\n *\n * @example AutocompleteHandleKeyboard\n *\n * @example AutocompleteAsync\n */\nexport class Autocomplete extends React.Component<AutocompleteProps, State> {\n\n  public state: State = {\n    listVisible: false,\n  };\n\n  private popoverRef: React.RefObject<Popover> = React.createRef();\n  private inputRef: React.RefObject<any> = React.createRef();\n\n  private get data(): any[] {\n    return React.Children.toArray(this.props.children || []);\n  }\n\n  public show = (): void => {\n    this.popoverRef.current.show();\n  };\n\n  public hide = (): void => {\n    this.popoverRef.current.hide();\n  };\n\n  public focus = (): void => {\n    this.inputRef.current.focus();\n  };\n\n  public blur = (): void => {\n    this.inputRef.current.blur();\n  };\n\n  public isFocused = (): boolean => {\n    return this.inputRef.current.isFocused();\n  };\n\n  public clear = (): void => {\n    this.inputRef.current.clear();\n  };\n\n  private onInputFocus = (e: NativeSyntheticEvent<TextInputFocusEventData>): void => {\n    this.setOptionsListVisible();\n\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n  };\n\n  private onBackdropPress = (): void => {\n    this.blur();\n    this.setOptionsListInvisible();\n  };\n\n  private onItemPress = (index: number): void => {\n    if (this.props.onSelect) {\n      this.setOptionsListInvisible();\n      this.props.onSelect(index);\n    }\n  };\n\n  private setOptionsListVisible = (): void => {\n    const hasData: boolean = this.data.length > 0;\n    hasData && this.setState({ listVisible: true });\n  };\n\n  private setOptionsListInvisible = (): void => {\n    this.setState({ listVisible: false });\n  };\n\n  private renderItem = (info: ListRenderItemInfo<AutocompleteItemElement>): AutocompleteItemElement => {\n    return React.cloneElement(info.item, { onPress: () => this.onItemPress(info.index) });\n  };\n\n  private renderInputElement = (props: InputProps): InputElement => {\n    return (\n      <View>\n        <Input\n          {...props}\n          ref={this.inputRef}\n          onFocus={this.onInputFocus}\n        />\n      </View>\n    );\n  };\n\n  public render(): PopoverElement {\n    const { placement, children, ...inputProps } = this.props;\n\n    return (\n      <Popover\n        ref={this.popoverRef}\n        style={styles.popover}\n        placement={placement}\n        visible={this.state.listVisible}\n        fullWidth={true}\n        anchor={() => this.renderInputElement(inputProps)}\n        onBackdropPress={this.onBackdropPress}>\n        <List\n          style={styles.list}\n          data={this.data}\n          bounces={false}\n          renderItem={this.renderItem}\n        />\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  popover: {\n    maxHeight: 192,\n    overflow: 'hidden',\n  },\n  list: {\n    flexGrow: 0,\n    overflow: 'hidden',\n  },\n});\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  Platform,\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  FalsyFC,\n  FalsyText,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebProps,\n  TouchableWebElement,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\n\ntype ListItemStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\nexport interface ListItemProps extends TouchableWebProps, ListItemStyledProps {\n  title?: RenderProp<TextProps> | React.ReactText;\n  description?: RenderProp<TextProps> | React.ReactText;\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<ViewProps>;\n  children?: React.ReactNode;\n}\n\nexport type ListItemElement = React.ReactElement<ListItemProps>;\n\n/**\n * A single item rendered in List.\n * Items should be rendered within List by providing them through `renderItem` property to provide a usable component.\n *\n * @extends React.Component\n *\n * @property {ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the item.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactText | (TextProps) => ReactElement} description - String, number or a function component\n * to render within the item.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {(ViewProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n *\n * @property {ReactNode} children - Component to render within the item.\n * Useful when needed to render a custom item and get a feedback when it is pressed.\n * If provided, *title* and other properties will be ignored.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example ListItemSimpleUsage\n */\nexport class ListItemComponent extends React.Component<ListItemProps & { index: number }> {\n\n  static styledComponentName: string = 'ListItem';\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      titleMarginHorizontal,\n      titleFontFamily,\n      titleFontSize,\n      titleLineHeight,\n      titleFontWeight,\n      titleColor,\n      descriptionFontFamily,\n      descriptionFontSize,\n      descriptionFontWeight,\n      descriptionLineHeight,\n      descriptionColor,\n      descriptionMarginHorizontal,\n      accessoryMarginHorizontal,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      title: {\n        marginHorizontal: titleMarginHorizontal,\n        fontFamily: titleFontFamily,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight,\n        fontWeight: titleFontWeight,\n        color: titleColor,\n      },\n      description: {\n        color: descriptionColor,\n        fontFamily: descriptionFontFamily,\n        fontSize: descriptionFontSize,\n        fontWeight: descriptionFontWeight,\n        lineHeight: descriptionLineHeight,\n        marginHorizontal: descriptionMarginHorizontal,\n      },\n      accessory: {\n        marginHorizontal: accessoryMarginHorizontal,\n      },\n    };\n  };\n\n  private renderTemplateChildren = (props: ListItemProps, evaStyle): React.ReactFragment => {\n    return (\n      <React.Fragment>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={props.accessoryLeft}\n        />\n        <View style={styles.contentContainer}>\n          <FalsyText\n            style={[evaStyle.title, styles.title]}\n            component={props.title}\n          />\n          <FalsyText\n            style={[evaStyle.description, styles.description]}\n            component={props.description}\n          />\n        </View>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={props.accessoryRight}\n        />\n      </React.Fragment>\n    );\n  };\n\n  public render(): TouchableWebElement {\n    const {\n      eva,\n      style,\n      children,\n      title,\n      description,\n      accessoryLeft,\n      accessoryRight,\n      ...touchableProps\n    } = this.props;\n\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[evaStyle.container, styles.container, webStyles.container, style]}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        {children || this.renderTemplateChildren(this.props, evaStyle)}\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  title: {\n    textAlign: 'left',\n  },\n  description: {\n    textAlign: 'left',\n  },\n});\n\nconst webStyles = Platform.OS === 'web' && StyleSheet.create({\n  container: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n\nexport const ListItem = styled<ListItemProps>(ListItemComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ListItem,\n  ListItemElement,\n  ListItemProps,\n} from '../list/listItem.component';\n\nexport type AutocompleteItemProps = ListItemProps;\nexport type AutocompleteItemElement = React.ReactElement<AutocompleteItemProps>;\n\n/**\n * A single item in Autocomplete List.\n * Items should be rendered within Autocomplete children to provide a usable component.\n *\n * @extends React.Component\n *\n * @property {ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the button.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the *title*.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the *title*.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example AutocompleteItemSimpleUsage\n */\nexport class AutocompleteItem extends React.Component<ListItemProps> {\n\n  public render(): ListItemElement {\n    return (\n      <ListItem {...this.props} />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Image,\n  ImageProps,\n  ImageStyle,\n  StyleSheet,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { EvaSize } from '@ui-kitten/components/devsupport';\n\ntype AvatarStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\nexport interface AvatarProps extends ImageProps, AvatarStyledProps {\n  shape?: 'round' | 'rounded' | 'square' | string;\n  size?: EvaSize;\n}\n\nexport type AvatarElement = React.ReactElement<AvatarProps>;\n\n/**\n * An Image with additional styles provided by Eva.\n *\n * @extends React.Component\n *\n * @property {string} shape - Shape of the component.\n * Can be `round`, `rounded` or `square`.\n * Defaults to *round*.\n *\n * @property {string} size - Size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Defaults to *medium*.\n *\n * @property {ImageProps} ...ImageProps - Any props applied to Image component.\n *\n * @overview-example AvatarSimpleUsage\n *\n * @overview-example AvatarSize\n *\n * @overview-example AvatarShape\n */\nexport class AvatarComponent extends React.Component<AvatarProps> {\n\n  static styledComponentName: string = 'Avatar';\n\n  private getComponentStyle = (source: StyleType): ImageStyle => {\n    const { roundCoefficient, ...containerParameters } = source;\n\n    // @ts-ignore: avoid checking `containerParameters`\n    const baseStyle: ImageStyle = StyleSheet.flatten([\n      containerParameters,\n      this.props.style,\n    ]);\n\n    // @ts-ignore: rhs operator is restricted to be number\n    const borderRadius: number = roundCoefficient * baseStyle.height;\n\n    return {\n      borderRadius,\n      ...baseStyle,\n    };\n  };\n\n  public render(): React.ReactElement<ImageProps> {\n    const { eva, ...imageProps } = this.props;\n    const evaStyle: ImageStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <Image\n        {...imageProps}\n        style={evaStyle}\n      />\n    );\n  }\n}\n\nexport const Avatar = styled<AvatarProps>(AvatarComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  Easing,\n  LayoutChangeEvent,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { RTLService } from '../../devsupport';\n\nexport interface TabIndicatorProps extends ViewProps {\n  positions: number;\n  selectedPosition?: number;\n}\n\nexport type TabIndicatorElement = React.ReactElement<TabIndicatorProps>;\n\nexport class TabIndicator extends React.Component<TabIndicatorProps> {\n\n  static defaultProps: Partial<TabIndicatorProps> = {\n    selectedPosition: 0,\n  };\n\n  private indicatorWidth: number;\n  private contentOffset: Animated.Value = new Animated.Value(0);\n\n  public componentDidMount() {\n    this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n  }\n\n  public shouldComponentUpdate(nextProps: TabIndicatorProps): boolean {\n    return this.props.selectedPosition !== nextProps.selectedPosition;\n  }\n\n  public componentDidUpdate() {\n    const { selectedPosition: index } = this.props;\n\n    this.scrollToIndex({\n      index,\n      animated: true,\n    });\n  }\n\n  public componentWillUnmount() {\n    this.contentOffset.removeAllListeners();\n  }\n\n  /**\n   * scrolls indicator to passed index\n   *\n   * @param params (object) - {\n   *  index: number,\n   *  animated: boolean | undefined\n   * }\n   */\n  public scrollToIndex(params: { index: number, animated?: boolean }) {\n    const { index, ...rest } = params;\n    const offset: number = this.indicatorWidth * index;\n\n    this.scrollToOffset({ offset, ...rest });\n  }\n\n  /**\n   * scrolls indicator to passed offset\n   *\n   * @param params (object) - {\n   *  offset: number,\n   *  animated: boolean | undefined\n   * }\n   */\n  public scrollToOffset(params: { offset: number, animated?: boolean }) {\n    this.createOffsetAnimation(params).start(this.onContentOffsetAnimationStateEnd);\n  }\n\n  private onContentOffsetAnimationStateChanged = (state: { value: number }) => {\n    // no-op\n  };\n\n  private onContentOffsetAnimationStateEnd = (result: { finished: boolean }) => {\n    // no-op\n  };\n\n  private createOffsetAnimation = (params: { offset: number, animated?: boolean }): Animated.CompositeAnimation => {\n    return Animated.timing(this.contentOffset, {\n      toValue: RTLService.select(params.offset, -params.offset),\n      duration: 200,\n      easing: Easing.linear,\n    });\n  };\n\n  private onLayout = (event: LayoutChangeEvent) => {\n    this.indicatorWidth = event.nativeEvent.layout.width;\n\n    this.scrollToOffset({\n      offset: this.indicatorWidth * this.props.selectedPosition,\n      animated: false,\n    });\n  };\n\n  private getComponentStyle = (): ViewStyle => {\n    const widthPercent: number = 100 / this.props.positions;\n\n    return {\n      width: `${widthPercent}%`,\n\n      // @ts-ignore: RN has no types for `Animated` styles\n      transform: [{ translateX: this.contentOffset }],\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, ...viewProps } = this.props;\n    const evaStyle: ViewStyle = this.getComponentStyle();\n\n    return (\n      <Animated.View\n        {...viewProps}\n        style={[style, evaStyle]}\n        onLayout={this.onLayout}\n      />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport { ChildrenWithProps } from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport {\n  BottomNavigationTabElement,\n  BottomNavigationTabProps,\n} from './bottomNavigationTab.component';\nimport {\n  TabIndicator,\n  TabIndicatorElement,\n} from '../shared/tabIndicator.component';\n\ntype BottomNavigationStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | 'noIndicator' | string;\n}>;\n\nexport interface BottomNavigationProps extends ViewProps, BottomNavigationStyledProps {\n  children?: ChildrenWithProps<BottomNavigationTabProps>;\n  selectedIndex?: number;\n  onSelect?: (index: number) => void;\n  indicatorStyle?: StyleProp<ViewStyle>;\n}\n\nexport type BottomNavigationElement = React.ReactElement<BottomNavigationProps>;\n\n/**\n * A bar with tabs styled by Eva.\n * BottomNavigation should contain BottomNavigationTab components to provide a usable navigation component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<TabProps> | ReactElement<TabProps>[]} children - Tabs to be rendered within the bar.\n *\n * @property {number} selectedIndex - Index of currently selected tab.\n *\n * @property {(number) => void} onSelect - Called when tab is pressed.\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `default` or `noIndicator`.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Styles of the indicator.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example BottomNavigationSimpleUsage\n *\n * @overview-example Using with React Navigation\n *\n * ```\n * import React from 'react';\n * import { NavigationContainer } from '@react-navigation/native';\n * import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n * import { BottomNavigation, BottomNavigationTab, Layout, Text } from '@ui-kitten/components';\n *\n * const { Navigator, Screen } = createBottomTabNavigator();\n *\n * const UsersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>USERS</Text>\n *   </Layout>\n * );\n *\n * const OrdersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>ORDERS</Text>\n *   </Layout>\n * );\n *\n * const BottomTabBar = ({ navigation, state }) => (*\n *   <BottomNavigation\n *     selectedIndex={state.index}\n *     onSelect={index => navigation.navigate(state.routeNames[index])}>\n *     <BottomNavigationTab title='USERS'/>\n *     <BottomNavigationTab title='ORDERS'/>\n *   </BottomNavigation>\n * );\n *\n * const TabNavigator = () => (\n *   <Navigator tabBar={props => <BottomTabBar {...props} />}>\n *     <Screen name='Users' component={UsersScreen}/>\n *     <Screen name='Orders' component={OrdersScreen}/>\n *   </Navigator>\n * );\n *\n * export const AppNavigator = () => (\n *   <NavigationContainer>\n *     <TabNavigator/>\n *   </NavigationContainer>\n * );\n * ```\n *\n * @overview-example BottomNavigationAccessories\n *\n * @example BottomNavigationWithoutIndicator\n *\n * @example BottomNavigationStyling\n */\nexport class BottomNavigationComponent extends React.Component<BottomNavigationProps> {\n\n  static styledComponentName: string = 'BottomNavigation';\n\n  static defaultProps: Partial<BottomNavigationProps> = {\n    selectedIndex: 0,\n  };\n\n  private onTabSelect = (index: number): void => {\n    if (this.props.onSelect && this.props.selectedIndex !== index) {\n      this.props.onSelect(index);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const { indicatorHeight, indicatorBackgroundColor, ...containerParameters } = source;\n\n    return {\n      container: containerParameters,\n      indicator: {\n        height: indicatorHeight,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private renderIndicatorElement = (positions: number, style: ViewStyle): TabIndicatorElement => {\n    const { indicatorStyle, selectedIndex } = this.props;\n\n    return (\n      <TabIndicator\n        key={0}\n        style={[style, styles.indicator, indicatorStyle]}\n        selectedPosition={selectedIndex}\n        positions={positions}\n      />\n    );\n  };\n\n  private renderTabElement = (element: BottomNavigationTabElement, index: number): BottomNavigationTabElement => {\n    return React.cloneElement(element, {\n      key: index,\n      style: [styles.item, element.props.style],\n      selected: index === this.props.selectedIndex,\n      onSelect: () => this.onTabSelect(index),\n    });\n  };\n\n  private renderTabElements = (source: ChildrenWithProps<BottomNavigationTabProps>): BottomNavigationTabElement[] => {\n    return React.Children.map(source, this.renderTabElement);\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const tabElements: BottomNavigationTabElement[] = this.renderTabElements(this.props.children);\n    const hasIndicator: boolean = style.indicator.height > 0;\n\n    return [\n      hasIndicator && this.renderIndicatorElement(tabElements.length, style.indicator),\n      ...tabElements,\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, ...viewProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n    const [indicatorElement, ...tabElements] = this.renderComponentChildren(evaStyle);\n\n    return (\n      <View\n        {...viewProps}\n        style={[evaStyle.container, styles.container, style]}>\n        {indicatorElement}\n        {tabElements}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  item: {\n    flex: 1,\n  },\n  indicator: {\n    position: 'absolute',\n  },\n});\n\nexport const BottomNavigation = styled<BottomNavigationProps>(BottomNavigationComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TargetedEvent,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  FalsyFC,\n  FalsyText,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\n\ntype BottomNavigationTabStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\nexport interface BottomNavigationTabProps extends TouchableWebProps, BottomNavigationTabStyledProps {\n  title?: RenderProp<TextProps> | React.ReactText;\n  icon?: RenderProp<Partial<ImageProps>>;\n  selected?: boolean;\n  onSelect?: (selected: boolean) => void;\n}\n\nexport type BottomNavigationTabElement = React.ReactElement<BottomNavigationTabProps>;\n\n/**\n * A single tab within the BottomNavigation.\n * Bottom tabs should be rendered within BottomNavigation to provide a usable navigation component.\n *\n * @extends React.Component\n *\n * @property {ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the tab.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} icon - Function component\n * to render within the tab.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example BottomNavigationTabSimpleUsage\n */\nexport class BottomNavigationTabComponent extends React.Component<BottomNavigationTabProps> {\n\n  static styledComponentName: string = 'BottomNavigationTab';\n\n  private onMouseEnter = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(e);\n    }\n  };\n\n  private onMouseLeave = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseEnter(e);\n    }\n  };\n\n  private onPress = (): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(!this.props.selected);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      iconWidth,\n      iconHeight,\n      iconMarginVertical,\n      iconTintColor,\n      textMarginVertical,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      text: {\n        marginVertical: textMarginVertical,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginVertical: iconMarginVertical,\n        tintColor: iconTintColor,\n      },\n    };\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, title, icon, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[evaStyle.container, styles.container, style]}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onPress={this.onPress}>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={icon}\n        />\n        <FalsyText\n          style={evaStyle.text}\n          component={title}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport const BottomNavigationTab = styled<BottomNavigationTabProps>(BottomNavigationTabComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TargetedEvent,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  EvaSize,\n  EvaStatus,\n  FalsyFC,\n  FalsyText,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\n\ntype ButtonStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'filled' | 'outline' | 'ghost' | string;\n}>;\n\nexport interface ButtonProps extends TouchableWebProps, ButtonStyledProps {\n  children?: RenderProp<TextProps> | React.ReactText;\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<Partial<ImageProps>>;\n  status?: EvaStatus;\n  size?: EvaSize;\n}\n\nexport type ButtonElement = React.ReactElement<ButtonProps>;\n\n/**\n * Buttons allow users to take actions, and make choices, with a single tap.\n *\n * @extends React.Component\n *\n * @property {ReactText | (TextProps) => ReactElement} children - String, number or a function component\n * to render within the button.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `filled`, `outline` or `ghost`.\n * Defaults to *filled*.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *primary*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Defaults to *medium*.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example ButtonSimpleUsage\n *\n * @overview-example ButtonStates\n *\n * @overview-example ButtonAccessories\n *\n * @overview-example ButtonAppearances\n *\n * @overview-example ButtonStatus\n *\n * @overview-example ButtonSize\n *\n * @overview-example ButtonOutline\n *\n * @overview-example ButtonGhost\n *\n * @example ButtonStyling\n */\nexport class ButtonComponent extends React.Component<ButtonProps> {\n\n  static styledComponentName: string = 'Button';\n\n  private onMouseEnter = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(e);\n    }\n  };\n\n  private onMouseLeave = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n  };\n\n  private onFocus = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n  };\n\n  private onBlur = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      textColor,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textMarginHorizontal,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      iconMarginHorizontal,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      text: {\n        color: textColor,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        marginHorizontal: textMarginHorizontal,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        tintColor: iconTintColor,\n        marginHorizontal: iconMarginHorizontal,\n      },\n    };\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, accessoryLeft, accessoryRight, children, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[evaStyle.container, styles.container, style]}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={accessoryLeft}\n        />\n        <FalsyText\n          style={evaStyle.text}\n          component={children}\n        />\n        <FalsyFC\n          style={evaStyle.icon}\n          component={accessoryRight}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport const Button = styled<ButtonProps>(ButtonComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  ChildrenWithProps,\n  EvaSize,\n  EvaStatus,\n} from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport {\n  ButtonElement,\n  ButtonProps,\n} from '../button/button.component';\n\ntype ButtonGroupStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'filled' | 'outline' | string;\n}>;\n\nexport interface ButtonGroupProps extends ViewProps, ButtonGroupStyledProps {\n  children: ChildrenWithProps<ButtonProps>;\n  status?: EvaStatus;\n  size?: EvaSize;\n}\n\nexport type ButtonGroupElement = React.ReactElement<ButtonGroupProps>;\n\n/**\n * A group of buttons with additional styles provided by Eva.\n * ButtonGroup should contain Button components to provide a usable component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<ButtonProps> | ReactElement<ButtonProps>[]} children -\n * Buttons to be rendered within the group.\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `filled` or `outline`.\n * Defaults to *filled*.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *primary*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Defaults to *medium*.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example ButtonGroupSimpleUsage\n *\n * @overview-example ButtonGroupAppearance\n *\n * @overview-example ButtonGroupStatus\n *\n * @overview-example ButtonGroupSize\n *\n * @overview-example ButtonGroupOutline\n *\n * @overview-example ButtonGroupWithIcons\n */\nclass ButtonGroupComponent extends React.Component<ButtonGroupProps> {\n\n  static styledComponentName: string = 'ButtonGroup';\n\n  private getComponentStyle = (source: StyleType) => {\n    const { dividerBackgroundColor, dividerWidth, ...containerParameters } = source;\n\n    return {\n      container: {\n        ...containerParameters,\n        borderWidth: containerParameters.borderWidth + 0.25,\n      },\n      button: {\n        borderWidth: dividerWidth,\n        borderColor: dividerBackgroundColor,\n      },\n    };\n  };\n\n  private isFirstElement = (index: number): boolean => {\n    return index === 0;\n  };\n\n  private isLastElement = (index: number): boolean => {\n    return index === React.Children.count(this.props.children) - 1;\n  };\n\n  private renderButtonElement = (element: ButtonElement, index: number, style: StyleType): ButtonElement => {\n    const { appearance, size, status } = this.props;\n    const { borderRadius }: ViewStyle = style.container;\n    const { borderWidth, borderColor }: ViewStyle = style.button;\n\n    const shapeStyle: ViewStyle = !this.isLastElement(index) && {\n      borderEndWidth: borderWidth,\n      borderEndColor: borderColor,\n    };\n\n    const startShapeStyle: ViewStyle = this.isFirstElement(index) && {\n      borderTopStartRadius: borderRadius,\n      borderBottomStartRadius: borderRadius,\n    };\n\n    const endShapeStyle: ViewStyle = this.isLastElement(index) && {\n      borderTopEndRadius: borderRadius,\n      borderBottomEndRadius: borderRadius,\n    };\n\n    return React.cloneElement(element, {\n      key: index,\n      appearance: appearance,\n      size: size,\n      status: status,\n      style: [element.props.style, styles.button, shapeStyle, startShapeStyle, endShapeStyle],\n    });\n  };\n\n  private renderButtonElements = (source: ChildrenWithProps<ButtonProps>, style: StyleType): ButtonElement[] => {\n    return React.Children.map(source, (element: ButtonElement, index: number): ButtonElement => {\n      return this.renderButtonElement(element, index, style);\n    });\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, children, ...viewProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <View\n        {...viewProps}\n        style={[evaStyle.container, styles.container, style]}>\n        {this.renderButtonElements(children, evaStyle)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n  button: {\n    borderRadius: 0,\n    borderWidth: 0,\n  },\n});\n\nexport const ButtonGroup = styled<ButtonGroupProps>(ButtonGroupComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  styled,\n  StyledComponentProps,\n} from '../../theme';\n\ntype DividerStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\nexport type DividerProps = ViewProps & DividerStyledProps;\nexport type DividerElement = React.ReactElement<DividerProps>;\n\n/**\n * A divider is a thin line that groups content in lists and layouts.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n */\nclass DividerComponent extends React.Component<DividerProps> {\n\n  static styledComponentName: string = 'Divider';\n\n  public render(): DividerElement {\n    const { eva, style, ...viewProps } = this.props;\n\n    return (\n      <View\n        {...viewProps}\n        style={[eva.style, style]}\n      />\n    );\n  }\n}\n\nexport const Divider = styled<DividerProps>(DividerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  G,\n  Path,\n  Rect,\n  Svg,\n  SvgProps,\n} from 'react-native-svg';\n\nexport type ChevronDownProps = SvgProps;\nexport type ChevronDownElement = React.ReactElement<ChevronDownProps>;\n\nexport class ChevronDown extends React.Component<SvgProps> {\n\n  public render(): React.ReactElement<SvgProps> {\n    return (\n      <Svg {...this.props} viewBox='0 0 24 24'>\n        <G data-name='Layer 2'>\n          <G data-name='chevron-down'>\n            <Rect width='24' height='24' opacity='0'/>\n            <Path\n              d='M12 15.5a1 1 0 0 1-.71-.29l-4-4a1 1 0 1 1 1.42-1.42L12 13.1l3.3-3.18a1 1 0 1 1 1.38 1.44l-4 3.86a1 1 0 0 1-.68.28z'/>\n          </G>\n        </G>\n      </Svg>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  G,\n  Path,\n  Rect,\n  Svg,\n  SvgProps,\n} from 'react-native-svg';\n\nexport type ChevronLeftProps = SvgProps;\nexport type ChevronLeftElement = React.ReactElement<ChevronLeftProps>;\n\nexport class ChevronLeft extends React.Component<SvgProps> {\n\n  public render(): React.ReactElement<SvgProps> {\n    return (\n      <Svg {...this.props} viewBox='0 0 24 24'>\n        <G data-name='Layer 2'>\n          <G data-name='chevron-left'>\n            <Rect\n              width='24'\n              height='24'\n              transform='rotate(90 12 12)'\n              opacity='0'\n            />\n            <Path\n              d='M13.36 17a1 1 0 0 1-.72-.31l-3.86-4a1 1 0 0 1 0-1.4l4-4a1 1 0 1 1 1.42 1.42L10.9 12l3.18 3.3a1 1 0 0 1 0 1.41 1 1 0 0 1-.72.29z'/>\n          </G>\n        </G>\n      </Svg>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  G,\n  Path,\n  Rect,\n  Svg,\n  SvgProps,\n} from 'react-native-svg';\n\nexport type ChevronRightProps = SvgProps;\nexport type ChevronRightElement = React.ReactElement<ChevronRightProps>;\n\nexport class ChevronRight extends React.Component<SvgProps> {\n\n  public render(): React.ReactElement<SvgProps> {\n    return (\n      <Svg {...this.props} viewBox='0 0 24 24'>\n        <G data-name='Layer 2'>\n          <G data-name='chevron-right'>\n            <Rect\n              width='24'\n              height='24'\n              transform='rotate(-90 12 12)'\n              opacity='0'\n            />\n            <Path\n              d='M10.5 17a1 1 0 0 1-.71-.29 1 1 0 0 1 0-1.42L13.1 12 9.92 8.69a1 1 0 0 1 0-1.41 1 1 0 0 1 1.42 0l3.86 4a1 1 0 0 1 0 1.4l-4 4a1 1 0 0 1-.7.32z'/>\n          </G>\n        </G>\n      </Svg>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { SvgProps } from 'react-native-svg';\nimport { RTLService } from '../../../devsupport';\nimport { Button } from '../../button/button.component';\nimport {\n  Text,\n  TextProps,\n} from '../../text/text.component';\nimport {\n  ChevronDown,\n  ChevronDownElement,\n  ChevronDownProps,\n} from '../../shared/chevronDown.component';\nimport {\n  ChevronLeft,\n  ChevronLeftElement,\n  ChevronLeftProps,\n} from '../../shared/chevronLeft.component';\nimport {\n  ChevronRight,\n  ChevronRightElement,\n  ChevronRightProps,\n} from '../../shared/chevronRight.component';\n\nexport interface CalendarHeaderProps extends ViewProps {\n  title: string;\n  titleStyle?: StyleProp<TextStyle>;\n  iconStyle?: ImageStyle;\n  lateralNavigationAllowed: boolean;\n  onTitlePress?: () => void;\n  onNavigationLeftPress?: () => void;\n  onNavigationRightPress?: () => void;\n}\n\nexport type CalendarHeaderElement = React.ReactElement<CalendarHeaderProps>;\n\nexport class CalendarHeader extends React.Component<CalendarHeaderProps> {\n\n  private renderTitleIcon = (): ChevronDownElement => {\n    const { tintColor, ...svgProps } = this.props.iconStyle;\n\n    return (\n      <ChevronDown\n        style={styles.headerButtonIcon}\n        fill={tintColor}\n        {...svgProps as ChevronDownProps}\n      />\n    );\n  };\n\n  private renderLeftIcon = (): ChevronLeftElement => {\n    const { tintColor, ...svgProps } = this.props.iconStyle;\n    const IconComponent: React.ComponentType<SvgProps> = RTLService.select(ChevronLeft, ChevronRight);\n\n    return (\n      <IconComponent\n        style={styles.lateralIcon}\n        fill={tintColor}\n        {...svgProps as ChevronLeftProps}\n      />\n    );\n  };\n\n  private renderRightIcon = (): ChevronRightElement => {\n    const { tintColor, ...svgProps } = this.props.iconStyle;\n    const IconComponent: React.ComponentType<SvgProps> = RTLService.select(ChevronRight, ChevronLeft);\n\n    return (\n      <IconComponent\n        style={styles.lateralIcon}\n        fill={tintColor}\n        {...svgProps as ChevronRightProps}\n      />\n    );\n  };\n\n  private renderLateralNavigationControls = (): React.ReactElement<ViewProps> => {\n    return (\n      <View style={styles.subContainer}>\n        <Button\n          appearance='ghost'\n          accessoryRight={this.renderLeftIcon}\n          onPress={this.props.onNavigationLeftPress}\n        />\n        <Button\n          appearance='ghost'\n          accessoryRight={this.renderRightIcon}\n          onPress={this.props.onNavigationRightPress}\n        />\n      </View>\n    );\n  };\n\n  private renderTitleElement = (props: TextProps): React.ReactElement => {\n    return (\n      <Text\n        {...props}\n        style={[props.style, styles.headerButtonText, this.props.titleStyle]}>\n        {this.props.title}\n      </Text>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, titleStyle, onTitlePress, title, lateralNavigationAllowed, ...viewProps } = this.props;\n\n    return (\n      <View\n        {...viewProps}\n        style={[styles.container, style]}>\n        <Button\n          appearance='ghost'\n          accessoryRight={this.renderTitleIcon}\n          onPress={onTitlePress}>\n          {this.renderTitleElement}\n        </Button>\n        {lateralNavigationAllowed && this.renderLateralNavigationControls()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  headerButtonText: {\n    marginHorizontal: 0,\n  },\n  headerButtonIcon: {\n    marginHorizontal: 0,\n  },\n  lateralIcon: {\n    marginHorizontal: 0,\n  },\n  subContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\n\nexport interface CalendarMonthHeaderProps extends ViewProps {\n  data: string[];\n  children: (data: string, index: number) => React.ReactElement;\n}\n\nexport type CalendarMonthHeaderElement = React.ReactElement<CalendarMonthHeaderProps>;\n\nexport class CalendarMonthHeader extends React.Component<CalendarMonthHeaderProps> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, data, children, ...viewProps } = this.props;\n\n    return (\n      <View\n        {...viewProps}\n        style={[styles.container, style]}>\n        {data.map(children)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { CalendarPickerCellElement } from './calendarPickerCell.component';\nimport { CalendarDateInfo } from '../../type';\n\nexport interface CalendarPickerRowProps<D> extends ViewProps {\n  data: CalendarDateInfo<D>[];\n  children: (item: CalendarDateInfo<D>, index: number) => CalendarPickerCellElement<D>;\n}\n\nexport type CalendarPickerRowElement<D> = React.ReactElement<CalendarPickerRowProps<D>>;\n\nexport class CalendarPickerRow<D> extends React.Component<CalendarPickerRowProps<D>> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, data, children, ...viewProps } = this.props;\n\n    return (\n      <View\n        {...viewProps}\n        style={[styles.container, style]}>\n        {data.map(children)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  TouchableOpacityProps,\n} from 'react-native';\nimport { TouchableWithoutFeedback } from '../../../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../../../theme';\nimport { CalendarDateInfo } from '../../type';\n\ntype ChildrenProp<D> = (date: CalendarDateInfo<D>, style: StyleType) => React.ReactElement;\n\nexport interface CalendarPickerCellProps<D> extends StyledComponentProps, TouchableOpacityProps {\n  date: CalendarDateInfo<D>;\n  selected?: boolean;\n  bounding?: boolean;\n  today?: boolean;\n  range?: boolean;\n  firstRangeItem?: boolean;\n  lastRangeItem?: boolean;\n  onSelect?: (date: CalendarDateInfo<D>) => void;\n  children: ChildrenProp<D>;\n  shouldComponentUpdate?: (props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>) => boolean;\n}\n\nexport type CalendarPickerCellElement<D> = React.ReactElement<CalendarPickerCellProps<D>>;\n\nclass CalendarPickerCellComponent<D> extends React.Component<CalendarPickerCellProps<D>> {\n\n  static styledComponentName: string = 'CalendarCell';\n\n  public shouldComponentUpdate(nextProps: CalendarPickerCellProps<D>): boolean {\n    if (nextProps.shouldComponentUpdate) {\n      return nextProps.shouldComponentUpdate(this.props, nextProps);\n    }\n    return true;\n  }\n\n  private onPress = (): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(this.props.date);\n    }\n  };\n\n  private getContainerBorderRadius = (borderRadius: number): StyleType => {\n    const { firstRangeItem, lastRangeItem } = this.props;\n\n    if (firstRangeItem) {\n      return {\n        borderBottomLeftRadius: borderRadius,\n        borderBottomRightRadius: 0,\n        borderTopLeftRadius: borderRadius,\n        borderTopRightRadius: 0,\n      };\n    }\n    if (lastRangeItem) {\n      return {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: borderRadius,\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: borderRadius,\n      };\n    }\n\n    return {};\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      contentBorderWidth,\n      contentBorderRadius,\n      contentBorderColor,\n      contentBackgroundColor,\n      contentTextFontSize,\n      contentTextLineHeight,\n      contentTextFontWeight,\n      contentTextColor,\n      contentTextFontFamily,\n      borderRadius,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: {\n        ...containerParameters,\n        ...this.getContainerBorderRadius(borderRadius),\n      },\n      contentContainer: {\n        borderWidth: contentBorderWidth,\n        borderRadius: contentBorderRadius,\n        borderColor: contentBorderColor,\n        backgroundColor: contentBackgroundColor,\n      },\n      contentText: {\n        fontSize: contentTextFontSize,\n        fontWeight: contentTextFontWeight,\n        lineHeight: contentTextLineHeight,\n        color: contentTextColor,\n        fontFamily: contentTextFontFamily,\n      },\n    };\n  };\n\n  private renderContentElement = (source: ChildrenProp<D>, evaStyle): React.ReactElement => {\n    return source && source(this.props.date, {\n      container: evaStyle.contentContainer,\n      text: evaStyle.contentText,\n    });\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { eva, style, date, bounding, children, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWithoutFeedback\n        {...touchableProps}\n        style={[evaStyle.container, styles.container, style]}\n        onPress={this.onPress}>\n        {this.renderContentElement(children, evaStyle)}\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nexport const CalendarPickerCell = styled(CalendarPickerCellComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\ntype DaysArray = [string, string, string, string, string, string, string];\ntype MonthsArray = [string, string, string, string, string, string, string, string, string, string, string, string];\n\nexport enum TranslationWidth {\n  SHORT = 'short',\n  LONG = 'long',\n}\n\nexport interface I18nDayNames {\n  [TranslationWidth.SHORT]: DaysArray;\n  [TranslationWidth.LONG]: DaysArray;\n}\n\nexport interface I18nMonthNames {\n  [TranslationWidth.SHORT]?: MonthsArray;\n  [TranslationWidth.LONG]?: MonthsArray;\n}\n\nexport interface I18nConfig {\n  dayNames: I18nDayNames;\n  monthNames: I18nMonthNames;\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleProp,\n} from 'react-native';\nimport { StyleType } from '../../../../theme';\nimport {\n  CalendarPickerRow,\n  CalendarPickerRowElement,\n} from './calendarPickerRow.component';\nimport {\n  CalendarPickerCell,\n  CalendarPickerCellElement,\n  CalendarPickerCellProps,\n} from './calendarPickerCell.component';\nimport { CalendarDateInfo } from '../../type';\n\nexport interface CalendarPickerProps<D> extends ViewProps {\n  data: CalendarDateInfo<D>[][];\n  isItemSelected: (item: CalendarDateInfo<D>) => boolean;\n  isItemDisabled: (item: CalendarDateInfo<D>) => boolean;\n  isItemToday: (item: CalendarDateInfo<D>) => boolean;\n  onSelect?: (item: CalendarDateInfo<D>) => void;\n  children: (item: CalendarDateInfo<D>, style: StyleType) => React.ReactElement;\n  shouldItemUpdate?: (props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>) => boolean;\n  rowStyle?: StyleProp<ViewProps>;\n}\n\nexport type CalendarPickerElement<D> = React.ReactElement<CalendarPickerProps<D>>;\n\nexport class CalendarPicker<D> extends React.Component<CalendarPickerProps<D>> {\n\n  private get rangedArray(): CalendarDateInfo<D>[] {\n    const { data } = this.props;\n\n    return [].concat(...data).filter((item: CalendarDateInfo<D>) => {\n      return item.range;\n    });\n  }\n\n  private isFirstRangeItem = (item: CalendarDateInfo<D>, range: CalendarDateInfo<D>[]): boolean => {\n    return range.indexOf(item) === 0;\n  };\n\n  private isLastRangeItem = (item: CalendarDateInfo<D>, range: CalendarDateInfo<D>[]): boolean => {\n    return range.indexOf(item) === range.length - 1;\n  };\n\n  private renderCellElement = (item: CalendarDateInfo<D>, index: number): CalendarPickerCellElement<D> => {\n    const isFirstRangeItem: boolean = this.isFirstRangeItem(item, this.rangedArray);\n    const isLastRangeItem: boolean = this.isLastRangeItem(item, this.rangedArray);\n\n    return (\n      <CalendarPickerCell\n        key={index}\n        date={item}\n        selected={this.props.isItemSelected(item)}\n        disabled={this.props.isItemDisabled(item)}\n        bounding={item.bounding}\n        today={this.props.isItemToday(item)}\n        range={item.range}\n        firstRangeItem={isFirstRangeItem}\n        lastRangeItem={isLastRangeItem}\n        onSelect={this.props.onSelect}\n        shouldComponentUpdate={this.props.shouldItemUpdate}>\n        {this.props.children}\n      </CalendarPickerCell>\n    );\n  };\n\n  private renderRowElement = (item: CalendarDateInfo<D>[], index: number): CalendarPickerRowElement<D> => {\n    return (\n      <CalendarPickerRow\n        key={index}\n        style={this.props.rowStyle}\n        data={item}>\n        {this.renderCellElement}\n      </CalendarPickerRow>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { data, children, ...viewProps } = this.props;\n\n    return (\n      <View\n        {...viewProps}>\n        {data.map(this.renderRowElement)}\n      </View>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Text } from '../../text/text.component';\n\nexport interface CalendarDateContentProps extends ViewProps {\n  textStyle?: StyleProp<TextStyle>;\n  children: string;\n}\n\nexport type CalendarDateContentElement = React.ReactElement<CalendarDateContentProps>;\n\nexport class CalendarDateContent extends React.Component<CalendarDateContentProps> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, textStyle, children, ...viewProps } = this.props;\n\n    return (\n      <View\n        {...viewProps}\n        style={[styles.container, style]}>\n        <Text style={textStyle}>{children}</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nexport interface CalendarDateOptions {\n  bounding: boolean;\n  holiday: boolean;\n  range?: boolean;\n}\n\nexport interface CalendarRange<D> {\n  startDate?: D;\n  endDate?: D;\n}\n\nexport interface CalendarDateInfo<D> extends CalendarDateOptions {\n  date: D;\n}\n\nconst VIEW_MODE_DATE: CalendarViewMode = {\n  id: 'DATE',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_YEAR;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n};\n\nconst VIEW_MODE_MONTH: CalendarViewMode = {\n  id: 'MONTH',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n};\n\nconst VIEW_MODE_YEAR: CalendarViewMode = {\n  id: 'YEAR',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_MONTH;\n  },\n};\n\nexport interface CalendarViewMode {\n  id: string;\n  navigationNext: () => CalendarViewMode;\n  pickNext: () => CalendarViewMode;\n}\n\ninterface CalendarViewModes {\n  DATE: CalendarViewMode;\n  MONTH: CalendarViewMode;\n  YEAR: CalendarViewMode;\n}\n\nexport const CalendarViewModes: CalendarViewModes = {\n  DATE: VIEW_MODE_DATE,\n  MONTH: VIEW_MODE_MONTH,\n  YEAR: VIEW_MODE_YEAR,\n};\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { TranslationWidth } from '../i18n/type';\n\nexport abstract class DateService<D> {\n  static DAYS_IN_WEEK: number = 7;\n  static MONTHS_IN_YEAR: number = 12;\n\n  protected locale: string;\n\n  public setLocale(locale: any) {\n    this.locale = locale;\n  }\n\n  public compareDatesSafe(date1: D, date2: D): number {\n    if (date1 && date2) {\n      return this.compareDates(date1, date2);\n    } else if (!date1 && !date2) {\n      return 0;\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date.\n   * */\n  public isBetween(date: D, start: D, end: D): boolean {\n    return this.compareDates(date, start) > 0 && this.compareDates(date, end) < 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date.\n   * */\n  public isBetweenSafe(date: D, start: D, end: D): boolean {\n    return date && start && end && this.compareDates(date, start) > 0 && this.compareDates(date, end) < 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date including bounds.\n   * */\n  public isBetweenIncluding(date: D, start: D, end: D): boolean {\n    return this.compareDates(date, start) >= 0 && this.compareDates(date, end) <= 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date including bounds.\n   * */\n  public isBetweenIncludingSafe(date: D, start: D, end: D): boolean {\n    return date && start && end && this.isBetweenIncluding(date, start, end);\n  }\n\n  /**\n   * Checks is two dates have the same day.\n   * */\n  public isSameDaySafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameDay(date1, date2);\n  }\n\n  /**\n   * Checks is two dates have the same month.\n   * */\n  public isSameMonthSafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameMonth(date1, date2);\n  }\n\n  /**\n   * Checks is two dates have the same year.\n   * */\n  public isSameYearSafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameYear(date1, date2);\n  }\n\n  /**\n   * Returns true if date string is valid date string according to the provided format.\n   * */\n  public abstract isValidDateString(date: string, format: string): boolean;\n\n  /**\n   * Returns today date.\n   * */\n  public abstract today(): D;\n\n  /**\n   * Gets the date of the month component of the given date.\n   */\n  public abstract getDate(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * */\n  public abstract getMonth(date: D): number;\n\n  /**\n   * Gets the year component of the given date.\n   * */\n  public abstract getYear(date: D): number;\n\n  /**\n   * Returns day of the week of the given date.\n   */\n  public abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Returns first day of the week, it can be 1 if week starts from monday\n   * and 0 if from sunday and so on.\n   * */\n  public abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Returns localized month name by date and style.\n   * */\n  public abstract getMonthName(date: D, style?: TranslationWidth): string;\n\n  /**\n   * Returns localized month name by month index and style.\n   * */\n  public abstract getMonthNameByIndex(month: number, style?: TranslationWidth): string;\n\n  /**\n   * Returns localized days names.\n   * */\n  public abstract getDayOfWeekNames(style?: TranslationWidth): string[];\n\n  /**\n   * Parses the date string according to the passed format.\n   * */\n  public abstract parse(date: string, format: string): D;\n\n  /**\n   * Transforms the date to the string according to the passed format.\n   * */\n  public abstract format(date: D, format: string): string;\n\n  /**\n   * Creates new date from year, month and date.\n   * */\n  public abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Checks is two dates have the same year.\n   * */\n  public abstract isSameYear(date1: D, date2: D): boolean;\n\n  /**\n   * Checks is two dates have the same month.\n   * */\n  public abstract isSameMonth(date1: D, date2: D): boolean;\n\n  /**\n   * Checks is two dates have the same day.\n   * */\n  public abstract isSameDay(date1: D, date2: D): boolean;\n\n  /**\n   * Compares two dates.\n   * Returns 0 if dates are the same.\n   * Returns 1 if the first date is greater than the second.\n   * Returns -1 if the second date is greater than the first.\n   * */\n  public abstract compareDates(date1: D, date2: D): number;\n\n  /**\n   * Clones passed date.\n   * */\n  public abstract clone(date: D): D;\n\n  /**\n   * Creates the same date but with day equals to 1.\n   * */\n  public abstract getMonthStart(date: D): D;\n\n  /**\n   * Creates the same date but with day equals to the last day in this month.\n   * */\n  public abstract getMonthEnd(date: D): D;\n\n  /**\n   * Creates the same date but with month equals to 0 and day equals to 1.\n   * */\n  public abstract getYearStart(date: D): D;\n\n  /**\n   * Creates the same date but with month equals to 11 and day equals to 31.\n   * */\n  public abstract getYearEnd(date: D): D;\n\n  /**\n   * Returns number of days in the date.\n   * */\n  public abstract getNumberOfDaysInMonth(date: D): number;\n\n  /**\n   * Returns date with added number of days.\n   * */\n  public abstract addDay(date: D, days: number): D;\n\n  /**\n   * Returns date with added number of months.\n   * */\n  public abstract addMonth(date: D, months: number): D;\n\n  /**\n   * Returns date with added number of years.\n   * */\n  public abstract addYear(date: D, years: number): D;\n\n  public abstract getId(): string;\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { I18nConfig } from './type';\n\nexport const EN: I18nConfig = {\n  dayNames: {\n    short: [\n      'Su',\n      'Mo',\n      'Tu',\n      'We',\n      'Th',\n      'Fr',\n      'Sa',\n    ],\n    long: [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ],\n  },\n  monthNames: {\n    short: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ],\n    long: [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ],\n  },\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport fecha from 'fecha';\nimport { DateService } from './date.service';\nimport {\n  I18nConfig,\n  TranslationWidth,\n} from '../i18n/type';\nimport { EN } from '../i18n/en';\n\nexport const LOCALE_DEFAULT = 'en';\n\nexport interface NativeDateServiceOptions {\n  // 0 for Sunday, 1 for Monday, etc\n  startDayOfWeek?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  format?: string;\n  i18n?: I18nConfig;\n}\n\nconst DEFAULT_OPTIONS: NativeDateServiceOptions = {\n  format: 'DD/MM/YYYY',\n  startDayOfWeek: 0,\n};\n\n/**\n * The `NativeDateService` is basic implementation of `DateService` using\n * native js date objects.\n */\nexport class NativeDateService extends DateService<Date> {\n\n  protected options: NativeDateServiceOptions;\n  protected i18nSettings = fecha.i18n;\n\n  constructor(locale: string = LOCALE_DEFAULT, options?: NativeDateServiceOptions) {\n    super();\n    this.options = { ...DEFAULT_OPTIONS, ...options };\n    super.setLocale(this.options.i18n ? locale : LOCALE_DEFAULT);\n    this.setFechaLocaleData(this.options.i18n || EN);\n  }\n\n  public setLocale(locale: string) {\n    console.warn('Runtime locale is not supported');\n  }\n\n  public isValidDateString(date: string, format: string): boolean {\n    return !isNaN(this.parse(date, format).getTime());\n  }\n\n  public today(): Date {\n    return new Date();\n  }\n\n  public getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  public getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  public getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  public getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  /**\n   * returns first day of the week, it can be 1 if week starts from monday\n   * and 0 if from sunday and so on.\n   * */\n  public getFirstDayOfWeek(): number {\n    return this.options.startDayOfWeek;\n  }\n\n  public getMonthName(date: Date, style: TranslationWidth = TranslationWidth.SHORT): string {\n    const index: number = date.getMonth();\n\n    return this.getMonthNameByIndex(index, style);\n  }\n\n  public getMonthNameByIndex(index: number, style: TranslationWidth = TranslationWidth.SHORT): string {\n    return this.getFechaMonthNames(style)[index];\n  }\n\n  public getDayOfWeekNames(style: TranslationWidth = TranslationWidth.SHORT): string[] {\n    const dayNames: string[] = this.getFechaDayNames(style);\n\n    // avoid mutation of source array\n    return this.shiftDayOfWeekNames([...dayNames], this.options.startDayOfWeek);\n  }\n\n  public format(date: Date, format: string): string {\n    return fecha.format(date, format || this.options.format, this.i18nSettings);\n  }\n\n  /**\n   * We haven't got capability to parse date using formatting without third party libraries.\n   * */\n  public parse(date: string, format: string): Date {\n    return new Date(Date.parse(date));\n  }\n\n  public addDay(date: Date, num: number): Date {\n    return this.createDate(date.getFullYear(), date.getMonth(), date.getDate() + num);\n  }\n\n  public addMonth(date: Date, num: number): Date {\n    const month: Date = this.createDate(date.getFullYear(), date.getMonth() + num, 1);\n\n    // In case of date has more days than calculated month js Date will change that month to the next one\n    // because of the date overflow.\n    month.setDate(Math.min(date.getDate(), this.getMonthEnd(month).getDate()));\n\n    return month;\n  }\n\n  public addYear(date: Date, num: number): Date {\n    return this.createDate(date.getFullYear() + num, date.getMonth(), date.getDate());\n  }\n\n  public clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  public compareDates(date1: Date, date2: Date): number {\n    return date1.getTime() - date2.getTime();\n  }\n\n  public compareDatesSafe(date1: Date, date2: Date): number {\n    if (this.compareDates(date1, date2) < 0) {\n      return -1;\n    } else if (this.compareDates(date1, date2) > 0) {\n      return 1;\n    } else if (this.compareDates(date1, date2) === 0) {\n      return 0;\n    }\n  }\n\n  public createDate(year: number, month: number, date: number): Date {\n    const result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(result.getFullYear() - 1900);\n    }\n\n    return result;\n  }\n\n  public getMonthEnd(date: Date): Date {\n    return this.createDate(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  public getMonthStart(date: Date): Date {\n    return this.createDate(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  public getNumberOfDaysInMonth(date: Date): number {\n    return this.getMonthEnd(date).getDate();\n  }\n\n  public getYearEnd(date: Date): Date {\n    return this.createDate(date.getFullYear(), 11, 31);\n  }\n\n  public getYearStart(date: Date): Date {\n    return this.createDate(date.getFullYear(), 0, 1);\n  }\n\n  public isSameDay(date1: Date, date2: Date): boolean {\n    return this.isSameMonth(date1, date2) && date1.getDate() === date2.getDate();\n  }\n\n  public isSameMonth(date1: Date, date2: Date): boolean {\n    return this.isSameYear(date1, date2) && date1.getMonth() === date2.getMonth();\n  }\n\n  public isSameYear(date1: Date, date2: Date): boolean {\n    return date1.getFullYear() === date2.getFullYear();\n  }\n\n  public getId(): string {\n    return 'native';\n  }\n\n  protected shiftDayOfWeekNames<T>(value: T[], offset: number): T[] {\n    return value.splice(offset).concat(value);\n  }\n\n  private getFechaDayNames(style: TranslationWidth): string[] {\n    switch (style) {\n      case TranslationWidth.SHORT:\n        return this.i18nSettings.dayNamesShort;\n      case TranslationWidth.LONG:\n        return this.i18nSettings.dayNames;\n    }\n  }\n\n  private getFechaMonthNames(style: TranslationWidth): string[] {\n    switch (style) {\n      case TranslationWidth.SHORT:\n        return this.i18nSettings.monthNamesShort;\n      case TranslationWidth.LONG:\n        return this.i18nSettings.monthNames;\n    }\n  }\n\n  private setFechaLocaleData(config: I18nConfig) {\n    this.i18nSettings = {\n      ...fecha.i18n,\n      dayNames: config.dayNames[TranslationWidth.LONG],\n      dayNamesShort: config.dayNames[TranslationWidth.SHORT],\n      monthNames: config.monthNames[TranslationWidth.LONG],\n      monthNamesShort: config.monthNames[TranslationWidth.SHORT],\n    };\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nexport const batch = <T>(target: T[], batchSize: number, offset: number = 0): T[][] => {\n  return target.reduce((res, item, index): T[] => {\n    const chunkIndex = Math.floor((index + offset) / batchSize);\n    if (!res[chunkIndex]) {\n      res[chunkIndex] = [];\n    }\n    res[chunkIndex].push(item);\n\n    return res;\n  }, []);\n};\n\n/**\n * returns array with numbers from zero to bound.\n * */\nexport const range = <T>(bound: number, producer: (number) => T = i => i) => {\n  const arr: T[] = [];\n\n  for (let i = 0; i < bound; i++) {\n    arr.push(producer(i));\n  }\n\n  return arr;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { DateService } from './date.service';\nimport {\n  batch,\n  range,\n} from './helpers';\nimport {\n  CalendarDateInfo,\n  CalendarDateOptions,\n  CalendarRange,\n} from '../type';\n\nconst DEFAULT_DATE_OPTIONS: CalendarDateOptions = {\n  bounding: false,\n  holiday: false,\n  range: false,\n};\n\nexport type DateRange<D> = CalendarDateInfo<D>[];\nexport type DateBatch<D> = DateRange<D>[];\n\nexport class CalendarDataService<D> {\n\n  constructor(protected dateService: DateService<D>) {\n  }\n\n  public createDayPickerData = (date: D, dateRange?: CalendarRange<D>): DateBatch<D> => {\n    const weeks: DateBatch<D> = this.createDates(date, DEFAULT_DATE_OPTIONS, dateRange);\n\n    return this.withBoundingMonths(weeks, date);\n  };\n\n  public createMonthPickerData = (date: D, rows: number, columns: number): DateBatch<D> => {\n    const yearStart: D = this.dateService.getYearStart(date);\n    const monthRange: DateRange<D> = range(rows * columns, (index: number): CalendarDateInfo<D> => {\n      const monthDate: D = this.dateService.addMonth(yearStart, index);\n      return { date: monthDate, ...DEFAULT_DATE_OPTIONS };\n    });\n\n    return batch(monthRange, rows);\n  };\n\n  public createYearPickerData = (date: D, rows: number, columns: number): DateBatch<D> => {\n    const yearStart: D = this.dateService.getYearStart(date);\n    const yearRange: DateRange<D> = range(rows * columns, (index: number): CalendarDateInfo<D> => {\n      const yearDate: D = this.dateService.addYear(yearStart, index);\n      return { date: yearDate, ...DEFAULT_DATE_OPTIONS };\n    });\n\n    return batch(yearRange, rows);\n  };\n\n  public createDayPickerPagerData = (startDate: D, endDate: D): DateRange<D> => {\n    const numberOfDayPickers: number = this.getNumberOfMonths(startDate, endDate) + 1;\n\n    return range(numberOfDayPickers, (index: number): CalendarDateInfo<D> => {\n      const monthDate: D = this.dateService.addMonth(startDate, index);\n      return { date: monthDate, ...DEFAULT_DATE_OPTIONS };\n    });\n  };\n\n  public createYearPickerPagerData = (startDate: D, endDate: D, rows: number, columns: number): DateRange<D> => {\n    const numberOfYears: number = this.getNumberOfYears(startDate, endDate) + 1;\n    const numberOfYearPickers: number = Math.max(Math.ceil(numberOfYears / (rows * columns)), 1);\n\n    return range(numberOfYearPickers, (index: number): CalendarDateInfo<D> => {\n      const yearDate: D = this.dateService.addYear(startDate, index * rows * columns);\n      return { date: yearDate, ...DEFAULT_DATE_OPTIONS };\n    });\n  };\n\n  public getNumberOfMonths = (lhs: D, rhs: D): number => {\n    const numberOfYears: number = this.getNumberOfYears(lhs, rhs);\n    const numberOfMonths: number = this.dateService.getMonth(rhs) - this.dateService.getMonth(lhs);\n\n    return numberOfMonths + numberOfYears * DateService.MONTHS_IN_YEAR;\n  };\n\n  public getNumberOfYears = (lhs: D, rhs: D): number => {\n    return this.dateService.getYear(rhs) - this.dateService.getYear(lhs);\n  };\n\n  private createDates(activeMonth: D, options: CalendarDateOptions, dateRange?: CalendarRange<D>): DateBatch<D> {\n    let days: DateRange<D> = this.createDateRangeForMonth(activeMonth, options);\n\n    if (dateRange) {\n      days = this.withRangedDates(days, dateRange);\n    }\n\n    const startOfWeekDayDiff: number = this.getStartOfWeekDayDiff(activeMonth);\n\n    return batch(days, DateService.DAYS_IN_WEEK, startOfWeekDayDiff);\n  }\n\n  private withRangedDates(days: DateRange<D>, calendarRange: CalendarRange<D>): DateRange<D> {\n    if (calendarRange.startDate && !calendarRange.endDate) {\n      return this.withRangedStartDates(days, calendarRange.startDate);\n    }\n\n    if (calendarRange.startDate && calendarRange.endDate) {\n      return this.withRangedStartEndDates(days, calendarRange.startDate, calendarRange.endDate);\n    }\n\n    return days;\n  }\n\n  private withRangedStartDates(days: DateRange<D>, startDate): DateRange<D> {\n    return days.map((day: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n      const isSameStartDate: boolean = this.dateService.compareDatesSafe(day.date, startDate) === 0;\n      return isSameStartDate ? { ...day, range: true } : day;\n    });\n  }\n\n  private withRangedStartEndDates(days: DateRange<D>, startDate: D, endDate: D): DateRange<D> {\n    return days.map((day: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n      const isSameStartDate: boolean = this.dateService.compareDatesSafe(day.date, startDate) === 0;\n      const isSameEndDate: boolean = this.dateService.compareDatesSafe(day.date, endDate) === 0;\n\n      if (isSameStartDate || isSameEndDate) {\n        return { ...day, range: true };\n      } else {\n        const isInRange: boolean = this.dateService.isBetween(day.date, startDate, endDate);\n        return { ...day, range: isInRange };\n      }\n    });\n  }\n\n  private withBoundingMonths(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    let withBoundingMonths: DateBatch<D> = weeks;\n\n    if (this.isShouldAddPrevBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addPrevBoundingMonth(withBoundingMonths, activeMonth);\n    }\n\n    if (this.isShouldAddNextBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addNextBoundingMonth(withBoundingMonths, activeMonth);\n    }\n\n    return withBoundingMonths;\n  }\n\n  private addPrevBoundingMonth(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    const firstWeek: DateRange<D> = weeks.shift();\n    const numberOfBoundingDates: number = DateService.DAYS_IN_WEEK - firstWeek.length;\n    firstWeek.unshift(...this.createPrevBoundingDays(activeMonth, numberOfBoundingDates));\n\n    return [firstWeek, ...weeks];\n  }\n\n  private addNextBoundingMonth(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    const lastWeek: DateRange<D> = weeks.pop();\n    const numberOfBoundingDates: number = DateService.DAYS_IN_WEEK - lastWeek.length;\n    lastWeek.push(...this.createNextBoundingDays(activeMonth, numberOfBoundingDates));\n\n    return [...weeks, lastWeek];\n  }\n\n  private createPrevBoundingDays(activeMonth: D, numberOfBoundingDates: number): DateRange<D> {\n    const month: D = this.dateService.addMonth(activeMonth, -1);\n    const daysInMonth: number = this.dateService.getNumberOfDaysInMonth(month);\n\n    return this.createDateRangeForMonth(month, DEFAULT_DATE_OPTIONS)\n      .slice(daysInMonth - numberOfBoundingDates)\n      .map((date: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n        return { ...date, bounding: true };\n      });\n  }\n\n  private createNextBoundingDays(activeMonth: D, numberOfBoundingDates: number): DateRange<D> {\n    const month: D = this.dateService.addMonth(activeMonth, 1);\n\n    return this.createDateRangeForMonth(month, DEFAULT_DATE_OPTIONS)\n      .slice(0, numberOfBoundingDates)\n      .map((date: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n        return { ...date, bounding: true };\n      });\n  }\n\n  private getStartOfWeekDayDiff(date: D): number {\n    const startOfMonth: D = this.dateService.getMonthStart(date);\n\n    return this.getWeekStartDiff(startOfMonth);\n  }\n\n  private getWeekStartDiff(date: D): number {\n    return (\n      DateService.DAYS_IN_WEEK\n      - this.dateService.getFirstDayOfWeek()\n      + this.dateService.getDayOfWeek(date)\n    ) % DateService.DAYS_IN_WEEK;\n  }\n\n  private isShouldAddPrevBoundingMonth(weeks: DateBatch<D>): boolean {\n    return weeks[0].length < DateService.DAYS_IN_WEEK;\n  }\n\n  private isShouldAddNextBoundingMonth(weeks: DateBatch<D>): boolean {\n    return weeks[weeks.length - 1].length < DateService.DAYS_IN_WEEK;\n  }\n\n  private createDateRangeForMonth(monthDate: D, options: CalendarDateOptions): DateRange<D> {\n    const daysInMonth: number = this.dateService.getNumberOfDaysInMonth(monthDate);\n\n    return range(daysInMonth, (i: number): CalendarDateInfo<D> => {\n      const year: number = this.dateService.getYear(monthDate);\n      const month: number = this.dateService.getMonth(monthDate);\n      const date: D = this.dateService.createDate(year, month, i + 1);\n\n      return { date, ...options };\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  EvaProp,\n  StyleType,\n} from '../../theme';\nimport { Divider } from '../divider/divider.component';\nimport {\n  CalendarHeader,\n  CalendarHeaderElement,\n} from './components/calendarHeader.component';\nimport { CalendarMonthHeader } from './components/calendarMonthHeader.component';\nimport {\n  CalendarPicker,\n  CalendarPickerElement,\n} from './components/picker/calendarPicker.component';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport {\n  CalendarDateContent,\n  CalendarDateContentElement,\n} from './components/calendarDateContent.component';\nimport {\n  CalendarDateInfo,\n  CalendarViewMode,\n  CalendarViewModes,\n} from './type';\nimport { DateService } from './service/date.service';\nimport { NativeDateService } from './service/nativeDate.service';\nimport {\n  CalendarDataService,\n  DateBatch,\n} from './service/calendarData.service';\n\nexport interface BaseCalendarProps<D = Date> extends ViewProps {\n  min?: D;\n  max?: D;\n  dateService?: DateService<D>;\n  boundingMonth?: boolean;\n  startView?: CalendarViewMode;\n  title?: (date: D, viewMode: CalendarViewMode) => string;\n  filter?: (date: D) => boolean;\n  renderFooter?: () => React.ReactElement;\n  renderDay?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement;\n  renderMonth?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement;\n  renderYear?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement;\n  eva?: EvaProp;\n}\n\nexport type BaseCalendarElement<D> = React.ReactElement<BaseCalendarProps<D>>;\n\ninterface State<D> {\n  viewMode: CalendarViewMode;\n  visibleDate: D;\n}\n\nconst PICKER_ROWS: number = 4;\nconst PICKER_COLUMNS: number = 3;\nconst VIEWS_IN_PICKER: number = PICKER_ROWS * PICKER_COLUMNS;\n\nconst FORMAT_DAY: string = 'D';\nconst FORMAT_MONTH: string = 'MMM';\nconst FORMAT_YEAR: string = 'YYYY';\nconst FORMAT_HEADER_DATE: string = 'MMMM YYYY';\nconst FORMAT_HEADER_MONTH: string = 'YYYY';\nconst FORMAT_HEADER_YEAR: string = 'YYYY';\n\nexport abstract class BaseCalendarComponent<P, D = Date> extends React.Component<BaseCalendarProps<D> & P, State<D>> {\n\n  static defaultProps: Partial<BaseCalendarProps> = {\n    dateService: new NativeDateService(),\n    boundingMonth: true,\n    startView: CalendarViewModes.DATE,\n  };\n\n  public state: State<D> = {\n    viewMode: this.props.startView,\n    visibleDate: this.dateService.getMonthStart(this.selectedDate()),\n  };\n\n  protected abstract createDates(date: D): DateBatch<D>;\n\n  protected abstract selectedDate(): D;\n\n  protected abstract onDateSelect(item: D): void;\n\n  protected abstract isDateSelected(date: D): boolean;\n\n  protected abstract shouldUpdateDate(props: CalendarPickerCellProps<D>,\n                                      nextProps: CalendarPickerCellProps<D>): boolean;\n\n  protected dataService: CalendarDataService<D> = new CalendarDataService(this.dateService);\n\n  protected get dateService(): DateService<D> {\n    return this.props.dateService;\n  }\n\n  private get min(): D {\n    return this.props.min || this.dateService.getYearStart(this.dateService.today());\n  }\n\n  private get max(): D {\n    return this.props.max || this.dateService.getYearEnd(this.dateService.today());\n  }\n\n  public scrollToToday = (): void => {\n    this.setState({\n      viewMode: CalendarViewModes.DATE,\n      visibleDate: this.dateService.today(),\n    });\n  };\n\n  private onDaySelect = ({ date }: CalendarDateInfo<D>): void => {\n    this.onDateSelect(date);\n  };\n\n  private onMonthSelect = ({ date }: CalendarDateInfo<D>): void => {\n    const nextVisibleDate: D = this.dateService.createDate(\n      this.dateService.getYear(this.state.visibleDate),\n      this.dateService.getMonth(date),\n      this.dateService.getDate(this.state.visibleDate),\n    );\n\n    this.setState({\n      viewMode: this.state.viewMode.pickNext(),\n      visibleDate: nextVisibleDate,\n    });\n  };\n\n  private onYearSelect = ({ date }: CalendarDateInfo<D>): void => {\n    const nextVisibleDate: D = this.dateService.createDate(\n      this.dateService.getYear(date),\n      this.dateService.getMonth(this.state.visibleDate),\n      this.dateService.getDate(this.state.visibleDate),\n    );\n\n    this.setState({\n      viewMode: this.state.viewMode.pickNext(),\n      visibleDate: nextVisibleDate,\n    });\n  };\n\n  private onPickerNavigationPress = (): void => {\n    this.setState({\n      viewMode: this.state.viewMode.navigationNext(),\n    });\n  };\n\n  private onHeaderNavigationLeftPress = (): void => {\n    this.setState({\n      visibleDate: this.createViewModeVisibleDate(-1),\n    });\n  };\n\n  private onHeaderNavigationRightPress = (): void => {\n    this.setState({\n      visibleDate: this.createViewModeVisibleDate(1),\n    });\n  };\n\n  public getCalendarStyle = (source: StyleType) => {\n    return {\n      container: {\n        width: source.width,\n        paddingVertical: source.paddingVertical,\n        borderColor: source.borderColor,\n        borderWidth: source.borderWidth,\n        borderRadius: source.borderRadius,\n      },\n      headerContainer: {\n        paddingHorizontal: source.headerPaddingHorizontal,\n        paddingVertical: source.headerPaddingVertical,\n      },\n      title: {\n        fontSize: source.titleFontSize,\n        fontWeight: source.titleFontWeight,\n        lineHeight: source.titleLineHeight,\n        color: source.titleColor,\n        fontFamily: source.titleFontFamily,\n      },\n      icon: {\n        width: source.iconWidth,\n        height: source.iconHeight,\n        tintColor: source.iconTintColor,\n      },\n      divider: {\n        marginVertical: source.dividerMarginVertical,\n      },\n      daysHeaderContainer: {\n        marginHorizontal: source.rowMarginHorizontal,\n      },\n      row: {\n        minHeight: source.rowMinHeight,\n        marginHorizontal: source.rowMarginHorizontal,\n      },\n    };\n  };\n\n  private getWeekdayStyle = (source: StyleType): StyleType => {\n    return {\n      fontSize: source.weekdayTextFontSize,\n      fontWeight: source.weekdayTextFontWeight,\n      lineHeight: source.weekdayTextLineHeight,\n      color: source.weekdayTextColor,\n      fontFamily: source.weekdayTextFontFamily,\n    };\n  };\n\n  private isDaySelected = ({ date }: CalendarDateInfo<D>): boolean => {\n    return this.isDateSelected(date);\n  };\n\n  private isMonthSelected = ({ date }: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameMonthSafe(date, this.selectedDate());\n  };\n\n  private isYearSelected = ({ date }: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameYearSafe(date, this.selectedDate());\n  };\n\n  public isDayDisabled = ({ date }: CalendarDateInfo<D>): boolean => {\n    const minDayStart: D = this.dateService.createDate(\n      this.dateService.getYear(this.min),\n      this.dateService.getMonth(this.min),\n      this.dateService.getDate(this.min),\n    );\n\n    const maxDayStart: D = this.dateService.createDate(\n      this.dateService.getYear(this.max),\n      this.dateService.getMonth(this.max),\n      this.dateService.getDate(this.max),\n    );\n\n    const fitsFilter: boolean = this.props.filter && !this.props.filter(date) || false;\n\n    return !this.dateService.isBetweenIncludingSafe(date, minDayStart, maxDayStart) || fitsFilter;\n  };\n\n  private isMonthDisabled = ({ date }: CalendarDateInfo<D>): boolean => {\n    const minMonthStart: D = this.dateService.getMonthStart(this.min);\n    const maxMonthStart: D = this.dateService.getMonthStart(this.max);\n\n    return !this.dateService.isBetweenIncludingSafe(date, minMonthStart, maxMonthStart);\n  };\n\n  private isYearDisabled = ({ date }: CalendarDateInfo<D>): boolean => {\n    const minYearStart: D = this.dateService.getYearStart(this.min);\n    const maxYearStart: D = this.dateService.getYearEnd(this.max);\n\n    return !this.dateService.isBetweenIncludingSafe(date, minYearStart, maxYearStart);\n  };\n\n  public isDayToday = ({ date }: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameDaySafe(date, this.dateService.today());\n  };\n\n  private isMonthToday = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameMonthSafe(date.date, this.dateService.today());\n  };\n\n  private isYearToday = ({ date }: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameYearSafe(date, this.dateService.today());\n  };\n\n  private isHeaderNavigationAllowed = (): boolean => {\n    return this.state.viewMode.id !== CalendarViewModes.MONTH.id;\n  };\n\n  private createViewModeVisibleDate = (page: number): D => {\n    switch (this.state.viewMode.id) {\n      case CalendarViewModes.DATE.id: {\n        return this.dateService.addMonth(this.state.visibleDate, page);\n      }\n      case CalendarViewModes.MONTH.id: {\n        return this.dateService.addYear(this.state.visibleDate, page);\n      }\n      case CalendarViewModes.YEAR.id: {\n        return this.dateService.addYear(this.state.visibleDate, VIEWS_IN_PICKER * page);\n      }\n    }\n  };\n\n  private createViewModeHeaderTitle = (date: D, viewMode: CalendarViewMode): string => {\n    switch (viewMode.id) {\n      case CalendarViewModes.DATE.id: {\n        return this.dateService.format(date, FORMAT_HEADER_DATE);\n      }\n      case CalendarViewModes.MONTH.id: {\n        return this.dateService.format(date, FORMAT_HEADER_MONTH);\n      }\n      case CalendarViewModes.YEAR.id: {\n        const minDateFormat: string = this.dateService.format(this.min, FORMAT_HEADER_YEAR);\n        const maxDateFormat: string = this.dateService.format(this.max, FORMAT_HEADER_YEAR);\n\n        return `${minDateFormat} - ${maxDateFormat}`;\n      }\n    }\n  };\n\n  private renderDayIfNeeded = (item: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    const shouldRender: boolean = !item.bounding || this.props.boundingMonth;\n\n    if (shouldRender) {\n      const renderSelector = this.props.renderDay || this.renderDayElement;\n      return renderSelector(item, style);\n    }\n\n    return null;\n  };\n\n  private renderWeekdayElement = (weekday: string, index: number): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        key={index}\n        textStyle={this.getWeekdayStyle(this.props.eva.style)}>\n        {weekday}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderDayElement = ({ date }: CalendarDateInfo<D>, evaStyle): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={evaStyle.container}\n        textStyle={evaStyle.text}>\n        {this.dateService.format(date, FORMAT_DAY)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderMonthElement = ({ date }: CalendarDateInfo<D>, evaStyle): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={evaStyle.container}\n        textStyle={evaStyle.text}>\n        {this.dateService.format(date, FORMAT_MONTH)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderYearElement = ({ date }: CalendarDateInfo<D>, evaStyle): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={evaStyle.container}\n        textStyle={evaStyle.text}>\n        {this.dateService.format(date, FORMAT_YEAR)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderDayPickerElement = (date: D, evaStyle): React.ReactFragment => {\n    return (\n      <React.Fragment>\n        <CalendarMonthHeader\n          style={evaStyle.daysHeaderContainer}\n          data={this.dateService.getDayOfWeekNames()}>\n          {this.renderWeekdayElement}\n        </CalendarMonthHeader>\n        <Divider style={evaStyle.divider}/>\n        <CalendarPicker\n          rowStyle={evaStyle.row}\n          data={this.createDates(date)}\n          onSelect={this.onDaySelect}\n          isItemSelected={this.isDaySelected}\n          isItemDisabled={this.isDayDisabled}\n          isItemToday={this.isDayToday}\n          shouldItemUpdate={this.shouldUpdateDate}>\n          {this.renderDayIfNeeded}\n        </CalendarPicker>\n      </React.Fragment>\n    );\n  };\n\n  private renderMonthPickerElement = (date: D, evaStyle): CalendarPickerElement<D> => {\n    return (\n      <CalendarPicker\n        rowStyle={evaStyle.row}\n        data={this.dataService.createMonthPickerData(date, PICKER_ROWS, PICKER_COLUMNS)}\n        onSelect={this.onMonthSelect}\n        isItemSelected={this.isMonthSelected}\n        isItemDisabled={this.isMonthDisabled}\n        isItemToday={this.isMonthToday}>\n        {this.props.renderMonth || this.renderMonthElement}\n      </CalendarPicker>\n    );\n  };\n\n  private renderYearPickerElement = (date: D, style: StyleType): CalendarPickerElement<D> => {\n    return (\n      <CalendarPicker\n        rowStyle={style.row}\n        data={this.dataService.createYearPickerData(date, PICKER_ROWS, PICKER_COLUMNS)}\n        onSelect={this.onYearSelect}\n        isItemSelected={this.isYearSelected}\n        isItemDisabled={this.isYearDisabled}\n        isItemToday={this.isYearToday}>\n        {this.props.renderYear || this.renderYearElement}\n      </CalendarPicker>\n    );\n  };\n\n  private renderPickerElement = (date: D, style: StyleType): React.ReactNode => {\n    switch (this.state.viewMode.id) {\n      case CalendarViewModes.DATE.id:\n        return this.renderDayPickerElement(date, style);\n      case CalendarViewModes.MONTH.id:\n        return this.renderMonthPickerElement(date, style);\n      case CalendarViewModes.YEAR.id:\n        return this.renderYearPickerElement(date, style);\n    }\n  };\n\n  private renderFooterElement = (evaStyle): React.ReactElement => {\n    if (this.props.renderFooter) {\n      return this.props.renderFooter();\n    }\n    return null;\n  };\n\n  private renderHeaderElement = (evaStyle): CalendarHeaderElement => {\n    const titleSelector = this.props.title || this.createViewModeHeaderTitle;\n\n    return (\n      <CalendarHeader\n        style={evaStyle.headerContainer}\n        title={titleSelector(this.state.visibleDate, this.state.viewMode)}\n        titleStyle={evaStyle.title}\n        iconStyle={evaStyle.icon}\n        lateralNavigationAllowed={this.isHeaderNavigationAllowed()}\n        onTitlePress={this.onPickerNavigationPress}\n        onNavigationLeftPress={this.onHeaderNavigationLeftPress}\n        onNavigationRightPress={this.onHeaderNavigationRightPress}\n      />\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, ...viewProps } = this.props;\n    const evaStyle = this.getCalendarStyle(eva.style);\n\n    return (\n      <View\n        {...viewProps}\n        style={[evaStyle.container, style]}>\n        {this.renderHeaderElement(evaStyle)}\n        {this.renderPickerElement(this.state.visibleDate, evaStyle)}\n        {this.renderFooterElement(evaStyle)}\n      </View>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  styled,\n  StyledComponentProps,\n} from '../../theme';\nimport {\n  BaseCalendarComponent,\n  BaseCalendarProps,\n} from './baseCalendar.component';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport { DateBatch } from './service/calendarData.service';\n\nexport interface CalendarProps<D = Date> extends StyledComponentProps, BaseCalendarProps<D> {\n  date?: D;\n  onSelect?: (date: D) => void;\n}\n\nexport type CalendarElement<D = Date> = React.ReactElement<CalendarProps<D>>;\n\n/**\n * Calendar provides a simple way to select a date.\n *\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {D} date - Date which is currently selected.\n * Defaults to current date.\n *\n * @property {(D) => void} onSelect - Called when date cell is pressed.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n * Moment.js service can be provided by installing `@ui-kitten/moment` package.\n * date-fns service can be provided by installing `@ui-kitten/date-fns` package.\n *\n * @property {boolean} boundingMonth - Whether previous and next months in the current month view should be rendered.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar.\n * Can be `CalendarViewModes.DATE`, `CalendarViewModes.MONTH` or `CalendarViewModes.YEAR`.\n * Defaults to *CalendarViewModes.DATE*.\n *\n * @property {(D) => string} title - A function to transform selected date to a string displayed in header.\n *\n * @property {(D) => boolean} filter - A function to determine whether particular date cells should be disabled.\n *\n * @property {(D, NamedStyles) => ReactElement} renderDay - Function component\n * to render instead of default day cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderMonth - Function component\n * to render instead of default month cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderYear - Function component\n * to render instead of default year cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example CalendarSimpleUsage\n *\n * @overview-example CalendarBoundingMonth\n *\n * @overview-example CalendarFilter\n *\n * @overview-example CalendarBounds\n *\n * @overview-example CalendarStartDayOfWeek\n *\n * @overview-example CalendarCustomLocale\n *\n * @example CalendarMoment\n *\n * @example CalendarCustomDay\n */\nexport class CalendarComponent<D = Date> extends BaseCalendarComponent<CalendarProps<D>, D> {\n\n  static styledComponentName: string = 'Calendar';\n\n  constructor(props: CalendarProps<D>) {\n    super(props);\n\n    this.createDates = this.createDates.bind(this);\n    this.selectedDate = this.selectedDate.bind(this);\n    this.onDateSelect = this.onDateSelect.bind(this);\n    this.isDateSelected = this.isDateSelected.bind(this);\n    this.shouldUpdateDate = this.shouldUpdateDate.bind(this);\n  }\n\n  // BaseCalendarComponent\n\n  protected createDates(date: D): DateBatch<D> {\n    return this.dataService.createDayPickerData(date);\n  }\n\n  protected selectedDate(): D {\n    return this.props.date || this.dateService.today();\n  }\n\n  protected onDateSelect(date: D): void {\n    if (this.props.onSelect) {\n      this.props.onSelect(date);\n    }\n  }\n\n  protected isDateSelected(date: D): boolean {\n    return this.dateService.isSameDaySafe(date, this.selectedDate());\n  }\n\n  protected shouldUpdateDate(props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>): boolean {\n    const dateChanged: boolean = this.dateService.compareDatesSafe(props.date.date, nextProps.date.date) !== 0;\n\n    if (dateChanged) {\n      return true;\n    }\n\n    const selectionChanged: boolean = props.selected !== nextProps.selected;\n    const disablingChanged: boolean = props.disabled !== nextProps.disabled;\n\n    const value: boolean = selectionChanged || disablingChanged;\n\n    if (value) {\n      return true;\n    }\n\n    return props.eva.theme !== nextProps.eva.theme;\n  }\n}\n\nexport const Calendar = styled<CalendarProps>(CalendarComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  EvaStatus,\n  FalsyFC,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { Divider } from '../divider/divider.component';\n\ntype CardStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'filled' | 'outline' | string;\n}>;\n\nexport interface CardProps extends TouchableWebProps, CardStyledProps {\n  children?: React.ReactNode;\n  header?: RenderProp<ViewProps>;\n  footer?: RenderProp<ViewProps>;\n  accent?: RenderProp<ViewProps>;\n  status?: EvaStatus;\n}\n\nexport type CardElement = React.ReactElement<CardProps>;\n\n/**\n * Cards contain content and actions about a single subject.\n *\n * @extends React.Component\n *\n * @property {ReactNode} children - Component to render within the card.\n *\n * @property {(ViewProps) => ReactElement} header - Function component\n * to render above the content.\n *\n * @property {(ViewProps) => ReactElement} footer - Function component\n * to render below the content.\n *\n * @property {(ViewProps) => ReactElement} accent - Function component\n * to render above the card.\n * Accents may change it's color depending on *status* property.\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `filled` or `outline`.\n * Defaults to *outline*.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example CardSimpleUsage\n *\n * @overview-example CardAccessories\n *\n * @overview-example CardStatuses\n */\nclass CardComponent extends React.Component<CardProps> {\n\n  static styledComponentName: string = 'Card';\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      bodyPaddingVertical,\n      bodyPaddingHorizontal,\n      accentHeight,\n      accentBackgroundColor,\n      headerPaddingVertical,\n      headerPaddingHorizontal,\n      footerPaddingVertical,\n      footerPaddingHorizontal,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      body: {\n        paddingVertical: bodyPaddingVertical,\n        paddingHorizontal: bodyPaddingHorizontal,\n      },\n      accent: {\n        height: accentHeight,\n        backgroundColor: accentBackgroundColor,\n      },\n      header: {\n        paddingHorizontal: headerPaddingHorizontal,\n        paddingVertical: headerPaddingVertical,\n      },\n      footer: {\n        paddingHorizontal: footerPaddingHorizontal,\n        paddingVertical: footerPaddingVertical,\n      },\n    };\n  };\n\n  private renderStatusAccent = (evaStyle): React.ReactElement => {\n    return (\n      <View style={evaStyle}/>\n    );\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, children, accent, header, footer, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[styles.container, evaStyle.container, style]}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <FalsyFC\n          style={evaStyle.accent}\n          fallback={this.renderStatusAccent(evaStyle.accent)}\n          component={accent}\n        />\n        <FalsyFC\n          style={evaStyle.header}\n          component={header}\n        />\n        {header && <Divider/>}\n        <View style={[styles.body, evaStyle.body]}>\n          {this.props.children}\n        </View>\n        {footer && <Divider/>}\n        <FalsyFC\n          style={evaStyle.footer}\n          component={footer}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'space-between',\n    overflow: 'hidden',\n  },\n  body: {\n    backgroundColor: 'transparent',\n    overflow: 'hidden',\n  },\n});\n\nexport const Card = styled<CardProps>(CardComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { DateService } from './date.service';\nimport { CalendarRange } from '../type';\n\nexport class RangeDateService<D> {\n\n  private dateService: DateService<D>;\n\n  constructor(dateService: DateService<D>) {\n    this.dateService = dateService;\n  }\n\n  public createRange(range: CalendarRange<D>, date: D): CalendarRange<D> {\n    switch (true) {\n      case (!range.startDate && !range.endDate):\n        return { startDate: date, endDate: null };\n      case (range.startDate && !range.endDate):\n        return this.createRangeForStart(range, date);\n      case (range.startDate !== null && range.endDate !== null):\n        return this.createRangeForStartEnd(date);\n      default:\n        return range;\n    }\n  }\n\n  private createRangeForStart(range: CalendarRange<D>, date: D): CalendarRange<D> {\n    if (this.dateService.compareDatesSafe(date, range.startDate) === 1) {\n      return { startDate: range.startDate, endDate: date };\n    } else if (this.dateService.compareDatesSafe(date, range.startDate) === -1) {\n      return { startDate: date, endDate: range.startDate };\n    } else {\n      return range;\n    }\n  }\n\n  private createRangeForStartEnd(date: D): CalendarRange<D> {\n    return { startDate: date, endDate: null};\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  styled,\n  StyledComponentProps,\n} from '../../theme';\nimport {\n  BaseCalendarComponent,\n  BaseCalendarProps,\n} from './baseCalendar.component';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport { DateBatch } from './service/calendarData.service';\nimport { RangeDateService } from './service/rangeDate.service';\nimport { CalendarRange } from './type';\n\nexport interface RangeCalendarProps<D = Date> extends StyledComponentProps, BaseCalendarProps<D> {\n  range?: CalendarRange<D>;\n  onSelect?: (range: CalendarRange<D>) => void;\n}\n\nexport type RangeCalendarElement<D = Date> = React.ReactElement<RangeCalendarProps<D>>;\n\n/**\n * Range Calendar provides a simple way to select a date range.\n *\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {CalendarRange<D>} range - Date range which is currently selected.\n * CalendarRange `startDate?: D, endDate?: D` - Object with start and end dates for date range.\n * A range may contain only a startDate or both startDate and endDate properties meaning completeness of picked value.\n *\n * @property {(CalendarRange) => void} onSelect - Called when day cell is pressed.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n * Moment.js service can be provided by installing `@ui-kitten/moment` package.\n * date-fns service can be provided by installing `@ui-kitten/date-fns` package.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar.\n * Can be `CalendarViewModes.DATE`, `CalendarViewModes.MONTH` or `CalendarViewModes.YEAR`.\n * Defaults to *CalendarViewModes.DATE*.\n *\n * @property {(D) => string} title - A function to transform selected date to a string displayed in header.\n *\n * @property {(D) => boolean} filter - A function to determine whether particular date cells should be disabled.\n *\n * @property {(D, NamedStyles) => ReactElement} renderDay - Function component\n * to render instead of default day cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderMonth - Function component\n * to render instead of default month cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderYear - Function component\n * to render instead of default year cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example RangeCalendarSimpleUsage\n */\nexport class RangeCalendarComponent<D = Date> extends BaseCalendarComponent<RangeCalendarProps<D>, D> {\n\n  static styledComponentName: string = 'Calendar';\n\n  static defaultProps: Partial<RangeCalendarProps> = {\n    ...BaseCalendarComponent.defaultProps,\n    range: {},\n  };\n\n  private rangeDateService: RangeDateService<D> = new RangeDateService(this.dateService);\n\n  constructor(props: RangeCalendarProps<D>) {\n    super(props);\n\n    this.createDates = this.createDates.bind(this);\n    this.selectedDate = this.selectedDate.bind(this);\n    this.onDateSelect = this.onDateSelect.bind(this);\n    this.isDateSelected = this.isDateSelected.bind(this);\n    this.shouldUpdateDate = this.shouldUpdateDate.bind(this);\n  }\n\n  // BaseCalendarComponent\n\n  protected createDates(date: D): DateBatch<D> {\n    return this.dataService.createDayPickerData(date, this.props.range);\n  }\n\n  protected selectedDate(): D {\n    return this.dateService.today();\n  }\n\n  protected onDateSelect(date: D): void {\n    if (this.props.onSelect) {\n      const range: CalendarRange<D> = this.rangeDateService.createRange(this.props.range, date);\n      this.props.onSelect(range);\n    }\n  }\n\n  protected isDateSelected(date: D): boolean {\n    return false;\n  }\n\n  protected shouldUpdateDate(props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>): boolean {\n    const dateChanged: boolean = this.dateService.compareDatesSafe(props.date.date, nextProps.date.date) !== 0;\n\n    if (dateChanged) {\n      return true;\n    }\n\n    const selectionChanged: boolean = props.selected !== nextProps.selected;\n    const disablingChanged: boolean = props.disabled !== nextProps.disabled;\n    const rangeChanged: boolean = props.range !== nextProps.range;\n    const rangeStartPlaceChanged: boolean = props.firstRangeItem !== nextProps.firstRangeItem;\n    const rangeEndPlaceChanged: boolean = props.lastRangeItem !== nextProps.lastRangeItem;\n\n    const shouldUpdate: boolean =\n      selectionChanged\n      || disablingChanged\n      || rangeChanged\n      || rangeStartPlaceChanged\n      || rangeEndPlaceChanged;\n\n    if (shouldUpdate) {\n      return true;\n    }\n\n    return props.eva.theme !== nextProps.eva.theme;\n  }\n}\n\nexport const RangeCalendar = styled<RangeCalendarProps>(RangeCalendarComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  G,\n  Path,\n  Rect,\n  Svg,\n  SvgProps,\n} from 'react-native-svg';\n\nexport type CheckMarkProps = SvgProps;\nexport type CheckMarkElement = React.ReactElement<CheckMarkProps>;\n\nexport class CheckMark extends React.Component<SvgProps> {\n\n  public render(): React.ReactElement<SvgProps> {\n    return (\n      <Svg {...this.props} viewBox='0 0 24 24'>\n        <G data-name='Layer 2'>\n          <G data-name='checkmark'>\n            <Rect width='24' height='24' opacity='0'/>\n            <Path\n              d='M9.86 18a1 1 0 0 1-.73-.32l-4.86-5.17a1 1 0 1 1 1.46-1.37l4.12 4.39 8.41-9.2a1 1 0 1 1 1.48 1.34l-9.14 10a1 1 0 0 1-.73.33z'/>\n          </G>\n        </G>\n      </Svg>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  G,\n  Path,\n  Rect,\n  Svg,\n  SvgProps,\n} from 'react-native-svg';\n\nexport type MinusProps = SvgProps;\nexport type MinusElement = React.ReactElement<MinusProps>;\n\nexport class Minus extends React.Component<SvgProps> {\n\n  public render(): React.ReactElement<SvgProps> {\n    return (\n      <Svg {...this.props} viewBox='0 0 24 24'>\n        <G data-name='Layer 2'>\n          <G data-name='minus'>\n            <Rect\n              width='24'\n              height='24'\n              transform='rotate(180 12 12)'\n              opacity='0'\n            />\n            <Path d='M19 13H5a1 1 0 0 1 0-2h14a1 1 0 0 1 0 2z'/>\n          </G>\n        </G>\n      </Svg>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { SvgProps } from 'react-native-svg';\nimport {\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TargetedEvent,\n  View,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  EvaStatus,\n  FalsyText,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\nimport {\n  CheckMark,\n  CheckMarkProps,\n} from '../shared/checkmark.component';\nimport {\n  Minus,\n  MinusProps,\n} from '../shared/minus.component';\n\ntype CheckBoxStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\nexport interface CheckBoxProps extends TouchableWebProps, CheckBoxStyledProps {\n  children?: RenderProp<TextProps> | React.ReactText;\n  checked?: boolean;\n  onChange?: (checked: boolean, indeterminate: boolean) => void;\n  indeterminate?: boolean;\n  status?: EvaStatus;\n}\n\nexport type CheckBoxElement = React.ReactElement<CheckBoxProps>;\n\n/**\n * Checkboxes allow the user to select one or more items from a set.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Whether component is checked.\n * Defaults to *false*.\n *\n * @property {(checked: boolean, indeterminate: boolean) => void} onChange - Called when checkbox\n * should switch it's value.\n * Called with *checked* and *indeterminate* values.\n * If *indeterminate* was provided, it should be changed to the value passed in this function.\n *\n * @property {boolean} indeterminate - Whether checked status is indeterminate.\n * Will set indeterminate to false when the checked property is changed.\n * Defaults to *false*.\n *\n * @property {ReactText | (TextProps) => ReactElement} children - String, number or a function component\n * to render near the checkbox.\n * If it is a function, expected to return a Text.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example CheckboxSimpleUsage\n *\n * @overview-example CheckboxStates\n *\n * @overview-example CheckboxIndeterminate\n *\n * @overview-example CheckboxStatus\n *\n * @example CheckboxStyling\n */\nclass CheckBoxComponent extends React.Component<CheckBoxProps> {\n\n  static styledComponentName: string = 'CheckBox';\n\n  private onMouseEnter = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(e);\n    }\n  };\n\n  private onMouseLeave = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n  };\n\n  private onFocus = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n  };\n\n  private onBlur = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n  };\n\n  private onPress = (): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked, false);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconBorderRadius,\n      iconTintColor,\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      selectContainer: containerParameters,\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        fill: iconTintColor,\n        stroke: iconTintColor,\n        strokeWidth: 3,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n    };\n  };\n\n  private renderIconElement = (style: SvgProps): React.ReactElement<SvgProps> => {\n    const Icon: React.ComponentType<MinusProps | CheckMarkProps> = this.props.indeterminate ? Minus : CheckMark;\n    return (\n      <Icon {...style} />\n    );\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, disabled, children, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[styles.container, style]}\n        disabled={disabled}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <View style={styles.highlightContainer}>\n          <View style={[evaStyle.highlight, styles.highlight]}/>\n          <View style={[evaStyle.selectContainer, styles.selectContainer]}>\n            {this.renderIconElement(evaStyle.icon)}\n          </View>\n        </View>\n        <FalsyText\n          style={evaStyle.text}\n          component={children}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  highlightContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  highlight: {\n    position: 'absolute',\n  },\n});\n\nexport const CheckBox = styled<CheckBoxProps>(CheckBoxComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  StyleProp,\n  StyleSheet,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  EvaInputSize,\n  EvaStatus,\n  FalsyFC,\n  FalsyText,\n  RenderProp,\n  TouchableWithoutFeedback,\n} from '../../devsupport';\nimport {\n  Interaction,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { BaseCalendarProps } from '../calendar/baseCalendar.component';\nimport { CalendarElement } from '../calendar/calendar.component';\nimport { RangeCalendarElement } from '../calendar/rangeCalendar.component';\nimport { NativeDateService } from '../calendar/service/nativeDate.service';\nimport { Popover } from '../popover/popover.component';\nimport {\n  PopoverPlacement,\n  PopoverPlacements,\n} from '../popover/type';\nimport { TextProps } from '../text/text.component';\n\nexport interface BaseDatepickerProps<D = Date> extends StyledComponentProps,\n  TouchableOpacityProps,\n  BaseCalendarProps<D> {\n\n  controlStyle?: StyleProp<ViewStyle>;\n  label?: RenderProp<TextProps> | React.ReactText;\n  caption?: RenderProp<TextProps> | React.ReactText;\n  captionIcon?: RenderProp<Partial<ImageProps>>;\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<Partial<ImageProps>>;\n  status?: EvaStatus;\n  size?: EvaInputSize;\n  placeholder?: React.ReactText;\n  placement?: PopoverPlacement | string;\n  backdropStyle?: StyleProp<ViewStyle>;\n  onFocus?: () => void;\n  onBlur?: () => void;\n}\n\ninterface State {\n  visible: boolean;\n}\n\nexport abstract class BaseDatepickerComponent<P, D = Date> extends React.Component<BaseDatepickerProps<D> & P, State> {\n\n  static defaultProps: Partial<BaseDatepickerProps> = {\n    dateService: new NativeDateService(),\n    placeholder: 'dd/mm/yyyy',\n    placement: PopoverPlacements.BOTTOM_START,\n  };\n\n  public state: State = {\n    visible: false,\n  };\n\n  private popoverRef: React.RefObject<Popover> = React.createRef();\n\n  public show = (): void => {\n    this.popoverRef.current.show();\n  };\n\n  public hide = (): void => {\n    this.popoverRef.current.hide();\n  };\n\n  public focus = (): void => {\n    this.setState({ visible: true }, this.onPickerVisible);\n  };\n\n  public blur = (): void => {\n    this.setState({ visible: false }, this.onPickerInvisible);\n  };\n\n  public isFocused = (): boolean => {\n    return this.state.visible;\n  };\n\n  public abstract clear(): void;\n\n  protected abstract getComponentTitle(): React.ReactText;\n\n  protected abstract renderCalendar(): CalendarElement<D> | RangeCalendarElement<D>;\n\n  private getComponentStyle = (style: StyleType) => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      placeholderColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      labelColor,\n      labelFontSize,\n      labelLineHeight,\n      labelMarginBottom,\n      labelFontWeight,\n      captionMarginTop,\n      captionColor,\n      captionFontSize,\n      captionLineHeight,\n      captionFontWeight,\n      captionIconWidth,\n      captionIconHeight,\n      captionIconMarginRight,\n      captionIconTintColor,\n      popoverWidth,\n      ...controlParameters\n    } = style;\n\n    return {\n      control: controlParameters,\n      captionContainer: {\n        marginTop: captionMarginTop,\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        color: textColor,\n      },\n      placeholder: {\n        marginHorizontal: textMarginHorizontal,\n        color: placeholderColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      label: {\n        color: labelColor,\n        fontSize: labelFontSize,\n        lineHeight: labelLineHeight,\n        marginBottom: labelMarginBottom,\n        fontWeight: labelFontWeight,\n      },\n      captionIcon: {\n        width: captionIconWidth,\n        height: captionIconHeight,\n        tintColor: captionIconTintColor,\n        marginRight: captionIconMarginRight,\n      },\n      captionLabel: {\n        fontSize: captionFontSize,\n        fontWeight: captionFontWeight,\n        lineHeight: captionLineHeight,\n        color: captionColor,\n      },\n      popover: {\n        width: popoverWidth,\n        marginBottom: captionMarginTop,\n      },\n    };\n  };\n\n  private onPress = (event: GestureResponderEvent): void => {\n    this.setPickerVisible();\n\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private onPickerVisible = (): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  private onPickerInvisible = (): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  private setPickerVisible = (): void => {\n    this.setState({ visible: true }, this.onPickerVisible);\n  };\n\n  private setPickerInvisible = (): void => {\n    this.setState({ visible: false }, this.onPickerInvisible);\n  };\n\n  private renderInputElement = (props, evaStyle): React.ReactElement => {\n    return (\n      <TouchableWithoutFeedback\n        {...props}\n        style={[evaStyle.control, styles.control, this.props.controlStyle]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={this.props.accessoryLeft}\n        />\n        <FalsyText\n          style={evaStyle.text}\n          numberOfLines={1}\n          ellipsizeMode='tail'\n          component={this.getComponentTitle()}\n        />\n        <FalsyFC\n          style={evaStyle.icon}\n          component={this.props.accessoryRight}\n        />\n      </TouchableWithoutFeedback>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const {\n      eva,\n      style,\n      backdropStyle,\n      controlStyle,\n      placement,\n      label,\n      accessoryLeft,\n      accessoryRight,\n      caption,\n      captionIcon,\n      ...touchableProps\n    } = this.props;\n\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <View style={style}>\n        <FalsyText\n          style={[evaStyle.label, styles.label]}\n          component={label}\n        />\n        <Popover\n          ref={this.popoverRef}\n          style={[evaStyle.popover, styles.popover]}\n          backdropStyle={backdropStyle}\n          placement={placement}\n          visible={this.state.visible}\n          anchor={() => this.renderInputElement(touchableProps, evaStyle)}\n          onBackdropPress={this.setPickerInvisible}>\n          {this.renderCalendar()}\n        </Popover>\n        <View style={[evaStyle.captionContainer, styles.captionContainer]}>\n          <FalsyFC\n            style={evaStyle.captionIcon}\n            component={captionIcon}\n          />\n          <FalsyText\n            style={[evaStyle.captionLabel, styles.captionLabel]}\n            component={caption}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  popover: {\n    borderWidth: 0,\n  },\n  control: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  label: {\n    textAlign: 'left',\n  },\n  captionContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  captionLabel: {\n    textAlign: 'left',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { styled } from '../../theme';\nimport {\n  BaseDatepickerComponent,\n  BaseDatepickerProps,\n} from './baseDatepicker.component';\nimport {\n  Calendar,\n  CalendarElement,\n  CalendarProps,\n} from '../calendar/calendar.component';\n\nexport type DatepickerProps<D = Date> = BaseDatepickerProps<D> & CalendarProps<D>;\nexport type DatepickerElement<D = Date> = React.ReactElement<DatepickerProps<D>>;\n\n/**\n * Date picker provides a simple way to select a date within a picker displayed in modal.\n *\n * Renders an Input box and UI Kitten Calendar component within the Popover component when focused.\n * Supports locales and different date objects like Moment.js or date-fns.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets picker visible.\n *\n * @method {() => void} hide - Sets picker invisible.\n *\n * @method {() => void} focus - Focuses Datepicker and sets it visible.\n *\n * @method {() => void} blur - Removes focus from Datepicker and sets it invisible.\n *\n * @method {() => boolean} isFocused - Returns true if the Datepicker is currently focused and visible.\n *\n * @method {() => void} clear - Removes all text from the Datepicker.\n *\n * @property {D} date - Date which is currently selected.\n * Defaults to current date.\n *\n * @property {(D) => void} onSelect - Called when date cell is pressed.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n * Moment.js service can be provided by installing `@ui-kitten/moment` package.\n * date-fns service can be provided by installing `@ui-kitten/date-fns` package.\n *\n * @property {boolean} boundingMonth - Defines if previous and next months should be rendered in the current month view.\n *\n * @property {(D, NamedStyles) => ReactElement} renderDay - Function component\n * to render instead of default day cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderMonth - Function component\n * to render instead of default month cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderYear - Function component\n * to render instead of default year cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar.\n * Can be `CalendarViewModes.DATE`, `CalendarViewModes.MONTH` or `CalendarViewModes.YEAR`.\n * Defaults to *CalendarViewModes.DATE*.\n *\n * @property {(date: D) => string} title - A function to transform selected date to a string displayed in header.\n *\n * @property {(date: D) => boolean} filter - A function to determine whether particular date cells should be disabled.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Useful for giving user a hint on the input validity.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `small`, `medium` or `large`.\n * Defaults to *medium*.\n *\n * @property {ReactText | (TextProps) => ReactElement} placeholder - String, number or a function component\n * to render when input field is empty.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactText | (TextProps) => ReactElement} label - String, number or a function component\n * to render to top of the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {ReactText | (TextProps) => ReactElement} caption - String, number or a function component\n * to render to bottom of the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} captionIcon - Function component\n * to render to start of the *caption*.\n * Expected to return an Image.\n *\n * @property {() => void} onFocus - Called when picker becomes visible.\n *\n * @property {() => void} onBlur - Called when picker becomes invisible.\n *\n * @property {string | PopoverPlacement} placement - Position of the picker relative to the input field.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Defaults to *bottom*.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Style of backdrop.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example DatepickerSimpleUsage\n *\n * @overview-example DatepickerAccessories\n *\n * @overview-example DatepickerFilters\n *\n * @overview-example DatepickerLocaleSettings\n *\n * @overview-example DatepickerStatus\n *\n * @overview-example DatepickerSize\n *\n * @example DatepickerCustomDay\n *\n * @example DatepickerMoment\n */\nexport class DatepickerComponent<D = Date> extends BaseDatepickerComponent<DatepickerProps<D>, D> {\n\n  static styledComponentName: string = 'Datepicker';\n\n  constructor(props: DatepickerProps<D>) {\n    super(props);\n    this.clear = this.clear.bind(this);\n  }\n\n  public clear = (): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(null);\n    }\n  };\n\n  private get calendarProps(): CalendarProps<D> {\n    return {\n      min: this.props.min,\n      max: this.props.max,\n      date: this.props.date,\n      dateService: this.props.dateService,\n      boundingMonth: this.props.boundingMonth,\n      startView: this.props.startView,\n      filter: this.props.filter,\n      title: this.props.title,\n      onSelect: this.props.onSelect,\n      renderDay: this.props.renderDay,\n      renderMonth: this.props.renderMonth,\n      renderYear: this.props.renderYear,\n    };\n  }\n\n  // BaseDatepickerComponent\n\n  protected getComponentTitle(): React.ReactText {\n    if (this.props.date) {\n      return this.props.dateService.format(this.props.date, null);\n    } else {\n      return this.props.placeholder;\n    }\n  }\n\n  protected renderCalendar(): CalendarElement<D> {\n    return (\n      // @ts-ignore\n      <Calendar {...this.calendarProps} />\n    );\n  }\n}\n\nexport const Datepicker = styled<DatepickerProps>(DatepickerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { styled } from '../../theme';\nimport {\n  BaseDatepickerComponent,\n  BaseDatepickerProps,\n} from './baseDatepicker.component';\nimport {\n  RangeCalendar,\n  RangeCalendarElement,\n  RangeCalendarProps,\n} from '../calendar/rangeCalendar.component';\n\nexport type RangeDatepickerProps<D = Date> = BaseDatepickerProps<D> & RangeCalendarProps<D>;\nexport type RangeDatepickerElement<D = Date> = React.ReactElement<RangeDatepickerProps<D>>;\n\n/**\n * Range date picker provides a simple way to select a date range within a picker displayed in modal.\n *\n * Renders an Input box and UI Kitten RangeCalendar component within the Popover component when focused.\n * Supports locales and different date objects like Moment.js or date-fns.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets picker visible.\n *\n * @method {() => void} hide - Sets picker invisible.\n *\n * @method {() => void} focus - Focuses Datepicker and sets it visible.\n *\n * @method {() => void} blur - Removes focus from Datepicker and sets it invisible.\n *\n * @method {() => boolean} isFocused - Returns true if the Datepicker is currently focused and visible.\n *\n * @method {() => void} clear - Removes all text from the Datepicker.\n *\n * @property {CalendarRange<D>} range - Date range which is currently selected.\n * CalendarRange `startDate?: D, endDate?: D` - Object with start and end dates for date range.\n * A range may contain only a startDate or both startDate and endDate properties meaning completeness of picked value.\n *\n * @property {(CalendarRange) => void} onSelect - Called when day cell is pressed.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n * Moment.js service can be provided by installing `@ui-kitten/moment` package.\n * date-fns service can be provided by installing `@ui-kitten/date-fns` package.\n *\n * @property {boolean} boundingMonth - Whether previous and next months in the current month view should be rendered.\n *\n * @property {D, NamedStyles) => ReactElement} renderDay - Function component\n * to render instead of default day cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderMonth - Function component\n * to render instead of default month cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderYear - Function component\n * to render instead of default year cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar.\n * Can be `CalendarViewModes.DATE`, `CalendarViewModes.MONTH` or `CalendarViewModes.YEAR`.\n * Defaults to *CalendarViewModes.DATE*.\n *\n * @property {(D) => string} title - A function to transform selected date to a string displayed in header.\n *\n * @property {(D) => boolean} filter - A function to determine whether particular date cells should be disabled.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Useful for giving user a hint on the input validity.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `small`, `medium` or `large`.\n * Defaults to *medium*.\n *\n * @property {ReactText | (TextProps) => ReactElement} placeholder - String, number or a function component\n * to render when input field is empty.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactText | (TextProps) => ReactElement} label - String, number or a function component\n * to render to top of the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {ReactText | (TextProps) => ReactElement} caption - String, number or a function component\n * to render to bottom of the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} captionIcon - Function component\n * to render to start of the *caption*.\n * Expected to return an Image.\n *\n * @property {() => void} onFocus - Called when picker becomes visible.\n *\n * @property {() => void} onBlur - Called when picker becomes invisible.\n *\n * @property {string | PopoverPlacement} placement - Position of the picker relative to the input field.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Defaults to *bottom*.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Style of backdrop.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example RangeDatepickerSimpleUsage\n */\nexport class RangeDatepickerComponent<D = Date> extends BaseDatepickerComponent<RangeDatepickerProps<D>, D> {\n\n  static styledComponentName: string = 'Datepicker';\n\n  constructor(props: RangeDatepickerProps<D>) {\n    super(props);\n    this.clear = this.clear.bind(this);\n  }\n\n  public clear = (): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect({});\n    }\n  };\n\n  private get calendarProps(): RangeCalendarProps<D> {\n    return {\n      min: this.props.min,\n      max: this.props.max,\n      range: this.props.range,\n      dateService: this.props.dateService,\n      boundingMonth: this.props.boundingMonth,\n      startView: this.props.startView,\n      filter: this.props.filter,\n      title: this.props.title,\n      onSelect: this.props.onSelect,\n      renderDay: this.props.renderDay,\n      renderMonth: this.props.renderMonth,\n      renderYear: this.props.renderYear,\n      renderFooter: this.props.renderFooter,\n    };\n  }\n\n  // BaseDatepickerComponent\n\n  protected getComponentTitle(): React.ReactText {\n    const { startDate, endDate } = this.props.range;\n\n    if (startDate || endDate) {\n      const start: string = startDate ? this.props.dateService.format(startDate, null) : '';\n      const end: string = endDate ? this.props.dateService.format(endDate, null) : '';\n\n      return `${start} - ${end}`;\n    } else {\n      return this.props.placeholder;\n    }\n  }\n\n  protected renderCalendar(): RangeCalendarElement<D> {\n    return (\n      // @ts-ignore\n      <RangeCalendar {...this.calendarProps} />\n    );\n  }\n}\n\nexport const RangeDatepicker = styled<RangeDatepickerProps>(RangeDatepickerComponent);\n","import React from 'react';\nimport { IndexPath } from '../../devsupport';\n\nexport interface MenuItemDescriptor {\n  index: IndexPath;\n  groupIndices?: IndexPath[];\n}\n\nexport class MenuService {\n\n  public createDescriptorForElement = (element: React.ReactElement, index: number): MenuItemDescriptor => {\n    const groupIndices = React.Children.map(element.props.children, ((child: React.ReactElement, section: number) => {\n      return new IndexPath(index, section);\n    }));\n\n    return { groupIndices, index: new IndexPath(index) };\n  };\n\n  public createDescriptorForNestedElement = (element: React.ReactElement,\n                                             groupDescriptor: MenuItemDescriptor,\n                                             index: number): MenuItemDescriptor => {\n\n    return {\n      index: new IndexPath(groupDescriptor.index.row, index),\n      groupIndices: null,\n    };\n  };\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ListRenderItemInfo } from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  ChildrenWithProps,\n  IndexPath,\n} from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n} from '../../theme';\nimport { Divider } from '../divider/divider.component';\nimport {\n  List,\n  ListElement,\n  ListProps,\n} from '../list/list.component';\nimport {\n  MenuItemElement,\n  MenuItemProps,\n} from './menuItem.component';\nimport {\n  MenuItemDescriptor,\n  MenuService,\n} from './menu.service';\n\ntype MenuStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | 'noDivider' | string;\n}>;\n\ntype MenuListProps = Omit<ListProps, 'data' | 'renderItem'>;\n\nexport interface MenuProps extends MenuListProps, MenuStyledProps {\n  children?: ChildrenWithProps<MenuItemProps>;\n  selectedIndex?: IndexPath;\n  onSelect?: (index: IndexPath) => void;\n}\n\nexport type MenuElement = React.ReactElement<MenuProps>;\n\n/**\n * A versatile menu for navigation.\n * Menu should contain MenuItem or MenuGroup components to provide a useful component.\n *\n * @extends React.Component\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `default` or `noDivider`.\n *\n * @property {ReactElement<MenuItemProps> | ReactElement<MenuItemProps>[]} children -\n * Items to be rendered within menu.\n *\n * @property {IndexPath} selectedIndex - Index of selected item.\n * IndexPath `row: number, section?: number` - position of element in sectioned list.\n * Menu becomes sectioned when MenuGroup is rendered within children.\n * Updating this property is not required if marking items selected is not needed.\n *\n * @property {(IndexPath) => void} onSelect - Called when item is pressed.\n * Called with `row: number` by default.\n * Called with `row: number, section: number` for items rendered within MenuGroup.\n *\n * @property {ListProps} ...ListProps - Any props applied to List component,\n * excluding `renderItem` and `data`.\n *\n * @overview-example MenuSimpleUsage\n *\n * @overview-example MenuAccessories\n *\n * @overview-example MenuDisabledOptions\n *\n * @example MenuStyling\n */\nclass MenuComponent extends React.Component<MenuProps> {\n\n  static styledComponentName: string = 'Menu';\n\n  private service: MenuService = new MenuService();\n\n  private get data(): any[] {\n    return React.Children.toArray(this.props.children || []);\n  }\n\n  private get shouldRenderDividers(): boolean {\n    return this.props.appearance !== 'noDivider';\n  }\n\n  public clear = (): void => {\n    this.props.onSelect && this.props.onSelect(null);\n  };\n\n  private onItemPress = (descriptor: MenuItemDescriptor): void => {\n    this.props.onSelect && this.props.onSelect(descriptor.index);\n  };\n\n  private isItemSelected = (descriptor: MenuItemDescriptor): boolean => {\n    return descriptor.index.equals(this.props.selectedIndex);\n  };\n\n  private cloneItemWithProps = (element: React.ReactElement, props: MenuItemProps): React.ReactElement => {\n    const nestedElements = React.Children.map(element.props.children, (el: MenuItemElement, index: number) => {\n      const descriptor = this.service.createDescriptorForNestedElement(el, props.descriptor, index);\n      const selected: boolean = this.isItemSelected(descriptor);\n\n      return this.cloneItemWithProps(el, { ...props, selected, descriptor });\n    });\n\n    return React.cloneElement(element, { ...props, ...element.props }, nestedElements);\n  };\n\n  private renderItem = (info: ListRenderItemInfo<MenuItemElement>): React.ReactElement => {\n    const descriptor = this.service.createDescriptorForElement(info.item, info.index);\n    const selected: boolean = this.isItemSelected(descriptor);\n\n    return this.cloneItemWithProps(info.item, { descriptor, selected, onPress: this.onItemPress });\n  };\n\n  public render(): ListElement {\n    const { appearance, ...listProps } = this.props;\n\n    return (\n      <List\n        ItemSeparatorComponent={this.shouldRenderDividers && Divider}\n        {...listProps}\n        data={this.data}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n\nexport const Menu = styled<MenuProps>(MenuComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ViewProps } from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport { FalsyFC, RenderProp } from '../../devsupport';\nimport { styled, StyledComponentProps, StyleType } from '../../theme';\nimport { Menu, MenuProps } from '../menu/menu.component';\n\ntype DrawerStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | 'noDivider' | string;\n}>;\n\nexport interface DrawerProps extends MenuProps, DrawerStyledProps {\n  header?: RenderProp<ViewProps>;\n  footer?: RenderProp<ViewProps>;\n}\n\nexport type DrawerElement = React.ReactElement<DrawerProps>;\n\n/**\n * Navigation panel which slides from the side of the screen.\n * Drawer should contain DrawerItem or DrawerGroup components to provide a useful component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<DrawerItemProps> | ReactElement<DrawerItemProps>[]} children -\n * items to be rendered within drawer.\n *\n * @property {IndexPath} selectedIndex - Index of selected item.\n * IndexPath `row: number, section?: number` - position of element in sectioned list.\n * Drawer becomes sectioned when DrawerGroup is rendered within children.\n * Updating this property is not required if marking items selected is not needed.\n *\n * @property {(IndexPath | IndexPath[]) => void} onSelect - Called when item is pressed.\n * Called with `row: number` by default.\n * Called with `row: number, section: number` for items rendered within DrawerGroup.\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `default` or `noDivider`.\n *\n * @property {ListProps} ...ListProps - Any props applied to List component,\n * excluding `renderItem` and `data`.\n *\n * @overview-example DrawerSimpleUsage\n *\n * @overview-example Using with React Navigation\n *\n * ```\n * import React from 'react';\n * import { NavigationContainer } from '@react-navigation/native';\n * import { createDrawerNavigator } from '@react-navigation/drawer';\n * import { Drawer, DrawerItem, Layout, Text } from '@ui-kitten/components';\n *\n * const { Navigator, Screen } = createDrawerNavigator();\n *\n * const UsersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>USERS</Text>\n *   </Layout>\n * );\n *\n * const OrdersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>ORDERS</Text>\n *   </Layout>\n * );\n *\n * const DrawerContent = ({ navigation, state }) => (\n *   <Drawer\n *     selectedIndex={state.index}\n *     onSelect={index => navigation.navigate(state.routeNames[index.row])}>\n *     <DrawerItem title='Users' />\n *     <DrawerItem title='Orders' />\n *   </Drawer>\n * );\n *\n * export const DrawerNavigator = () => (\n *   <Navigator drawerContent={props => <DrawerContent {...props}/>}>\n *     <Screen name='Users' component={UsersScreen}/>\n *     <Screen name='Orders' component={OrdersScreen}/>\n *   </Navigator>\n * );\n *\n * export const AppNavigator = () => (\n *   <NavigationContainer>\n *     <DrawerNavigator/>\n *   </NavigationContainer>\n * );\n * ```\n *\n * @overview-example DrawerAccessories\n *\n * @example DrawerStyling\n */\nclass DrawerComponent extends React.Component<DrawerProps> {\n\n  static styledComponentName: string = 'Drawer';\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      headerPaddingHorizontal,\n      headerPaddingVertical,\n      footerPaddingHorizontal,\n      footerPaddingVertical,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      header: {\n        paddingHorizontal: headerPaddingHorizontal,\n        paddingVertical: headerPaddingVertical,\n      },\n      footer: {\n        paddingHorizontal: footerPaddingHorizontal,\n        paddingVertical: footerPaddingVertical,\n      },\n    };\n  };\n\n  public render(): React.ReactFragment {\n    const { eva, style, header, footer, ...menuProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <React.Fragment>\n        <FalsyFC\n          style={evaStyle.header}\n          component={header}\n        />\n        <Menu\n          style={[evaStyle.container, style]}\n          showsVerticalScrollIndicator={false}\n          bounces={false}\n          {...menuProps}\n        />\n        <FalsyFC\n          style={evaStyle.footer}\n          component={footer}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport const Drawer = styled<DrawerProps>(DrawerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TargetedEvent,\n  View,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  FalsyFC,\n  FalsyText,\n  PropsService,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebProps,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\nimport { MenuItemDescriptor } from './menu.service';\n\ntype MenuItemStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | 'grouped' | string;\n}>;\n\ntype TouchableMenuItemProps = Overwrite<TouchableWebProps, {\n  onPress?: (descriptor: MenuItemDescriptor, event?: GestureResponderEvent) => void;\n}>;\n\nexport interface MenuItemProps extends TouchableMenuItemProps, MenuItemStyledProps {\n  title?: RenderProp<TextProps> | React.ReactText;\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<Partial<ImageProps>>;\n  selected?: boolean;\n  descriptor?: MenuItemDescriptor;\n}\n\nexport type MenuItemElement = React.ReactElement<MenuItemProps>;\n\n/**\n * A single item in Menu.\n * Items should be rendered within Menu or MenuGroup to provide a usable navigation component.\n *\n * @extends React.Component\n *\n * @property {ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the item.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the *title*.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the *title*.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example MenuItemSimpleUsage\n */\nclass MenuItemComponent extends React.Component<MenuItemProps> {\n\n  static styledComponentName: string = 'MenuItem';\n\n  private onMouseEnter = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(e);\n    }\n  };\n\n  private onMouseLeave = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n  };\n\n  private onFocus = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n  };\n\n  private onBlur = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n  };\n\n  private onPress = (event: GestureResponderEvent): void => {\n    if (this.props.onPress) {\n      this.props.onPress(this.props.descriptor, event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (style: StyleType) => {\n    const { paddingHorizontal, paddingVertical, paddingLeft, backgroundColor } = style;\n\n    const titleStyles: StyleType = PropsService.allWithPrefix(style, 'title');\n    const indicatorStyles: StyleType = PropsService.allWithPrefix(style, 'indicator');\n    const iconStyles: StyleType = PropsService.allWithPrefix(style, 'icon');\n\n    return {\n      container: {\n        paddingHorizontal: paddingHorizontal,\n        paddingLeft: paddingLeft,\n        paddingVertical: paddingVertical,\n        backgroundColor: backgroundColor,\n      },\n      title: {\n        marginHorizontal: titleStyles.titleMarginHorizontal,\n        fontFamily: titleStyles.titleFontFamily,\n        fontSize: titleStyles.titleFontSize,\n        fontWeight: titleStyles.titleFontWeight,\n        lineHeight: titleStyles.titleLineHeight,\n        color: titleStyles.titleColor,\n      },\n      indicator: {\n        width: indicatorStyles.indicatorWidth,\n        backgroundColor: indicatorStyles.indicatorBackgroundColor,\n      },\n      icon: {\n        width: iconStyles.iconWidth,\n        height: iconStyles.iconHeight,\n        marginHorizontal: iconStyles.iconMarginHorizontal,\n        tintColor: iconStyles.iconTintColor,\n      },\n    };\n  };\n\n  public render(): React.ReactNode {\n    const { eva, style, title, accessoryLeft, accessoryRight, children, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[styles.container, evaStyle.container, style]}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <View style={[StyleSheet.absoluteFill, evaStyle.indicator]}/>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={accessoryLeft}\n        />\n        <FalsyText\n          style={[evaStyle.title, styles.title]}\n          component={title}\n        />\n        <FalsyFC\n          style={evaStyle.icon}\n          component={accessoryRight}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  title: {\n    flex: 1,\n    textAlign: 'left',\n  },\n});\n\nexport const MenuItem = styled<MenuItemProps>(MenuItemComponent);\n","import React from 'react';\nimport {\n  Animated,\n  ImageProps,\n  StyleSheet,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ChildrenWithProps,\n  Frame,\n  MeasureElement,\n  MeasuringElement,\n  Point,\n} from '../../devsupport';\nimport { ChevronDown } from '../shared/chevronDown.component';\nimport {\n  MenuItem,\n  MenuItemElement,\n  MenuItemProps,\n} from './menuItem.component';\n\nexport interface MenuGroupProps extends MenuItemProps {\n  children?: ChildrenWithProps<MenuItemProps>;\n}\n\nexport type MenuGroupElement = React.ReactElement<MenuGroupProps>;\n\ninterface State {\n  submenuHeight: number;\n}\n\nconst CHEVRON_DEG_COLLAPSED: number = -180;\nconst CHEVRON_DEG_EXPANDED: number = 0;\nconst CHEVRON_ANIM_DURATION: number = 200;\nconst POSITION_OUTSCREEN: Point = Point.outscreen();\n\n/**\n * A group of items displayed in Menu.\n * Groups should be rendered within Menu and contain MenuItem components to provide a useful navigation component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<MenuItemProps> | ReactElement<MenuItemProps>[]} children -\n * Items to be rendered within group.\n *\n * @property {ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the group.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the *title*.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the *title*.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example MenuGroups\n */\nexport class MenuGroup extends React.Component<MenuGroupProps, State> {\n\n  private expandAnimation: Animated.Value = new Animated.Value(0);\n\n  public state: State = {\n    submenuHeight: 1,\n  };\n\n  private get hasSubmenu(): boolean {\n    return React.Children.count(this.props.children) > 0;\n  }\n\n  private get shouldMeasureSubmenu(): boolean {\n    return this.state.submenuHeight === 1;\n  }\n\n  private get expandAnimationValue(): number {\n    // @ts-ignore - private api, but let's us avoid creating animation listeners.\n    // `this.expandAnimation.addListener`\n    return this.expandAnimation._value;\n  }\n\n  private get expandToRotateInterpolation(): Animated.AnimatedInterpolation {\n    return this.expandAnimation.interpolate({\n      inputRange: [-this.state.submenuHeight, CHEVRON_DEG_EXPANDED],\n      outputRange: [`${CHEVRON_DEG_COLLAPSED}deg`, `${CHEVRON_DEG_EXPANDED}deg`],\n    });\n  }\n\n  private get submenuStyle(): ViewStyle {\n    // @ts-ignore - issue of `@types/react-native` package\n    return this.shouldMeasureSubmenu ? styles.outscreen : { height: this.expandAnimation };\n  }\n\n  private get defaultItemProps(): MenuItemProps {\n    return { appearance: 'grouped' };\n  }\n\n  private onPress = (): void => {\n    if (this.hasSubmenu) {\n      const expandValue: number = this.expandAnimationValue > 0 ? 0 : this.state.submenuHeight;\n      this.createExpandAnimation(expandValue).start();\n    }\n  };\n\n\n  private onSubmenuMeasure = (frame: Frame): void => {\n    this.setState({ submenuHeight: frame.size.height });\n  };\n\n  private createExpandAnimation = (toValue: number): Animated.CompositeAnimation => {\n    return Animated.timing(this.expandAnimation, {\n      toValue: toValue,\n      duration: CHEVRON_ANIM_DURATION,\n    });\n  };\n\n  private renderAccessoryIfNeeded = (evaProps: Partial<ImageProps>): React.ReactElement => {\n    if (!this.hasSubmenu) {\n      return null;\n    }\n\n    const style = StyleSheet.flatten(evaProps.style);\n\n    return (\n      <Animated.View style={{ transform: [{ rotate: this.expandToRotateInterpolation }] }}>\n        <ChevronDown {...evaProps} fill={style.tintColor}/>\n      </Animated.View>\n    );\n  };\n\n  private renderItemsWithDefaultProps = (): React.ReactNode => {\n    return React.Children.map(this.props.children, (item: MenuItemElement): MenuItemElement => {\n      return React.cloneElement(item, this.defaultItemProps, null);\n    });\n  };\n\n  private renderGroupedItems = (evaStyle): React.ReactElement<ViewProps> => {\n    return (\n      <Animated.View style={[styles.submenu, this.submenuStyle, evaStyle]}>\n        {this.renderItemsWithDefaultProps()}\n      </Animated.View>\n    );\n  };\n\n  private renderMeasuringGroupedItems = (evaStyle): MeasuringElement => {\n    return (\n      <MeasureElement onMeasure={this.onSubmenuMeasure}>\n        {this.renderGroupedItems(evaStyle)}\n      </MeasureElement>\n    );\n  };\n\n  private renderGroupedItemsIfNeeded = (evaStyle): React.ReactNode => {\n    if (!this.hasSubmenu) {\n      return null;\n    }\n\n    if (this.shouldMeasureSubmenu) {\n      return this.renderMeasuringGroupedItems(evaStyle);\n    }\n\n    return this.renderGroupedItems(evaStyle);\n  };\n\n  public render(): React.ReactNode {\n    const { children, ...itemProps } = this.props;\n\n    return (\n      <React.Fragment>\n        <MenuItem\n          accessoryRight={this.renderAccessoryIfNeeded}\n          {...itemProps}\n          onPress={this.onPress}\n        />\n        {this.renderGroupedItemsIfNeeded({})}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  outscreen: {\n    position: 'absolute',\n    left: POSITION_OUTSCREEN.x,\n    top: POSITION_OUTSCREEN.y,\n  },\n  submenu: {\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  MenuGroup,\n  MenuGroupElement,\n  MenuGroupProps,\n} from '../menu/menuGroup.component';\n\nexport type DrawerGroupProps = MenuGroupProps;\nexport type DrawerGroupElement = React.ReactElement<DrawerGroupProps>;\n\n/**\n * A group of items displayed in Drawer.\n * Groups should be rendered within Drawer and contain DrawerItem components to provide a useful component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<DrawerItemProps> | ReactElement<DrawerItemProps>[]} children -\n * items to be rendered within group.\n *\n * @property {ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the group.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the *title*.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the *title*.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example DrawerGroups\n */\nexport class DrawerGroup extends React.Component<DrawerGroupProps> {\n\n  public render(): MenuGroupElement {\n    return (\n      <MenuGroup {...this.props} />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  MenuItem,\n  MenuItemElement,\n  MenuItemProps,\n} from '../menu/menuItem.component';\n\nexport type DrawerItemProps = MenuItemProps;\nexport type DrawerItemElement = React.ReactElement<DrawerItemProps>;\n\n/**\n * A single item in Drawer.\n * Items should be rendered within Drawer or DrawerGroup children to provide a usable component.\n *\n * @extends React.Component\n *\n * @property {ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the item.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the *title*.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the *title*.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example DrawerItemSimpleUsage\n */\nexport class DrawerItem extends React.Component<MenuItemProps> {\n\n  public render(): MenuItemElement {\n    return (\n      <MenuItem {...this.props} />\n    );\n  }\n}\n","import React from 'react';\nimport { IndexPath } from '../../devsupport';\nimport { SelectItemElement } from './selectItem.component';\n\nexport interface SelectItemDescriptor {\n  multiSelect: boolean;\n  index: IndexPath;\n  groupIndices?: IndexPath[];\n}\n\nconst SEPARATOR: string = ', ';\n\nexport class SelectService {\n\n  public selectItem = (multiSelect: boolean,\n                       descriptor: SelectItemDescriptor,\n                       selected: IndexPath[]): IndexPath | IndexPath[] => {\n\n    if (multiSelect) {\n      return this.createMultiSelectIndices(descriptor, selected);\n    }\n    return descriptor.index;\n  };\n\n  public toStringSelected = (selected: IndexPath[]): string => {\n    if (selected.length === 0) {\n      return '';\n    }\n\n    const options: string[] = selected.map((index: IndexPath): string => {\n      return `Option ${index.toString()}`;\n    });\n\n    return options.join(SEPARATOR);\n  };\n\n  public isSelected = (descriptor: SelectItemDescriptor, selected: IndexPath[]): boolean => {\n    if (descriptor.multiSelect && this.isGroup(descriptor)) {\n      return this.containsSomeFromGroup(descriptor.index, selected);\n    }\n    return this.contains(descriptor.index, selected);\n  };\n\n  public isDisabled = (descriptor: SelectItemDescriptor): boolean => {\n    return !descriptor.multiSelect && this.isGroup(descriptor);\n  };\n\n  public createDescriptorForElement = (element: SelectItemElement,\n                                       multiSelect: boolean,\n                                       index: number): SelectItemDescriptor => {\n\n    const groupIndices = React.Children.map(element.props.children, ((child: SelectItemElement, section: number) => {\n      return new IndexPath(index, section);\n    }));\n\n    return { multiSelect, groupIndices, index: new IndexPath(index) };\n  };\n\n  public createDescriptorForNestedElement = (element: SelectItemElement,\n                                             descriptor: SelectItemDescriptor,\n                                             index: number): SelectItemDescriptor => {\n\n    return {\n      ...descriptor,\n      index: new IndexPath(descriptor.index.row, index),\n      groupIndices: [],\n    };\n  };\n\n  private createMultiSelectIndices = (descriptor: SelectItemDescriptor, selected: IndexPath[]): IndexPath[] => {\n    const isIndexSelected: boolean = this.isSelected(descriptor, selected);\n    return !isIndexSelected ? this.addIndex(descriptor, selected) : this.removeIndex(descriptor, selected);\n  };\n\n  private isGroup = (descriptor: SelectItemDescriptor): boolean => {\n    return descriptor.groupIndices && descriptor.groupIndices.length > 0;\n  };\n\n  private createGroupIndices = (descriptor: SelectItemDescriptor): IndexPath[] => {\n    return this.isGroup(descriptor) ? descriptor.groupIndices : [descriptor.index];\n  };\n\n  private addIndex = (descriptor: SelectItemDescriptor, selected: IndexPath[]): IndexPath[] => {\n    return [...selected, ...this.createGroupIndices(descriptor)];\n  };\n\n  private removeIndex = (descriptor: SelectItemDescriptor, selected: IndexPath[]): IndexPath[] => {\n    const groupIndices: IndexPath[] = this.createGroupIndices(descriptor);\n    return selected.filter((selectedIndex: IndexPath): boolean => {\n      return !this.contains(selectedIndex, groupIndices);\n    });\n  };\n\n  private contains = (index: IndexPath, selected: IndexPath[]): boolean => {\n    return selected.some((selectedIndex: IndexPath): boolean => {\n      return selectedIndex.equals(index);\n    });\n  };\n\n  private containsSomeFromGroup = (index: IndexPath, selected: IndexPath[]): boolean => {\n    return selected.some((selectedIndex: IndexPath): boolean => {\n      return selectedIndex.row === index.row;\n    });\n  };\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  ImageProps,\n  ListRenderItemInfo,\n  NativeSyntheticEvent,\n  Platform,\n  StyleSheet,\n  TargetedEvent,\n  TextProps,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  ChildrenWithProps,\n  EvaInputSize,\n  EvaStatus,\n  FalsyFC,\n  FalsyText,\n  IndexPath,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n} from '../../devsupport';\nimport { Interaction, styled, StyledComponentProps, StyleType } from '../../theme';\nimport { List } from '../list/list.component';\nimport { Popover } from '../popover/popover.component';\nimport { ChevronDown } from '../shared/chevronDown.component';\nimport { SelectGroupProps } from './selectGroup.component';\nimport { SelectItemElement, SelectItemProps } from './selectItem.component';\nimport { SelectItemDescriptor, SelectService } from './select.service';\n\ntype SelectStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\nexport interface SelectProps extends TouchableWebProps, SelectStyledProps {\n  children?: ChildrenWithProps<SelectItemProps | SelectGroupProps>;\n  selectedIndex?: IndexPath | IndexPath[];\n  onSelect?: (index: IndexPath | IndexPath[]) => void;\n  value?: RenderProp<TextProps> | React.ReactText;\n  multiSelect?: boolean;\n  placeholder?: RenderProp<TextProps> | React.ReactText;\n  label?: RenderProp<TextProps> | React.ReactText;\n  caption?: RenderProp<TextProps> | React.ReactText;\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<Partial<ImageProps>>;\n  status?: EvaStatus;\n  size?: EvaInputSize;\n}\n\nexport type SelectElement = React.ReactElement<SelectProps>;\n\ninterface State {\n  listVisible: boolean;\n}\n\nconst CHEVRON_DEG_COLLAPSED: number = -180;\nconst CHEVRON_DEG_EXPANDED: number = 0;\nconst CHEVRON_ANIM_DURATION: number = 200;\n\n/**\n * A dropdown menu for displaying selectable options.\n * Select should contain SelectItem or SelectGroup components to provide a useful component.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets options list visible.\n *\n * @method {() => void} hide - Sets options list invisible.\n *\n * @method {() => void} focus - Focuses input field and sets options list visible.\n *\n * @method {() => void} blur - Removes focus from input field and sets options list invisible.\n *\n * @method {() => boolean} isFocused - Whether input field is currently focused and options list is visible.\n *\n * @method {() => void} clear - Removes all text from the Select.\n *\n * @property {ReactElement<SelectItemProps> | ReactElement<SelectItemProps>[]} children -\n * Items to be rendered within options list.\n *\n * @property {IndexPath | IndexPath[]} selectedIndex - Index or array of indices of selected options.\n * IndexPath `row: number, section?: number` - position of element in sectioned list.\n * Select becomes sectioned when SelectGroup is rendered within children.\n *\n * @property {(IndexPath | IndexPath[]) => void} onSelect - Called when option is pressed.\n * Called with `row: number` by default and for SelectGroup items.\n * Called with `row: number, section: number` for items rendered within SelectGroup.\n * Called with array if *multiSelect* was set to true.\n *\n * @property {ReactText | (TextProps) => ReactElement} value - String, number or a function component\n * to render for the selected options.\n * By default, calls *toString()* for each index in selectedIndex property.\n * If it is a function, expected to return a Text.\n *\n * @property {boolean} multiSelect - Whether multiple options can be selected.\n * If true, calls onSelect with IndexPath[] in arguments.\n * Otherwise, with IndexPath in arguments.\n *\n * @property {ReactText | (TextProps) => ReactElement} placeholder - String, number or a function component\n * to render when there is no selected option.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactText | (TextProps) => ReactElement} label - String, number or a function component\n * to render above input field.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactText | (TextProps) => ReactElement} caption - String, number or a function component\n * to render below the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `small`, `medium` or `large`.\n * Defaults to *medium*.\n *\n * @property {() => void} onFocus - Called when options list becomes visible.\n *\n * @property {() => void} onBlur - Called when options list becomes invisible.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example SelectSimpleUsage\n *\n * @overview-example SelectStates\n *\n * @overview-example SelectMultiSelect\n *\n * @overview-example SelectAccessories\n *\n * @overview-example SelectDisabledOptions\n *\n * @overview-example SelectStatus\n *\n * @overview-example SelectSize\n *\n * @example SelectStyling\n */\nexport class SelectComponent extends React.Component<SelectProps, State> {\n\n  static styledComponentName: string = 'Select';\n\n  static defaultProps = {\n    placeholder: 'Select Option',\n    selectedIndex: [],\n  };\n\n  public state: State = {\n    listVisible: false,\n  };\n\n  private service: SelectService = new SelectService();\n  private popoverRef: React.RefObject<Popover> = React.createRef();\n  private expandAnimation: Animated.Value = new Animated.Value(0);\n\n  private get isMultiSelect(): boolean {\n    return this.props.multiSelect;\n  }\n\n  private get data(): any[] {\n    return React.Children.toArray(this.props.children || []);\n  }\n\n  private get selectedIndices(): IndexPath[] {\n    return Array.isArray(this.props.selectedIndex) ? this.props.selectedIndex : [this.props.selectedIndex];\n  }\n\n  private get expandToRotateInterpolation(): Animated.AnimatedInterpolation {\n    return this.expandAnimation.interpolate({\n      inputRange: [CHEVRON_DEG_COLLAPSED, CHEVRON_DEG_EXPANDED],\n      outputRange: [`${CHEVRON_DEG_COLLAPSED}deg`, `${CHEVRON_DEG_EXPANDED}deg`],\n    });\n  }\n\n  public show = (): void => {\n    this.popoverRef.current.show();\n  };\n\n  public hide = (): void => {\n    this.popoverRef.current.hide();\n  };\n\n  public focus = (): void => {\n    this.setOptionsListVisible();\n  };\n\n  public blur = (): void => {\n    this.setOptionsListInvisible();\n  };\n\n  public isFocused = (): boolean => {\n    return this.state.listVisible;\n  };\n\n  public clear = (): void => {\n    this.props.onSelect && this.props.onSelect(null);\n  };\n\n  private onMouseEnter = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n    this.props.onMouseEnter && this.props.onMouseEnter(e);\n  };\n\n  private onMouseLeave = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onMouseLeave && this.props.onMouseLeave(e);\n  };\n\n  private onPress = (): void => {\n    this.setOptionsListVisible();\n  };\n\n  private onPressIn = (): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n  };\n\n  private onPressOut = (): void => {\n    this.props.eva.dispatch([]);\n  };\n\n  private onItemPress = (descriptor: SelectItemDescriptor): void => {\n    if (this.props.onSelect) {\n      const selectedIndices = this.service.selectItem(this.isMultiSelect, descriptor, this.selectedIndices);\n      !this.isMultiSelect && this.setOptionsListInvisible();\n      this.props.onSelect(selectedIndices);\n    }\n  };\n\n  private onBackdropPress = (): void => {\n    this.setOptionsListInvisible();\n  };\n\n  private onListVisible = (): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n    this.createExpandAnimation(-CHEVRON_DEG_COLLAPSED).start(() => {\n      this.props.onFocus && this.props.onFocus(null);\n    });\n  };\n\n  private onListInvisible = (): void => {\n    this.props.eva.dispatch([]);\n    this.createExpandAnimation(CHEVRON_DEG_EXPANDED).start(() => {\n      this.props.onBlur && this.props.onBlur(null);\n    });\n  };\n\n  private getComponentStyle = (style: StyleType) => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      placeholderColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      labelColor,\n      labelFontSize,\n      labelLineHeight,\n      labelMarginBottom,\n      labelFontWeight,\n      captionMarginTop,\n      captionColor,\n      captionFontSize,\n      captionLineHeight,\n      captionFontWeight,\n      captionIconWidth,\n      captionIconHeight,\n      captionIconMarginRight,\n      captionIconTintColor,\n      popoverMaxHeight,\n      popoverBorderRadius,\n      popoverBorderColor,\n      popoverBorderWidth,\n      ...inputParameters\n    } = style;\n\n    return {\n      input: inputParameters,\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        color: textColor,\n      },\n      placeholder: {\n        marginHorizontal: textMarginHorizontal,\n        color: placeholderColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      label: {\n        marginBottom: labelMarginBottom,\n        fontSize: labelFontSize,\n        lineHeight: labelLineHeight,\n        fontWeight: labelFontWeight,\n        color: labelColor,\n      },\n      caption: {\n        marginTop: captionMarginTop,\n        fontSize: captionFontSize,\n        fontWeight: captionFontWeight,\n        lineHeight: captionLineHeight,\n        color: captionColor,\n      },\n      popover: {\n        maxHeight: popoverMaxHeight,\n        borderRadius: popoverBorderRadius,\n        borderWidth: popoverBorderWidth,\n        borderColor: popoverBorderColor,\n      },\n    };\n  };\n\n  private setOptionsListVisible = (): void => {\n    const hasData: boolean = this.data.length > 0;\n    hasData && this.setState({ listVisible: true }, this.onListVisible);\n  };\n\n  private setOptionsListInvisible = (): void => {\n    this.setState({ listVisible: false }, this.onListInvisible);\n  };\n\n  private createExpandAnimation = (toValue: number): Animated.CompositeAnimation => {\n    return Animated.timing(this.expandAnimation, {\n      toValue,\n      duration: CHEVRON_ANIM_DURATION,\n      useNativeDriver: Platform.OS !== 'web',\n    });\n  };\n\n  private cloneItemWithProps = (el: SelectItemElement, props: SelectItemProps): SelectItemElement => {\n    const nestedElements = React.Children.map(el.props.children, (nestedEl: SelectItemElement, index: number) => {\n      const descriptor = this.service.createDescriptorForNestedElement(nestedEl, props.descriptor, index);\n      const selected: boolean = this.service.isSelected(descriptor, this.selectedIndices);\n\n      return this.cloneItemWithProps(nestedEl, { ...props, descriptor, selected, disabled: false });\n    });\n\n    return React.cloneElement(el, { ...props, ...el.props }, nestedElements);\n  };\n\n  private renderItem = (info: ListRenderItemInfo<SelectItemElement>): SelectItemElement => {\n    const descriptor = this.service.createDescriptorForElement(info.item, this.isMultiSelect, info.index);\n    const selected: boolean = this.service.isSelected(descriptor, this.selectedIndices);\n    const disabled: boolean = this.service.isDisabled(descriptor);\n\n    return this.cloneItemWithProps(info.item, { descriptor, selected, disabled, onPress: this.onItemPress });\n  };\n\n  private renderDefaultIconElement = (evaStyle): React.ReactElement => {\n    return (\n      <Animated.View style={{ transform: [{ rotate: this.expandToRotateInterpolation }] }}>\n        <ChevronDown {...evaStyle} fill={evaStyle.tintColor}/>\n      </Animated.View>\n    );\n  };\n\n  private renderInputElement = (props: SelectProps, evaStyle): TouchableWebElement => {\n    const value = props.value || this.service.toStringSelected(this.selectedIndices);\n    const textStyle: TextStyle = value && evaStyle.text;\n\n    return (\n      <TouchableWeb\n        style={[styles.input, evaStyle.input]}\n        onPress={this.onPress}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n        disabled={props.disabled}>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={props.accessoryLeft}\n        />\n        <FalsyText\n          style={[styles.text, evaStyle.placeholder, textStyle]}\n          numberOfLines={1}\n          ellipsizeMode='tail'\n          component={value || props.placeholder}\n        />\n        <FalsyFC\n          style={evaStyle.icon}\n          component={props.accessoryRight}\n          fallback={this.renderDefaultIconElement(evaStyle.icon)}\n        />\n      </TouchableWeb>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, label, caption, children, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <View style={[styles.container, style]}>\n        <FalsyText\n          style={[styles.label, evaStyle.label]}\n          component={label}\n        />\n        <Popover\n          ref={this.popoverRef}\n          style={[styles.popover, evaStyle.popover]}\n          visible={this.state.listVisible}\n          fullWidth={true}\n          anchor={() => this.renderInputElement(touchableProps, evaStyle)}\n          onBackdropPress={this.onBackdropPress}>\n          <List\n            style={styles.list}\n            data={this.data}\n            bounces={false}\n            renderItem={this.renderItem}\n          />\n        </Popover>\n        <FalsyText\n          style={[styles.caption, evaStyle.caption]}\n          component={caption}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n  },\n  input: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: 'red',\n  },\n  popover: {\n    overflow: 'hidden',\n  },\n  list: {\n    flexGrow: 0,\n  },\n  text: {\n    flex: 1,\n    textAlign: 'left',\n  },\n  label: {\n    textAlign: 'left',\n  },\n  caption: {\n    textAlign: 'left',\n  },\n});\n\nexport const Select = styled<SelectProps>(SelectComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TargetedEvent,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  FalsyFC,\n  FalsyText,\n  PropsService,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport {\n  CheckBox,\n  CheckBoxElement,\n} from '../checkbox/checkbox.component';\nimport { TextProps } from '../text/text.component';\nimport { SelectItemDescriptor } from './select.service';\n\ntype SelectItemStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | 'grouped' | string;\n}>;\n\ntype TouchableSelectProps = Overwrite<TouchableWebProps, {\n  onPress?: (descriptor: SelectItemDescriptor, event?: GestureResponderEvent) => void;\n}>;\n\nexport interface SelectItemProps extends TouchableSelectProps, SelectItemStyledProps {\n  title?: RenderProp<TextProps> | React.ReactText;\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<Partial<ImageProps>>;\n  selected?: boolean;\n  descriptor?: SelectItemDescriptor;\n}\n\nexport type SelectItemElement = React.ReactElement<SelectItemProps>;\n\n/**\n * A single item in Select.\n * Items should be rendered within Select or SelectGroup children to provide a usable component.\n *\n * @extends React.Component\n *\n * @property {ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the item.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the *title*.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the *title*.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example SelectItemSimpleUsage\n */\nclass SelectItemComponent extends React.Component<SelectItemProps> {\n\n  static styledComponentName: string = 'SelectOption';\n\n  private get isMultiSelect(): boolean {\n    if (this.props.descriptor) {\n      return this.props.descriptor.multiSelect;\n    }\n    return false;\n  }\n\n  private onMouseEnter = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n    this.props.onMouseEnter && this.props.onMouseEnter(e);\n  };\n\n  private onMouseLeave = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onMouseLeave && this.props.onMouseLeave(e);\n  };\n\n  private onFocus = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n    this.props.onFocus && this.props.onFocus(e);\n  };\n\n  private onBlur = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onBlur && this.props.onBlur(e);\n  };\n\n  private onPress = (e: GestureResponderEvent): void => {\n    this.props.onPress && this.props.onPress(this.props.descriptor, e);\n  };\n\n  private onPressIn = (e: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n    this.props.onPressIn && this.props.onPressIn(e);\n  };\n\n  private onPressOut = (e: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n    this.props.onPressOut && this.props.onPressOut(e);\n  };\n\n  private onAccessoryCheckedChange = (): void => {\n    this.props.onPress && this.props.onPress(this.props.descriptor);\n  };\n\n  private getComponentStyle = (style: StyleType) => {\n    const { paddingHorizontal, paddingLeft, paddingVertical, backgroundColor } = style;\n\n    const textStyles = PropsService.allWithPrefix(style, 'text');\n    const iconStyles = PropsService.allWithPrefix(style, 'icon');\n\n    return {\n      container: {\n        paddingHorizontal: paddingHorizontal,\n        paddingLeft: paddingLeft,\n        paddingVertical: paddingVertical,\n        backgroundColor: backgroundColor,\n      },\n      text: {\n        marginHorizontal: textStyles.textMarginHorizontal,\n        fontFamily: textStyles.textFontFamily,\n        fontSize: textStyles.textFontSize,\n        fontWeight: textStyles.textFontWeight,\n        lineHeight: textStyles.textLineHeight,\n        color: textStyles.textColor,\n      },\n      icon: {\n        width: iconStyles.iconWidth,\n        height: iconStyles.iconHeight,\n        marginHorizontal: iconStyles.iconMarginHorizontal,\n        tintColor: iconStyles.iconTintColor,\n      },\n    };\n  };\n\n  private renderAccessory = (evaStyle): CheckBoxElement => {\n    if (!this.isMultiSelect) {\n      return null;\n    }\n\n    return (\n      <CheckBox\n        style={evaStyle}\n        checked={this.props.selected}\n        onChange={this.onAccessoryCheckedChange}\n      />\n    );\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, title, accessoryLeft, accessoryRight, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[styles.container, evaStyle.container, style]}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={accessoryLeft}\n          fallback={this.renderAccessory(evaStyle.icon)}\n        />\n        <FalsyText\n          style={[styles.text, evaStyle.text]}\n          component={title}\n        />\n        <FalsyFC\n          style={evaStyle.icon}\n          component={accessoryRight}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  text: {\n    flex: 1,\n    textAlign: 'left',\n  },\n});\n\nexport const SelectItem = styled<SelectItemProps>(SelectItemComponent);\n","import React from 'react';\nimport { ChildrenWithProps } from '../../devsupport';\nimport {\n  CheckBox,\n  CheckBoxElement,\n  CheckBoxProps,\n} from '../checkbox/checkbox.component';\nimport {\n  SelectItem,\n  SelectItemElement,\n  SelectItemProps,\n} from './selectItem.component';\n\nexport interface SelectGroupProps extends SelectItemProps {\n  children?: ChildrenWithProps<SelectItemProps>;\n}\n\nexport type SelectGroupElement = React.ReactElement<SelectItemProps>;\n\n/**\n * A group of items displayed in Select.\n * Groups should be rendered within Select and contain SelectItem components to provide a useful component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<SelectItemProps> | ReactElement<SelectItemProps>[]} children -\n * items to be rendered within group.\n *\n * @property {ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the group.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the *title*.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the *title*.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example SelectWithGroups\n */\nexport class SelectGroup extends React.Component<SelectGroupProps> {\n\n  private get isMultiSelect(): boolean {\n    if (this.props.descriptor) {\n      return this.props.descriptor.multiSelect;\n    }\n    return false;\n  }\n\n  private get groupAccessoryState(): CheckBoxProps {\n    const nestedElements = React.Children.toArray(this.props.children) as SelectItemElement[];\n    const selectedElements = nestedElements.filter(el => el.props.selected);\n\n    const indeterminate: boolean = selectedElements.length > 0 && selectedElements.length < nestedElements.length;\n    const checked: boolean = selectedElements.length === nestedElements.length;\n\n    return { checked, indeterminate };\n  }\n\n  private get groupAccessoryProps(): CheckBoxProps {\n    return {\n      ...this.createAccessoryProps(this.props),\n      ...this.groupAccessoryState,\n    };\n  }\n\n  private createAccessoryProps = (props: SelectItemProps): CheckBoxProps => {\n    return {\n      checked: props.selected,\n      onChange: () => props.onPress && props.onPress(props.descriptor),\n    };\n  };\n\n  private createGroupedItemProps = (props: SelectItemProps): SelectItemProps => {\n    const accessoryProps: CheckBoxProps = this.createAccessoryProps(props);\n    return {\n      appearance: 'grouped',\n      accessoryLeft: evaProps => this.renderAccessory({ ...evaProps, ...accessoryProps }),\n    };\n  };\n\n  private renderAccessory = (props: CheckBoxProps): CheckBoxElement => {\n    if (!this.isMultiSelect) {\n      return null;\n    }\n\n    return (\n      <CheckBox {...props} />\n    );\n  };\n\n  private renderGroupedItems = (source: ChildrenWithProps<SelectItemProps>): SelectItemElement[] => {\n    return React.Children.map(source, (item: SelectItemElement, key: number): SelectItemElement => {\n      const groupedProps: SelectItemProps = this.createGroupedItemProps(item.props);\n      return React.cloneElement(item, { key, ...groupedProps, ...item.props });\n    });\n  };\n\n  public render(): React.ReactElement {\n    const { children, ...itemProps } = this.props;\n\n    return (\n      <React.Fragment>\n        <SelectItem\n          accessoryLeft={evaProps => this.renderAccessory({ ...evaProps, ...this.groupAccessoryProps })}\n          {...itemProps}\n        />\n        {this.renderGroupedItems(children)}\n      </React.Fragment>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport {\n  IconPack,\n  IconProvider,\n} from './type';\n\nfunction throwPackNotFoundError(name: string) {\n  const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n  const message: string = [\n    `\\nIcon: Icon Pack '${name}' is not registered`,\n    'Using UI Kitten components is only possible with configuring ApplicationProvider.',\n    `📖 Documentation: ${docRoot}/guides/setting-up-icons`,\n  ].join('\\n');\n\n  throw Error(message);\n}\n\nfunction throwIconNotFoundError(name: string, pack: string) {\n  const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n  const message: string = [\n    `\\nIcon: '${name}' icon is not registered in pack '${pack}'.`,\n    'Check icon name or consider switching icon pack.',\n    `📖 Documentation: ${docRoot}/guides/setting-up-icons`,\n  ].join('\\n');\n\n  throw Error(message);\n}\n\nexport interface RegisteredIcon<T> {\n  name: string;\n  pack: string;\n  icon: IconProvider<T>;\n}\n\ntype IconProps = any;\n\n/**\n * This service allows to register multiple icon packs to use them later within\n * `<Icon/>` component.\n */\nclass RegistryService {\n\n  protected packs: Map<string, IconPack<IconProps>> = new Map();\n  protected defaultPack: string;\n\n  /**\n   * Registers multiple icon packs and sets the first one as default if there is no default packs\n   *\n   * @param {IconPack[]} packs - array of icon packs\n   */\n  public register<T>(...packs: IconPack<T>[]) {\n    packs.forEach((pack: IconPack<IconProps>) => {\n      this.registerIconPack(pack);\n    });\n  }\n\n  /**\n   * Sets pack as default\n   *\n   * @param {string} name\n   * @throws {Error} if pack is nor registered\n   */\n  public setDefaultIconPack(name: string) {\n    if (!this.packs.has(name)) {\n      throwPackNotFoundError(name);\n    }\n\n    this.defaultPack = name;\n  }\n\n  /**\n   * @param {string} name\n   * @returns {IconPack} pack by name\n   */\n  public getIconPack<T>(name: string): IconPack<T> {\n    return this.packs.get(name);\n  }\n\n  /**\n   * @param {string} name - icon name\n   * @param {string} pack - pack name\n   * @throws {Error} if requested icon pack is not registered\n   * @returns {RegisteredIcon} - registered icon of a requested/default pack\n   */\n  public getIcon<T>(name: string, pack?: string): RegisteredIcon<T> {\n    const iconsPack: IconPack<T> = pack ? this.getPackOrThrow(pack) : this.getDefaultPack();\n\n    return {\n      name,\n      pack: iconsPack.name,\n      icon: this.getIconFromPack(name, iconsPack),\n    };\n  }\n\n  /**\n   * Registers single icon pack\n   *\n   * @param {IconPack} pack - icon pack to register\n   */\n  protected registerIconPack<T>(pack: IconPack<T>) {\n    this.packs.set(pack.name, pack);\n  }\n\n  protected getPackOrThrow<T>(name: string): IconPack<T> {\n    const pack: IconPack<IconProps> = this.packs.get(name);\n\n    if (!pack) {\n      throwPackNotFoundError(name);\n    }\n\n    return pack;\n  }\n\n  protected getDefaultPack<T>(): IconPack<T> {\n    return this.getIconPack(this.defaultPack);\n  }\n\n  protected getIconFromPack<T>(name: string, pack: IconPack<T>, shouldThrow = true): IconProvider<T> {\n    if (shouldThrow && !pack.icons[name]) {\n      throwIconNotFoundError(name, pack.name);\n    }\n\n    return pack.icons[name];\n  }\n}\n\nexport const IconRegistryService = new RegistryService();\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  ViewProps,\n} from 'react-native';\nimport {\n  getIconAnimation,\n  IconAnimation,\n  IconAnimationRegistry,\n} from './iconAnimation';\nimport {\n  IconRegistryService,\n  RegisteredIcon,\n} from './service/iconRegistry.service';\nimport { AnimationConfig } from '../animation';\n\n// This is basically needed to avoid generics in required props\n// In general, could be SVGProps if using @ui-kitten/eva-icons or ImageProps if using Image.\ntype WrappedElementProps = any;\n\nexport type IconProps<T = WrappedElementProps> = T & {\n  name: string;\n  pack?: string;\n  animation?: keyof IconAnimationRegistry;\n  animationConfig?: AnimationConfig;\n};\n\nexport type IconElement<T = WrappedElementProps> = React.ReactElement<IconProps<T>>;\n\n/**\n * Animated Icon component.\n * Render any ReactElement registered within IconRegistry or SVG icons in case of using `@ui-kitten/eva-icons`.\n *\n * @extends React.Component\n *\n * @method {(callback?: Animated.EndCallback) => void} startAnimation - Toggle animation to start.\n *\n * @method {() => void} stopAnimation - Toggle animation to stop.\n *\n * @property {string} name - A name of icon registered in a specific pack.\n *\n * @property {string} pack - A name of icon pack registered in IconRegistry that is able to provide\n * an icon for a given name.\n *\n * @property {string} animation - Animation name. Can be `zoom`, `pulse` and `shake`.\n * Defaults to *zoom*.\n *\n * @property {AnimationConfig} animationConfig - Animation config.\n *\n * @property {any} ...props - Accepts any props\n * depending on the component registered in IconRegistry for a given `name` property.\n * In case of using `@ui-kitten/eva-icons` package, Icon accepts any props for react-native-svg component.\n *\n * @overview-example IconSimpleUsage\n *\n * @overview-example IconWithinComponents\n *\n * @overview-example IconAnimation\n */\nexport class Icon<T> extends React.Component<IconProps<T>> {\n\n  static defaultProps: Partial<IconProps> = {\n    animation: 'zoom',\n  };\n\n  private readonly animation: IconAnimation;\n\n  constructor(props: IconProps<T>) {\n    super(props);\n    this.animation = getIconAnimation(props.animation, props.animationConfig);\n  }\n\n  public componentWillUnmount(): void {\n    this.animation.release();\n  }\n\n  public startAnimation = (callback?: Animated.EndCallback): void => {\n    this.animation.start(callback);\n  };\n\n  public stopAnimation = (): void => {\n    this.animation.stop();\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { name, pack, animation, ...iconProps } = this.props;\n    const registeredIcon: RegisteredIcon<T> = IconRegistryService.getIcon(name, pack);\n\n    return (\n      <Animated.View {...this.animation.toProps()}>\n        {registeredIcon.icon.toReactElement(iconProps as T)}\n      </Animated.View>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ViewStyle } from 'react-native';\nimport {\n  Animation,\n  PulseAnimation,\n  ShakeAnimation,\n  ZoomAnimation,\n  AnimationConfig,\n} from '../animation';\n\nexport type IconAnimation = Animation<any, ViewStyle>;\n\nexport interface IconAnimationRegistry {\n  zoom: IconAnimation;\n  pulse: IconAnimation;\n  shake: IconAnimation;\n}\n\nexport function getIconAnimation(animation?: keyof IconAnimationRegistry, config?: AnimationConfig): IconAnimation {\n  switch (animation) {\n    case 'zoom':\n      return new ZoomAnimation(config);\n    case 'pulse':\n      return new PulseAnimation(config);\n    case 'shake':\n      return new ShakeAnimation(config);\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { IconRegistryService } from './service/iconRegistry.service';\nimport { IconPack } from './service/type';\n\ntype IconsProp = IconPack<any> | IconPack<any>[];\n\nexport interface IconRegistryProps {\n  icons: IconsProp;\n  defaultIcons?: string;\n}\n\nexport type IconRegistryElement = React.ReactElement<IconRegistryProps>;\n\n/**\n * Registers one or more icon packs for later usage in Icon component.\n * Renders nothing, but should be added as a child of an Application Root.\n *\n * @extends React.Component\n *\n * @property {IconPack<any> | IconPack<any>[]} icons - Icon packs to register.\n * @property {string} defaultIcons - A name of an icon pack that is used by default.\n *\n * @overview-example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { mapping, light as lightTheme } from '@eva-design/eva';\n * import { ApplicationProvider, IconRegistry, Layout, Text, Icon, Button } from '@ui-kitten/components';\n * import { EvaIconsPack } from '@ui-kitten/eva-icons'; // <-- Make sure it is installed. npm i @ui-kitten/eva-icons\n *\n * const LikeIcon = (props) => (\n *   <Icon {...props} name='like' />\n * );\n *\n * const App = () => (\n *   <React.Fragment>\n *     <IconRegistry icons={EvaIconsPack}/>\n *     <ApplicationProvider mapping={mapping} theme={lightTheme}>\n *       <Layout style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n *         <Text>Welcome to UI Kitten</Text>\n *         <Button accessoryLeft={LikeIcon}>LIKE</Text>\n *       </Layout>\n *     </ApplicationProvider>\n *   <React.Fragment>\n * );\n * ```\n */\nexport class IconRegistry extends React.Component<IconRegistryProps> {\n\n  static defaultProps: Partial<IconRegistryProps> = {\n    icons: [],\n  };\n\n  private findDefaultIconPack = (packs: IconPack<any>[], name: string): IconPack<any> => {\n    const requestedPackIndex: number = packs.findIndex((pack: IconPack<any>): boolean => {\n      return pack.name === name;\n    });\n\n    return packs[Math.max(0, requestedPackIndex)];\n  };\n\n  private registerIcons = (source: IconsProp, defaultPack: string): void => {\n    const packs: IconPack<any>[] = Array.isArray(source) ? source : [source];\n    const defaultIconPack: IconPack<any> = this.findDefaultIconPack(packs, defaultPack);\n\n    IconRegistryService.register(...packs);\n    IconRegistryService.setDefaultIconPack(defaultIconPack.name);\n  };\n\n  public render(): React.ReactNode {\n    const { icons, defaultIcons } = this.props;\n    this.registerIcons(icons, defaultIcons);\n\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  styled,\n  StyledComponentProps,\n} from '../../theme';\n\ntype LayoutStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\nexport interface LayoutProps extends ViewProps, LayoutStyledProps {\n  children?: React.ReactNode;\n  level?: '1' | '2' | '3' | '4' | string;\n}\n\nexport type LayoutElement = React.ReactElement<LayoutProps>;\n\n/**\n * Overall page container.\n *\n * @extends React.Component\n *\n * @property {ReactNode} children - Component to render within the layout.\n *\n * @property {string} level - Background color level of component.\n * Can be `1`, `2`, `3` or `4`.\n * Defaults to *1*.\n * Use layout levels when needed to highlight the container relative to another.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example LayoutSimpleUsage\n *\n * @overview-example LayoutLevel\n */\nexport class LayoutComponent extends React.Component<LayoutProps> {\n\n  static styledComponentName: string = 'Layout';\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, ...viewProps } = this.props;\n\n    return (\n      <View\n        {...viewProps}\n        style={[eva.style, style]}\n      />\n    );\n  }\n}\n\nexport const Layout = styled<LayoutProps>(LayoutComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  FlexStyle,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  MeasureElement,\n  MeasuringElement,\n  Frame,\n  Point,\n} from '../../devsupport';\nimport {\n  ModalPresentingConfig,\n  ModalService,\n} from '../../theme';\n\nexport interface ModalProps extends ViewProps, ModalPresentingConfig {\n  visible?: boolean;\n  children?: React.ReactNode;\n}\n\nexport type ModalElement = React.ReactElement<ModalProps>;\n\ninterface State {\n  contentFrame: Frame;\n  forceMeasure: boolean;\n}\n\n/**\n * A wrapper that presents content above an enclosing view.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets modal visible.\n *\n * @method {() => void} hide - Sets modal invisible.\n *\n * @property {ReactNode} children - Component to render within the modal.\n *\n * @property {boolean} visible - Whether component is visible.\n * Defaults to false.\n *\n * @property {() => void} onBackdropPress - Called when the modal is visible and the view below it was touched.\n * Useful when needed to close the modal on outside touches.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Style of backdrop.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example ModalSimpleUsage\n *\n * @overview-example ModalWithBackdrop\n */\nexport class Modal extends React.PureComponent<ModalProps, State> {\n\n  public state: State = {\n    contentFrame: Frame.zero(),\n    forceMeasure: false,\n  };\n\n  private modalId: string;\n  private contentPosition: Point = Point.outscreen();\n\n  private get contentFlexPosition(): FlexStyle {\n    const derivedStyle: ViewStyle = StyleSheet.flatten(this.props.style || {});\n    const { x: centerX, y: centerY } = this.contentPosition;\n    // @ts-ignore\n    return { left: derivedStyle.left || centerX, top: derivedStyle.top || centerY };\n  }\n\n  private get backdropConfig(): ModalPresentingConfig {\n    const { onBackdropPress, backdropStyle } = this.props;\n    return { onBackdropPress, backdropStyle };\n  }\n\n  public show = (): void => {\n    this.modalId = ModalService.show(this.renderMeasuringContentElement(), this.backdropConfig);\n  };\n\n  public hide = (): void => {\n    this.modalId = ModalService.hide(this.modalId);\n  };\n\n  public componentDidMount(): void {\n    if (!this.modalId && this.props.visible) {\n      this.show();\n      return;\n    }\n  }\n\n  public componentDidUpdate(prevProps: ModalProps): void {\n    if (!this.modalId && this.props.visible && !this.state.forceMeasure) {\n      this.setState({ forceMeasure: true });\n      return;\n    }\n\n    if (!this.modalId && this.props.visible) {\n      this.show();\n      return;\n    }\n\n    if (this.modalId && !this.props.visible) {\n      this.hide();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.hide();\n  }\n\n  private onContentMeasure = (contentFrame: Frame): void => {\n    this.state.contentFrame = contentFrame;\n\n    const displayFrame: Frame = this.state.contentFrame.centerOf(Frame.window());\n    this.contentPosition = displayFrame.origin;\n\n    ModalService.update(this.modalId, this.renderContentElement());\n  };\n\n  private renderContentElement = (): React.ReactElement<ViewProps> => {\n    return (\n      <View\n        {...this.props}\n        style={[this.props.style, styles.modalView, this.contentFlexPosition]}\n      />\n    );\n  };\n\n  private renderMeasuringContentElement = (): MeasuringElement => {\n    return (\n      <MeasureElement onMeasure={this.onContentMeasure}>\n        {this.renderContentElement()}\n      </MeasureElement>\n    );\n  };\n\n  public render(): React.ReactNode {\n    if (this.modalId && this.props.visible) {\n      ModalService.update(this.modalId, this.renderContentElement());\n    }\n\n    return null;\n  }\n}\n\nconst styles = StyleSheet.create({\n  modalView: {\n    position: 'absolute',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport { ChildrenWithProps } from '../../devsupport';\nimport {\n  styled,\n  StyleType,\n} from '../../theme';\nimport {\n  Menu,\n  MenuElement,\n  MenuProps,\n} from '../menu/menu.component';\nimport { MenuItemProps } from '../menu/menuItem.component';\nimport {\n  Popover,\n  PopoverElement,\n  PopoverProps,\n} from '../popover/popover.component';\n\ntype OverflowMenuPopoverProps = Overwrite<PopoverProps, {\n  children?: ChildrenWithProps<MenuItemProps>;\n}>;\n\nexport type OverflowMenuProps = MenuProps & OverflowMenuPopoverProps;\n\nexport type OverflowMenuElement = React.ReactElement<OverflowMenuProps>;\n\n/**\n * Displays a menu relative to another view.\n * Menu should contain MenuItem components to provide a useful component.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets menu visible.\n *\n * @method {() => void} hide - Sets menu invisible.\n *\n * @property {ReactElement<MenuItemProps> | ReactElement<MenuItemProps>[]} children -\n * items to be rendered within menu.\n *\n * @property {() => ReactElement} anchor - A component relative to which content component will be shown.\n *\n * @property {boolean} visible - Whether menu is visible.\n * Defaults to false.\n *\n * @property {IndexPath} selectedIndex - Index of selected item.\n * IndexPath `row: number, section?: number` - position of element in sectioned list.\n * Updating this property is not required if marking items selected is not needed.\n *\n * @property {(IndexPath) => void} onSelect - Called when item is pressed.\n *\n * @property {() => void} onBackdropPress - Called when popover is visible and the underlying view was touched.\n * Useful when needed to close the modal on outside touches.\n *\n * @property {string | PopoverPlacement} placement - Position of the options list relative to the `children`.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Defaults to *bottom*.\n *\n * @property {boolean} fullWidth - Whether a menu should take the width of `anchor`.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Style of backdrop.\n **\n * @overview-example OverflowMenuSimpleUsage\n *\n * @overview-example OverflowMenuPlacement\n *\n * @overview-example OverflowMenuWithIcons\n *\n * @overview-example OverflowMenuStyledBackdrop\n *\n * @overview-example OverflowMenuWithDisabledItems\n *\n * @example OverflowMenuWithoutDivider\n *\n * @example OverflowMenuExternalSourceIcons\n */\nexport class OverflowMenuComponent extends React.Component<OverflowMenuProps> {\n\n  static styledComponentName: string = 'OverflowMenu';\n\n  private popoverRef: React.RefObject<Popover> = React.createRef();\n\n  private get itemsCount(): number {\n    return React.Children.count(this.props.children);\n  }\n\n  public show = (): void => {\n    this.popoverRef.current.show();\n  };\n\n  public hide = (): void => {\n    this.popoverRef.current.hide();\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const { indicatorBackgroundColor, ...containerParameters } = source;\n\n    return {\n      container: containerParameters,\n      indicator: {\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private renderPopoverContentElement = (): MenuElement => {\n    const { eva, children, style, ...menuProps } = this.props;\n\n    return (\n      <Menu\n        {...menuProps}\n        style={styles.menu}\n        initialNumToRender={this.itemsCount}\n        showsVerticalScrollIndicator={false}\n        bounces={false}>\n        {this.props.children}\n      </Menu>\n    );\n  };\n\n  public render(): PopoverElement {\n    const { eva, style, children, appearance, ...popoverProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n    const contentElement: MenuElement = this.renderPopoverContentElement();\n\n    return (\n      <Popover\n        {...popoverProps}\n        ref={this.popoverRef}\n        style={[evaStyle.container, style]}>\n        {contentElement}\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  menu: {\n    flexGrow: 0,\n  },\n});\n\nexport const OverflowMenu = styled<OverflowMenuProps>(OverflowMenuComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TargetedEvent,\n  View,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  EvaStatus,\n  FalsyText,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\n\ntype RadioStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\nexport interface RadioProps extends TouchableWebProps, RadioStyledProps {\n  children?: RenderProp<TextProps> | React.ReactText;\n  checked?: boolean;\n  onChange?: (checked: boolean) => void;\n  status?: EvaStatus;\n}\n\nexport type RadioElement = React.ReactElement<RadioProps>;\n\n/**\n * Radio buttons allow the user to select one option from a set.\n * Radios should be rendered within RadioGroup to provide a usable component.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Whether component is checked.\n * Defaults to *false*.\n *\n * @property {(boolean) => void} onChange - Called when radio\n * should switch it's value.\n *\n * @property {ReactText | (TextProps) => ReactElement} children - String, number or a function component\n * to render near the checkbox.\n * If it is a function, expected to return a Text.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example RadioSimpleUsage\n *\n * @overview-example RadioStates\n *\n * @overview-example RadioStatus\n *\n * @example RadioStyling\n */\nexport class RadioComponent extends React.Component<RadioProps> {\n\n  static styledComponentName: string = 'Radio';\n\n  private onMouseEnter = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(e);\n    }\n  };\n\n  private onMouseLeave = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n  };\n\n  private onFocus = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n  };\n\n  private onBlur = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n  };\n\n  private onPress = (): void => {\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconBorderRadius,\n      iconTintColor,\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      selectContainer: containerParameters,\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        borderRadius: iconBorderRadius,\n        backgroundColor: iconTintColor,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n    };\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, children, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[styles.container, style]}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <View style={styles.highlightContainer}>\n          <View style={[evaStyle.highlight, styles.highlight]}/>\n          <View style={[evaStyle.selectContainer, styles.selectContainer]}>\n            <View style={evaStyle.icon}/>\n          </View>\n        </View>\n        <FalsyText\n          style={evaStyle.text}\n          component={children}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  highlightContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  highlight: {\n    position: 'absolute',\n  },\n});\n\nexport const Radio = styled<RadioProps>(RadioComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport { ChildrenWithProps } from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport {\n  RadioElement,\n  RadioProps,\n} from '../radio/radio.component';\n\ntype RadioGroupStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\nexport interface RadioGroupProps extends ViewProps, RadioGroupStyledProps {\n  children?: ChildrenWithProps<RadioProps>;\n  selectedIndex?: number;\n  onChange?: (index: number) => void;\n}\n\nexport type RadioGroupElement = React.ReactElement<RadioGroupProps>;\n\n/**\n * Provides to select a single state from multiple options.\n * RadioGroup should contain Radio components to provide a useful component.\n *\n * @extends React.Component\n *\n * @property {number} selectedIndex - Index of currently checked radio.\n *\n * @property {(number) => void} onChange - Called when one of the radios is pressed.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example RadioGroupSimpleUsage\n */\nclass RadioGroupComponent extends React.Component<RadioGroupProps> {\n\n  static styledComponentName: string = 'RadioGroup';\n\n  static defaultProps: Partial<RadioGroupProps> = {\n    selectedIndex: -1,\n  };\n\n  private onRadioChange = (index: number): void => {\n    if (this.props.onChange) {\n      this.props.onChange(index);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const { itemMarginVertical, ...containerParameters } = source;\n\n    return {\n      container: containerParameters,\n      item: {\n        marginVertical: itemMarginVertical,\n      },\n    };\n  };\n\n  private renderRadioElements = (source: ChildrenWithProps<RadioProps>, style: StyleType): RadioElement[] => {\n    return React.Children.map(source, (element: RadioElement, index: number): RadioElement => {\n      return React.cloneElement(element, {\n        key: index,\n        style: [style, element.props.style],\n        checked: this.props.selectedIndex === index,\n        onChange: () => this.onRadioChange(index),\n      });\n    });\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, children, ...viewProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    const radioElements: RadioElement[] = this.renderRadioElements(children, evaStyle.item);\n\n    return (\n      <View\n        {...viewProps}\n        style={[evaStyle.container, style]}>\n        {radioElements}\n      </View>\n    );\n  }\n}\n\nexport const RadioGroup = styled<RadioGroupProps>(RadioGroupComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Animated,\n  Easing,\n  EasingFunction,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from '../animation/animation';\n\nconst PI: number = 180;\nconst PI2: number = 360;\nconst OFFSET_MIN: number = PI / 12;\nconst OFFSET_MAX: number = PI / 6;\n\nconst BaseBezierEasing: EasingFunction = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n\nconst StartArcEasing: EasingFunction = (progress: number): number => {\n  return -PI + OFFSET_MIN + (PI - OFFSET_MAX) * BaseBezierEasing(progress);\n};\n\nconst EndArcEasing: EasingFunction = (progress: number): number => {\n  return PI2 - OFFSET_MIN + (-PI + OFFSET_MAX) * BaseBezierEasing(progress);\n};\n\nconst DEFAULT_CONFIG: SpinnerAnimationConfig = {\n  duration: 2400,\n  easing: Easing.linear,\n  cycles: -1,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface SpinnerAnimationStyle {\n  container: ViewStyle;\n  start: ViewStyle;\n  end: ViewStyle;\n}\n\nexport type SpinnerAnimationConfig = AnimationConfig & TimingAnimationConfig;\n\n/**\n * Animates a Spinner in a Material Design way.\n *\n * Thanks these guys for open sourcing the algorithm: https://github.com/n4kz/react-native-indicators\n */\nexport class SpinnerAnimation extends Animation<SpinnerAnimationConfig, SpinnerAnimationStyle> {\n\n  private animationValue: Animated.Value;\n  private animationFrames: number[];\n  private arcSize: number;\n\n  protected get animation(): Animated.CompositeAnimation {\n    return Animated.timing(this.animationValue, { toValue: 1.0, ...this.config });\n  }\n\n  constructor(arcSize: number, config?: SpinnerAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.arcSize = arcSize;\n    this.animationValue = new Animated.Value(0);\n    this.animationFrames = this.createFrameRange(this.config.duration);\n  }\n\n  public start(callback?: Animated.EndCallback) {\n    // reset animation value before the next animation cycle\n    this.animationValue.setValue(0);\n    super.start(callback);\n  }\n\n  public stop() {\n    super.stop();\n    this.animationValue.setValue(0);\n  }\n\n  /**\n   * @returns {SpinnerAnimationStyle} - an object that contains container, start and end arcs transform styles.\n   */\n  public toProps(): SpinnerAnimationStyle {\n    const containerInterpolation: Animated.AnimatedInterpolation = this.createContainerInterpolation();\n    const startArcInterpolation: Animated.AnimatedInterpolation = this.createArcInterpolation(StartArcEasing);\n    const endArcInterpolation: Animated.AnimatedInterpolation = this.createArcInterpolation(EndArcEasing);\n\n    return {\n      container: this.toStyleTransformProp(containerInterpolation),\n      start: this.toStyleTransformProp(startArcInterpolation),\n      end: this.toStyleTransformProp(endArcInterpolation, {\n        transform: [{ translateY: -this.arcSize / 2 }],\n      }),\n    };\n  }\n\n  /**\n   * @param {number} duration - animation duration.\n   * @returns an array of frames fitted into animation.\n   */\n  private createFrameRange = (duration: number): number[] => {\n    const numberOfFrames: number = 60 * duration / 1000;\n\n    return new Array(numberOfFrames).fill(0);\n  };\n\n  private createContainerInterpolation = (): Animated.AnimatedInterpolation => {\n    return this.animationValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [\n        this.toDegValue(OFFSET_MAX + OFFSET_MIN),\n        this.toDegValue((2 * PI2 + OFFSET_MAX + OFFSET_MIN)),\n      ],\n    });\n  };\n\n  private createArcInterpolation = (easing: EasingFunction): Animated.AnimatedInterpolation => {\n    return this.animationValue.interpolate({\n      inputRange: this.createArcInterpolationInputRange(),\n      outputRange: this.createArcInterpolationOutputRange(easing),\n    });\n  };\n\n  /**\n   * Maps the animation frames into initial animation values specific for each frame.\n   *\n   * @returns a container interpolation input range in a numeric format.\n   */\n  private createArcInterpolationInputRange = (): number[] => {\n    return this.animationFrames.map((item: number, frame: number): number => {\n      return frame / (this.animationFrames.length - 1);\n    });\n  };\n\n  /**\n   * Maps the animation frames into a final animation values specific for each frame.\n   *\n   * @param {(progress: number) => number} easing - Easing function specific for the arc.\n   * @returns an arc interpolation end values eased with an `easing` function in a StyleSheet degree format.\n   */\n  private createArcInterpolationOutputRange = (easing: EasingFunction): string[] => {\n    return this.animationFrames.map((item: number, frame: number): string => {\n      const progress: number = 2 * frame / (this.animationFrames.length - 1);\n      const boundedProgress: number = Math.min(2.0 - progress, progress);\n\n      return this.toDegValue(easing(boundedProgress));\n    });\n  };\n\n  /**\n   * @param {Animated.AnimatedInterpolation} rotate - animated rotation animationValue.\n   * @param {ViewStyle} source - initial StyleSheet object.\n   * @returns a final StyleSheet object with a `rotate` animation value.\n   */\n  private toStyleTransformProp = (rotate: Animated.AnimatedInterpolation, source: ViewStyle = {}): ViewStyle => {\n    const transform = [...(source.transform || []), { rotate }];\n\n    // @ts-ignore: AnimatedInterpolation does not fit RotateTransform type declaration\n    return { ...source, transform };\n  };\n\n  /**\n   * @param {number} source - degrees in a numeric format.\n   * @returns degrees in a StyleSheet format.\n   */\n  private toDegValue = (source: number): string => {\n    return `${source}deg`;\n  };\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  EvaSize,\n  EvaStatus,\n  Size,\n} from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n} from '../../theme';\nimport {\n  SpinnerAnimation,\n  SpinnerAnimationStyle,\n} from './animation';\n\ntype SpinnerStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\nexport interface SpinnerProps extends ViewProps, SpinnerStyledProps {\n  animating?: boolean;\n  status?: EvaStatus;\n  size?: EvaSize;\n}\n\nexport type SpinnerElement = React.ReactElement<SpinnerProps>;\n\ninterface ArcElementStyle {\n  container: ViewStyle;\n  arc: ViewStyle;\n  overflow?: ViewStyle;\n}\n\n/**\n * Displays a loading state of a page or a section.\n *\n * @extends React.Component\n *\n * @property {boolean} animating - Whether component is animating.\n * Default is *true*.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *primary*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Defaults to *medium*.\n *\n * @overview-example SpinnerSimpleUsage\n *\n * @overview-example SpinnerSizes\n *\n * @overview-example SpinnerStatuses\n *\n * @example SpinnerDataLoading\n */\nexport class SpinnerComponent extends React.PureComponent<SpinnerProps> {\n\n  static styledComponentName: string = 'Spinner';\n\n  static defaultProps: Partial<SpinnerProps> = {\n    animating: true,\n  };\n\n  private animation: SpinnerAnimation = new SpinnerAnimation(this.containerSize.height);\n\n  private get containerSize(): Size {\n    const { width, height } = StyleSheet.flatten([this.props.eva.style, this.props.style]);\n    // @ts-ignore: width and height are restricted to be a number\n    return new Size(width, height);\n  }\n\n  public componentDidMount(): void {\n    if (this.props.animating) {\n      this.startAnimation();\n    }\n  }\n\n  public componentDidUpdate(prevProps: SpinnerProps): void {\n    const animatingChanged: boolean = this.props.animating !== prevProps.animating;\n\n    if (animatingChanged && this.props.animating) {\n      this.startAnimation();\n    }\n\n    if (animatingChanged && !this.props.animating) {\n      this.stopAnimation();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.animation.release();\n  }\n\n  private startAnimation = (): void => {\n    this.animation.start();\n  };\n\n  private stopAnimation = (): void => {\n    this.animation.stop();\n  };\n\n  private getComponentStyle = (source: SpinnerAnimationStyle) => {\n    const start: ArcElementStyle = {\n      container: source.container,\n      arc: source.start,\n    };\n\n    const end: ArcElementStyle = {\n      container: source.container,\n      arc: source.end,\n      overflow: { top: this.containerSize.height / 2 },\n    };\n\n    return { start, end };\n  };\n\n  private renderArcElement = (style: ArcElementStyle, size: Size): React.ReactElement<ViewProps> => {\n    const arcSize: Size = new Size(size.width, size.height / 2);\n\n    return (\n      <Animated.View style={[StyleSheet.absoluteFill, style.container, size]}>\n        <View style={[styles.noOverflow, style.overflow, arcSize]}>\n          <Animated.View style={[style.arc, size]}>\n            <View style={[styles.noOverflow, arcSize]}>\n              <View style={[this.props.eva.style, this.props.style]}/>\n            </View>\n          </Animated.View>\n        </View>\n      </Animated.View>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const containerSize: Size = this.containerSize;\n    const evaStyle = this.getComponentStyle(this.animation.toProps());\n\n    return (\n      <View style={containerSize}>\n        {this.renderArcElement(evaStyle.start, containerSize)}\n        {this.renderArcElement(evaStyle.end, containerSize)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  noOverflow: {\n    overflow: 'hidden',\n  },\n});\n\nexport const Spinner = styled<SpinnerProps>(SpinnerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport { ChildrenWithProps } from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport {\n  TabElement,\n  TabProps,\n} from './tab.component';\nimport { TabIndicator } from '../shared/tabIndicator.component';\n\ntype TabBarStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\nexport interface TabBarProps extends ViewProps, TabBarStyledProps {\n  children?: ChildrenWithProps<TabProps>;\n  selectedIndex?: number;\n  onSelect?: (index: number) => void;\n  indicatorStyle?: StyleProp<ViewStyle>;\n}\n\nexport type TabBarElement = React.ReactElement<TabBarProps>;\n\n/**\n * A bar with tabs styled by Eva.\n * TabBar should contain Tab components to provide a useful navigation component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<TabProps> | ReactElement<TabProps>[]} children - Tabs to be rendered within the bar.\n *\n * @property {number} selectedIndex - Index of currently selected tab.\n *\n * @property {(number) => void} onSelect - Called when tab is pressed.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Style of the indicator component.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example TabBarSimpleUsage\n *\n * @overview-example Using with React Navigation\n *\n * ```\n * import React from 'react';\n * import { NavigationContainer } from '@react-navigation/native';\n * import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\n * import { TabBar, Tab, Layout, Text } from '@ui-kitten/components';\n *\n * // React Navigation Top Tabs also requires installation of `react-native-tab-view`\n * // npm i react-native-tab-view\n *\n * const { Navigator, Screen } = createBottomTabNavigator();\n *\n * const UsersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>USERS</Text>\n *   </Layout>\n * );\n *\n * const OrdersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>ORDERS</Text>\n *   </Layout>\n * );\n *\n * const TopTabBar = ({ navigation, state }) => (\n *   <TabBar\n *     selectedIndex={state.index}\n *     onSelect={index => navigation.navigate(state.routeNames[index])}>\n *     <Tab title='USERS'/>\n *     <Tab title='ORDERS'/>\n *   </TabBar>\n * );\n *\n * const TabNavigator = () => (\n *   <Navigator tabBar={props => <TopTabBar {...props} />}>\n *     <Screen name='Users' component={UsersScreen}/>\n *     <Screen name='Orders' component={OrdersScreen}/>\n *   </Navigator>\n * );\n *\n * export const AppNavigator = () => (\n *   <NavigationContainer>\n *     <TabNavigator/>\n *   </NavigationContainer>\n * );\n * ```\n *\n * @overview-example TabBarAccessories\n */\nexport class TabBarComponent extends React.Component<TabBarProps> {\n\n  static styledComponentName: string = 'TabBar';\n\n  static defaultProps: Partial<TabBarProps> = {\n    selectedIndex: 0,\n  };\n\n  private tabIndicatorRef: React.RefObject<TabIndicator> = React.createRef();\n\n  public scrollToIndex(params: { index: number, animated?: boolean }): void {\n    const { current: tabIndicator } = this.tabIndicatorRef;\n\n    tabIndicator.scrollToIndex(params);\n  }\n\n  public scrollToOffset(params: { offset: number, animated?: boolean }): void {\n    const { current: tabIndicator } = this.tabIndicatorRef;\n\n    tabIndicator.scrollToOffset(params);\n  }\n\n  private onTabSelect = (index: number): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(index);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      indicatorHeight,\n      indicatorBorderRadius,\n      indicatorBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      item: {},\n      indicator: {\n        height: indicatorHeight,\n        borderRadius: indicatorBorderRadius,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private isTabSelected = (index: number): boolean => {\n    return index === this.props.selectedIndex;\n  };\n\n  private renderTabElement = (element: TabElement, index: number): TabElement => {\n    return React.cloneElement(element, {\n      key: index,\n      style: [styles.item, element.props.style],\n      selected: this.isTabSelected(index),\n      onSelect: () => this.onTabSelect(index),\n    });\n  };\n\n  private renderTabElements = (source: ChildrenWithProps<TabProps>): TabElement[] => {\n    return React.Children.map(source, this.renderTabElement);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, indicatorStyle, selectedIndex, children, ...viewProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n    const tabElements: TabElement[] = this.renderTabElements(children);\n\n    return (\n      <View>\n        <View\n          {...viewProps}\n          style={[evaStyle.container, styles.container, style]}>\n          {tabElements}\n        </View>\n        <TabIndicator\n          ref={this.tabIndicatorRef}\n          style={[evaStyle.indicator, styles.indicator, indicatorStyle]}\n          selectedPosition={selectedIndex}\n          positions={tabElements.length}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  item: {\n    flex: 1,\n  },\n  indicator: {},\n});\n\nexport const TabBar = styled<TabBarProps>(TabBarComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  PanResponder,\n  PanResponderCallbacks,\n  PanResponderGestureState,\n  PanResponderInstance,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ChildrenWithProps,\n  RTLService,\n} from '../../devsupport';\n\nexport interface ViewPagerProps<ChildrenProps = {}> extends ViewProps {\n  children?: ChildrenWithProps<ChildrenProps>;\n  selectedIndex?: number;\n  onSelect?: (index: number) => void;\n  shouldLoadComponent?: (index: number) => boolean;\n  onOffsetChange?: (offset: number) => void;\n}\n\nexport type ViewPagerElement = React.ReactElement<ViewPagerProps>;\n\n/**\n * A view with a set of swipeable pages.\n *\n * @extends React.Component\n **\n * @property {ReactNode} children - Page components to render within the view.\n *\n * @property {number} selectedIndex - Index of currently selected view.\n *\n * @property {(number) => void} onSelect - Called when view becomes visible.\n *\n * @property {(number) => boolean} shouldLoadComponent - A function to determine\n * whether particular view should be rendered.\n * Useful when providing \"lazy\" loading behavior.\n *\n * @property {(number) => void} onOffsetChange - Called when scroll offset changes.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example ViewPagerSimpleUsage\n *\n * @overview-example ViewPagerLazyLoading\n */\nexport class ViewPager<ChildrenProps = {}> extends React.Component<ViewPagerProps<ChildrenProps>>\n  implements PanResponderCallbacks {\n\n  static defaultProps: Partial<ViewPagerProps> = {\n    selectedIndex: 0,\n    shouldLoadComponent: (): boolean => true,\n  };\n\n  private containerRef: React.RefObject<View> = React.createRef();\n  private contentWidth: number = 0;\n  private contentOffsetValue: number = 0;\n  private contentOffset: Animated.Value = new Animated.Value(this.contentOffsetValue);\n  private panResponder: PanResponderInstance = PanResponder.create(this);\n\n  public componentDidMount(): void {\n    this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n  }\n\n  public componentDidUpdate(prevProps: ViewPagerProps): void {\n    if (prevProps.selectedIndex !== this.props.selectedIndex) {\n      const index: number = this.props.selectedIndex;\n      this.scrollToIndex({\n        index,\n        animated: true,\n      });\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.contentOffset.removeAllListeners();\n  }\n\n  public onMoveShouldSetPanResponder = (event: GestureResponderEvent, state: PanResponderGestureState): boolean => {\n    const isHorizontalMove: boolean = Math.abs(state.dx) > 0 && Math.abs(state.dx) > Math.abs(state.dy);\n\n    if (isHorizontalMove) {\n      const i18nOffset: number = RTLService.select(state.dx, -state.dx);\n      const nextSelectedIndex: number = this.props.selectedIndex - Math.sign(i18nOffset);\n\n      return nextSelectedIndex >= 0 && nextSelectedIndex < this.getChildCount();\n    }\n\n    return false;\n  };\n\n  public onPanResponderMove = (event: GestureResponderEvent, state: PanResponderGestureState): void => {\n    const i18nOffset: number = RTLService.select(this.contentWidth, -this.contentWidth);\n    const selectedPageOffset: number = this.props.selectedIndex * i18nOffset;\n\n    this.contentOffset.setValue(state.dx - selectedPageOffset);\n  };\n\n  public onPanResponderRelease = (event: GestureResponderEvent, state: PanResponderGestureState) => {\n    if (Math.abs(state.vx) >= 0.5 || Math.abs(state.dx) >= 0.5 * this.contentWidth) {\n      const i18nOffset: number = RTLService.select(state.dx, -state.dx);\n      const index: number = i18nOffset > 0 ? this.props.selectedIndex - 1 : this.props.selectedIndex + 1;\n      this.scrollToIndex({\n        index,\n        animated: true,\n      });\n    } else {\n      const index: number = this.props.selectedIndex;\n      this.scrollToIndex({\n        index,\n        animated: true,\n      });\n    }\n  };\n\n  public scrollToIndex(params: { index: number, animated?: boolean }): void {\n    const { index, ...rest } = params;\n    const childCount = this.getChildCount() - 1;\n    const offset: number = this.contentWidth * (index < 0 ? 0 : index > childCount ? childCount : index);\n\n    this.scrollToOffset({ offset, ...rest });\n  }\n\n  public scrollToOffset = (params: { offset: number, animated?: boolean }): void => {\n    this.createOffsetAnimation(params).start(this.onContentOffsetAnimationStateEnd);\n  };\n\n  private onLayout = (event: LayoutChangeEvent): void => {\n    this.contentWidth = event.nativeEvent.layout.width / this.getChildCount();\n\n    this.scrollToIndex({\n      index: this.props.selectedIndex,\n    });\n  };\n\n  private onContentOffsetAnimationStateChanged = (state: { value: number }): void => {\n    this.contentOffsetValue = RTLService.select(-state.value, state.value);\n\n    if (this.props.onOffsetChange) {\n      this.props.onOffsetChange(this.contentOffsetValue);\n    }\n  };\n\n  private onContentOffsetAnimationStateEnd = (result: { finished: boolean }): void => {\n    const selectedIndex: number = this.contentOffsetValue / this.contentWidth;\n\n    if (selectedIndex !== this.props.selectedIndex && this.props.onSelect) {\n      this.props.onSelect(Math.round(selectedIndex));\n    }\n  };\n\n  private createOffsetAnimation = (params: { offset: number, animated?: boolean }): Animated.CompositeAnimation => {\n    const animationDuration: number = params.animated ? 300 : 0;\n\n    return Animated.timing(this.contentOffset, {\n      toValue: RTLService.select(-params.offset, params.offset),\n      easing: Easing.linear,\n      duration: animationDuration,\n    });\n  };\n\n  private renderComponentChild = (source: React.ReactElement<ChildrenProps>, index: number): React.ReactElement => {\n    const contentView = this.props.shouldLoadComponent(index) ? source : null;\n\n    return (\n      <View style={styles.contentContainer}>\n        {contentView}\n      </View>\n    );\n  };\n\n  private renderComponentChildren = (source: ChildrenWithProps<ChildrenProps>): React.ReactElement[] => {\n    return React.Children.map(source, this.renderComponentChild);\n  };\n\n  private getChildCount = (): number => {\n    return React.Children.count(this.props.children);\n  };\n\n  private getContainerStyle = (): ViewStyle => {\n    return {\n      width: `${100 * this.getChildCount()}%`,\n\n      // @ts-ignore: RN has no types for `Animated` styles\n      transform: [{ translateX: this.contentOffset }],\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, children, ...viewProps } = this.props;\n\n    return (\n      <Animated.View\n        {...viewProps}\n        style={[styles.container, style, this.getContainerStyle()]}\n        onLayout={this.onLayout}\n        {...this.panResponder.panHandlers}\n        // @ts-ignore\n        ref={this.containerRef}>\n        {this.renderComponentChildren(children)}\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  contentContainer: {\n    flex: 1,\n    width: '100%',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { ChildrenWithProps } from '../../devsupport';\nimport {\n  TabElement,\n  TabProps,\n} from './tab.component';\nimport { TabBar } from './tabBar.component';\nimport {\n  ViewPager,\n  ViewPagerProps,\n} from '../viewPager/viewPager.component';\n\nclass TabViewChildElement {\n  tab: TabElement;\n  content: React.ReactElement;\n}\n\nclass TabViewChildren {\n  tabs: TabElement[] = [];\n  contents: React.ReactElement[] = [];\n}\n\nexport interface TabViewProps extends ViewPagerProps<TabProps> {\n  tabBarStyle?: StyleProp<ViewStyle>;\n  indicatorStyle?: StyleProp<ViewStyle>;\n}\n\nexport type TabViewElement = React.ReactElement<TabViewProps>;\n\n/**\n * A view with tabs and swipeable contents.\n * TabView should contain Tabs with it's contents to provide a useful component.\n *\n * @extends React.Component\n **\n * @property {ReactElement<TabProps> | ReactElement<TabProps>[]} children - Tabs to be rendered within the view.\n *\n * @property {number} selectedIndex - Index of currently selected tab.\n *\n * @property {(number) => void} onSelect - Called when tab is pressed or its content becomes visible.\n *\n * @property {(number) => boolean} shouldLoadComponent - A function to determine\n * whether content for particular tab should be rendered.\n * Useful when providing \"lazy\" loading behavior.\n *\n * @property {(number) => void} onOffsetChange - Called when scroll offset changes.\n *\n * @property {StyleProp<ViewStyle>} tabBarStyle - Style of TabBar component.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Style of selected tab indicator.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example TabViewSimpleUsage\n *\n * @example TabViewLazyLoading\n */\nexport class TabView extends React.Component<TabViewProps> {\n\n  static defaultProps: Partial<TabViewProps> = {\n    selectedIndex: 0,\n  };\n\n  private viewPagerRef: React.RefObject<ViewPager> = React.createRef();\n  private tabBarRef: React.RefObject<any> = React.createRef();\n\n  private onBarSelect = (index: number): void => {\n    const { current: viewPager } = this.viewPagerRef;\n\n    viewPager.scrollToIndex({\n      index,\n      animated: true,\n    });\n  };\n\n  private onPagerOffsetChange = (offset: number): void => {\n    const { current: tabBar } = this.tabBarRef;\n    const tabCount: number = React.Children.count(tabBar.props.children);\n\n    tabBar.scrollToOffset({ offset: offset / tabCount });\n  };\n\n  private onPagerSelect = (selectedIndex: number): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(selectedIndex);\n    }\n  };\n\n  private renderComponentChild = (element: TabElement, index: number): TabViewChildElement => {\n    return {\n      tab: React.cloneElement(element, { key: index }),\n      content: element.props.children,\n    };\n  };\n\n  private renderComponentChildren = (source: ChildrenWithProps<TabProps>): TabViewChildren => {\n    const children = React.Children.toArray(source) as TabElement[];\n\n    return children.reduce((acc: TabViewChildren, element: TabElement, index: number) => {\n      const { tab, content } = this.renderComponentChild(element, index);\n      return {\n        tabs: [...acc.tabs, tab],\n        contents: [...acc.contents, content],\n      };\n    }, new TabViewChildren());\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, selectedIndex, children, tabBarStyle, indicatorStyle, ...viewProps } = this.props;\n    const { tabs, contents } = this.renderComponentChildren(children);\n\n    return (\n      <View\n        {...viewProps}\n        style={[styles.container, style]}>\n        <TabBar\n          style={tabBarStyle}\n          ref={this.tabBarRef}\n          selectedIndex={selectedIndex}\n          indicatorStyle={indicatorStyle}\n          onSelect={this.onBarSelect}>\n          {tabs}\n        </TabBar>\n        <ViewPager\n          ref={this.viewPagerRef}\n          {...viewProps}\n          style={[styles.container, style]}\n          selectedIndex={selectedIndex}\n          shouldLoadComponent={this.props.shouldLoadComponent}\n          onOffsetChange={this.onPagerOffsetChange}\n          onSelect={this.onPagerSelect}>\n          {contents}\n        </ViewPager>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TargetedEvent,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  FalsyFC,\n  FalsyText,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebProps,\n  TouchableWebElement,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\n\ntype TabStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\nexport interface TabProps extends TouchableWebProps, TabStyledProps {\n  children?: React.ReactElement;\n  title?: RenderProp<TextProps> | React.ReactText;\n  icon?: RenderProp<Partial<ImageProps>>;\n  selected?: boolean;\n  onSelect?: (selected: boolean) => void;\n}\n\nexport type TabElement = React.ReactElement<TabProps>;\n\n/**\n * A single tab within the TabView or TabBar.\n * Tabs should be rendered within TabView or TabBar to provide a usable component.\n *\n * @extends React.Component\n *\n * @property {ReactElement} children - A component displayed below the tab.\n *\n * @property {ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the tab.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} icon - Function component\n * to render within the tab.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example TabSimpleUsage\n *\n * @example TabStyling\n */\nexport class TabComponent extends React.Component<TabProps> {\n\n  static styledComponentName: string = 'Tab';\n\n  static defaultProps: Partial<TabProps> = {\n    selected: false,\n  };\n\n  private onMouseEnter = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(e);\n    }\n  };\n\n  private onMouseLeave = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n  };\n\n  private onPress = (): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(!this.props.selected);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      textMarginVertical,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconMarginVertical,\n      iconTintColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginVertical: iconMarginVertical,\n        tintColor: iconTintColor,\n      },\n      title: {\n        marginVertical: textMarginVertical,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n    };\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, title, icon, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[evaStyle.container, styles.container, style]}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onPress={this.onPress}>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={icon}\n        />\n        <FalsyText\n          style={evaStyle.title}\n          component={title}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport const Tab = styled<TabProps>(TabComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  PanResponder,\n  PanResponderCallbacks,\n  PanResponderGestureState,\n  PanResponderInstance,\n  StyleSheet,\n  TargetedEvent,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  EvaStatus,\n  FalsyText,\n  RenderProp,\n  RTLService,\n  TouchableWeb,\n  TouchableWebProps,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\nimport { CheckMark } from '../shared/checkmark.component';\n\ntype ToggleStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\nexport interface ToggleProps extends TouchableWebProps, ToggleStyledProps {\n  children?: RenderProp<TextProps> | React.ReactText;\n  checked?: boolean;\n  onChange?: (checked: boolean) => void;\n  status?: EvaStatus;\n}\n\nexport type ToggleElement = React.ReactElement<ToggleProps>;\n\n/**\n * Switches toggle the state of a single setting on or off.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Whether component is checked.\n * Defaults to *false*.\n *\n * @property {(boolean) => void} onChange - Called when toggle\n * should switch it's value.\n *\n * @property {ReactText | (TextProps) => ReactElement} children - String, number or a function component\n * to render near the toggle.\n * If it is a function, expected to return a Text.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example ToggleSimpleUsage\n *\n * @overview-example ToggleStates\n *\n * @overview-example ToggleStatus\n *\n * @example ToggleStyling\n */\nexport class ToggleComponent extends React.Component<ToggleProps> implements PanResponderCallbacks {\n\n  static styledComponentName: string = 'Toggle';\n\n  private panResponder: PanResponderInstance;\n  private thumbWidthAnimation: Animated.Value;\n  private thumbTranslateAnimation: Animated.Value;\n  private ellipseScaleAnimation: Animated.Value;\n  private thumbTranslateAnimationActive: boolean;\n\n  constructor(props: ToggleProps) {\n    super(props);\n\n    const { checked, eva } = props;\n\n    this.thumbWidthAnimation = new Animated.Value(eva.style.thumbWidth);\n    this.thumbTranslateAnimation = new Animated.Value(0);\n    this.ellipseScaleAnimation = new Animated.Value(checked ? 0.01 : 1.0);\n    this.thumbTranslateAnimationActive = false;\n\n    this.panResponder = PanResponder.create(this);\n  }\n\n  // PanResponderCallbacks\n\n  public onStartShouldSetPanResponder = (): boolean => {\n    return true;\n  };\n\n  public onStartShouldSetPanResponderCapture = (): boolean => {\n    return true;\n  };\n\n  public onMoveShouldSetPanResponder = (): boolean => {\n    return true;\n  };\n\n  public onMoveShouldSetPanResponderCapture = (): boolean => {\n    return true;\n  };\n\n  public onPanResponderTerminationRequest = (): boolean => {\n    return false;\n  };\n\n  public onPanResponderGrant = (e: GestureResponderEvent): void => {\n    const { checked, disabled, eva } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    this.onPressIn(e);\n\n    if (this.thumbTranslateAnimationActive) {\n      this.thumbTranslateAnimationActive = false;\n      this.stopAnimations();\n      return;\n    }\n\n    this.animateThumbWidth(eva.style.thumbWidth * 1.2);\n    this.animateEllipseScale(checked ? 1 : 0.01);\n  };\n\n  public onPanResponderMove: () => boolean = (): boolean => {\n    return true;\n  };\n\n  public onPanResponderRelease = (e: GestureResponderEvent, gestureState: PanResponderGestureState): void => {\n    const { checked, disabled, eva } = this.props;\n\n    if (!disabled) {\n      if ((!checked && gestureState.dx > -5) || (checked && gestureState.dx < 5)) {\n        this.toggle(this.onPress);\n      } else {\n        this.animateEllipseScale(checked ? 0.01 : 1);\n      }\n    }\n\n    this.animateThumbWidth(eva.style.thumbWidth);\n    this.onPressOut(e);\n  };\n\n  private onMouseEnter = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.props.eva.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(e);\n    }\n  };\n\n  public onMouseLeave = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.props.eva.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n  };\n\n  private onFocus = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n  };\n\n  private onBlur = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.props.eva.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n  };\n\n  private onPressIn = (e: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(e);\n    }\n  };\n\n  private onPressOut = (e: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(e);\n    }\n  };\n\n  private onPress = (): void => {\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const { checked, disabled } = this.props;\n\n    const {\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      thumbWidth,\n      thumbHeight,\n      thumbBorderRadius,\n      thumbBackgroundColor,\n      textMarginHorizontal,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textFontFamily,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      backgroundColor,\n      borderColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      ellipseContainer: {\n        borderColor: borderColor,\n        backgroundColor: backgroundColor,\n        ...containerParameters,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n      ellipse: {\n        width: containerParameters.width - (containerParameters.borderWidth * 2),\n        height: containerParameters.height - (containerParameters.borderWidth * 2),\n        borderRadius: (source.height - (source.borderWidth * 2)) / 2,\n        backgroundColor: backgroundColor,\n      },\n      thumb: {\n        alignSelf: checked ? 'flex-end' : 'flex-start',\n        width: this.thumbWidthAnimation,\n        height: thumbHeight,\n        borderRadius: thumbBorderRadius,\n        backgroundColor: thumbBackgroundColor,\n        elevation: disabled ? 0 : 5,\n        transform: [{ translateX: this.thumbTranslateAnimation }],\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        fontFamily: textFontFamily,\n        color: textColor,\n      },\n      icon: {\n        width: source.iconWidth,\n        height: source.iconHeight,\n        fill: iconTintColor,\n        stroke: iconTintColor,\n        strokeWidth: 3,\n      },\n    };\n  };\n\n  private animateThumbTranslate = (value: number, callback: () => void = () => null): void => {\n    this.thumbTranslateAnimationActive = true;\n\n    Animated.timing(this.thumbTranslateAnimation, {\n      toValue: RTLService.select(value, -value),\n      duration: 150,\n      easing: Easing.linear,\n    }).start(() => {\n      this.thumbTranslateAnimationActive = false;\n      callback();\n    });\n  };\n\n  private animateThumbWidth = (value: number, callback: () => void = () => null): void => {\n    Animated.timing(this.thumbWidthAnimation, {\n      toValue: value,\n      duration: 150,\n      easing: Easing.linear,\n    }).start(callback);\n  };\n\n  private animateEllipseScale = (value: number, callback: () => void = () => null): void => {\n    Animated.timing(this.ellipseScaleAnimation, {\n      toValue: value,\n      duration: 200,\n      easing: Easing.linear,\n    }).start(callback);\n  };\n\n  private stopAnimations = (): void => {\n    const value: number = this.props.checked ? 0.01 : 1;\n\n    this.thumbTranslateAnimation.stopAnimation();\n    this.ellipseScaleAnimation.stopAnimation();\n    this.thumbWidthAnimation.stopAnimation();\n\n    this.ellipseScaleAnimation.setValue(value);\n  };\n\n  private toggle = (callback = (nextValue: boolean) => null): void => {\n    const value: number = this.props.checked ? -20 : 20;\n\n    this.animateThumbTranslate(value, () => {\n      this.thumbTranslateAnimation.setValue(0);\n      callback(!this.props.checked);\n    });\n\n    this.animateThumbWidth(this.props.eva.style.thumbWidth);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, checked, children, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <View\n        {...this.panResponder.panHandlers}\n        style={[styles.container, style]}>\n        <TouchableWeb\n          {...touchableProps}\n          style={styles.toggleContainer}\n          onMouseEnter={this.onMouseEnter}\n          onMouseLeave={this.onMouseLeave}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}>\n          <View style={[evaStyle.highlight, styles.highlight]}/>\n          <Animated.View style={[evaStyle.ellipseContainer, styles.ellipseContainer]}>\n            <Animated.View style={[evaStyle.ellipse, styles.ellipse]}/>\n            <Animated.View style={[evaStyle.thumb, styles.thumb]}>\n              <CheckMark {...evaStyle.icon} />\n            </Animated.View>\n          </Animated.View>\n        </TouchableWeb>\n        <FalsyText\n          style={evaStyle.text}\n          component={children}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  toggleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  ellipseContainer: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    overflow: 'hidden',\n  },\n  ellipse: {\n    alignSelf: 'center',\n    position: 'absolute',\n  },\n  highlight: {\n    alignSelf: 'center',\n    position: 'absolute',\n  },\n  thumb: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport const Toggle = styled<ToggleProps>(ToggleComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\n\nexport type PopoverIndicatorProps = ViewProps;\nexport type PopoverIndicatorElement = React.ReactElement<PopoverIndicatorProps>;\n\nexport class PopoverIndicator extends React.Component<PopoverIndicatorProps> {\n\n  private getComponentStyle = (source: StyleProp<ViewStyle>) => {\n    const flatStyle: ViewStyle = StyleSheet.flatten(source);\n\n    return {\n      container: {\n        // @ts-ignore: `width` is restricted to be a number\n        borderLeftWidth: flatStyle.width,\n        // @ts-ignore: `width` is restricted to be a number\n        borderRightWidth: flatStyle.width,\n        // @ts-ignore: `height` is restricted to be a number\n        borderBottomWidth: flatStyle.height,\n        borderBottomColor: flatStyle.backgroundColor,\n        borderLeftColor: 'transparent',\n        borderRightColor: 'transparent',\n        backgroundColor: 'transparent',\n      },\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, ...props } = this.props;\n    const evaStyle = this.getComponentStyle(style);\n\n    return (\n      <View\n        {...props}\n        style={[style, styles.container, evaStyle.container]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  FalsyFC,\n  FalsyText,\n  RenderProp,\n} from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport {\n  Popover,\n  PopoverElement,\n  PopoverProps,\n} from '../popover/popover.component';\nimport { PopoverIndicator } from '../popover/popoverIndicator.component';\nimport { TextProps } from '../text/text.component';\n\ntype TooltipStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | string;\n}>;\n\ntype TooltipPopoverProps = Overwrite<PopoverProps, {\n  children: RenderProp<TextProps> | React.ReactText;\n}>;\n\nexport interface TooltipProps extends TooltipPopoverProps, TooltipStyledProps {\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<Partial<ImageProps>>;\n}\n\nexport type TooltipElement = React.ReactElement<TooltipProps>;\n\n/**\n * Tooltip displays informative text when users focus on or tap an element.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets Tooltip visible.\n *\n * @method {() => void} hide - Sets Tooltip invisible.\n *\n * @property {() => ReactElement} anchor - A component relative to which content component will be shown.\n *\n * @property {ReactText | (TextProps) => ReactElement} children - String, number or a function component\n * to render within the tooltip.\n * If it is a function, expected to return a Text.\n *\n * @property {boolean} visible - Whether content component is visible.\n * Defaults to false.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {() => void} onBackdropPress - Called when tooltip is visible and the underlying view was touched.\n * Useful when needed to close the modal on outside touches.\n *\n * @property {boolean} fullWidth - Whether a content component should take the width of `anchor`.\n *\n * @property {string | PopoverPlacement} placement - Position of the content component relative to the `anchor`.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Defaults to *bottom*.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Style of backdrop.\n *\n * @overview-example TooltipSimpleUsage\n *\n * @overview-example TooltipWithIcon\n *\n * @overview-example TooltipStyledBackdrop\n *\n * @overview-example TooltipPlacement\n *\n * @example TooltipWithExternalSourceIcon\n *\n * @example TooltipInlineStyling\n */\nexport class TooltipComponent extends React.Component<TooltipProps> {\n\n  static styledComponentName: string = 'Tooltip';\n\n  private popoverRef: React.RefObject<Popover> = React.createRef();\n\n  public show = (): void => {\n    this.popoverRef.current.show();\n  };\n\n  public hide = (): void => {\n    this.popoverRef.current.hide();\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      indicatorBackgroundColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      textMarginHorizontal,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textFontFamily,\n      textColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      indicator: {\n        backgroundColor: indicatorBackgroundColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        fontFamily: textFontFamily,\n        color: textColor,\n      },\n    };\n  };\n\n  private renderPopoverIndicatorElement = (props: ViewProps): React.ReactElement => {\n    const evaStyle = this.getComponentStyle(this.props.eva.style);\n    return (\n      <PopoverIndicator {...props} style={[props.style, evaStyle.indicator]}/>\n    );\n  };\n\n  public render(): PopoverElement {\n    const { eva, style, accessoryLeft, accessoryRight, children, ...popoverProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <Popover\n        {...popoverProps}\n        ref={this.popoverRef}\n        style={[evaStyle.container, style]}\n        indicator={this.renderPopoverIndicatorElement}>\n        <View style={styles.content}>\n          <FalsyFC\n            style={evaStyle.icon}\n            component={accessoryLeft}\n          />\n          <FalsyText\n            style={evaStyle.text}\n            component={children}\n          />\n          <FalsyFC\n            style={evaStyle.icon}\n            component={accessoryRight}\n          />\n        </View>\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n});\n\nexport const Tooltip = styled<TooltipProps>(TooltipComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  FalsyFC,\n  FalsyText,\n  RenderProp,\n} from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\n\ntype TopNavigationStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | 'control' | string;\n}>;\n\nexport interface TopNavigationProps extends ViewProps, TopNavigationStyledProps {\n  title?: RenderProp<TextProps> | React.ReactText;\n  subtitle?: RenderProp<TextProps> | React.ReactText;\n  accessoryLeft?: RenderProp;\n  accessoryRight?: RenderProp;\n  alignment?: AlignmentProp;\n}\n\nexport type TopNavigationElement = React.ReactElement<TopNavigationProps>;\n\ntype AlignmentProp = 'start' | 'center';\n\n/**\n * TopNavigation provides a heading component for the entire page.\n * Should contain TopNavigationAction components provided through accessory props\n * to provide a useful component.\n *\n * @extends React.Component\n *\n * @property {ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the top navigation.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactText | (TextProps) => ReactElement} subtitle - String, number or a function component\n * to render within the top navigation.\n * If it is a function, expected to return a Text.\n *\n * @property {() => ReactElement} accessoryLeft - Function component\n * to render to the left edge the top navigation.\n *\n * @property {() => ReactElement} accessoryLeft - Function component\n * to render to the right edge the top navigation.\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `default`, `control`.\n * Use *control* appearance when needed to display within a contrast container.\n *\n * @property {string} alignment - Alignment of nested components.\n * Can be `center` or `start`.\n * Defaults to *start*.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example TopNavigationSimpleUsage\n *\n * @overview-example TopNavigationAccessories\n *\n * @example TopNavigationStyling\n */\nexport class TopNavigationComponent extends React.Component<TopNavigationProps> {\n\n  static styledComponentName: string = 'TopNavigation';\n\n  private getAlignmentDependentStyles = (alignment: AlignmentProp) => {\n    if (alignment === 'center') {\n      return {\n        container: styles.containerCentered,\n        titleContainer: styles.titleContainerCentered,\n      };\n    }\n\n    return {\n      rightControlsContainer: styles.rightControlsContainerStart,\n    };\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      titleTextAlign,\n      titleFontFamily,\n      titleFontSize,\n      titleLineHeight,\n      titleFontWeight,\n      titleColor,\n      subtitleTextAlign,\n      subtitleFontFamily,\n      subtitleFontSize,\n      subtitleLineHeight,\n      subtitleFontWeight,\n      subtitleColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      title: {\n        textAlign: titleTextAlign,\n        fontFamily: titleFontFamily,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight,\n        fontWeight: titleFontWeight,\n        color: titleColor,\n      },\n      subtitle: {\n        textAlign: subtitleTextAlign,\n        fontFamily: subtitleFontFamily,\n        fontSize: subtitleFontSize,\n        color: subtitleColor,\n        fontWeight: subtitleFontWeight,\n        lineHeight: subtitleLineHeight,\n      },\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, title, subtitle, alignment, accessoryLeft, accessoryRight, ...viewProps } = this.props;\n\n    const evaStyles = this.getComponentStyle(eva.style);\n    const alignmentStyles = this.getAlignmentDependentStyles(alignment);\n\n    return (\n      <View\n        style={[evaStyles.container, styles.container, alignmentStyles.container, style]}\n        {...viewProps}>\n        <View style={styles.leftControlContainer}>\n          <FalsyFC component={accessoryLeft}/>\n        </View>\n        <View style={alignmentStyles.titleContainer}>\n          <FalsyText\n            style={evaStyles.title}\n            component={title}\n          />\n          <FalsyText\n            style={evaStyles.subtitle}\n            component={subtitle}\n          />\n        </View>\n        <View style={[styles.rightControlsContainer, alignmentStyles.rightControlsContainer]}>\n          <FalsyFC component={accessoryRight}/>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  containerCentered: {\n    justifyContent: 'space-between',\n  },\n  titleContainerCentered: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  leftControlContainer: {\n    flexDirection: 'row',\n    zIndex: 1,\n  },\n  rightControlsContainer: {\n    flexDirection: 'row',\n    zIndex: 1,\n  },\n  rightControlsContainerStart: {\n    flex: 1,\n    justifyContent: 'flex-end',\n  },\n});\n\nexport const TopNavigation = styled<TopNavigationProps>(TopNavigationComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  NativeSyntheticEvent,\n  TargetedEvent,\n} from 'react-native';\nimport { Overwrite } from 'utility-types';\nimport {\n  FalsyFC,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebProps,\n  TouchableWebElement,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\n\ntype TopNavigationActionStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: 'default' | 'control' | string;\n}>;\n\nexport interface TopNavigationActionProps extends TouchableWebProps, TopNavigationActionStyledProps {\n  icon?: RenderProp<Partial<ImageProps>>;\n}\n\nexport type TopNavigationActionElement = React.ReactElement<TopNavigationActionProps>;\n\n/**\n * A single action within the TopNavigation.\n * Actions should be rendered within TopNavigation by providing them through `accessory` props\n * to provide a usable component.\n *\n * @extends React.Component\n *\n * @property {(ImageProps) => ReactElement} icon - Function component\n * to render within the action.\n * Expected to return an Image.\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `default` and `control`.\n * Use *control* appearance when needed to display within a contrast container.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example TopNavigationActionSimpleUsage\n */\nclass TopNavigationActionComponent extends React.Component<TopNavigationActionProps> {\n\n  static styledComponentName: string = 'TopNavigationAction';\n\n  private onMouseEnter = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(e);\n    }\n  };\n\n  private onMouseLeave = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n  };\n\n  private onFocus = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n  };\n\n  public onBlur = (e: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n  };\n\n  private onPress = (event: GestureResponderEvent): void => {\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      iconTintColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n    } = source;\n\n    return {\n      container: {\n        marginHorizontal: iconMarginHorizontal,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        tintColor: iconTintColor,\n      },\n    };\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, icon, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[evaStyle.container, style]}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={icon}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nexport const TopNavigationAction = styled<TopNavigationActionProps>(TopNavigationActionComponent);\n","import React from 'react';\n\nexport enum AppMapping {\n  eva = 'Eva',\n  material = 'Material',\n}\n\nexport enum AppTheme {\n  light = 'Light',\n  dark = 'Dark',\n}\n\nexport interface ThemeContextType {\n  mapping: AppMapping;\n  theme: AppTheme;\n  setMapping: (mapping: AppMapping) => void;\n  setTheme: (theme: AppTheme) => void;\n  isDarkMode: () => boolean;\n}\n\nexport const ThemeContext = React.createContext<ThemeContextType>({\n  mapping: AppMapping.eva,\n  theme: AppTheme.light,\n  setMapping: (mapping: AppMapping) => {\n  },\n  setTheme: (theme: AppTheme) => {\n  },\n  isDarkMode: () => false,\n});\n","import React from 'react';\nimport { SvgProps } from 'react-native-svg';\nimport { IconProvider } from '@ui-kitten/components';\nimport { StyleSheet } from 'react-native';\n\ntype IconElement = React.ReactElement<SvgProps>;\ntype IconComponent = React.ComponentType<SvgProps>;\n\nexport class EvaIcon implements IconProvider<SvgProps> {\n\n  constructor(private content: IconComponent) {\n  }\n\n  public toReactElement(props: SvgProps): IconElement {\n    const Icon: IconComponent = this.content;\n\n    const { style, ...svgProps } = props;\n    // @ts-ignore - UI Kitten components pass here `tintColor`\n    const fillColor: string = StyleSheet.flatten(style || {}).tintColor;\n\n    return (\n      <Icon\n        style={props.style}\n        fill={fillColor}\n        {...svgProps}\n      />\n    );\n  }\n}\n","import { IconPack } from '@ui-kitten/components';\nimport { SvgProps } from 'react-native-svg';\nimport { createIconsMap } from './createIconsMap';\n\nexport const EvaIconsPack: IconPack<SvgProps> = {\n  name: 'eva',\n  icons: createIconsMap(),\n};\n\n","import { IconProvider } from '@ui-kitten/components';\nimport { SvgProps } from 'react-native-svg';\nimport { findIconByName } from 'react-native-eva-icons/icons';\nimport { EvaIcon } from './evaIcon.component';\n\nexport const createIconsMap = (): { [key: string]: IconProvider<SvgProps> } => {\n  return new Proxy({}, {\n    get(target: {}, name: string): IconProvider<SvgProps> {\n      return new EvaIcon(findIconByName(name));\n    },\n  });\n};\n","import * as eva from '@eva-design/eva';\nimport * as material from '@eva-design/material';\n\nexport const themes: Record<string, any> = {\n  Eva: {\n    Light: eva.light,\n    Dark: eva.dark,\n  },\n  Material: {\n    Light: material.light,\n    Dark: material.dark,\n  },\n};\n","import React from 'react';\nimport { ImageStyle, LayoutChangeEvent, StyleSheet, View } from 'react-native';\nimport { Button, Icon, IconElement, Layout, MenuItem, OverflowMenu, Text } from '@ui-kitten/components';\nimport { AppMapping, AppTheme, ThemeContext, ThemeContextType } from '../services/theme.service';\n\nexport const ColorPaletteIcon = (style: ImageStyle): IconElement => (\n  <Icon {...style} name='color-palette-outline'/>\n);\n\nexport const ShowcaseIFrame = (Component: React.ComponentType, showcaseId: string): React.ReactElement => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const themeContext: ThemeContextType = React.useContext(ThemeContext);\n\n  const onThemesButtonPress = (): void => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const onEvaLightPress = ({ index }): void => {\n    setTheme(AppMapping.eva, AppTheme.light);\n    setMenuVisible(false);\n  };\n\n  const onEvaDarkPress = ({ index }): void => {\n    setTheme(AppMapping.eva, AppTheme.dark);\n    setMenuVisible(false);\n  };\n\n  const onMaterialLightPress = ({ index }): void => {\n    setTheme(AppMapping.material, AppTheme.light);\n    setMenuVisible(false);\n  };\n\n  const onMaterialDarkPress = ({ index }): void => {\n    setTheme(AppMapping.material, AppTheme.dark);\n    setMenuVisible(false);\n  };\n\n  const setTheme = (mapping: AppMapping, theme: AppTheme): void => {\n    if (mapping !== themeContext.mapping) {\n      themeContext.setMapping(mapping);\n      themeContext.setTheme(theme);\n      return;\n    }\n\n    if (theme !== themeContext.theme) {\n      themeContext.setTheme(theme);\n    }\n  };\n\n  const postLayoutChangeEvent = ({ nativeEvent }: LayoutChangeEvent): void => {\n    const layoutChangeMessage: { height: number; id: string; } = {\n      id: showcaseId,\n      height: nativeEvent.layout.height,\n    };\n\n    window.parent.postMessage(layoutChangeMessage, '*');\n  };\n\n  const renderThemeButton = () => (\n    <Button\n      appearance='ghost'\n      status='basic'\n      size='small'\n      accessoryLeft={ColorPaletteIcon}\n      onPress={onThemesButtonPress}>\n      {`${themeContext.mapping} ${themeContext.theme}`}\n    </Button>\n  );\n\n  return (\n    <Layout\n      style={styles.container}\n      onLayout={postLayoutChangeEvent}>\n      <View style={styles.optionsContainer}>\n        <Text\n          appearance='hint'\n          category='c1'>\n          Powered by React Native Web\n        </Text>\n        <OverflowMenu\n          anchor={renderThemeButton}\n          visible={menuVisible}\n          placement='bottom end'\n          onBackdropPress={onThemesButtonPress}>\n          <MenuItem title='Eva Light' onPress={onEvaLightPress}/>\n          <MenuItem title='Eva Dark' onPress={onEvaDarkPress}/>\n          <MenuItem title='Material Light' onPress={onMaterialLightPress}/>\n          <MenuItem title='Material Dark' onPress={onMaterialDarkPress}/>\n        </OverflowMenu>\n      </View>\n      <View style={styles.showcaseContainer}>\n        <Component/>\n      </View>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    minHeight: 264,\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 4,\n  },\n  showcaseContainer: {\n    flex: 1,\n    paddingVertical: 4,\n  },\n});\n","import React from 'react';\nimport { TouchableWithoutFeedback } from 'react-native';\nimport { Autocomplete, AutocompleteItem, Icon } from '@ui-kitten/components';\n\nconst movies = [\n  { title: 'Star Wars' },\n  { title: 'Back to the Future' },\n  { title: 'The Matrix' },\n  { title: 'Inception' },\n  { title: 'Interstellar' },\n];\n\nconst filter = (item, query) => item.title.toLowerCase().includes(query.toLowerCase());\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nexport const AutocompleteAccessoriesShowcase = () => {\n\n  const [value, setValue] = React.useState(null);\n  const [data, setData] = React.useState(movies);\n\n  const onSelect = (index) => {\n    setValue(movies[index].title);\n  };\n\n  const onChangeText = (query) => {\n    setValue(query);\n    setData(movies.filter(item => filter(item, query)));\n  };\n\n  const clearInput = () => {\n    setValue('');\n    setData(movies);\n  };\n\n  const renderOption = (item, index) => (\n    <AutocompleteItem\n      key={index}\n      title={item.title}\n      accessoryLeft={StarIcon}\n    />\n  );\n\n  const renderCloseIcon = (props) => (\n    <TouchableWithoutFeedback onPress={clearInput}>\n      <Icon {...props} name='close'/>\n    </TouchableWithoutFeedback>\n  );\n\n  return (\n    <Autocomplete\n      placeholder='Place your Text'\n      value={value}\n      accessoryRight={renderCloseIcon}\n      onChangeText={onChangeText}\n      onSelect={onSelect}>\n      {data.map(renderOption)}\n    </Autocomplete>\n  );\n};\n\n","import React from 'react';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport { Autocomplete, AutocompleteItem } from '@ui-kitten/components';\n\nconst requestData = () => fetch(`https://facebook.github.io/react-native/movies.json`);\nconst requestDataWithDebounce = AwesomeDebouncePromise(requestData, 400);\n\nexport const AutocompleteAsyncShowcase = () => {\n\n  const [query, setQuery] = React.useState(null);\n  const [data, setData] = React.useState(null);\n\n  const updateData = () => {\n    requestDataWithDebounce()\n      .then(response => response.json())\n      .then(json => json.movies)\n      .then(applyFilter)\n      .then(setData);\n  };\n\n  React.useEffect(updateData, [query]);\n\n  const onSelect = (index: number) => {\n    setQuery(data[index].title);\n  };\n\n  const onChangeText = (nextQuery) => {\n    setQuery(nextQuery);\n  };\n\n  const applyFilter = (options) => {\n    return options.filter(item => item.title.toLowerCase().includes(query.toLowerCase()));\n  };\n\n  const renderOption = (item, index) => (\n    <AutocompleteItem\n      key={index}\n      title={item.title}\n    />\n  );\n\n  return (\n    <Autocomplete\n      placeholder='Start typing to fetch options'\n      value={query}\n      onChangeText={onChangeText}\n      onSelect={onSelect}>\n      {data.map(renderOption)}\n    </Autocomplete>\n  );\n};\n","import React from 'react';\nimport { Keyboard, Platform } from 'react-native';\nimport { Autocomplete, AutocompleteItem } from '@ui-kitten/components';\n\nconst movies = [\n  { title: 'Star Wars' },\n  { title: 'Back to the Future' },\n  { title: 'The Matrix' },\n  { title: 'Inception' },\n  { title: 'Interstellar' },\n];\n\nconst showEvent = Platform.select({\n  android: 'keyboardDidShow',\n  default: 'keyboardWillShow',\n});\n\nconst hideEvent = Platform.select({\n  android: 'keyboardDidHide',\n  default: 'keyboardWillHide',\n});\n\nconst filter = (item, query) => item.title.toLowerCase().includes(query.toLowerCase());\n\nexport const AutocompleteHandleKeyboardShowcase = () => {\n\n  const [value, setValue] = React.useState(null);\n  const [data, setData] = React.useState(movies);\n  const [placement, setPlacement] = React.useState('bottom');\n\n  React.useEffect(() => {\n    const keyboardShowListener = Keyboard.addListener(showEvent, () => {\n      setPlacement('top');\n    });\n\n    const keyboardHideListener = Keyboard.addListener(hideEvent, () => {\n      setPlacement('bottom');\n    });\n\n    return () => {\n      keyboardShowListener.remove();\n      keyboardHideListener.remove();\n    };\n  });\n\n  const onSelect = (index) => {\n    setValue(movies[index].title);\n  };\n\n  const onChangeText = (query) => {\n    setValue(query);\n    setData(movies.filter(item => filter(item, query)));\n  };\n\n  const renderOption = (item, index) => (\n    <AutocompleteItem\n      key={index}\n      title={item.title}\n    />\n  );\n\n  return (\n    <Autocomplete\n      placeholder='Place your Text'\n      value={value}\n      placement={placement}\n      onChangeText={onChangeText}\n      onSelect={onSelect}>\n      {data.map(renderOption)}\n    </Autocomplete>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Autocomplete, AutocompleteItem, Layout } from '@ui-kitten/components';\n\nconst movies = [\n  { title: 'Star Wars' },\n  { title: 'Back to the Future' },\n  { title: 'The Matrix' },\n  { title: 'Inception' },\n  { title: 'Interstellar' },\n];\n\nconst filter = (item, query) => item.title.toLowerCase().includes(query.toLowerCase());\n\nexport const AutocompleteSimpleUsageShowcase = () => {\n\n  const [value, setValue] = React.useState(null);\n  const [data, setData] = React.useState(movies);\n\n  const onSelect = (index) => {\n    setValue(movies[index].title);\n  };\n\n  const onChangeText = (query) => {\n    setValue(query);\n    setData(movies.filter(item => filter(item, query)));\n  };\n\n  const renderOption = (item, index) => (\n    <AutocompleteItem\n      key={index}\n      title={item.title}\n    />\n  );\n\n  return (\n    <Autocomplete\n      placeholder='Place your Text'\n      value={value}\n      onSelect={onSelect}\n      onChangeText={onChangeText}>\n      {data.map(renderOption)}\n    </Autocomplete>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar, Layout } from '@ui-kitten/components';\n\nexport const AvatarShapeShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Avatar style={styles.avatar} shape='square' source={require('../../assets/icon.png')}/>\n\n    <Avatar style={styles.avatar} shape='rounded' source={require('../../assets/icon.png')}/>\n\n    <Avatar style={styles.avatar} shape='round' source={require('../../assets/icon.png')}/>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  avatar: {\n    margin: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar } from '@ui-kitten/components';\n\nexport const AvatarSimpleUsageShowcase = () => (\n  <Avatar\n    style={styles.avatar}\n    source={require('../../assets/icon.png')}\n  />\n);\n\nconst styles = StyleSheet.create({\n  avatar: {\n    margin: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar, Layout } from '@ui-kitten/components';\n\nexport const AvatarSizeShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Avatar style={styles.avatar} size='tiny' source={require('../../assets/icon.png')}/>\n\n    <Avatar style={styles.avatar} size='small' source={require('../../assets/icon.png')}/>\n\n    <Avatar style={styles.avatar} size='medium' source={require('../../assets/icon.png')}/>\n\n    <Avatar style={styles.avatar} size='large' source={require('../../assets/icon.png')}/>\n\n    <Avatar style={styles.avatar} size='giant' source={require('../../assets/icon.png')}/>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: 8,\n  },\n  avatar: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { BottomNavigation, BottomNavigationTab, Icon, Layout } from '@ui-kitten/components';\n\nconst PersonIcon = (props) => (\n  <Icon {...props} name='person-outline'/>\n);\n\nconst BellIcon = (props) => (\n  <Icon {...props} name='bell-outline'/>\n);\n\nconst EmailIcon = (props) => (\n  <Icon {...props} name='email-outline'/>\n);\n\nconst useBottomNavigationState = (initialState= 0) => {\n  const [selectedIndex, setSelectedIndex] = React.useState(initialState);\n  return { selectedIndex, onSelect: setSelectedIndex };\n};\n\nexport const BottomNavigationAccessoriesShowcase = () => {\n\n  const topState = useBottomNavigationState();\n  const bottomState = useBottomNavigationState();\n\n  return (\n    <Layout>\n\n      <BottomNavigation style={styles.bottomNavigation} {...topState}>\n        <BottomNavigationTab title='USERS' icon={PersonIcon}/>\n        <BottomNavigationTab title='ORDERS' icon={BellIcon}/>\n        <BottomNavigationTab title='TRANSACTIONS' icon={EmailIcon}/>\n      </BottomNavigation>\n\n      <BottomNavigation style={styles.bottomNavigation} {...bottomState}>\n        <BottomNavigationTab icon={PersonIcon}/>\n        <BottomNavigationTab icon={BellIcon}/>\n        <BottomNavigationTab icon={EmailIcon}/>\n      </BottomNavigation>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  bottomNavigation: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { BottomNavigation, BottomNavigationTab, Layout } from '@ui-kitten/components';\n\nexport const BottomNavigationSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <Layout>\n\n      <BottomNavigation\n        selectedIndex={selectedIndex}\n        onSelect={index => setSelectedIndex(index)}>\n        <BottomNavigationTab title='USERS'/>\n        <BottomNavigationTab title='ORDERS'/>\n        <BottomNavigationTab title='TRANSACTIONS'/>\n      </BottomNavigation>\n\n    </Layout>\n  );\n};\n","import React from 'react';\nimport { BottomNavigation, BottomNavigationTab, Text } from '@ui-kitten/components';\n\nconst MyBottomNavigationTab = (props) => (\n  <BottomNavigationTab\n    {...props}\n    title={evaProps => <Text {...evaProps}>{props.title}</Text>}\n  />\n);\n\nexport const BottomNavigationStylingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <MyBottomNavigationTab title='USERS'/>\n      <MyBottomNavigationTab title='ORDERS'/>\n      <MyBottomNavigationTab title='TRANSACTION'/>\n    </BottomNavigation>\n  );\n};\n","import React from 'react';\nimport { BottomNavigationTab, Icon } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star' />\n);\n\nexport const BottomNavigationTabSimpleUsageShowcase = () => (\n  <BottomNavigationTab\n    title='USERS'\n    icon={StarIcon}\n  />\n);\n","import React from 'react';\nimport { BottomNavigation, BottomNavigationTab } from '@ui-kitten/components';\n\nexport const BottomNavigationWithoutIndicatorShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      appearance='noIndicator'\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <BottomNavigationTab title='USERS'/>\n      <BottomNavigationTab title='ORDERS'/>\n      <BottomNavigationTab title='TRANSACTIONS'/>\n    </BottomNavigation>\n  );\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Icon, Layout, Spinner } from '@ui-kitten/components';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nconst LoadingIndicator = (props) => (\n  <View style={[props.style, styles.indicator]}>\n    <Spinner size='small'/>\n  </View>\n);\n\nexport const ButtonAccessoriesShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Button style={styles.button} status='primary' accessoryLeft={StarIcon}>\n      PRIMARY\n    </Button>\n\n    <Button style={styles.button} status='success' accessoryRight={StarIcon}>\n      SUCCESS\n    </Button>\n\n    <Button style={styles.button} status='danger' accessoryLeft={StarIcon}/>\n\n    <Button style={styles.button} appearance='ghost' status='danger' accessoryLeft={StarIcon}/>\n\n    <Button style={styles.button} appearance='outline' accessoryLeft={LoadingIndicator}>\n      LOADING\n    </Button>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 8,\n  },\n  indicator: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout } from '@ui-kitten/components';\n\nexport const ButtonAppearancesShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Button style={styles.button} appearance='filled'>FILLED</Button>\n\n    <Button style={styles.button} appearance='outline'>OUTLINE</Button>\n\n    <Button style={styles.button} appearance='ghost'>GHOST</Button>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Layout } from '@ui-kitten/components';\n\nexport const ButtonGhostShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Button style={styles.button} appearance='ghost' status='primary'>PRIMARY</Button>\n\n    <Button style={styles.button} appearance='ghost' status='success'>SUCCESS</Button>\n\n    <Button style={styles.button} appearance='ghost' status='info'>INFO</Button>\n\n    <Button style={styles.button} appearance='ghost' status='warning'>WARNING</Button>\n\n    <Button style={styles.button} appearance='ghost' status='danger'>DANGER</Button>\n\n    <Button style={styles.button} appearance='ghost' status='basic'>BASIC</Button>\n\n    <View style={styles.controlContainer}>\n      <Button style={styles.button} appearance='ghost' status='control'>CONTROL</Button>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Layout } from '@ui-kitten/components';\n\nexport const ButtonOutlineShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Button style={styles.button} appearance='outline' status='primary'>PRIMARY</Button>\n\n    <Button style={styles.button} appearance='outline' status='success'>SUCCESS</Button>\n\n    <Button style={styles.button} appearance='outline' status='info'>INFO</Button>\n\n    <Button style={styles.button} appearance='outline' status='warning'>WARNING</Button>\n\n    <Button style={styles.button} appearance='outline' status='danger'>DANGER</Button>\n\n    <Button style={styles.button} appearance='outline' status='basic'>BASIC</Button>\n\n    <View style={styles.controlContainer}>\n      <Button style={styles.button} appearance='outline' status='control'>CONTROL</Button>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout, Text } from '@ui-kitten/components';\n\nexport const ButtonSimpleUsageShowcase = () => {\n\n  const [counter, setCounter] = React.useState(0);\n\n  return (\n    <Layout style={styles.container}>\n\n      <Button onPress={() => setCounter(counter + 1)}>\n        BUTTON\n      </Button>\n\n      <Text style={styles.text}>Pressed {counter} times</Text>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  text: {\n    marginHorizontal: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout } from '@ui-kitten/components';\n\nexport const ButtonSizeShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Button style={styles.button} size='tiny'>TINY</Button>\n\n    <Button style={styles.button} size='small'>SMALL</Button>\n\n    <Button style={styles.button} size='medium'>MEDIUM</Button>\n\n    <Button style={styles.button} size='large'>LARGE</Button>\n\n    <Button style={styles.button} size='giant'>GIANT</Button>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout } from '@ui-kitten/components';\n\nexport const ButtonStatesShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Button style={styles.button}>ACTIVE</Button>\n\n    <Button style={styles.button} disabled={true}>DISABLED</Button>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Layout } from '@ui-kitten/components';\n\nexport const ButtonStatusShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Button style={styles.button} status='primary'>PRIMARY</Button>\n\n    <Button style={styles.button} status='success'>SUCCESS</Button>\n\n    <Button style={styles.button} status='info'>INFO</Button>\n\n    <Button style={styles.button} status='warning'>WARNING</Button>\n\n    <Button style={styles.button} status='danger'>DANGER</Button>\n\n    <Button style={styles.button} status='basic'>BASIC</Button>\n\n    <View style={styles.controlContainer}>\n      <Button style={styles.button} status='control'>CONTROL</Button>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: 8,\n  },\n  button: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { Button, Text } from '@ui-kitten/components';\n\nconst MyButton = (props) => (\n  <Button {...props}>\n    {evaProps => <Text {...evaProps}>{props.children}</Text>}\n  </Button>\n);\n\nexport const ButtonStylingShowcase = () => (\n  <MyButton>\n    BUTTON\n  </MyButton>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, ButtonGroup, Layout } from '@ui-kitten/components';\n\nexport const ButtonGroupAppearanceShowcase = () => (\n  <Layout style={styles.container}>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='filled'>\n      <Button>L</Button>\n      <Button>M</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline'>\n      <Button>L</Button>\n      <Button>M</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    padding: 8,\n  },\n  buttonGroup: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, ButtonGroup, Layout } from '@ui-kitten/components';\n\nexport const ButtonGroupOutlineShowcase = () => (\n  <Layout style={styles.container}>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='primary'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='success'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='info'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='warning'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='danger'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='basic'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <View style={styles.controlContainer}>\n      <ButtonGroup style={styles.buttonGroup} appearance='outline' status='control'>\n        <Button>L</Button>\n        <Button>R</Button>\n      </ButtonGroup>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: 8,\n  },\n  buttonGroup: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, ButtonGroup, Layout, Text } from '@ui-kitten/components';\n\nexport const ButtonGroupSimpleUsageShowcase = () => {\n\n  const [text, setText] = React.useState('Press any button');\n\n  return (\n    <Layout style={styles.container}>\n\n      <ButtonGroup>\n        <Button onPress={() => setText('Left button pressed')}>L</Button>\n        <Button onPress={() => setText('Middle button pressed')}>M</Button>\n        <Button onPress={() => setText('Right button pressed')}>R</Button>\n      </ButtonGroup>\n\n      <Text style={styles.text}>{text}</Text>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  text: {\n    marginHorizontal: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, ButtonGroup, Layout } from '@ui-kitten/components';\n\nexport const ButtonGroupSizeShowcase = () => (\n  <Layout style={styles.container}>\n\n    <ButtonGroup style={styles.buttonGroup} size='tiny'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} size='small'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} size='medium'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} size='large'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} size='giant'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: 8,\n  },\n  buttonGroup: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, ButtonGroup, Layout } from '@ui-kitten/components';\n\nexport const ButtonGroupStatusShowcase = () => (\n  <Layout style={styles.container}>\n\n    <ButtonGroup style={styles.buttonGroup} status='primary'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='success'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='info'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='warning'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='danger'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='basic'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <View style={styles.controlContainer}>\n      <ButtonGroup style={styles.buttonGroup} status='control'>\n        <Button>L</Button>\n        <Button>R</Button>\n      </ButtonGroup>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: 8,\n  },\n  buttonGroup: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, ButtonGroup, Icon, Layout } from '@ui-kitten/components';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport const ButtonGroupWithIconsShowcase = () => (\n  <Layout style={styles.container}>\n\n    <ButtonGroup style={styles.buttonGroup}>\n      <Button accessoryLeft={StarIcon}/>\n      <Button accessoryLeft={StarIcon}/>\n      <Button accessoryLeft={StarIcon}/>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='success'>\n      <Button accessoryLeft={StarIcon}/>\n      <Button accessoryLeft={StarIcon}/>\n      <Button accessoryLeft={StarIcon}/>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='danger'>\n      <Button accessoryLeft={StarIcon}/>\n      <Button accessoryLeft={StarIcon}/>\n      <Button accessoryLeft={StarIcon}/>\n    </ButtonGroup>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  buttonGroup: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { Calendar } from '@ui-kitten/components';\n\nexport const CalendarBoundingMonthShowcase = () => {\n\n  const [date, setDate] = React.useState(null);\n\n  return (\n    <Calendar\n      date={date}\n      onSelect={nextDate => setDate(nextDate)}\n      boundingMonth={false}\n    />\n  );\n};\n","import React from 'react';\nimport { Calendar } from '@ui-kitten/components';\n\nconst now = new Date();\nconst minDate = new Date(now.getFullYear(), now.getMonth(), 15);\nconst maxDate = new Date(now.getFullYear(), now.getMonth() + 1, 15);\n\nexport const CalendarBoundsShowcase = () => {\n\n  const [date, setDate] = React.useState(null);\n\n  return (\n    <Calendar\n      min={minDate}\n      max={maxDate}\n      date={date}\n      onSelect={nextDate => setDate(nextDate)}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Calendar, Text } from '@ui-kitten/components';\n\nconst DayCell = ({ date }, style) => (\n  <View\n    style={[styles.dayContainer, style.container]}>\n    <Text style={style.text}>{`${date.getDate()}`}</Text>\n    <Text style={[style.text, styles.value]}>\n      {`${100 * date.getDate() + Math.pow(date.getDate(), 2)}$`}\n    </Text>\n  </View>\n);\n\nexport const CalendarCustomDayShowcase = () => {\n\n  const [date, setDate] = React.useState(null);\n\n  return (\n    <Calendar\n      date={date}\n      onSelect={nextDate => setDate(nextDate)}\n      renderDay={DayCell}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  dayContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: '400',\n  },\n});\n","import React from 'react';\nimport { Calendar, NativeDateService } from '@ui-kitten/components';\n\nconst i18n = {\n  dayNames: {\n    short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n    long: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  },\n  monthNames: {\n    short: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dev'],\n    long: [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ],\n  },\n};\n\nconst dateService = new NativeDateService('en', { i18n });\n\nexport const CalendarCustomLocaleShowcase = () => {\n\n  const [date, setDate] = React.useState(null);\n\n  return (\n    <Calendar\n      dateService={dateService}\n      date={date}\n      onSelect={nextDate => setDate(nextDate)}\n    />\n  );\n};\n","import React from 'react';\nimport { Calendar } from '@ui-kitten/components';\n\nconst filter = (date) => date.getDay() !== 0 && date.getDay() !== 6;\n\nexport const CalendarFilterShowcase = () => {\n\n  const [date, setDate] = React.useState(null);\n\n  return (\n    <Calendar\n      date={date}\n      onSelect={nextDate => setDate(nextDate)}\n      filter={filter}\n    />\n  );\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  DateService,\n  TranslationWidth,\n} from '@ui-kitten/components';\n// @ts-ignore\nimport _moment, {\n  default as _rollupMoment,\n  Moment,\n} from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\nexport class MomentDateService extends DateService<Moment> {\n\n  protected localeData: {\n    firstDayOfWeek: number,\n    defaultFormat: string,\n    months: { [key: string]: string[] },\n    days: { [key: string]: string[] },\n  };\n\n  constructor(locale: string = 'en') {\n    super();\n    this.setLocale(locale);\n  }\n\n  public setLocale(locale: string) {\n    super.setLocale(locale);\n    this.setMomentLocaleData(locale);\n  }\n\n  public addDay(date: Moment, days: number): Moment {\n    return this.clone(date).add({ days });\n  }\n\n  public addMonth(date: Moment, months: number): Moment {\n    return this.clone(date).add({ months });\n  }\n\n  public addYear(date: Moment, years: number): Moment {\n    return this.clone(date).add({ years });\n  }\n\n  public clone(date: Moment): Moment {\n    return date.clone().locale(this.locale);\n  }\n\n  public compareDates(date1: Moment, date2: Moment): number {\n    return this.getYear(date1) - this.getYear(date2) ||\n      this.getMonth(date1) - this.getMonth(date2) ||\n      this.getDate(date1) - this.getDate(date2);\n  }\n\n  public createDate(year: number, month: number, date: number): Moment {\n    return moment.utc([year, month, date]);\n  }\n\n  public format(date: Moment, format: string): string {\n    if (date) {\n      return date.format(format || this.localeData.defaultFormat);\n    }\n\n    return '';\n  }\n\n  public getDate(date: Moment): number {\n    return this.clone(date).date();\n  }\n\n  public getDayOfWeek(date: Moment): number {\n    return this.clone(date).day();\n  }\n\n  public getDayOfWeekNames(style: TranslationWidth = TranslationWidth.SHORT): string[] {\n    return this.localeData.days[style];\n  }\n\n  public getFirstDayOfWeek(): number {\n    return this.localeData.firstDayOfWeek;\n  }\n\n  public getMonth(date: Moment): number {\n    return this.clone(date).month();\n  }\n\n  public getMonthEnd(date: Moment): Moment {\n    return this.clone(date).endOf('month');\n  }\n\n  public getMonthName(date: Moment, style: TranslationWidth = TranslationWidth.SHORT): string {\n    const month: number = this.getMonth(date);\n\n    return this.getMonthNameByIndex(month, style);\n  }\n\n  public getMonthNameByIndex(month: number, style: TranslationWidth = TranslationWidth.SHORT): string {\n    return this.localeData.months[style][month];\n  }\n\n  public getMonthStart(date: Moment): Moment {\n    return this.clone(date).startOf('month');\n  }\n\n  public getNumberOfDaysInMonth(date: Moment): number {\n    return this.clone(date).daysInMonth();\n  }\n\n  public getYear(date: Moment): number {\n    return this.clone(date).year();\n  }\n\n  public getYearEnd(date: Moment): Moment {\n    return this.clone(date).endOf('year');\n  }\n\n  public getYearStart(date: Moment): Moment {\n    return this.clone(date).startOf('year');\n  }\n\n  public isSameDay(date1: Moment, date2: Moment): boolean {\n    return this.isSameMonth(date1, date2) && this.getDate(date1) === this.getDate(date2);\n  }\n\n  public isSameMonth(date1: Moment, date2: Moment): boolean {\n    return this.isSameYear(date1, date2) && this.getMonth(date1) === this.getMonth(date2);\n  }\n\n  public isSameYear(date1: Moment, date2: Moment): boolean {\n    return this.getYear(date1) === this.getYear(date2);\n  }\n\n  public isValidDateString(date: string, format: string): boolean {\n    return moment(date, format).isValid();\n  }\n\n  public parse(date: string, format: string): Moment {\n    return moment(date, format);\n  }\n\n  public today(): Moment {\n    return moment();\n  }\n\n  public getId(): string {\n    return 'moment';\n  }\n\n  protected setMomentLocaleData(locale: string) {\n    const momentLocaleData = moment.localeData(locale);\n\n    this.localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      defaultFormat: momentLocaleData.longDateFormat('L'),\n      months: {\n        [TranslationWidth.SHORT]: momentLocaleData.monthsShort(),\n        [TranslationWidth.LONG]: momentLocaleData.months(),\n      },\n      days: {\n        [TranslationWidth.SHORT]: momentLocaleData.weekdaysShort(),\n        [TranslationWidth.LONG]: momentLocaleData.weekdays(),\n      },\n    };\n  }\n}\n","/**\n * IMPORTANT: To use Moment make sure to install Moment Date Service\n * npm i @ui-kitten/moment\n */\n\nimport React from 'react';\nimport { Calendar } from '@ui-kitten/components';\nimport { MomentDateService } from '@ui-kitten/moment';\nimport moment from 'moment';\n\nconst dateService = new MomentDateService();\n\nexport const CalendarMomentShowcase = () => {\n\n  const [date, setDate] = React.useState(moment());\n\n  return (\n    <Calendar\n      dateService={dateService}\n      date={date}\n      onSelect={nextDate => setDate(nextDate)}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Calendar, Layout, Text } from '@ui-kitten/components';\n\nexport const CalendarSimpleUsageShowcase = () => {\n\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <Layout style={styles.container}>\n\n      <Text\n        style={styles.text}\n        category='h6'>\n        Selected date: {date.toLocaleDateString()}\n      </Text>\n\n      <Calendar\n        date={date}\n        onSelect={nextDate => setDate(nextDate)}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n  text: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { Calendar, NativeDateService } from '@ui-kitten/components';\n\nconst dateService = new NativeDateService('en', { startDayOfWeek: 1 });\n\nexport const CalendarStartDayOfWeekShowcase = () => {\n\n  const [date, setDate] = React.useState(null);\n\n  return (\n    <Calendar\n      dateService={dateService}\n      date={date}\n      onSelect={nextDate => setDate(nextDate)}\n    />\n  );\n};\n","import React from 'react';\nimport { RangeCalendar } from '@ui-kitten/components';\n\nexport const RangeCalendarSimpleUsageShowcase = () => {\n\n  const [range, setRange] = React.useState(null);\n\n  return (\n    <RangeCalendar\n      range={range}\n      onSelect={nextRange => setRange(nextRange)}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Card, Layout, Text } from '@ui-kitten/components';\n\nconst Header = (props) => (\n  <View {...props}>\n    <Text category='h6'>Maldives</Text>\n    <Text category='s1'>By Wikipedia</Text>\n  </View>\n);\n\nconst Footer = (props) => (\n  <View {...props} style={[props.style, styles.footerContainer]}>\n    <Button\n      style={styles.footerControl}\n      size='small'\n      status='basic'>\n      CANCEL\n    </Button>\n    <Button\n      style={styles.footerControl}\n      size='small'>\n      ACCEPT\n    </Button>\n  </View>\n);\n\nexport const CardAccessoriesShowcase = () => (\n  <React.Fragment>\n    <Layout style={styles.topContainer}>\n\n      <Card style={styles.card} header={Header}>\n        <Text>With Header</Text>\n      </Card>\n\n      <Card style={styles.card} footer={Footer}>\n        <Text>With Footer</Text>\n      </Card>\n\n    </Layout>\n\n    <Card style={styles.card} header={Header} footer={Footer}>\n      <Text>\n        The Maldives, officially the Republic of Maldives, is a small country in South Asia, located in the Arabian Sea\n        of the Indian Ocean. It lies southwest of Sri Lanka and India, about 1,000 kilometres (620 mi) from the Asian\n        continent\n      </Text>\n    </Card>\n\n  </React.Fragment>\n);\n\nconst styles = StyleSheet.create({\n  topContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  card: {\n    flex: 1,\n    margin: 8,\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { Card, Text } from '@ui-kitten/components';\n\nexport const CardSimpleUsageShowcase = () => (\n  <Card>\n    <Text>\n      The Maldives, officially the Republic of Maldives, is a small country in South Asia,\n      located in the Arabian Sea of the Indian Ocean.\n      It lies southwest of Sri Lanka and India, about 1,000 kilometres (620 mi) from the Asian continent\n    </Text>\n  </Card>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, Layout, Text } from '@ui-kitten/components';\n\nexport const CardStatusesShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Card style={styles.card} status='primary'>\n      <Text>Primary</Text>\n    </Card>\n\n    <Card style={styles.card} status='success'>\n      <Text>Success</Text>\n    </Card>\n\n    <Card style={styles.card} status='info'>\n      <Text>Info</Text>\n    </Card>\n\n    <Card style={styles.card} status='warning'>\n      <Text>Warning</Text>\n    </Card>\n\n    <Card style={styles.card} status='danger'>\n      <Text>Danger</Text>\n    </Card>\n\n    <Card style={styles.card} status='basic'>\n      <Text>Basic</Text>\n    </Card>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  card: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { CheckBox, Layout } from '@ui-kitten/components';\n\nexport const CheckboxIndeterminateShowcase = () => {\n\n  const [allChecked, setAllChecked] = React.useState(false);\n  const [indeterminate, setIndeterminate] = React.useState(false);\n  const [readChecked, setReadChecked] = React.useState(false);\n  const [writeChecked, setWriteChecked] = React.useState(false);\n\n  const onGroupCheckedChange = (checked) => {\n    setReadChecked(checked);\n    setWriteChecked(checked);\n    setAllChecked(checked);\n  };\n\n  const onReadCheckedChange = (checked) => {\n    setReadChecked(checked);\n    updateGroup(checked, writeChecked);\n  };\n\n  const onWriteCheckedChange = (checked) => {\n    setWriteChecked(checked);\n    updateGroup(checked, readChecked);\n  };\n\n  const updateGroup = (...states) => {\n    const someChecked = states.some((item) => item === true);\n    const everyChecked = states.every((item) => item === true);\n\n    if (someChecked && !everyChecked) {\n      setAllChecked(true);\n      setIndeterminate(true);\n    } else if (!someChecked && !everyChecked) {\n      setAllChecked(false);\n      setIndeterminate(false);\n    } else if (everyChecked) {\n      setAllChecked(true);\n      setIndeterminate(false);\n    }\n  };\n\n  return (\n    <Layout>\n      <CheckBox\n        style={styles.group}\n        checked={allChecked}\n        indeterminate={indeterminate}\n        onChange={onGroupCheckedChange}>\n        Permissions\n      </CheckBox>\n      <CheckBox\n        style={styles.option}\n        checked={readChecked}\n        onChange={onReadCheckedChange}>\n        Read\n      </CheckBox>\n      <CheckBox\n        style={styles.option}\n        checked={writeChecked}\n        onChange={onWriteCheckedChange}>\n        Write\n      </CheckBox>\n    </Layout>\n  );\n};\n\nexport const styles = StyleSheet.create({\n  group: {\n    marginVertical: 4,\n  },\n  option: {\n    marginVertical: 4,\n    marginHorizontal: 12,\n  },\n});\n","import React from 'react';\nimport { CheckBox } from '@ui-kitten/components';\n\nexport const CheckboxSimpleUsageShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  return (\n    <CheckBox\n      checked={checked}\n      onChange={nextChecked => setChecked(nextChecked)}>\n      {`Checked: ${checked}`}\n    </CheckBox>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { CheckBox, Layout } from '@ui-kitten/components';\n\nexport const CheckboxStatesShowcase = () => {\n\n  const [activeChecked, setActiveChecked] = React.useState(false);\n  const [indeterminateChecked, setIndeterminateChecked] = React.useState(false);\n  const [indeterminate, setIndeterminate] = React.useState(true);\n\n  const onActiveChange = (isChecked) => {\n    setActiveChecked(isChecked);\n  };\n\n  const onIndeterminateChange = (isChecked, isIndeterminate) => {\n    setIndeterminateChecked(isChecked);\n    setIndeterminate(isIndeterminate);\n  };\n\n  return (\n    <Layout style={styles.container}>\n\n      <CheckBox\n        style={styles.checkbox}\n        checked={activeChecked}\n        onChange={nextChecked => setActiveChecked(nextChecked)}>\n        Active\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        checked={indeterminateChecked}\n        indeterminate={indeterminate}\n        onChange={onIndeterminateChange}>\n        Indeterminate\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        disabled={true}>\n        Disabled\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        disabled={true}\n        checked={true}>\n        Checked Disabled\n      </CheckBox>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  checkbox: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { CheckBox, Layout } from '@ui-kitten/components';\n\nconst useCheckboxChanges = (initialCheck = false) => {\n  const [checked, setChecked] = React.useState(initialCheck);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return { checked, onChange: onCheckedChange };\n};\n\nexport const CheckboxStatusShowcase = () => {\n\n  const primaryCheckboxChanges = useCheckboxChanges();\n  const successCheckboxChanges = useCheckboxChanges();\n  const infoCheckboxChanges = useCheckboxChanges();\n  const warningCheckboxChanges = useCheckboxChanges();\n  const dangerCheckboxChanges = useCheckboxChanges();\n  const basicCheckboxChanges = useCheckboxChanges();\n  const controlCheckboxChanges = useCheckboxChanges();\n\n  return (\n    <Layout style={styles.container}>\n\n      <CheckBox\n        style={styles.checkbox}\n        status='primary'\n        {...primaryCheckboxChanges}>\n        Primary\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        status='success'\n        {...successCheckboxChanges}>\n        Success\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        status='info'\n        {...infoCheckboxChanges}>\n        Info\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        status='warning'\n        {...warningCheckboxChanges}>\n        Warning\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        status='danger'\n        {...dangerCheckboxChanges}>\n        Danger\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        status='basic'\n        {...basicCheckboxChanges}>\n        Basic\n      </CheckBox>\n\n      <View style={styles.controlContainer}>\n        <CheckBox\n          style={styles.checkbox}\n          status='control'\n          {...controlCheckboxChanges}>\n          Control\n        </CheckBox>\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: 8,\n  },\n  checkbox: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { CheckBox, Text } from '@ui-kitten/components';\n\nconst MyCheckBox = (props) => (\n  <CheckBox {...props}>\n    {evaProps => <Text {...evaProps}>{props.text}</Text>}\n  </CheckBox>\n);\n\nexport const CheckboxStylingShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  return (\n    <MyCheckBox\n      checked={checked}\n      onChange={nextChecked => setChecked(nextChecked)}>\n      Place your Text\n    </MyCheckBox>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Datepicker, Icon, Layout } from '@ui-kitten/components';\n\nconst CalendarIcon = (style) => (\n  <Icon {...style} name='calendar'/>\n);\n\nexport const DatepickerAccessoriesShowcase = () => {\n\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <Layout style={styles.container}>\n\n      <Datepicker\n        label='Label'\n        caption='Caption'\n        placeholder='Pick Date'\n        date={date}\n        onSelect={nextDate => setDate(nextDate)}\n        accessoryRight={CalendarIcon}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Calendar, Datepicker, Layout, Text } from '@ui-kitten/components';\n\nconst DayCell = ({ date }, style) => (\n  <View\n    style={[styles.dayContainer, style.container]}>\n    <Text style={style.text}>{`${date.getDate()}`}</Text>\n    <Text style={[style.text, styles.value]}>\n      {`${100 * date.getDate() + Math.pow(date.getDate(), 2)}$`}\n    </Text>\n  </View>\n);\n\nexport const DatepickerCustomDayShowcase = () => {\n\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <Layout style={styles.container}>\n\n      <Datepicker\n        placeholder='Pick Date'\n        date={date}\n        onSelect={nextDate => setDate(nextDate)}\n        renderDay={DayCell}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n  dayContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: '400',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Datepicker, Layout } from '@ui-kitten/components';\n\nconst useDatepickerChanges = (initialDate = null) => {\n  const [date, setDate] = React.useState(initialDate);\n  return { date, onSelect: setDate };\n};\n\nconst filter = (date) => date.getDay() !== 0 && date.getDay() !== 6;\n\nconst now = new Date();\nconst yesterday = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 1);\nconst tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n\nexport const DatepickerFiltersShowcase = () => {\n\n  const minMaxPickerChanges = useDatepickerChanges();\n  const filterPickerChanges = useDatepickerChanges();\n  const boundingPickerChanges = useDatepickerChanges();\n\n  return (\n    <Layout style={styles.container}>\n\n      <Datepicker\n        style={styles.picker}\n        placeholder='Min / Max'\n        min={yesterday}\n        max={tomorrow}\n        {...minMaxPickerChanges}\n      />\n\n      <Layout style={styles.rowContainer}>\n\n        <Datepicker\n          style={styles.picker}\n          placeholder='Date Filter'\n          filter={filter}\n          {...filterPickerChanges}\n        />\n\n        <Datepicker\n          style={styles.picker}\n          placeholder='Bounding Month'\n          boundingMonth={false}\n          {...boundingPickerChanges}\n        />\n\n      </Layout>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 420,\n  },\n  rowContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  picker: {\n    flex: 1,\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Datepicker, Layout, NativeDateService } from '@ui-kitten/components';\n\nconst useDatepickerChanges = (initialDate = null) => {\n  const [date, setDate] = React.useState(initialDate);\n  return { date, onSelect: setDate };\n};\n\nconst i18n = {\n  dayNames: {\n    short: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\n    long: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\n  },\n  monthNames: {\n    short: ['Янв', 'Фев', 'Март', 'Апр', 'Май', 'Июнь', 'Июль', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\n    long: [\n      'Январь',\n      'Февраль',\n      'Март',\n      'Апрель',\n      'Май',\n      'Июнь',\n      'Июль',\n      'Август',\n      'Сентябрь',\n      'Октябрь',\n      'Ноябрь',\n      'Декабрь',\n    ],\n  },\n};\n\nconst localeDateService = new NativeDateService('ru', { i18n, startDayOfWeek: 1 });\nconst formatDateService = new NativeDateService('en', { format: 'DD.MM.YYYY' });\n\nexport const DatepickerLocaleSettingsShowcase = () => {\n\n  const dateFormatPickerChanges = useDatepickerChanges();\n  const localePickerChanges = useDatepickerChanges();\n\n  return (\n    <Layout style={styles.container}>\n\n      <Datepicker\n        style={styles.picker}\n        placeholder='Date Format'\n        dateService={formatDateService}\n        {...dateFormatPickerChanges}\n      />\n\n      <Datepicker\n        style={styles.picker}\n        placeholder='Locale'\n        dateService={localeDateService}\n        {...localePickerChanges}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    minHeight: 420,\n  },\n  picker: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n});\n","/**\n * IMPORTANT: To use Moment make sure to install Moment Date Service\n * npm i @ui-kitten/moment\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Calendar, Datepicker, Layout } from '@ui-kitten/components';\nimport { MomentDateService } from '@ui-kitten/moment';\n\nconst dateService = new MomentDateService();\n\nexport const DatepickerMomentShowcase = () => {\n\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <Layout style={styles.container}>\n\n      <Datepicker\n        placeholder='Pick Date'\n        date={date}\n        dateService={dateService}\n        onSelect={nextDate => setDate(nextDate)}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Datepicker, Layout, Text } from '@ui-kitten/components';\n\nexport const DatepickerSimpleUsageShowcase = () => {\n\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <Layout style={styles.container}>\n\n      <Text style={styles.text} category='h6'>\n        Selected date: {date.toLocaleDateString()}\n      </Text>\n\n      <Datepicker\n        date={date}\n        onSelect={nextDate => setDate(nextDate)}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n  text: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Datepicker, Layout } from '@ui-kitten/components';\n\nconst useDatepickerState = (initialDate = null) => {\n  const [date, setDate] = React.useState(initialDate);\n  return { date, onSelect: setDate };\n};\n\nexport const DatepickerSizeShowcase = () => {\n\n  const smallDatepickerState = useDatepickerState();\n  const mediumDatepickerState = useDatepickerState();\n  const largeDatepickerState = useDatepickerState();\n\n  return (\n    <Layout style={styles.container}>\n\n      <Datepicker\n        style={styles.datepicker}\n        size='small'\n        placeholder='Small'\n        {...smallDatepickerState}\n      />\n\n      <Datepicker\n        style={styles.datepicker}\n        size='medium'\n        placeholder='Medium'\n        {...mediumDatepickerState}\n      />\n\n      <Datepicker\n        style={styles.datepicker}\n        size='large'\n        placeholder='Large'\n        {...largeDatepickerState}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n  },\n  datepicker: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Datepicker, Layout } from '@ui-kitten/components';\n\nconst useDatepickerState = (initialDate = null) => {\n  const [date, setDate] = React.useState(initialDate);\n  return { date, onSelect: setDate };\n};\n\nexport const DatepickerStatusShowcase = () => {\n\n  const primaryDatepickerState = useDatepickerState();\n  const successDatepickerState = useDatepickerState();\n  const infoDatepickerState = useDatepickerState();\n  const warningDatepickerState = useDatepickerState();\n  const dangerDatepickerState = useDatepickerState();\n  const basicDatepickerState = useDatepickerState();\n\n  return (\n    <Layout style={styles.container}>\n\n      <Layout style={styles.rowContainer}>\n\n        <Datepicker\n          style={styles.picker}\n          status='primary'\n          placeholder='Primary'\n          {...primaryDatepickerState}\n        />\n\n        <Datepicker\n          style={styles.picker}\n          status='success'\n          placeholder='Success'\n          {...successDatepickerState}\n        />\n\n      </Layout>\n\n      <Layout style={styles.rowContainer}>\n\n        <Datepicker\n          style={styles.picker}\n          status='info'\n          placeholder='Info'\n          {...infoDatepickerState}\n        />\n\n        <Datepicker\n          style={styles.picker}\n          status='warning'\n          placeholder='Warning'\n          {...warningDatepickerState}\n        />\n\n      </Layout>\n\n      <Layout style={styles.rowContainer}>\n\n        <Datepicker\n          style={styles.picker}\n          status='danger'\n          placeholder='Danger'\n          {...dangerDatepickerState}\n        />\n\n        <Datepicker\n          style={styles.picker}\n          status='basic'\n          placeholder='Basic'\n          {...basicDatepickerState}\n        />\n\n      </Layout>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 520,\n  },\n  rowContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  picker: {\n    flex: 1,\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, RangeDatepicker } from '@ui-kitten/components';\n\nexport const RangeDatepickerSimpleUsageShowcase = () => {\n\n  const [range, setRange] = React.useState({});\n\n  return (\n    <Layout style={styles.container}>\n\n      <RangeDatepicker\n        range={range}\n        onSelect={nextRange => setRange(nextRange)}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n});\n\n","import React from 'react';\nimport { ImageBackground, StyleSheet } from 'react-native';\nimport { Divider, Drawer, DrawerItem, Icon } from '@ui-kitten/components';\n\nconst PersonIcon = (style) => (\n  <Icon {...style} name='person-outline'/>\n);\n\nconst BellIcon = (style) => (\n  <Icon {...style} name='bell-outline'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nconst Header = (props) => (\n  <React.Fragment>\n    <ImageBackground\n      style={[props.style, styles.header]}\n      source={require('../../assets/icon.png')}\n    />\n    <Divider/>\n  </React.Fragment>\n);\n\nexport const DrawerAccessoriesShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  return (\n    <Drawer\n      header={Header}\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <DrawerItem\n        title='Users'\n        accessoryLeft={PersonIcon}\n        accessoryRight={ForwardIcon}\n      />\n      <DrawerItem\n        title='Orders'\n        accessoryLeft={BellIcon}\n        accessoryRight={ForwardIcon}\n      />\n    </Drawer>\n  );\n};\n\nconst styles = StyleSheet.create({\n  header: {\n    height: 128,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { Drawer, DrawerGroup, DrawerItem, Icon } from '@ui-kitten/components';\n\nconst SmartphoneIcon = (props) => (\n  <Icon {...props} name='smartphone-outline'/>\n);\n\nconst BrowserIcon = (props) => (\n  <Icon {...props} name='browser-outline'/>\n);\n\nconst ColorPaletteIcon = (props) => (\n  <Icon {...props} name='color-palette-outline'/>\n);\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nexport const DrawerGroupsShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  return (\n    <Drawer\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <DrawerGroup title='Akveo React Native' accessoryLeft={SmartphoneIcon}>\n        <DrawerItem title='UI Kitten' accessoryLeft={StarIcon}/>\n        <DrawerItem title='Kitten Tricks' accessoryLeft={StarIcon}/>\n      </DrawerGroup>\n      <DrawerGroup title='Akveo Angular' accessoryLeft={BrowserIcon}>\n        <DrawerItem title='Nebular' accessoryLeft={StarIcon}/>\n        <DrawerItem title='ngx-admin' accessoryLeft={StarIcon}/>\n        <DrawerItem title='UI Bakery' accessoryLeft={StarIcon}/>\n      </DrawerGroup>\n      <DrawerGroup title='Akveo Design' accessoryLeft={ColorPaletteIcon}>\n        <DrawerItem title='Eva Design System' accessoryLeft={StarIcon}/>\n        <DrawerItem title='Eva Icons' accessoryLeft={StarIcon}/>\n      </DrawerGroup>\n    </Drawer>\n  );\n};\n","import React from 'react';\nimport { DrawerItem, Icon } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nexport const DrawerItemSimpleUsageShowcase = () => (\n  <DrawerItem\n    title='Users'\n    accessoryLeft={StarIcon}\n    accessoryRight={ForwardIcon}\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { IndexPath, Layout, Drawer, DrawerItem, Text } from '@ui-kitten/components';\n\nexport const DrawerSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0));\n  const [selectedTitle, setSelectedTitle] = React.useState('No markers');\n\n  return (\n    <Layout style={styles.container}>\n\n      <Layout style={styles.menu}>\n\n        <Text category='h6'>Default</Text>\n\n        <Drawer\n          style={styles.menu}\n          selectedIndex={selectedIndex}\n          onSelect={index => setSelectedIndex(index)}>\n          <DrawerItem title='Users'/>\n          <DrawerItem title='Orders'/>\n          <DrawerItem title='Transactions'/>\n        </Drawer>\n\n      </Layout>\n\n      <Layout style={styles.menu}>\n\n        <Text category='h6'>{selectedTitle}</Text>\n\n        <Drawer>\n          <DrawerItem title='Users' onPress={({ index }) => setSelectedTitle('Users')}/>\n          <DrawerItem title='Orders' onPress={({ index }) => setSelectedTitle('Orders')}/>\n          <DrawerItem title='Transactions' onPress={({ index }) => setSelectedTitle('Transactions')}/>\n        </Drawer>\n\n      </Layout>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  menu: {\n    flex: 1,\n    margin: 8,\n  },\n});\n\n","import React from 'react';\nimport { Drawer, DrawerItem, Text } from '@ui-kitten/components';\n\nconst MyDrawerItem = (props) => (\n  <DrawerItem\n    {...props}\n    title={evaProps => <Text {...evaProps}>{props.title}</Text>}\n  />\n);\n\nexport const DrawerStylingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  return (\n    <Drawer\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <MyDrawerItem title='Users'/>\n      <MyDrawerItem title='Orders'/>\n      <MyDrawerItem title='Transactions'/>\n    </Drawer>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Icon, Layout } from '@ui-kitten/components';\n\nexport const IconAnimationShowcase = () => {\n\n  const zoomIconRef = React.useRef();\n  const pulseIconRef = React.useRef();\n  const shakeIconRef = React.useRef();\n  const infiniteAnimationIconRef = React.useRef();\n\n  React.useEffect(() => {\n    infiniteAnimationIconRef.current.startAnimation();\n  }, []);\n\n  const renderZoomIcon = (props) => (\n    <Icon\n      {...props}\n      ref={zoomIconRef}\n      animation='zoom'\n      name='maximize-outline'\n    />\n  );\n\n  const renderPulseIcon = (props) => (\n    <Icon\n      {...props}\n      ref={pulseIconRef}\n      animation='pulse'\n      name='activity'\n    />\n  );\n\n  const renderShakeIcon = (props) => (\n    <Icon\n      {...props}\n      ref={shakeIconRef}\n      animation='shake'\n      name='shake'\n    />\n  );\n\n  const renderInfiniteAnimationIcon = (props) => (\n    <Icon\n      {...props}\n      ref={infiniteAnimationIconRef}\n      animationConfig={{ cycles: Infinity }}\n      animation='shake'\n      name='clock-outline'\n    />\n  );\n\n  return (\n    <Layout style={styles.container}>\n\n      <Button\n        style={styles.button}\n        accessoryLeft={renderZoomIcon}\n        onPress={() => zoomIconRef.current.startAnimation()}>\n        ZOOM\n      </Button>\n\n      <Button\n        appearance='outline'\n        status='success'\n        style={styles.button}\n        accessoryLeft={renderPulseIcon}\n        onPress={() => pulseIconRef.current.startAnimation()}>\n        PULSE\n      </Button>\n\n      <Button\n        appearance='ghost'\n        status='danger'\n        style={styles.button}\n        accessoryLeft={renderShakeIcon}\n        onPress={() => shakeIconRef.current.startAnimation()}>\n        SHAKE\n      </Button>\n\n      <Button\n        appearance='ghost'\n        status='info'\n        style={styles.button}\n        accessoryRight={renderInfiniteAnimationIcon}>\n        INFINITE\n      </Button>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Icon } from '@ui-kitten/components';\n\nexport const IconSimpleUsageShowcase = () => (\n  <Icon\n    style={styles.icon}\n    fill='#8F9BB3'\n    name='star'\n  />\n);\n\nconst styles = StyleSheet.create({\n  icon: {\n    width: 32,\n    height: 32,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, TouchableWithoutFeedback } from 'react-native';\nimport {\n  Button,\n  Icon,\n  Input,\n  Layout,\n  MenuItem,\n  OverflowMenu,\n  Select,\n  SelectItem,\n  Tooltip,\n} from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst HeartIcon = (props) => (\n  <Icon {...props} name='heart'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nexport const IconWithinComponentsShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n  const [secureTextEntry, setSecureTextEntry] = React.useState(true);\n  const [selectIndex, setSelectIndex] = React.useState(null);\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const [tooltipVisible, setTooltipVisible] = React.useState(false);\n\n  const toggleSecureEntry = () => {\n    setSecureTextEntry(!secureTextEntry);\n  };\n\n  const toggleTooltip = () => {\n    setTooltipVisible(!tooltipVisible);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const renderInputIcon = (props) => (\n    <TouchableWithoutFeedback onPress={toggleSecureEntry}>\n      <Icon {...props} name={!secureTextEntry ? 'eye' : 'eye-off'}/>\n    </TouchableWithoutFeedback>\n  );\n\n  const renderTooltipButton = () => (\n    <Button\n      style={styles.button}\n      accessoryLeft={HeartIcon}\n      onPress={toggleTooltip}>\n      PRESS ME\n    </Button>\n  );\n\n  const renderMenuButton = () => (\n    <Button\n      style={styles.button}\n      accessoryLeft={HeartIcon}\n      onPress={toggleMenu}>\n      PRESS ME\n    </Button>\n  );\n\n  return (\n    <React.Fragment>\n\n      <Layout style={styles.inputContainer}>\n\n        <Input\n          style={styles.input}\n          placeholder='Input'\n          value={value}\n          secureTextEntry={secureTextEntry}\n          onChangeText={setValue}\n          accessoryRight={renderInputIcon}\n        />\n\n        <Select\n          style={styles.input}\n          placeholder='Select'\n          selectedIndex={selectIndex}\n          accessoryLeft={StarIcon}\n          onSelect={setSelectIndex}>\n          <SelectItem accessoryLeft={HeartIcon} title='Option 1'/>\n          <SelectItem accessoryLeft={HeartIcon} title='Option 2'/>\n          <SelectItem accessoryLeft={HeartIcon} title='Option 3'/>\n        </Select>\n\n      </Layout>\n\n      <OverflowMenu\n        fullWidth={true}\n        visible={menuVisible}\n        anchor={renderMenuButton}\n        onBackdropPress={toggleMenu}>\n        <MenuItem title='Menu Option 1' accessoryRight={ForwardIcon}/>\n        <MenuItem title='Menu Option 2' accessoryRight={ForwardIcon}/>\n      </OverflowMenu>\n\n      <Layout style={styles.buttonContainer}>\n\n        <Tooltip\n          anchor={renderTooltipButton}\n          visible={tooltipVisible}\n          accessoryLeft={StarIcon}\n          onBackdropPress={toggleTooltip}>\n          Hi!\n        </Tooltip>\n\n        <Button\n          style={styles.button}\n          appearance='ghost'\n          accessoryLeft={StarIcon}\n        />\n\n      </Layout>\n\n    </React.Fragment>\n  );\n};\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n  },\n  input: {\n    flex: 1,\n    margin: 8,\n  },\n  button: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { TouchableWithoutFeedback } from 'react-native';\nimport { Icon, Input } from '@ui-kitten/components';\n\nconst AlertIcon = (props) => (\n  <Icon {...props} name='alert-circle-outline'/>\n);\n\nexport const InputAccessoriesShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n  const [secureTextEntry, setSecureTextEntry] = React.useState(true);\n\n  const toggleSecureEntry = () => {\n    setSecureTextEntry(!secureTextEntry);\n  };\n\n  const renderIcon = (props) => (\n    <TouchableWithoutFeedback onPress={toggleSecureEntry}>\n      <Icon {...props} name={secureTextEntry ? 'eye-off' : 'eye'}/>\n    </TouchableWithoutFeedback>\n  );\n\n  return (\n    <Input\n      value={value}\n      label='Password'\n      placeholder='Place your Text'\n      caption='Should contain at least 8 symbols'\n      accessoryRight={renderIcon}\n      captionIcon={AlertIcon}\n      secureTextEntry={secureTextEntry}\n      onChangeText={nextValue => setValue(nextValue)}\n    />\n  );\n};\n","import React from 'react';\nimport { Input } from '@ui-kitten/components';\n\nexport const InputSimpleUsageShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n\n  return (\n    <Input\n      placeholder='Place your Text'\n      value={value}\n      onChangeText={nextValue => setValue(nextValue)}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Input, Layout } from '@ui-kitten/components';\n\nconst useInputChanges = (initialValue = '') => {\n  const [value, setValue] = React.useState(initialValue);\n  return {\n    value,\n    onChangeText: setValue,\n  };\n};\n\nexport const InputSizeShowcase = () => {\n\n  const smallInputChanges = useInputChanges();\n  const mediumInputChanges = useInputChanges();\n  const largeInputChanges = useInputChanges();\n\n  return (\n    <Layout>\n\n      <Input\n        style={styles.input}\n        size='small'\n        placeholder='Small'\n        {...smallInputChanges}\n      />\n\n      <Input\n        style={styles.input}\n        size='medium'\n        placeholder='Medium'\n        {...mediumInputChanges}\n      />\n\n      <Input\n        style={styles.input}\n        size='large'\n        placeholder='Large'\n        {...largeInputChanges}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    margin: 8,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Input, Layout } from '@ui-kitten/components';\n\nexport const InputStatesShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n\n  return (\n    <Layout style={styles.container}>\n\n      <Input\n        style={styles.input}\n        value={value}\n        placeholder='Active'\n        onChangeText={nextValue => setValue(nextValue)}\n      />\n\n      <Input\n        style={styles.input}\n        disabled={true}\n        placeholder='Disabled'\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  input: {\n    flex: 1,\n    margin: 8,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Input, Layout } from '@ui-kitten/components';\n\nconst useInputState = (initialValue = '') => {\n  const [value, setValue] = React.useState(initialValue);\n  return { value, onChangeText: setValue };\n};\n\nexport const InputStatusShowcase = () => {\n\n  const primaryInputState = useInputState();\n  const successInputState = useInputState();\n  const infoInputState = useInputState();\n  const warningInputState = useInputState();\n  const dangerInputState = useInputState();\n  const basicInputState = useInputState();\n  const controlInputState = useInputState();\n\n  return (\n    <Layout>\n\n      <Input\n        style={styles.input}\n        status='primary'\n        placeholder='Primary'\n        {...primaryInputState}\n      />\n\n      <Layout style={styles.rowContainer}>\n        <Input\n          style={styles.input}\n          status='success'\n          placeholder='Success'\n          {...successInputState}\n        />\n        <Input\n          style={styles.input}\n          status='info'\n          placeholder='Info'\n          {...infoInputState}\n        />\n      </Layout>\n\n      <Layout style={styles.rowContainer}>\n        <Input\n          style={styles.input}\n          status='warning'\n          placeholder='Warning'\n          {...warningInputState}\n        />\n\n        <Input\n          style={styles.input}\n          status='danger'\n          placeholder='Danger'\n          {...dangerInputState}\n        />\n      </Layout>\n\n      <Layout style={styles.rowContainer}>\n        <Input\n          style={styles.input}\n          status='basic'\n          placeholder='Basic'\n          {...basicInputState}\n        />\n        <View style={styles.controlContainer}>\n          <Input\n            style={styles.input}\n            status='control'\n            placeholder='Control'\n            {...controlInputState}\n          />\n        </View>\n      </Layout>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    flex: 1,\n    margin: 8,\n  },\n  rowContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Input, Text } from '@ui-kitten/components';\n\nconst MyInput = (props) => (\n  <Input\n    {...props}\n    textStyle={styles.inputText}\n    label={evaProps => <Text {...evaProps}>{props.label}</Text>}\n    caption={evaProps => <Text {...evaProps}>{props.caption}</Text>}\n  />\n);\n\nconst styles = StyleSheet.create({\n  inputText: {},\n});\n\nexport const InputStylingShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n\n  return (\n    <MyInput\n      value={value}\n      placeholder='Place your Text'\n      label='Label'\n      caption='Caption'\n      onChangeText={nextValue => setValue(nextValue)}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Text } from '@ui-kitten/components';\n\nexport const LayoutLevelShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Layout style={styles.layout} level='4'>\n      <Text>4</Text>\n    </Layout>\n\n    <Layout style={styles.layout} level='3'>\n      <Text>3</Text>\n    </Layout>\n\n    <Layout style={styles.layout} level='2'>\n      <Text>2</Text>\n    </Layout>\n\n    <Layout style={styles.layout} level='1'>\n      <Text>1</Text>\n    </Layout>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  layout: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { Layout, Text } from '@ui-kitten/components';\n\nexport const LayoutSimpleUsageShowcase = () => (\n  <Layout>\n    <Text>Welcome to UI Kitten 😻</Text>\n  </Layout>\n);\n","/**\n * This example demonstrates how simply could be composed List Item\n * with classic layouts like icon at the left, forward button at the right, etc.\n *\n * IMPORTANT:  sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport { Button, Icon, List, ListItem } from '@ui-kitten/components';\n\nconst data = new Array(8).fill({\n  title: 'Title for Item',\n  description: 'Description for Item',\n});\n\nexport const ListAccessoriesShowcase = () => {\n\n  const renderItemAccessory = (props) => (\n    <Button size='tiny'>FOLLOW</Button>\n  );\n\n  const renderItemIcon = (props) => (\n    <Icon {...props} name='person'/>\n  );\n\n  const renderItem = ({ item, index }) => (\n    <ListItem\n      title={`${item.title} ${index + 1}`}\n      description={`${item.description} ${index + 1}`}\n      accessoryLeft={renderItemIcon}\n      accessoryRight={renderItemAccessory}\n    />\n  );\n\n  return (\n    <List\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n","import React from 'react';\nimport { Avatar, Button, ListItem } from '@ui-kitten/components';\n\nconst InstallButton = (props) => (\n  <Button size='tiny'>\n    INSTALL\n  </Button>\n);\n\nconst ItemImage = (props) => (\n  <Avatar\n    {...props}\n    style={[props.style, { tintColor: null }]}\n    source={require('../../assets/icon.png')}\n  />\n);\n\nexport const ListItemSimpleUsageShowcase = () => (\n  <ListItem\n    title='UI Kitten'\n    description='A set of React Native components'\n    accessoryLeft={ItemImage}\n    accessoryRight={InstallButton}\n  />\n);\n","import React from 'react';\nimport { List, ListItem } from '@ui-kitten/components';\n\nconst data = new Array(8).fill({\n  title: 'Item',\n});\n\nexport const ListSimpleUsageShowcase = () => {\n\n  const renderItem = ({ item, index }) => (\n    <ListItem title={`${item.title} ${index + 1}`}/>\n  );\n\n  return (\n    <List\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n","import React from 'react';\nimport { List, ListItem, Text } from '@ui-kitten/components';\n\nconst data = new Array(8).fill({\n  title: 'Title for Item',\n  description: 'Description for Item',\n});\n\nconst MyListItem = (props) => (\n  <ListItem\n    title={evaProps => <Text {...evaProps}>{props.title}</Text>}\n    description={evaProps => <Text {...evaProps}>{props.desc}</Text>}\n  />\n);\n\nexport const ListStylingShowcase = () => {\n\n  const renderItem = ({ item, index }) => (\n    <MyListItem\n      title={`${item.title} ${index + 1}`}\n      description={`${item.description} ${index + 1}`}\n    />\n  );\n\n  return (\n    <List\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n","import React from 'react';\nimport { Icon, Layout, Menu, MenuItem } from '@ui-kitten/components';\nimport { StyleSheet } from 'react-native';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nconst useMenuState = (initialState = null) => {\n  const [selectedIndex, setSelectedIndex] = React.useState(initialState);\n  return { selectedIndex, onSelect: setSelectedIndex };\n};\n\nexport const MenuAccessoriesShowcase = () => {\n\n  const leftMenuState = useMenuState();\n  const rightMenuState = useMenuState();\n\n  return (\n    <Layout style={styles.container}>\n\n      <Menu style={styles.menu} {...leftMenuState}>\n        <MenuItem title='Users' accessoryLeft={StarIcon}/>\n        <MenuItem title='Orders' accessoryLeft={StarIcon}/>\n        <MenuItem title='Transactions' accessoryLeft={StarIcon}/>\n      </Menu>\n\n      <Menu style={styles.menu} {...rightMenuState}>\n        <MenuItem title='Users' accessoryRight={ForwardIcon}/>\n        <MenuItem title='Orders' accessoryRight={ForwardIcon}/>\n        <MenuItem title='Transactions' accessoryRight={ForwardIcon}/>\n      </Menu>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  menu: {\n    flex: 1,\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { Icon, Layout, Menu, MenuItem } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nexport const MenuDisabledOptionsShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  return (\n    <Layout>\n\n      <Menu\n        selectedIndex={selectedIndex}\n        onSelect={index => setSelectedIndex(index)}>\n        <MenuItem\n          title='Users'\n          accessoryLeft={StarIcon}\n          accessoryRight={ForwardIcon}\n        />\n        <MenuItem\n          title='Orders'\n          disabled={true}\n          accessoryLeft={StarIcon}\n          accessoryRight={ForwardIcon}\n        />\n        <MenuItem\n          title='Transactions'\n          accessoryLeft={StarIcon}\n          accessoryRight={ForwardIcon}\n        />\n      </Menu>\n\n    </Layout>\n  );\n};\n","import React from 'react';\nimport { Linking } from 'react-native';\nimport { Menu, MenuGroup, MenuItem, Icon, IndexPath, Layout } from '@ui-kitten/components';\n\nconst SmartphoneIcon = (props) => (\n  <Icon {...props} name='smartphone-outline'/>\n);\n\nconst BrowserIcon = (props) => (\n  <Icon {...props} name='browser-outline'/>\n);\n\nconst ColorPaletteIcon = (props) => (\n  <Icon {...props} name='color-palette-outline'/>\n);\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nexport const MenuGroupsShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0, 0));\n\n  return (\n    <Layout>\n\n      <Menu\n        selectedIndex={selectedIndex}\n        onSelect={index => setSelectedIndex(index)}>\n        <MenuGroup title='Akveo React Native' accessoryLeft={SmartphoneIcon}>\n          <MenuItem title='UI Kitten' accessoryLeft={StarIcon} onPress={() => Linking.ope}/>\n          <MenuItem title='Kitten Tricks' accessoryLeft={StarIcon}/>\n        </MenuGroup>\n        <MenuGroup title='Akveo Angular' accessoryLeft={BrowserIcon}>\n          <MenuItem title='Nebular' accessoryLeft={StarIcon}/>\n          <MenuItem title='ngx-admin' accessoryLeft={StarIcon}/>\n          <MenuItem title='UI Bakery' accessoryLeft={StarIcon}/>\n        </MenuGroup>\n        <MenuGroup title='Akveo Design' accessoryLeft={ColorPaletteIcon}>\n          <MenuItem title='Eva Design System' accessoryLeft={StarIcon}/>\n          <MenuItem title='Eva Icons' accessoryLeft={StarIcon}/>\n        </MenuGroup>\n      </Menu>\n\n    </Layout>\n  );\n};\n","import React from 'react';\nimport { Icon, MenuItem } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nexport const MenuItemSimpleUsageShowcase = () => (\n  <MenuItem\n    title='Users'\n    accessoryLeft={StarIcon}\n    accessoryRight={ForwardIcon}\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { IndexPath, Layout, Menu, MenuItem, Text } from '@ui-kitten/components';\n\nexport const MenuSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0));\n  const [selectedTitle, setSelectedTitle] = React.useState('No markers');\n\n  return (\n    <Layout style={styles.container}>\n\n      <Layout style={styles.menu}>\n\n        <Text category='h6'>Default</Text>\n\n        <Menu\n          style={styles.menu}\n          selectedIndex={selectedIndex}\n          onSelect={index => setSelectedIndex(index)}>\n          <MenuItem title='Users'/>\n          <MenuItem title='Orders'/>\n          <MenuItem title='Transactions'/>\n        </Menu>\n\n      </Layout>\n\n      <Layout style={styles.menu}>\n\n        <Text category='h6'>{selectedTitle}</Text>\n\n        <Menu>\n          <MenuItem title='Users' onPress={({ index }) => setSelectedTitle('Users')}/>\n          <MenuItem title='Orders' onPress={({ index }) => setSelectedTitle('Orders')}/>\n          <MenuItem title='Transactions' onPress={({ index }) => setSelectedTitle('Transactions')}/>\n        </Menu>\n\n      </Layout>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  menu: {\n    flex: 1,\n    margin: 8,\n  },\n});\n\n","import React from 'react';\nimport { Layout, Menu, MenuItem, Text } from '@ui-kitten/components';\n\nconst MyMenuItem = (props) => (\n  <MenuItem\n    {...props}\n    title={evaProps => <Text {...evaProps}>{props.title}</Text>}\n  />\n);\n\nexport const MenuStylingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  return (\n    <Layout>\n\n      <Menu\n        selectedIndex={selectedIndex}\n        onSelect={setSelectedIndex}>\n        <MyMenuItem title='Users'/>\n        <MyMenuItem title='Orders'/>\n        <MyMenuItem title='Transactions'/>\n      </Menu>\n\n    </Layout>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout, Modal, Text } from '@ui-kitten/components';\n\nexport const ModalSimpleUsageShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const toggleModal = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <Layout style={styles.container}>\n\n      <Button onPress={toggleModal}>TOGGLE MODAL</Button>\n\n      <Modal visible={visible}>\n        <Layout style={styles.modalContainer} level='3'>\n          <Text>Hi! This is modal</Text>\n          <Button onPress={toggleModal}>DISMISS</Button>\n        </Layout>\n      </Modal>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n  modalContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 256,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout, Modal, Text } from '@ui-kitten/components';\n\nexport const ModalWithBackdropShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const toggleModal = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <Layout style={styles.container}>\n\n      <Button onPress={toggleModal}>TOGGLE MODAL</Button>\n\n      <Modal\n        backdropStyle={styles.backdrop}\n        onBackdropPress={toggleModal}\n        visible={visible}>\n        <Layout style={styles.modalContainer} level='3'>\n          <Text>Hi! This is modal.</Text>\n        </Layout>\n      </Modal>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n  modalContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 256,\n    padding: 16,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n});\n","import React from 'react';\nimport { Image, StyleSheet } from 'react-native';\nimport { Button, Layout, MenuItem, OverflowMenu } from '@ui-kitten/components';\n\nconst RemoteStarIcon = (props) => (\n  <Image {...props} source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}/>\n);\n\nexport const OverflowMenuExternalSourceIconsShowcase = () => {\n\n  // Updating `selectedIndex` if marking items selected is not needed.\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n  const [menuVisible, setMenuVisible] = React.useState(false);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setMenuVisible(false);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={toggleMenu}>\n      TOGGLE MENU\n    </Button>\n  );\n\n  return (\n    <Layout style={styles.container}>\n      <OverflowMenu\n        anchor={renderToggleButton}\n        visible={menuVisible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={toggleMenu}>\n        <MenuItem accessoryLeft={RemoteStarIcon} title='Users'/>\n        <MenuItem accessoryLeft={RemoteStarIcon} title='Orders'/>\n        <MenuItem accessoryLeft={RemoteStarIcon} title='Transactions'/>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  Button,\n  IndexPath,\n  Layout,\n  MenuItem,\n  OverflowMenu,\n  Select,\n  SelectGroup,\n  SelectItem,\n} from '@ui-kitten/components';\n\nconst placements = {\n  top: [\n    'top',\n    'top start',\n    'top end',\n  ],\n  bottom: [\n    'bottom',\n    'bottom start',\n    'bottom end',\n  ],\n  left: [\n    'left',\n    'left start',\n    'left end',\n  ],\n  right: [\n    'right',\n    'right start',\n    'right end',\n  ],\n};\n\nconst findPlacementForIndexPath = (index) => {\n  const group = Object.keys(placements)[index.row];\n  return placements[group][index.section];\n};\n\nexport const OverflowMenuPlacementShowcase = () => {\n\n  // Updating `selectedIndex` if marking items selected is not needed.\n  const [visible, setVisible] = React.useState(false);\n  const [placementIndex, setPlacementIndex] = React.useState(new IndexPath(1, 0));\n  const placement = findPlacementForIndexPath(placementIndex);\n\n  const toggleMenu = () => {\n    setVisible(!visible);\n  };\n\n  const onPlacementSelect = (index) => {\n    setPlacementIndex(index);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={toggleMenu}>\n      TOGGLE MENU\n    </Button>\n  );\n\n  const onPlacementItemPress = ({ index }) => {\n    setPlacementIndex(index);\n  };\n\n  const renderPlacementItem = (title) => (\n    <SelectItem title={title} onPress={onPlacementItemPress}/>\n  );\n\n  const renderPlacementGroup = (title) => (\n    <SelectGroup title={title}>\n      {placements[title].map(renderPlacementItem)}\n    </SelectGroup>\n  );\n\n  return (\n    <Layout>\n\n      <Select\n        placeholder='Select Placement'\n        value={placement}\n        selectedIndex={placementIndex}\n        onSelect={onPlacementSelect}>\n        {Object.keys(placements).map(renderPlacementGroup)}\n      </Select>\n\n      <View style={styles.buttonContainer}>\n        <OverflowMenu\n          anchor={renderToggleButton}\n          visible={visible}\n          placement={placement}\n          onBackdropPress={toggleMenu}>\n          <MenuItem title='Users'/>\n          <MenuItem title='Orders'/>\n          <MenuItem title='Transactions'/>\n        </OverflowMenu>\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 376,\n  },\n  button: {\n    width: 192,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout, MenuItem, OverflowMenu } from '@ui-kitten/components';\n\nexport const OverflowMenuSimpleUsageShowcase = () => {\n\n  // Updating `selectedIndex` if marking items selected is not needed.\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n  const [menuVisible, setMenuVisible] = React.useState(false);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setMenuVisible(false);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={toggleMenu}>\n      TOGGLE MENU\n    </Button>\n  );\n\n  return (\n    <Layout style={styles.container}>\n      <OverflowMenu\n        anchor={renderToggleButton}\n        visible={menuVisible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={toggleMenu}>\n        <MenuItem title='Users'/>\n        <MenuItem title='Orders'/>\n        <MenuItem title='Transactions'/>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout, MenuItem, OverflowMenu } from '@ui-kitten/components';\n\nconst data = [\n  { title: 'Menu Item 1' },\n  { title: 'Menu Item 2' },\n  { title: 'Menu Item 3' },\n  { title: 'Menu Item 4' },\n];\n\nexport const OverflowMenuStyledBackdropShowcase = () => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setMenuVisible(false);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={toggleMenu}>\n      TOGGLE MENU\n    </Button>\n  );\n\n  return (\n    <Layout style={styles.container}>\n      <OverflowMenu\n        anchor={renderToggleButton}\n        backdropStyle={styles.backdrop}\n        visible={menuVisible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={toggleMenu}>\n        <MenuItem title='Users'/>\n        <MenuItem title='Orders'/>\n        <MenuItem title='Transactions'/>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout, MenuItem, OverflowMenu } from '@ui-kitten/components';\n\nexport const OverflowMenuWithDisabledItemsShowcase = () => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setMenuVisible(false);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={toggleMenu}>\n      TOGGLE MENU\n    </Button>\n  );\n\n  return (\n    <Layout style={styles.container}>\n      <OverflowMenu\n        anchor={renderToggleButton}\n        visible={menuVisible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={toggleMenu}>\n        <MenuItem title='Users'/>\n        <MenuItem title='Orders' disabled={true}/>\n        <MenuItem title='Transactions'/>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Icon, Layout, MenuItem, OverflowMenu } from '@ui-kitten/components';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport const OverflowMenuWithIconsShowcase = () => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setMenuVisible(false);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={toggleMenu}>\n      TOGGLE MENU\n    </Button>\n  );\n\n  return (\n    <Layout style={styles.container}>\n      <OverflowMenu\n        anchor={renderToggleButton}\n        visible={menuVisible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={toggleMenu}>\n        <MenuItem accessoryLeft={StarIcon} title='Users'/>\n        <MenuItem accessoryLeft={StarIcon} title='Orders'/>\n        <MenuItem accessoryLeft={StarIcon} title='Transactions'/>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout, MenuItem, OverflowMenu } from '@ui-kitten/components';\n\nexport const OverflowMenuWithoutDividerShowcase = () => {\n\n  // Updating `selectedIndex` if marking items selected is not needed.\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n  const [menuVisible, setMenuVisible] = React.useState(false);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setMenuVisible(false);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={toggleMenu}>\n      TOGGLE MENU\n    </Button>\n  );\n\n  return (\n    <Layout style={styles.container}>\n      <OverflowMenu\n        appearance='noDivider'\n        anchor={renderToggleButton}\n        visible={menuVisible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={toggleMenu}>\n        <MenuItem title='Users'/>\n        <MenuItem title='Orders'/>\n        <MenuItem title='Transactions'/>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Icon, Layout, Popover, Text } from '@ui-kitten/components';\n\nconst HeartIcon = (props) => (\n  <Icon {...props} name='heart'/>\n);\n\nexport const PopoverFullWidthShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const togglePopover = () => {\n    setVisible(!visible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={togglePopover}>\n      TOGGLE POPOVER\n    </Button>\n  );\n\n  return (\n    <Popover\n      visible={visible}\n      anchor={renderToggleButton}\n      fullWidth={true}\n      onBackdropPress={togglePopover}>\n      <Layout style={styles.popoverContent}>\n        <Text style={styles.text} category='h1'>\n          Welcome to UI Kitten 😻\n        </Text>\n        <Text style={styles.text} category='s1'>\n          Start with editing App.js to configure your App\n        </Text>\n        <Text style={styles.text} appearance='hint'>\n          For example, try changing theme to Dark by simply changing an import\n        </Text>\n        <Button style={styles.likeButton} accessoryLeft={HeartIcon}>\n          LIKE\n        </Button>\n      </Layout>\n    </Popover>\n  );\n};\n\nconst styles = StyleSheet.create({\n  popoverContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n  text: {\n    textAlign: 'center',\n  },\n  likeButton: {\n    marginVertical: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  Button,\n  Icon,\n  IndexPath,\n  Layout,\n  Popover,\n  Select,\n  SelectGroup,\n  SelectItem,\n  Text,\n} from '@ui-kitten/components';\n\nconst placements = {\n  top: [\n    'top',\n    'top start',\n    'top end',\n  ],\n  bottom: [\n    'bottom',\n    'bottom start',\n    'bottom end',\n  ],\n  left: [\n    'left',\n    'left start',\n    'left end',\n  ],\n  right: [\n    'right',\n    'right start',\n    'right end',\n  ],\n};\n\nconst findPlacementForIndexPath = (index) => {\n  const group = Object.keys(placements)[index.row];\n  return placements[group][index.section];\n};\n\nexport const PopoverPlacementShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n  const [placementIndex, setPlacementIndex] = React.useState(new IndexPath(1, 0));\n  const placement = findPlacementForIndexPath(placementIndex);\n\n  const toggleMenu = () => {\n    setVisible(!visible);\n  };\n\n  const onPlacementSelect = (index) => {\n    setPlacementIndex(index);\n  };\n\n  const togglePopover = () => {\n    setVisible(!visible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={toggleMenu}>\n      TOGGLE POPOVER\n    </Button>\n  );\n\n  const onPlacementItemPress = ({ index }) => {\n    setPlacementIndex(index);\n  };\n\n  const renderPlacementItem = (title) => (\n    <SelectItem title={title} onPress={onPlacementItemPress}/>\n  );\n\n  const renderPlacementGroup = (title) => (\n    <SelectGroup title={title}>\n      {placements[title].map(renderPlacementItem)}\n    </SelectGroup>\n  );\n\n  return (\n    <Layout>\n\n      <Select\n        placeholder='Select Placement'\n        value={placement}\n        selectedIndex={placementIndex}\n        onSelect={onPlacementSelect}>\n        {Object.keys(placements).map(renderPlacementGroup)}\n      </Select>\n\n      <View style={styles.buttonContainer}>\n        <Popover\n          anchor={renderToggleButton}\n          visible={visible}\n          placement={placement}\n          onBackdropPress={togglePopover}>\n          <Text style={styles.text} category='h1'>\n            Welcome to UI Kitten 😻\n          </Text>\n        </Popover>\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 376,\n  },\n  button: {\n    width: 192,\n  },\n  text: {\n    textAlign: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Icon, Layout, Popover, Text } from '@ui-kitten/components';\n\nconst HeartIcon = (props) => (\n  <Icon {...props} name='heart'/>\n);\n\nexport const PopoverSimpleUsageShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const togglePopover = () => {\n    setVisible(!visible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={togglePopover}>\n      TOGGLE POPOVER\n    </Button>\n  );\n\n  return (\n    <Popover\n      visible={visible}\n      anchor={renderToggleButton}\n      onBackdropPress={togglePopover}>\n      <Layout style={styles.popoverContent}>\n        <Text style={styles.text} category='h1'>\n          Welcome to UI Kitten 😻\n        </Text>\n        <Text style={styles.text} category='s1'>\n          Start with editing App.js to configure your App\n        </Text>\n        <Text style={styles.text} appearance='hint'>\n          For example, try changing theme to Dark by simply changing an import\n        </Text>\n        <Button style={styles.likeButton} accessoryLeft={HeartIcon}>\n          LIKE\n        </Button>\n      </Layout>\n    </Popover>\n  );\n};\n\nconst styles = StyleSheet.create({\n  popoverContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n  text: {\n    textAlign: 'center',\n  },\n  likeButton: {\n    marginVertical: 16,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Icon, Layout, Popover, Text } from '@ui-kitten/components';\n\nconst HeartIcon = (props) => (\n  <Icon {...props} name='heart'/>\n);\n\nexport const PopoverStyledBackdropShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const togglePopover = () => {\n    setVisible(!visible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={togglePopover}>\n      TOGGLE POPOVER\n    </Button>\n  );\n\n  return (\n    <Popover\n      backdropStyle={styles.backdrop}\n      visible={visible}\n      anchor={renderToggleButton}\n      onBackdropPress={togglePopover}>\n      <Layout style={styles.popoverContent}>\n        <Text style={styles.text} category='h1'>\n          Welcome to UI Kitten 😻\n        </Text>\n        <Text style={styles.text} category='s1'>\n          Start with editing App.js to configure your App\n        </Text>\n        <Text style={styles.text} appearance='hint'>\n          For example, try changing theme to Dark by simply changing an import\n        </Text>\n        <Button style={styles.likeButton} accessoryLeft={HeartIcon}>\n          LIKE\n        </Button>\n      </Layout>\n    </Popover>\n  );\n};\n\nconst styles = StyleSheet.create({\n  popoverContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n  text: {\n    textAlign: 'center',\n  },\n  likeButton: {\n    marginVertical: 16,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n});\n","import React from 'react';\nimport { Radio } from '@ui-kitten/components';\n\nexport const RadioSimpleUsageShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return (\n    <Radio checked={checked} onChange={onCheckedChange}>\n      {`Checked: ${checked}`}\n    </Radio>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Radio } from '@ui-kitten/components';\n\nexport const RadioStatesShowcase = () => {\n\n  const [activeChecked, setActiveChecked] = React.useState(false);\n\n  const onActiveCheckedChange = (isChecked) => {\n    setActiveChecked(isChecked);\n  };\n\n  return (\n    <Layout style={styles.container}>\n\n      <Radio\n        style={styles.radio}\n        checked={activeChecked}\n        onChange={onActiveCheckedChange}>\n        Active\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        disabled={true}>\n        Disabled\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        checked={true}\n        disabled={true}>\n        Checked Disabled\n      </Radio>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  radio: {\n    margin: 8,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Layout, Radio } from '@ui-kitten/components';\n\nconst useRadioState = (initialCheck = false) => {\n  const [checked, setChecked] = React.useState(initialCheck);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return { checked, onChange: onCheckedChange };\n};\n\nexport const RadioStatusShowcase = () => {\n\n  const primaryRadioState = useRadioState();\n  const successRadioState = useRadioState();\n  const infoRadioState = useRadioState();\n  const warningRadioState = useRadioState();\n  const dangerRadioState = useRadioState();\n  const basicRadioState = useRadioState();\n  const controlRadioState = useRadioState();\n\n  return (\n    <Layout style={styles.container}>\n\n      <Radio\n        style={styles.radio}\n        status='primary'\n        {...primaryRadioState}>\n        Primary\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        status='success'\n        {...successRadioState}>\n        Success\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        status='info'\n        {...infoRadioState}>\n        Info\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        status='warning'\n        {...warningRadioState}>\n        Warning\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        status='danger'\n        {...dangerRadioState}>\n        Danger\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        status='basic'\n        {...basicRadioState}>\n        Basic\n      </Radio>\n\n      <View style={styles.controlContainer}>\n        <Radio\n          style={styles.radio}\n          status='control'\n          {...controlRadioState}>\n          Control\n        </Radio>\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  radio: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    padding: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { Radio, Text } from '@ui-kitten/components';\n\nconst MyRadio = (props) => (\n  <Radio {...props}>\n    {evaProps => <Text {...evaProps}>{props.children}</Text>}\n  </Radio>\n);\n\nexport const RadioStylingShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return (\n    <MyRadio checked={checked} onChange={onCheckedChange}>\n      Place your Text\n    </MyRadio>\n  );\n};\n","import React from 'react';\nimport { Layout, Radio, RadioGroup, Text } from '@ui-kitten/components';\n\nexport const RadioGroupSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const onCheckedChange = (index) => {\n    setSelectedIndex(index);\n  };\n\n  return (\n    <Layout>\n\n      <Text category='h6'>\n        {`Selected Option: ${selectedIndex + 1}`}\n      </Text>\n\n      <RadioGroup\n        selectedIndex={selectedIndex}\n        onChange={onCheckedChange}>\n        <Radio>Option 1</Radio>\n        <Radio>Option 2</Radio>\n        <Radio>Option 3</Radio>\n      </RadioGroup>\n\n    </Layout>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Icon, Layout, Select, SelectItem } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nexport const SelectAccessoriesShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState();\n\n  const onSelect = (index) => {\n    setSelectedIndex(index);\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <Select\n        label='Label'\n        caption='Caption'\n        selectedIndex={selectedIndex}\n        onSelect={onSelect}>\n        <SelectItem accessoryLeft={StarIcon} title='Option 1'/>\n        <SelectItem accessoryLeft={StarIcon} title='Option 2'/>\n        <SelectItem accessoryLeft={StarIcon} title='Option 3'/>\n      </Select>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 228,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Select, SelectItem } from '@ui-kitten/components';\n\nexport const SelectDisabledOptionsShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState();\n\n  const onSelect = (index) => {\n    setSelectedIndex(index);\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <Select\n        selectedIndex={selectedIndex}\n        onSelect={onSelect}>\n        <SelectItem title='Option 1'/>\n        <SelectItem disabled={true} title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 228,\n  },\n});\n\n","import React from 'react';\nimport { Icon, SelectItem } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nexport const SelectItemSimpleUsageShowcase = () => (\n  <SelectItem\n    accessoryLeft={StarIcon}\n    accessoryRight={ForwardIcon}\n    title='Option 1'\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { IndexPath, Layout, Select, SelectItem } from '@ui-kitten/components';\n\nexport const SelectMultiSelectShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState([\n    new IndexPath(0),\n    new IndexPath(1),\n  ]);\n\n  const onSelect = (index) => {\n    setSelectedIndex(index);\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <Select\n        multiSelect={true}\n        selectedIndex={selectedIndex}\n        onSelect={onSelect}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 228,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { IndexPath, Layout, Select, SelectItem } from '@ui-kitten/components';\n\nexport const SelectSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0));\n\n  const onSelect = (index) => {\n    setSelectedIndex(index);\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <Select\n        selectedIndex={selectedIndex}\n        onSelect={onSelect}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 228,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Select, SelectItem } from '@ui-kitten/components';\n\nconst useSelectChanges = (initialState = undefined) => {\n  const [selectedIndex, setSelectedIndex] = React.useState(initialState);\n  return { selectedIndex, onSelect: setSelectedIndex };\n};\n\nexport const SelectSizeShowcase = () => {\n\n  const smallSelectChanges = useSelectChanges();\n  const mediumSelectChanges = useSelectChanges();\n  const largeSelectChanges = useSelectChanges();\n\n  return (\n    <Layout>\n\n      <Select\n        style={styles.select}\n        size='small'\n        placeholder='Small'\n        {...smallSelectChanges}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n\n      <Select\n        style={styles.select}\n        size='medium'\n        placeholder='Medium'\n        {...mediumSelectChanges}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n\n      <Select\n        style={styles.select}\n        size='large'\n        placeholder='Large'\n        {...largeSelectChanges}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  select: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Select, SelectItem } from '@ui-kitten/components';\n\nexport const SelectStatesShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState();\n\n  const onSelect = (index) => {\n    setSelectedIndex(index);\n  };\n\n  return (\n    <Layout style={styles.container}>\n\n      <Select\n        style={styles.select}\n        placeholder='Active'\n        selectedIndex={selectedIndex}\n        onSelect={onSelect}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n\n      <Select\n        style={styles.select}\n        placeholder='Disabled'\n        disabled={true}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: 228,\n  },\n  select: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Layout, Select, SelectItem } from '@ui-kitten/components';\n\nconst useSelectChanges = (initialState = undefined) => {\n  const [selectedIndex, setSelectedIndex] = React.useState(initialState);\n  return { selectedIndex, onSelect: setSelectedIndex };\n};\n\nexport const SelectStatusShowcase = () => {\n\n  const primarySelectChanges = useSelectChanges();\n  const successSelectChanges = useSelectChanges();\n  const infoSelectChanges = useSelectChanges();\n  const warningSelectChanges = useSelectChanges();\n  const dangerSelectChanges = useSelectChanges();\n  const basicSelectChanges = useSelectChanges();\n  const controlSelectChanges = useSelectChanges();\n\n  return (\n    <Layout>\n\n      <Select\n        style={styles.select}\n        status='primary'\n        placeholder='Primary'\n        {...primarySelectChanges}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n\n      <Layout style={styles.rowContainer}>\n\n        <Select\n          style={styles.select}\n          status='success'\n          placeholder='Success'\n          {...successSelectChanges}>\n          <SelectItem title='Option 1'/>\n          <SelectItem title='Option 2'/>\n          <SelectItem title='Option 3'/>\n        </Select>\n\n        <Select\n          style={styles.select}\n          status='info'\n          placeholder='Info'\n          {...infoSelectChanges}>\n          <SelectItem title='Option 1'/>\n          <SelectItem title='Option 2'/>\n          <SelectItem title='Option 3'/>\n        </Select>\n\n      </Layout>\n\n      <Layout style={styles.rowContainer}>\n\n        <Select\n          style={styles.select}\n          status='warning'\n          placeholder='Warning'\n          {...warningSelectChanges}>\n          <SelectItem title='Option 1'/>\n          <SelectItem title='Option 2'/>\n          <SelectItem title='Option 3'/>\n        </Select>\n\n        <Select\n          style={styles.select}\n          status='danger'\n          placeholder='Danger'\n          {...dangerSelectChanges}>\n          <SelectItem title='Option 1'/>\n          <SelectItem title='Option 2'/>\n          <SelectItem title='Option 3'/>\n        </Select>\n\n      </Layout>\n\n      <Layout style={styles.rowContainer}>\n\n        <Select\n          style={styles.select}\n          status='basic'\n          placeholder='Basic'\n          {...basicSelectChanges}>\n          <SelectItem title='Option 1'/>\n          <SelectItem title='Option 2'/>\n          <SelectItem title='Option 3'/>\n        </Select>\n\n        <View style={styles.controlContainer}>\n          <Select\n            style={styles.select}\n            status='control'\n            placeholder='Control'\n            {...controlSelectChanges}>\n            <SelectItem title='Option 1'/>\n            <SelectItem title='Option 2'/>\n            <SelectItem title='Option 3'/>\n          </Select>\n        </View>\n\n      </Layout>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  select: {\n    flex: 1,\n    margin: 8,\n  },\n  rowContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Select, SelectItem, Text } from '@ui-kitten/components';\n\nconst MySelectItem = (props) => (\n  <SelectItem\n    {...props}\n    title={evaProps => <Text {...evaProps}>{props.title}</Text>}\n  />\n);\n\nconst MySelect = (props) => (\n  <Select\n    {...props}\n    label={evaProps => <Text {...evaProps}>{props.label}</Text>}\n    caption={evaProps => <Text {...evaProps}>{props.caption}</Text>}\n    placeholder={evaProps => <Text {...evaProps}>{props.placeholder}</Text>}\n  />\n);\n\nexport const SelectStylingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState();\n\n  const onSelect = (index) => {\n    setSelectedIndex(index);\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <MySelect\n        label='Label'\n        caption='Caption'\n        placeholder='Place your Text'\n        selectedIndex={selectedIndex}\n        onSelect={onSelect}>\n        <MySelectItem title='Option 1'/>\n        <MySelectItem title='Option 2'/>\n        <MySelectItem title='Option 3'/>\n      </MySelect>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 228,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { IndexPath, Layout, Select, SelectGroup, SelectItem } from '@ui-kitten/components';\n\nexport const SelectWithGroupsShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0, 1));\n  const [multiSelectedIndex, setMultiSelectedIndex] = React.useState([\n    new IndexPath(0, 1),\n    new IndexPath(0, 2),\n  ]);\n\n  const onDefaultSelect = (index) => {\n    setSelectedIndex(index);\n  };\n\n  const onMultiSelect = (index) => {\n    setMultiSelectedIndex(index);\n  };\n\n  return (\n    <Layout style={styles.container}>\n\n      <Select\n        style={styles.select}\n        placeholder='Default'\n        selectedIndex={selectedIndex}\n        onSelect={onDefaultSelect}>\n        <SelectGroup title='Group 1'>\n          <SelectItem title='Option 1.1'/>\n          <SelectItem title='Option 1.2'/>\n          <SelectItem title='Option 1.3'/>\n        </SelectGroup>\n        <SelectGroup title='Group 2'>\n          <SelectItem title='Option 2.1'/>\n          <SelectItem title='Option 2.2'/>\n          <SelectItem title='Option 2.3'/>\n        </SelectGroup>\n      </Select>\n\n      <Select\n        style={styles.select}\n        multiSelect={true}\n        placeholder='Multi'\n        selectedIndex={multiSelectedIndex}\n        onSelect={onMultiSelect}>\n        <SelectGroup title='Group 1'>\n          <SelectItem title='Option 1.1'/>\n          <SelectItem title='Option 1.2'/>\n          <SelectItem title='Option 1.3'/>\n        </SelectGroup>\n        <SelectGroup title='Group 2'>\n          <SelectItem title='Option 2.1'/>\n          <SelectItem title='Option 2.2'/>\n          <SelectItem title='Option 2.3'/>\n        </SelectGroup>\n      </Select>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    height: 320,\n  },\n  select: {\n    flex: 1,\n    margin: 8,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { List, ListItem, Spinner } from '@ui-kitten/components';\n\nconst DATA = new Array(8).fill({\n  title: 'Title for Item',\n});\n\nexport const SpinnerDataLoadingShowcase = () => {\n\n  const [data, setData] = React.useState([]);\n\n  React.useEffect(() => {\n    setTimeout(loadData, 5000);\n  }, []);\n\n  const loadData = () => {\n    setData(DATA);\n  };\n\n  const renderLoading = () => (\n    <View style={styles.loading}>\n      <Spinner/>\n    </View>\n  );\n\n  const renderDataItem = ({ item, index }) => (\n    <ListItem title={`${item.title} ${index + 1}`}/>\n  );\n\n  const renderData = () => (\n    <List\n      data={data}\n      renderItem={renderDataItem}\n    />\n  );\n\n  return data.length > 0 ? renderData() : renderLoading();\n};\n\nconst styles = StyleSheet.create({\n  loading: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { Spinner } from '@ui-kitten/components';\n\nexport const SpinnerSimpleUsageShowcase = () => (\n  <Spinner/>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Spinner } from '@ui-kitten/components';\n\nexport const SpinnerSizesShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Spinner size='tiny'/>\n\n    <Spinner size='small'/>\n\n    <Spinner size='medium'/>\n\n    <Spinner size='large'/>\n\n    <Spinner size='giant'/>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Layout, Spinner } from '@ui-kitten/components';\n\nexport const SpinnerStatusesShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Spinner status='primary'/>\n\n    <Spinner status='success'/>\n\n    <Spinner status='info'/>\n\n    <Spinner status='warning'/>\n\n    <Spinner status='danger'/>\n\n    <Spinner status='basic'/>\n\n    <View style={styles.controlContainer}>\n      <Spinner status='control'/>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n  },\n  controlContainer: {\n    borderRadius: 4,\n    padding: 12,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { ApplicationProvider, styled } from '@ui-kitten/components';\nimport { light, mapping } from '@eva-design/eva';\n\n/**\n * All UI Kitten components are based on `styled` component.\n *\n * An example below demonstrates the how parameters can be transformed to component styles.\n * With next examples we'll see more complex examples.\n */\n\nexport const StyledComponentSimpleUsageShowcase = () => (\n  <ApplicationProvider\n    mapping={mapping}\n    theme={light}\n    customMapping={{ components: { StyledComponent: styledComponentMapping } }}>\n\n    <StyledComponentShowcase/>\n\n  </ApplicationProvider>\n);\n\nclass StyledComponent extends React.Component {\n\n  static styledComponentName = 'StyledComponent';\n\n  render() {\n    return (\n      <TouchableOpacity style={this.props.eva.style}/>\n    );\n  }\n}\n\nconst StyledComponentShowcase = styled(StyledComponent);\n\nconst styledComponentMapping = {\n  meta: {\n    parameters: {\n      width: {\n        type: 'number',\n      },\n      height: {\n        type: 'number',\n      },\n      backgroundColor: {\n        type: 'string',\n      },\n    },\n    appearances: {\n      default: {\n        default: true,\n      },\n    },\n    variantGroups: {},\n    states: {},\n  },\n  appearances: {\n    default: {\n      mapping: {\n        width: 32,\n        height: 32,\n        backgroundColor: 'color-primary-default',\n      },\n    },\n  },\n};\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { ApplicationProvider, Interaction, styled } from '@ui-kitten/components';\nimport { light, mapping } from '@eva-design/eva';\n\n/**\n * This example shows how styled component can control states.\n *\n * Let's say we don't like the standard behavior of TouchableOpacity when it's pressed and\n * we want the component to change it's color rather being highlighted.\n *\n * We define an active state in `meta` key and in mapping, so that component will change `backgroundColor`,\n * when `active` is requested. To do this, we call `dispatch` function when Touchable is pressed.\n * Then, when touch is released, we request nothing, which stands for `default`.\n */\n\nexport const StyledComponentStatesShowcase = () => (\n  <ApplicationProvider\n    mapping={mapping}\n    theme={light}\n    customMapping={{ components: { StyledComponent: styledComponentMapping } }}>\n\n    <StyledComponentShowcase/>\n\n  </ApplicationProvider>\n);\n\nclass StyledComponent extends React.Component {\n\n  static styledComponentName = 'StyledComponent';\n\n  onPressIn = () => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n  };\n\n  onPressOut = () => {\n    this.props.eva.dispatch([]);\n  };\n\n  render() {\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        style={this.props.eva.style}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n      />\n    );\n  }\n}\n\nconst StyledComponentShowcase = styled(StyledComponent);\n\nconst styledComponentMapping = {\n  meta: {\n    parameters: {\n      width: {\n        type: 'number',\n      },\n      height: {\n        type: 'number',\n      },\n      backgroundColor: {\n        type: 'string',\n      },\n    },\n    appearances: {\n      default: {\n        default: true,\n      },\n    },\n    variantGroups: {},\n    states: {\n      active: {\n        default: false,\n        priority: 0,\n      },\n    },\n  },\n  appearances: {\n    default: {\n      mapping: {\n        width: 32,\n        height: 32,\n        backgroundColor: 'color-primary-default',\n        state: {\n          active: {\n            backgroundColor: 'color-primary-active',\n          },\n        },\n      },\n    },\n  },\n};\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { ApplicationProvider, Interaction, styled } from '@ui-kitten/components';\nimport { light, mapping } from '@eva-design/eva';\n\n/**\n * This example shows how styled component can apply custom properties like status or size.\n * Note that it is controlled by passing them outside, via props, but it is defined in mappings.\n *\n * Let's say we want to have a `status` property that can be `primary` (which is default) and `danger`.\n * Furthermore, we still want to control backgroundColor when it is pressed.\n *\n * The `variantGroups` key in `meta` defines all custom properties that can be applied by component.\n * Each key in variant group is a string value that can be passed to this prop.\n *\n * Note that we can move `backgroundColor` property from `mapping` to each status.\n */\n\nexport const StyledComponentVariantsShowcase = () => (\n  <ApplicationProvider\n    mapping={mapping}\n    theme={light}\n    customMapping={{ components: { StyledComponent: styledComponentMapping } }}>\n\n    <StyledComponentShowcase status='danger'/>\n\n  </ApplicationProvider>\n);\n\nclass StyledComponent extends React.Component {\n\n  static styledComponentName = 'StyledComponent';\n\n  onPressIn = () => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n  };\n\n  onPressOut = () => {\n    this.props.eva.dispatch([]);\n  };\n\n  render() {\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        style={this.props.eva.style}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n      />\n    );\n  }\n}\n\nconst StyledComponentShowcase = styled(StyledComponent);\n\nconst styledComponentMapping = {\n  meta: {\n    parameters: {\n      width: {\n        type: 'number',\n      },\n      height: {\n        type: 'number',\n      },\n      backgroundColor: {\n        type: 'string',\n      },\n    },\n    appearances: {\n      default: {\n        default: true,\n      },\n    },\n    variantGroups: {\n      status: {\n        primary: {\n          default: true,\n        },\n        danger: {\n          default: false,\n        },\n      },\n    },\n    states: {\n      active: {\n        default: false,\n        priority: 0,\n      },\n    },\n  },\n  appearances: {\n    default: {\n      mapping: {\n        width: 40,\n        height: 40,\n      },\n      variantGroups: {\n        status: {\n          primary: {\n            backgroundColor: 'color-primary-default',\n            state: {\n              active: {\n                backgroundColor: 'color-primary-active',\n              },\n            },\n          },\n          danger: {\n            backgroundColor: 'color-danger-default',\n            state: {\n              active: {\n                backgroundColor: 'color-danger-active',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n","import React from 'react';\nimport { Icon, Layout, Tab, TabBar } from '@ui-kitten/components';\n\nconst PersonIcon = (props) => (\n  <Icon {...props} name='person-outline'/>\n);\n\nconst BellIcon = (props) => (\n  <Icon {...props} name='bell-outline'/>\n);\n\nconst EmailIcon = (props) => (\n  <Icon {...props} name='email-outline'/>\n);\n\nconst useTabBarState = (initialState = 0) => {\n  const [selectedIndex, setSelectedIndex] = React.useState(initialState);\n  return { selectedIndex, onSelect: setSelectedIndex };\n};\n\n\nexport const TabBarAccessoriesShowcase = () => {\n\n  const topState = useTabBarState();\n  const bottomState = useTabBarState();\n\n  return (\n    <React.Fragment>\n\n      <TabBar {...topState}>\n        <Tab icon={PersonIcon}/>\n        <Tab icon={BellIcon}/>\n        <Tab icon={EmailIcon}/>\n      </TabBar>\n\n      <TabBar {...bottomState}>\n        <Tab title='USERS' icon={PersonIcon}/>\n        <Tab title='ORDERS' icon={BellIcon}/>\n        <Tab title='TRANSACTIONS' icon={EmailIcon}/>\n      </TabBar>\n\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { Tab, TabBar } from '@ui-kitten/components';\n\nexport const TabBarSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <TabBar\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}>\n      <Tab title='USERS'/>\n      <Tab title='ORDERS'/>\n      <Tab title='TRANSACTIONS'/>\n    </TabBar>\n  );\n};\n","import React from 'react';\nimport { Icon, Tab } from '@ui-kitten/components';\n\nconst PersonIcon = (props) => (\n  <Icon {...props} name='person-outline'/>\n);\n\nexport const TabSimpleUsageShowcase = () => (\n  <Tab title='USERS' icon={PersonIcon}/>\n);\n","import React from 'react';\nimport { Tab, TabBar, Text } from '@ui-kitten/components';\n\nconst MyTab = (props) => (\n  <Tab\n    {...props}\n    title={evaProps => <Text {...evaProps}>{props.title}</Text>}\n  />\n);\n\nexport const TabStylingShowcase = () => {\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <TabBar\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}>\n      <MyTab title='USERS'/>\n      <MyTab title='ORDERS'/>\n      <MyTab title='TRANSACTIONS'/>\n    </TabBar>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Tab, TabView, Text } from '@ui-kitten/components';\n\nexport const TabViewLazyLoadingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const shouldLoadComponent = (index) => index === selectedIndex;\n\n  return (\n    <TabView\n      selectedIndex={selectedIndex}\n      shouldLoadComponent={shouldLoadComponent}\n      onSelect={setSelectedIndex}>\n      <Tab title='USERS'>\n        <Layout style={styles.tabContainer}>\n          <Text category='h5'>USERS</Text>\n        </Layout>\n      </Tab>\n      <Tab title='ORDERS'>\n        <Layout style={styles.tabContainer}>\n          <Text category='h5'>ORDERS</Text>\n        </Layout>\n      </Tab>\n      <Tab title='TRANSACTIONS'>\n        <Layout style={styles.tabContainer}>\n          <Text category='h5'>TRANSACTIONS</Text>\n        </Layout>\n      </Tab>\n    </TabView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tabContainer: {\n    height: 64,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Tab, TabView, Text } from '@ui-kitten/components';\n\nexport const TabViewSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <TabView\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}>\n      <Tab title='USERS'>\n        <Layout style={styles.tabContainer}>\n          <Text category='h5'>USERS</Text>\n        </Layout>\n      </Tab>\n      <Tab title='ORDERS'>\n        <Layout style={styles.tabContainer}>\n          <Text category='h5'>ORDERS</Text>\n        </Layout>\n      </Tab>\n      <Tab title='TRANSACTIONS'>\n        <Layout style={styles.tabContainer}>\n          <Text category='h5'>TRANSACTIONS</Text>\n        </Layout>\n      </Tab>\n    </TabView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tabContainer: {\n    height: 64,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Layout, Text } from '@ui-kitten/components';\n\nexport const TextAppearancesShowcase = () => (\n  <Layout style={styles.container}>\n\n    <View style={styles.column}>\n\n      <Text style={styles.text}>\n        Default. Use as regular text.\n      </Text>\n      <Text style={styles.text} appearance='hint'>\n        Hint. Use when needed to give user a hint on action.\n      </Text>\n      <View style={styles.alternativeContainer}>\n        <Text style={styles.text} appearance='alternative'>\n          Alternative. Use when needed to display light text in light theme.\n          And vice-versa.\n        </Text>\n      </View>\n\n    </View>\n\n    <View style={styles.column}>\n\n      <View style={styles.row}>\n        <Text style={styles.text} category='h1'>H1</Text>\n        <Text style={styles.text} category='h2'>H2</Text>\n        <Text style={styles.text} category='h3'>H3</Text>\n        <Text style={styles.text} category='h4'>H4</Text>\n        <Text style={styles.text} category='h5'>H5</Text>\n        <Text style={styles.text} category='h6'>H6</Text>\n      </View>\n\n      <View style={styles.row}>\n        <Text style={styles.text} category='s1'>S1</Text>\n        <Text style={styles.text} category='s2'>S2</Text>\n      </View>\n\n      <View style={styles.row}>\n        <Text style={styles.text} category='p1'>P1</Text>\n        <Text style={styles.text} category='p2'>P2</Text>\n      </View>\n\n      <View style={styles.row}>\n        <Text style={styles.text} category='c1'>C1</Text>\n        <Text style={styles.text} category='c2'>C2</Text>\n        <Text style={styles.text} category='label'>LABEL</Text>\n      </View>\n\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  column: {\n    flex: 1,\n    marginHorizontal: 8,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  text: {\n    margin: 2,\n  },\n  alternativeContainer: {\n    borderRadius: 4,\n    marginVertical: 2,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { Text } from '@ui-kitten/components';\n\nexport const TextSimpleUsageShowcase = () => (\n  <Text>Sample Text</Text>\n);\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Layout, Text } from '@ui-kitten/components';\n\nexport const TextStatusesShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Text style={styles.text} status='primary'>Primary</Text>\n    <Text style={styles.text} status='success'>Success</Text>\n    <Text style={styles.text} status='info'>Info</Text>\n    <Text style={styles.text} status='warning'>Warning</Text>\n    <Text style={styles.text} status='danger'>Danger</Text>\n    <Text style={styles.text} status='basic'>Basic</Text>\n    <View style={styles.controlContainer}>\n      <Text style={styles.text} status='control'>Control</Text>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n  },\n  text: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { dark, light } from '@eva-design/eva';\nimport { Card, Layout, Text, ThemeProvider } from '@ui-kitten/components';\n\nexport const ThemeProviderSimpleUsageShowcase = () => (\n  <Layout>\n\n    <ThemeProvider theme={light}>\n      <Card style={{ marginVertical: 8 }}>\n        <Text>I use light theme</Text>\n      </Card>\n    </ThemeProvider>\n\n    <ThemeProvider theme={dark}>\n      <Card style={{ marginVertical: 8 }}>\n        <Text>I use dark theme</Text>\n      </Card>\n    </ThemeProvider>\n\n    <ThemeProvider theme={{ ...light, 'color-primary-default': 'red' }}>\n      <Card style={{ marginVertical: 8 }}>\n        <Text status='primary'>I use custom light theme</Text>\n      </Card>\n    </ThemeProvider>\n\n  </Layout>\n);\n","import React from 'react';\nimport { Toggle } from '@ui-kitten/components';\n\nexport const ToggleSimpleUsageShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return (\n    <Toggle checked={checked} onChange={onCheckedChange}>\n      {`Checked: ${checked}`}\n    </Toggle>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Toggle } from '@ui-kitten/components';\n\nexport const ToggleStatesShowcase = () => {\n\n  const [activeChecked, setActiveChecked] = React.useState(false);\n\n  const onActiveCheckedChange = (isChecked) => {\n    setActiveChecked(isChecked);\n  };\n\n  return (\n    <Layout style={styles.container}>\n\n      <Toggle\n        style={styles.toggle}\n        checked={activeChecked}\n        onChange={onActiveCheckedChange}>\n        Active\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        disabled={true}>\n        Disabled\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        checked={true}\n        disabled={true}>\n        Checked Disabled\n      </Toggle>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  toggle: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Layout, Toggle } from '@ui-kitten/components';\n\nconst useToggleState = (initialState = false) => {\n  const [checked, setChecked] = React.useState(initialState);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return { checked, onChange: onCheckedChange };\n};\n\nexport const ToggleStatusShowcase = () => {\n\n  const primaryToggleState = useToggleState();\n  const successToggleState = useToggleState();\n  const infoToggleState = useToggleState();\n  const warningToggleState = useToggleState();\n  const dangerToggleState = useToggleState();\n  const basicToggleState = useToggleState();\n  const controlToggleState = useToggleState();\n\n  return (\n    <Layout style={styles.container}>\n\n      <Toggle\n        style={styles.toggle}\n        status='primary'\n        {...primaryToggleState}>\n        Primary\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        status='success'\n        {...successToggleState}>\n        Success\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        status='info'\n        {...infoToggleState}>\n        Info\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        status='warning'\n        {...warningToggleState}>\n        Warning\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        status='danger'\n        {...dangerToggleState}>\n        Danger\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        status='basic'\n        {...basicToggleState}>\n        Basic\n      </Toggle>\n\n      <View style={styles.controlContainer}>\n        <Toggle\n          style={styles.toggle}\n          status='control'\n          {...controlToggleState}>\n          Control\n        </Toggle>\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  toggle: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { Text, Toggle } from '@ui-kitten/components';\n\nconst MyToggle = (props) => (\n  <Toggle {...props}>\n    {evaProps => <Text {...evaProps}>{props.children}</Text>}\n  </Toggle>\n);\n\nexport const ToggleStylingShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return (\n    <MyToggle checked={checked} onChange={onCheckedChange}>\n      Place your Text\n    </MyToggle>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Text, Tooltip } from '@ui-kitten/components';\n\nconst TooltipText = (props) => (\n  <Text {...props} style={[props.style, styles.text]}>Hi!</Text>\n);\n\nexport const TooltipInlineStylingShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const toggleTooltip = () => {\n    setVisible(!visible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={toggleTooltip}>\n      TOGGLE TOOLTIP\n    </Button>\n  );\n\n  return (\n    <Tooltip\n      anchor={renderToggleButton}\n      visible={visible}\n      onBackdropPress={toggleTooltip}>\n      {TooltipText}\n    </Tooltip>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    color: 'white',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, IndexPath, Layout, Select, SelectGroup, SelectItem, Tooltip } from '@ui-kitten/components';\n\nconst placements = {\n  top: [\n    'top',\n    'top start',\n    'top end',\n  ],\n  bottom: [\n    'bottom',\n    'bottom start',\n    'bottom end',\n  ],\n  left: [\n    'left',\n    'left start',\n    'left end',\n  ],\n  right: [\n    'right',\n    'right start',\n    'right end',\n  ],\n};\n\nconst findPlacementForIndexPath = (index) => {\n  const group = Object.keys(placements)[index.row];\n  return placements[group][index.section];\n};\n\nexport const TooltipPlacementShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n  const [placementIndex, setPlacementIndex] = React.useState(new IndexPath(1, 0));\n  const placement = findPlacementForIndexPath(placementIndex);\n\n  const onPlacementSelect = (index) => {\n    setPlacementIndex(index);\n  };\n\n  const toggleTooltip = () => {\n    setVisible(!visible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={toggleTooltip}>\n      TOGGLE TOOLTIP\n    </Button>\n  );\n\n  const onPlacementItemPress = ({ index }) => {\n    setPlacementIndex(index);\n  };\n\n  const renderPlacementItem = (title) => (\n    <SelectItem title={title} onPress={onPlacementItemPress}/>\n  );\n\n  const renderPlacementGroup = (title) => (\n    <SelectGroup title={title}>\n      {placements[title].map(renderPlacementItem)}\n    </SelectGroup>\n  );\n\n  return (\n    <Layout>\n\n      <Select\n        placeholder='Select Placement'\n        value={placement}\n        selectedIndex={placementIndex}\n        onSelect={onPlacementSelect}>\n        {Object.keys(placements).map(renderPlacementGroup)}\n      </Select>\n\n      <View style={styles.buttonContainer}>\n        <Tooltip\n          anchor={renderToggleButton}\n          visible={visible}\n          placement={placement.text}\n          onBackdropPress={toggleTooltip}>\n          Hi!\n        </Tooltip>\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 376,\n  },\n  button: {\n    width: 192,\n  },\n});\n","import React from 'react';\nimport { Button, Tooltip } from '@ui-kitten/components';\n\nexport const TooltipSimpleUsageShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const toggleTooltip = () => {\n    setVisible(!visible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={toggleTooltip}>\n      TOGGLE TOOLTIP\n    </Button>\n  );\n\n  return (\n    <Tooltip\n      anchor={renderToggleButton}\n      visible={visible}\n      onBackdropPress={toggleTooltip}>\n      Hi!\n    </Tooltip>\n  );\n};\n","import React from 'react';\nimport { Button, Tooltip } from '@ui-kitten/components';\nimport { StyleSheet } from 'react-native';\n\nexport const TooltipStyledBackdropShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const toggleTooltip = () => {\n    setVisible(!visible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={toggleTooltip}>\n      TOGGLE TOOLTIP\n    </Button>\n  );\n\n  return (\n    <Tooltip\n      anchor={renderToggleButton}\n      backdropStyle={styles.backdrop}\n      visible={visible}\n      onBackdropPress={toggleTooltip}>\n      Hi!\n    </Tooltip>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button, Tooltip } from '@ui-kitten/components';\n\nconst InfoIcon = (props) => (\n  <Image {...props} source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/info.png' }}/>\n);\n\nexport const TooltipWithExternalSourceIconShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const toggleTooltip = () => {\n    setVisible(!visible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={toggleTooltip}>\n      TOGGLE TOOLTIP\n    </Button>\n  );\n\n  return (\n    <Tooltip\n      anchor={renderToggleButton}\n      visible={visible}\n      accessoryLeft={InfoIcon}\n      onBackdropPress={toggleTooltip}>\n      Hi!\n    </Tooltip>\n  );\n};\n","import React from 'react';\nimport { Button, Icon, Tooltip } from '@ui-kitten/components';\n\nconst InfoIcon = (props) => (\n  <Icon {...props} name='info'/>\n);\n\nexport const TooltipWithIconShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const toggleTooltip = () => {\n    setVisible(!visible);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={toggleTooltip}>\n      TOGGLE TOOLTIP\n    </Button>\n  );\n\n  return (\n    <Tooltip\n      anchor={renderToggleButton}\n      visible={visible}\n      accessoryLeft={InfoIcon}\n      onBackdropPress={toggleTooltip}>\n      Hi!\n    </Tooltip>\n  );\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Icon, MenuItem, OverflowMenu, Text, TopNavigation, TopNavigationAction } from '@ui-kitten/components';\n\nconst BackIcon = (props) => (\n  <Icon {...props} name='arrow-back'/>\n);\n\nconst EditIcon = (props) => (\n  <Icon {...props} name='edit'/>\n);\n\nconst MenuIcon = (props) => (\n  <Icon {...props} name='more-vertical'/>\n);\n\nconst InfoIcon = (props) => (\n  <Icon {...props} name='info'/>\n);\n\nconst LogoutIcon = (props) => (\n  <Icon {...props} name='log-out'/>\n);\n\nexport const TopNavigationAccessoriesShowcase = () => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const renderMenuAction = () => (\n    <TopNavigationAction icon={MenuIcon} onPress={toggleMenu}/>\n  );\n\n  const renderRightActions = () => (\n    <React.Fragment>\n      <TopNavigationAction icon={EditIcon}/>\n      <OverflowMenu\n        anchor={renderMenuAction}\n        visible={menuVisible}\n        onBackdropPress={toggleMenu}>\n        <MenuItem accessoryLeft={InfoIcon} title='About'/>\n        <MenuItem accessoryLeft={LogoutIcon} title='Logout'/>\n      </OverflowMenu>\n    </React.Fragment>\n  );\n\n  const renderBackAction = () => (\n    <TopNavigationAction icon={BackIcon}/>\n  );\n\n  return (\n    <TopNavigation\n      alignment='center'\n      title='Eva Application'\n      subtitle='Subtitle'\n      accessoryLeft={renderBackAction}\n      accessoryRight={renderRightActions}\n    />\n  );\n};\n","import React from 'react';\nimport { Icon, TopNavigationAction } from '@ui-kitten/components';\n\nconst BackIcon = (props) => (\n  <Icon {...props} name='arrow-back'/>\n);\n\nexport const TopNavigationActionSimpleUsageShowcase = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n","import React from 'react';\nimport { Icon, TopNavigation, TopNavigationAction } from '@ui-kitten/components';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationSimpleUsageShowcase = () => (\n  <TopNavigation\n    accessoryLeft={BackAction}\n    title='Eva Application'\n  />\n);\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Icon, MenuItem, OverflowMenu, Text, TopNavigation, TopNavigationAction } from '@ui-kitten/components';\n\nconst BackIcon = (props) => (\n  <Icon {...props} name='arrow-back'/>\n);\n\nconst EditIcon = (props) => (\n  <Icon {...props} name='edit'/>\n);\n\nconst MenuIcon = (props) => (\n  <Icon {...props} name='more-vertical'/>\n);\n\nconst InfoIcon = (props) => (\n  <Icon {...props} name='info'/>\n);\n\nconst LogoutIcon = (props) => (\n  <Icon {...props} name='log-out'/>\n);\n\nexport const TopNavigationStylingShowcase = () => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const renderMenuAction = () => (\n    <TopNavigationAction icon={MenuIcon} onPress={toggleMenu}/>\n  );\n\n  const renderRightActions = () => (\n    <React.Fragment>\n      <TopNavigationAction icon={EditIcon}/>\n      <OverflowMenu\n        anchor={renderMenuAction}\n        visible={menuVisible}\n        onBackdropPress={toggleMenu}>\n        <MenuItem accessoryLeft={InfoIcon} title='About'/>\n        <MenuItem accessoryLeft={LogoutIcon} title='Logout'/>\n      </OverflowMenu>\n    </React.Fragment>\n  );\n\n  const renderTitle = (props) => (\n    <View style={styles.titleContainer}>\n      <Avatar\n        style={styles.logo}\n        source={require('../../assets/icon.png')}\n      />\n      <Text {...props}>\n        Eva Application\n      </Text>\n    </View>\n  );\n\n  const renderBackAction = () => (\n    <TopNavigationAction icon={BackIcon}/>\n  );\n\n  return (\n    <TopNavigation\n      alignment='center'\n      title={renderTitle}\n      accessoryLeft={renderBackAction}\n      accessoryRight={renderRightActions}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  logo: {\n    marginHorizontal: 16,\n  },\n});\n","import React from 'react';\nimport { Layout, StyleService, Text, useStyleSheet } from '@ui-kitten/components';\n\nexport const UseStyleSheetSimpleUsageShowcase = () => {\n  const styles = useStyleSheet(themedStyles);\n\n  return (\n    <Layout style={styles.container}>\n      <Text category='h4' status='control'>\n        I use success color as background!\n      </Text>\n    </Layout>\n  );\n};\n\nconst themedStyles = StyleService.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'color-success-default',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Text, useTheme } from '@ui-kitten/components';\n\nexport const UseThemeSimpleUsageShowcase = () => {\n  const theme = useTheme();\n\n  return (\n    <Layout style={[styles.container, { backgroundColor: theme['color-primary-default'] }]}>\n      <Text category='h4' status='control'>\n        I use primary color as background!\n      </Text>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Text, ViewPager } from '@ui-kitten/components';\n\nexport const ViewPagerLazyLoadingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const shouldLoadComponent = (index) => index === selectedIndex;\n\n  return (\n    <ViewPager\n      selectedIndex={selectedIndex}\n      shouldLoadComponent={shouldLoadComponent}\n      onSelect={setSelectedIndex}>\n      <Layout\n        level='2'\n        style={styles.tab}>\n        <Text category='h5'>Tab 1</Text>\n      </Layout>\n      <Layout\n        level='2'\n        style={styles.tab}>\n        <Text category='h5'>Tab 2</Text>\n      </Layout>\n    </ViewPager>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 192,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Text, ViewPager } from '@ui-kitten/components';\n\nexport const ViewPagerSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <ViewPager\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}>\n      <Layout\n        style={styles.tab}\n        level='2'>\n        <Text category='h5'>USERS</Text>\n      </Layout>\n      <Layout\n        style={styles.tab}\n        level='2'>\n        <Text category='h5'>ORDERS</Text>\n      </Layout>\n      <Layout\n        style={styles.tab}\n        level='2'>\n        <Text category='h5'>TRANSACTIONS</Text>\n      </Layout>\n    </ViewPager>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 192,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { Layout, Text, withStyles } from '@ui-kitten/components';\n\nconst ThemedComponent = ({ themedStyle, theme }) => (\n  <Layout style={themedStyle.container}>\n    <Text\n      style={{ color: theme['color-success-default'] }}\n      category='h4'>\n      I use info as background color and success as text color!\n    </Text>\n  </Layout>\n);\n\nexport const WithStylesSimpleUsageShowcase = withStyles(ThemedComponent, theme => ({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme['color-info-default'],\n  },\n}));\n\n","import React from 'react';\nimport { createBrowserApp } from '@react-navigation/web';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { ShowcaseIFrame } from '../components/showcaseIFrame.component';\nimport { AutocompleteAccessoriesShowcase } from '../components/autocomplete/autocompleteAccessories.component';\nimport { AutocompleteAsyncShowcase } from '../components/autocomplete/autocompleteAsync.component';\nimport { AutocompleteHandleKeyboardShowcase } from '../components/autocomplete/autocompleteHandleKeyboard.component';\nimport { AutocompleteSimpleUsageShowcase } from '../components/autocomplete/autocompleteSimpleUsage.component';\nimport { AvatarShapeShowcase } from '../components/avatar/avatarShape.component';\nimport { AvatarSimpleUsageShowcase } from '../components/avatar/avatarSimpleUsage.component';\nimport { AvatarSizeShowcase } from '../components/avatar/avatarSize.component';\nimport { BottomNavigationAccessoriesShowcase } from '../components/bottomNavigation/bottomNavigationAccessories.component';\nimport { BottomNavigationSimpleUsageShowcase } from '../components/bottomNavigation/bottomNavigationSimpleUsage.component';\nimport { BottomNavigationStylingShowcase } from '../components/bottomNavigation/bottomNavigationStyling.component';\nimport { BottomNavigationTabSimpleUsageShowcase } from '../components/bottomNavigation/bottomNavigationTabSimpleUsage.component';\nimport { BottomNavigationWithoutIndicatorShowcase } from '../components/bottomNavigation/bottomNavigationWithoutIndicator.component';\nimport { ButtonAccessoriesShowcase } from '../components/button/buttonAccessories.component';\nimport { ButtonAppearancesShowcase } from '../components/button/buttonAppearances.component';\nimport { ButtonGhostShowcase } from '../components/button/buttonGhost.component';\nimport { ButtonOutlineShowcase } from '../components/button/buttonOutline.component';\nimport { ButtonSimpleUsageShowcase } from '../components/button/buttonSimpleUsage.component';\nimport { ButtonSizeShowcase } from '../components/button/buttonSize.component';\nimport { ButtonStatesShowcase } from '../components/button/buttonStates.component';\nimport { ButtonStatusShowcase } from '../components/button/buttonStatus.component';\nimport { ButtonStylingShowcase } from '../components/button/buttonStyling.component';\nimport { ButtonGroupAppearanceShowcase } from '../components/buttonGroup/buttonGroupAppearance.component';\nimport { ButtonGroupOutlineShowcase } from '../components/buttonGroup/buttonGroupOutline.component';\nimport { ButtonGroupSimpleUsageShowcase } from '../components/buttonGroup/buttonGroupSimpleUsage.component';\nimport { ButtonGroupSizeShowcase } from '../components/buttonGroup/buttonGroupSize.component';\nimport { ButtonGroupStatusShowcase } from '../components/buttonGroup/buttonGroupStatus.component';\nimport { ButtonGroupWithIconsShowcase } from '../components/buttonGroup/buttonGroupWithIcons.component';\nimport { CalendarBoundingMonthShowcase } from '../components/calendar/calendarBoundingMonth.component';\nimport { CalendarBoundsShowcase } from '../components/calendar/calendarBounds.component';\nimport { CalendarCustomDayShowcase } from '../components/calendar/calendarCustomDay.component';\nimport { CalendarCustomLocaleShowcase } from '../components/calendar/calendarCustomLocale.component';\nimport { CalendarFilterShowcase } from '../components/calendar/calendarFilter.component';\nimport { CalendarMomentShowcase } from '../components/calendar/calendarMoment.component';\nimport { CalendarSimpleUsageShowcase } from '../components/calendar/calendarSimpleUsage.component';\nimport { CalendarStartDayOfWeekShowcase } from '../components/calendar/calendarStartDayOfWeek.component';\nimport { RangeCalendarSimpleUsageShowcase } from '../components/calendar/rangeCalendarSimpleUsage.component';\nimport { CardAccessoriesShowcase } from '../components/card/cardAccessories.component';\nimport { CardSimpleUsageShowcase } from '../components/card/cardSimpleUsage.component';\nimport { CardStatusesShowcase } from '../components/card/cardStatuses.component';\nimport { CheckboxIndeterminateShowcase } from '../components/checkbox/checkboxIndeterminate.component';\nimport { CheckboxSimpleUsageShowcase } from '../components/checkbox/checkboxSimpleUsage.component';\nimport { CheckboxStatesShowcase } from '../components/checkbox/checkboxStates.component';\nimport { CheckboxStatusShowcase } from '../components/checkbox/checkboxStatus.component';\nimport { CheckboxStylingShowcase } from '../components/checkbox/checkboxStyling.component';\nimport { DatepickerAccessoriesShowcase } from '../components/datepicker/datepickerAccessories.component';\nimport { DatepickerCustomDayShowcase } from '../components/datepicker/datepickerCustomDay.component';\nimport { DatepickerFiltersShowcase } from '../components/datepicker/datepickerFilters.component';\nimport { DatepickerLocaleSettingsShowcase } from '../components/datepicker/datepickerLocaleSettings.component';\nimport { DatepickerMomentShowcase } from '../components/datepicker/datepickerMoment.component';\nimport { DatepickerSimpleUsageShowcase } from '../components/datepicker/datepickerSimpleUsage.component';\nimport { DatepickerSizeShowcase } from '../components/datepicker/datepickerSize.component';\nimport { DatepickerStatusShowcase } from '../components/datepicker/datepickerStatus.component';\nimport { RangeDatepickerSimpleUsageShowcase } from '../components/datepicker/rangeDatepickerSimpleUsage.component';\nimport { DrawerAccessoriesShowcase } from '../components/drawer/drawerAccessories.component';\nimport { DrawerGroupsShowcase } from '../components/drawer/drawerGroups.component';\nimport { DrawerItemSimpleUsageShowcase } from '../components/drawer/drawerItemSimpleUsage.component';\nimport { DrawerSimpleUsageShowcase } from '../components/drawer/drawerSimpleUsage.component';\nimport { DrawerStylingShowcase } from '../components/drawer/drawerStyling.component';\nimport { IconAnimationShowcase } from '../components/icon/iconAnimation.component';\nimport { IconSimpleUsageShowcase } from '../components/icon/iconSimpleUsage.component';\nimport { IconWithinComponentsShowcase } from '../components/icon/iconWithinComponents.component';\nimport { InputAccessoriesShowcase } from '../components/input/inputAccessories.component';\nimport { InputSimpleUsageShowcase } from '../components/input/inputSimpleUsage.component';\nimport { InputSizeShowcase } from '../components/input/inputSize.component';\nimport { InputStatesShowcase } from '../components/input/inputStates.component';\nimport { InputStatusShowcase } from '../components/input/inputStatus.component';\nimport { InputStylingShowcase } from '../components/input/inputStyling.component';\nimport { LayoutLevelShowcase } from '../components/layout/layoutLevel.component';\nimport { LayoutSimpleUsageShowcase } from '../components/layout/layoutSimpleUsage.component';\nimport { ListAccessoriesShowcase } from '../components/list/listAccessories.component';\nimport { ListItemSimpleUsageShowcase } from '../components/list/listItemSimpleUsage.component';\nimport { ListSimpleUsageShowcase } from '../components/list/listSimpleUsage.component';\nimport { ListStylingShowcase } from '../components/list/listStyling.component';\nimport { MenuAccessoriesShowcase } from '../components/menu/menuAccessories.component';\nimport { MenuDisabledOptionsShowcase } from '../components/menu/menuDisabledOptions.component';\nimport { MenuGroupsShowcase } from '../components/menu/menuGroups.component';\nimport { MenuItemSimpleUsageShowcase } from '../components/menu/menuItemSimpleUsage.component';\nimport { MenuSimpleUsageShowcase } from '../components/menu/menuSimpleUsage.component';\nimport { MenuStylingShowcase } from '../components/menu/menuStyling.component';\nimport { ModalSimpleUsageShowcase } from '../components/modal/modalSimpleUsage.component';\nimport { ModalWithBackdropShowcase } from '../components/modal/modalWithBackdrop.component';\nimport { OverflowMenuExternalSourceIconsShowcase } from '../components/overflowMenu/overflowMenuExternalSourceIcons.component';\nimport { OverflowMenuPlacementShowcase } from '../components/overflowMenu/overflowMenuPlacement.component';\nimport { OverflowMenuSimpleUsageShowcase } from '../components/overflowMenu/overflowMenuSimpleUsage.component';\nimport { OverflowMenuStyledBackdropShowcase } from '../components/overflowMenu/overflowMenuStyledBackdrop.component';\nimport { OverflowMenuWithDisabledItemsShowcase } from '../components/overflowMenu/overflowMenuWithDisabledItems.component';\nimport { OverflowMenuWithIconsShowcase } from '../components/overflowMenu/overflowMenuWithIcons.component';\nimport { OverflowMenuWithoutDividerShowcase } from '../components/overflowMenu/overflowMenuWithoutDivider.component';\nimport { PopoverFullWidthShowcase } from '../components/popover/popoverFullWidth.component';\nimport { PopoverPlacementShowcase } from '../components/popover/popoverPlacement.component';\nimport { PopoverSimpleUsageShowcase } from '../components/popover/popoverSimpleUsage.component';\nimport { PopoverStyledBackdropShowcase } from '../components/popover/popoverStyledBackdrop.component';\nimport { RadioSimpleUsageShowcase } from '../components/radio/radioSimpleUsage.component';\nimport { RadioStatesShowcase } from '../components/radio/radioStates.component';\nimport { RadioStatusShowcase } from '../components/radio/radioStatus.component';\nimport { RadioStylingShowcase } from '../components/radio/radioStyling.component';\nimport { RadioGroupSimpleUsageShowcase } from '../components/radioGroup/radioGroupSimpleUsage.component';\nimport { SelectAccessoriesShowcase } from '../components/select/selectAccessories.component';\nimport { SelectDisabledOptionsShowcase } from '../components/select/selectDisabledOptions.component';\nimport { SelectItemSimpleUsageShowcase } from '../components/select/selectItemSimpleUsage.component';\nimport { SelectMultiSelectShowcase } from '../components/select/selectMultiSelect.component';\nimport { SelectSimpleUsageShowcase } from '../components/select/selectSimpleUsage.component';\nimport { SelectSizeShowcase } from '../components/select/selectSize.component';\nimport { SelectStatesShowcase } from '../components/select/selectStates.component';\nimport { SelectStatusShowcase } from '../components/select/selectStatus.component';\nimport { SelectStylingShowcase } from '../components/select/selectStyling.component';\nimport { SelectWithGroupsShowcase } from '../components/select/selectWithGroups.component';\nimport { SpinnerDataLoadingShowcase } from '../components/spinner/spinnerDataLoading.component';\nimport { SpinnerSimpleUsageShowcase } from '../components/spinner/spinnerSimpleUsage.component';\nimport { SpinnerSizesShowcase } from '../components/spinner/spinnerSizes.component';\nimport { SpinnerStatusesShowcase } from '../components/spinner/spinnerStatuses.component';\nimport { StyledComponentSimpleUsageShowcase } from '../components/styled/styledComponentSimpleUsage.component';\nimport { StyledComponentStatesShowcase } from '../components/styled/styledComponentStates.component';\nimport { StyledComponentVariantsShowcase } from '../components/styled/styledComponentVariants.component';\nimport { TabBarAccessoriesShowcase } from '../components/tab/tabBarAccessories.component';\nimport { TabBarSimpleUsageShowcase } from '../components/tab/tabBarSimpleUsage.component';\nimport { TabSimpleUsageShowcase } from '../components/tab/tabSimpleUsage.component';\nimport { TabStylingShowcase } from '../components/tab/tabStyling.component';\nimport { TabViewLazyLoadingShowcase } from '../components/tab/tabViewLazyLoading.component';\nimport { TabViewSimpleUsageShowcase } from '../components/tab/tabViewSimpleUsage.component';\nimport { TextAppearancesShowcase } from '../components/text/textAppearances.component';\nimport { TextSimpleUsageShowcase } from '../components/text/textSimpleUsage.component';\nimport { TextStatusesShowcase } from '../components/text/textStatuses.component';\nimport { ThemeProviderSimpleUsageShowcase } from '../components/themeProvider/themeProviderSimpleUsage.component';\nimport { ToggleSimpleUsageShowcase } from '../components/toggle/toggleSimpleUsage.component';\nimport { ToggleStatesShowcase } from '../components/toggle/toggleStates.component';\nimport { ToggleStatusShowcase } from '../components/toggle/toggleStatus.component';\nimport { ToggleStylingShowcase } from '../components/toggle/toggleStyling.component';\nimport { TooltipInlineStylingShowcase } from '../components/tooltip/tooltipInlineStyling.component';\nimport { TooltipPlacementShowcase } from '../components/tooltip/tooltipPlacement.component';\nimport { TooltipSimpleUsageShowcase } from '../components/tooltip/tooltipSimpleUsage.component';\nimport { TooltipStyledBackdropShowcase } from '../components/tooltip/tooltipStyledBackdrop.component';\nimport { TooltipWithExternalSourceIconShowcase } from '../components/tooltip/tooltipWithExternalSourceIcon.component';\nimport { TooltipWithIconShowcase } from '../components/tooltip/tooltipWithIcon.component';\nimport { TopNavigationAccessoriesShowcase } from '../components/topNavigation/topNavigationAccessories.component';\nimport { TopNavigationActionSimpleUsageShowcase } from '../components/topNavigation/topNavigationActionSimpleUsage.component';\nimport { TopNavigationSimpleUsageShowcase } from '../components/topNavigation/topNavigationSimpleUsage.component';\nimport { TopNavigationStylingShowcase } from '../components/topNavigation/topNavigationStyling.component';\nimport { UseStyleSheetSimpleUsageShowcase } from '../components/useStyleSheet/useStyleSheetSimpleUsage.component';\nimport { UseThemeSimpleUsageShowcase } from '../components/useTheme/useThemeSimpleUsage.component';\nimport { ViewPagerLazyLoadingShowcase } from '../components/viewPager/viewPagerLazyLoading.component';\nimport { ViewPagerSimpleUsageShowcase } from '../components/viewPager/viewPagerSimpleUsage.component';\nimport { WithStylesSimpleUsageShowcase } from '../components/withStyles/withStylesSimpleUsage.component';\n\nconst routes = {\n  AutocompleteAccessories: () => ShowcaseIFrame(AutocompleteAccessoriesShowcase, 'AutocompleteAccessories'),\n  AutocompleteAsync: () => ShowcaseIFrame(AutocompleteAsyncShowcase, 'AutocompleteAsync'),\n  AutocompleteHandleKeyboard: () => ShowcaseIFrame(AutocompleteHandleKeyboardShowcase, 'AutocompleteHandleKeyboard'),\n  AutocompleteSimpleUsage: () => ShowcaseIFrame(AutocompleteSimpleUsageShowcase, 'AutocompleteSimpleUsage'),\n  AvatarShape: () => ShowcaseIFrame(AvatarShapeShowcase, 'AvatarShape'),\n  AvatarSimpleUsage: () => ShowcaseIFrame(AvatarSimpleUsageShowcase, 'AvatarSimpleUsage'),\n  AvatarSize: () => ShowcaseIFrame(AvatarSizeShowcase, 'AvatarSize'),\n  BottomNavigationAccessories: () => ShowcaseIFrame(BottomNavigationAccessoriesShowcase, 'BottomNavigationAccessories'),\n  BottomNavigationSimpleUsage: () => ShowcaseIFrame(BottomNavigationSimpleUsageShowcase, 'BottomNavigationSimpleUsage'),\n  BottomNavigationStyling: () => ShowcaseIFrame(BottomNavigationStylingShowcase, 'BottomNavigationStyling'),\n  BottomNavigationTabSimpleUsage: () => ShowcaseIFrame(BottomNavigationTabSimpleUsageShowcase, 'BottomNavigationTabSimpleUsage'),\n  BottomNavigationWithoutIndicator: () => ShowcaseIFrame(BottomNavigationWithoutIndicatorShowcase, 'BottomNavigationWithoutIndicator'),\n  ButtonAccessories: () => ShowcaseIFrame(ButtonAccessoriesShowcase, 'ButtonAccessories'),\n  ButtonAppearances: () => ShowcaseIFrame(ButtonAppearancesShowcase, 'ButtonAppearances'),\n  ButtonGhost: () => ShowcaseIFrame(ButtonGhostShowcase, 'ButtonGhost'),\n  ButtonOutline: () => ShowcaseIFrame(ButtonOutlineShowcase, 'ButtonOutline'),\n  ButtonSimpleUsage: () => ShowcaseIFrame(ButtonSimpleUsageShowcase, 'ButtonSimpleUsage'),\n  ButtonSize: () => ShowcaseIFrame(ButtonSizeShowcase, 'ButtonSize'),\n  ButtonStates: () => ShowcaseIFrame(ButtonStatesShowcase, 'ButtonStates'),\n  ButtonStatus: () => ShowcaseIFrame(ButtonStatusShowcase, 'ButtonStatus'),\n  ButtonStyling: () => ShowcaseIFrame(ButtonStylingShowcase, 'ButtonStyling'),\n  ButtonGroupAppearance: () => ShowcaseIFrame(ButtonGroupAppearanceShowcase, 'ButtonGroupAppearance'),\n  ButtonGroupOutline: () => ShowcaseIFrame(ButtonGroupOutlineShowcase, 'ButtonGroupOutline'),\n  ButtonGroupSimpleUsage: () => ShowcaseIFrame(ButtonGroupSimpleUsageShowcase, 'ButtonGroupSimpleUsage'),\n  ButtonGroupSize: () => ShowcaseIFrame(ButtonGroupSizeShowcase, 'ButtonGroupSize'),\n  ButtonGroupStatus: () => ShowcaseIFrame(ButtonGroupStatusShowcase, 'ButtonGroupStatus'),\n  ButtonGroupWithIcons: () => ShowcaseIFrame(ButtonGroupWithIconsShowcase, 'ButtonGroupWithIcons'),\n  CalendarBoundingMonth: () => ShowcaseIFrame(CalendarBoundingMonthShowcase, 'CalendarBoundingMonth'),\n  CalendarBounds: () => ShowcaseIFrame(CalendarBoundsShowcase, 'CalendarBounds'),\n  CalendarCustomDay: () => ShowcaseIFrame(CalendarCustomDayShowcase, 'CalendarCustomDay'),\n  CalendarCustomLocale: () => ShowcaseIFrame(CalendarCustomLocaleShowcase, 'CalendarCustomLocale'),\n  CalendarFilter: () => ShowcaseIFrame(CalendarFilterShowcase, 'CalendarFilter'),\n  CalendarMoment: () => ShowcaseIFrame(CalendarMomentShowcase, 'CalendarMoment'),\n  CalendarSimpleUsage: () => ShowcaseIFrame(CalendarSimpleUsageShowcase, 'CalendarSimpleUsage'),\n  CalendarStartDayOfWeek: () => ShowcaseIFrame(CalendarStartDayOfWeekShowcase, 'CalendarStartDayOfWeek'),\n  RangeCalendarSimpleUsage: () => ShowcaseIFrame(RangeCalendarSimpleUsageShowcase, 'RangeCalendarSimpleUsage'),\n  CardAccessories: () => ShowcaseIFrame(CardAccessoriesShowcase, 'CardAccessories'),\n  CardSimpleUsage: () => ShowcaseIFrame(CardSimpleUsageShowcase, 'CardSimpleUsage'),\n  CardStatuses: () => ShowcaseIFrame(CardStatusesShowcase, 'CardStatuses'),\n  CheckboxIndeterminate: () => ShowcaseIFrame(CheckboxIndeterminateShowcase, 'CheckboxIndeterminate'),\n  CheckboxSimpleUsage: () => ShowcaseIFrame(CheckboxSimpleUsageShowcase, 'CheckboxSimpleUsage'),\n  CheckboxStates: () => ShowcaseIFrame(CheckboxStatesShowcase, 'CheckboxStates'),\n  CheckboxStatus: () => ShowcaseIFrame(CheckboxStatusShowcase, 'CheckboxStatus'),\n  CheckboxStyling: () => ShowcaseIFrame(CheckboxStylingShowcase, 'CheckboxStyling'),\n  DatepickerAccessories: () => ShowcaseIFrame(DatepickerAccessoriesShowcase, 'DatepickerAccessories'),\n  DatepickerCustomDay: () => ShowcaseIFrame(DatepickerCustomDayShowcase, 'DatepickerCustomDay'),\n  DatepickerFilters: () => ShowcaseIFrame(DatepickerFiltersShowcase, 'DatepickerFilters'),\n  DatepickerLocaleSettings: () => ShowcaseIFrame(DatepickerLocaleSettingsShowcase, 'DatepickerLocaleSettings'),\n  DatepickerMoment: () => ShowcaseIFrame(DatepickerMomentShowcase, 'DatepickerMoment'),\n  DatepickerSimpleUsage: () => ShowcaseIFrame(DatepickerSimpleUsageShowcase, 'DatepickerSimpleUsage'),\n  DatepickerSize: () => ShowcaseIFrame(DatepickerSizeShowcase, 'DatepickerSize'),\n  DatepickerStatus: () => ShowcaseIFrame(DatepickerStatusShowcase, 'DatepickerStatus'),\n  RangeDatepickerSimpleUsage: () => ShowcaseIFrame(RangeDatepickerSimpleUsageShowcase, 'RangeDatepickerSimpleUsage'),\n  DrawerAccessories: () => ShowcaseIFrame(DrawerAccessoriesShowcase, 'DrawerAccessories'),\n  DrawerGroups: () => ShowcaseIFrame(DrawerGroupsShowcase, 'DrawerGroups'),\n  DrawerItemSimpleUsage: () => ShowcaseIFrame(DrawerItemSimpleUsageShowcase, 'DrawerItemSimpleUsage'),\n  DrawerSimpleUsage: () => ShowcaseIFrame(DrawerSimpleUsageShowcase, 'DrawerSimpleUsage'),\n  DrawerStyling: () => ShowcaseIFrame(DrawerStylingShowcase, 'DrawerStyling'),\n  IconAnimation: () => ShowcaseIFrame(IconAnimationShowcase, 'IconAnimation'),\n  IconSimpleUsage: () => ShowcaseIFrame(IconSimpleUsageShowcase, 'IconSimpleUsage'),\n  IconWithinComponents: () => ShowcaseIFrame(IconWithinComponentsShowcase, 'IconWithinComponents'),\n  InputAccessories: () => ShowcaseIFrame(InputAccessoriesShowcase, 'InputAccessories'),\n  InputSimpleUsage: () => ShowcaseIFrame(InputSimpleUsageShowcase, 'InputSimpleUsage'),\n  InputSize: () => ShowcaseIFrame(InputSizeShowcase, 'InputSize'),\n  InputStates: () => ShowcaseIFrame(InputStatesShowcase, 'InputStates'),\n  InputStatus: () => ShowcaseIFrame(InputStatusShowcase, 'InputStatus'),\n  InputStyling: () => ShowcaseIFrame(InputStylingShowcase, 'InputStyling'),\n  LayoutLevel: () => ShowcaseIFrame(LayoutLevelShowcase, 'LayoutLevel'),\n  LayoutSimpleUsage: () => ShowcaseIFrame(LayoutSimpleUsageShowcase, 'LayoutSimpleUsage'),\n  ListAccessories: () => ShowcaseIFrame(ListAccessoriesShowcase, 'ListAccessories'),\n  ListItemSimpleUsage: () => ShowcaseIFrame(ListItemSimpleUsageShowcase, 'ListItemSimpleUsage'),\n  ListSimpleUsage: () => ShowcaseIFrame(ListSimpleUsageShowcase, 'ListSimpleUsage'),\n  ListStyling: () => ShowcaseIFrame(ListStylingShowcase, 'ListStyling'),\n  MenuAccessories: () => ShowcaseIFrame(MenuAccessoriesShowcase, 'MenuAccessories'),\n  MenuDisabledOptions: () => ShowcaseIFrame(MenuDisabledOptionsShowcase, 'MenuDisabledOptions'),\n  MenuGroups: () => ShowcaseIFrame(MenuGroupsShowcase, 'MenuGroups'),\n  MenuItemSimpleUsage: () => ShowcaseIFrame(MenuItemSimpleUsageShowcase, 'MenuItemSimpleUsage'),\n  MenuSimpleUsage: () => ShowcaseIFrame(MenuSimpleUsageShowcase, 'MenuSimpleUsage'),\n  MenuStyling: () => ShowcaseIFrame(MenuStylingShowcase, 'MenuStyling'),\n  ModalSimpleUsage: () => ShowcaseIFrame(ModalSimpleUsageShowcase, 'ModalSimpleUsage'),\n  ModalWithBackdrop: () => ShowcaseIFrame(ModalWithBackdropShowcase, 'ModalWithBackdrop'),\n  OverflowMenuExternalSourceIcons: () => ShowcaseIFrame(OverflowMenuExternalSourceIconsShowcase, 'OverflowMenuExternalSourceIcons'),\n  OverflowMenuPlacement: () => ShowcaseIFrame(OverflowMenuPlacementShowcase, 'OverflowMenuPlacement'),\n  OverflowMenuSimpleUsage: () => ShowcaseIFrame(OverflowMenuSimpleUsageShowcase, 'OverflowMenuSimpleUsage'),\n  OverflowMenuStyledBackdrop: () => ShowcaseIFrame(OverflowMenuStyledBackdropShowcase, 'OverflowMenuStyledBackdrop'),\n  OverflowMenuWithDisabledItems: () => ShowcaseIFrame(OverflowMenuWithDisabledItemsShowcase, 'OverflowMenuWithDisabledItems'),\n  OverflowMenuWithIcons: () => ShowcaseIFrame(OverflowMenuWithIconsShowcase, 'OverflowMenuWithIcons'),\n  OverflowMenuWithoutDivider: () => ShowcaseIFrame(OverflowMenuWithoutDividerShowcase, 'OverflowMenuWithoutDivider'),\n  PopoverFullWidth: () => ShowcaseIFrame(PopoverFullWidthShowcase, 'PopoverFullWidth'),\n  PopoverPlacement: () => ShowcaseIFrame(PopoverPlacementShowcase, 'PopoverPlacement'),\n  PopoverSimpleUsage: () => ShowcaseIFrame(PopoverSimpleUsageShowcase, 'PopoverSimpleUsage'),\n  PopoverStyledBackdrop: () => ShowcaseIFrame(PopoverStyledBackdropShowcase, 'PopoverStyledBackdrop'),\n  RadioSimpleUsage: () => ShowcaseIFrame(RadioSimpleUsageShowcase, 'RadioSimpleUsage'),\n  RadioStates: () => ShowcaseIFrame(RadioStatesShowcase, 'RadioStates'),\n  RadioStatus: () => ShowcaseIFrame(RadioStatusShowcase, 'RadioStatus'),\n  RadioStyling: () => ShowcaseIFrame(RadioStylingShowcase, 'RadioStyling'),\n  RadioGroupSimpleUsage: () => ShowcaseIFrame(RadioGroupSimpleUsageShowcase, 'RadioGroupSimpleUsage'),\n  SelectAccessories: () => ShowcaseIFrame(SelectAccessoriesShowcase, 'SelectAccessories'),\n  SelectDisabledOptions: () => ShowcaseIFrame(SelectDisabledOptionsShowcase, 'SelectDisabledOptions'),\n  SelectItemSimpleUsage: () => ShowcaseIFrame(SelectItemSimpleUsageShowcase, 'SelectItemSimpleUsage'),\n  SelectMultiSelect: () => ShowcaseIFrame(SelectMultiSelectShowcase, 'SelectMultiSelect'),\n  SelectSimpleUsage: () => ShowcaseIFrame(SelectSimpleUsageShowcase, 'SelectSimpleUsage'),\n  SelectSize: () => ShowcaseIFrame(SelectSizeShowcase, 'SelectSize'),\n  SelectStates: () => ShowcaseIFrame(SelectStatesShowcase, 'SelectStates'),\n  SelectStatus: () => ShowcaseIFrame(SelectStatusShowcase, 'SelectStatus'),\n  SelectStyling: () => ShowcaseIFrame(SelectStylingShowcase, 'SelectStyling'),\n  SelectWithGroups: () => ShowcaseIFrame(SelectWithGroupsShowcase, 'SelectWithGroups'),\n  SpinnerDataLoading: () => ShowcaseIFrame(SpinnerDataLoadingShowcase, 'SpinnerDataLoading'),\n  SpinnerSimpleUsage: () => ShowcaseIFrame(SpinnerSimpleUsageShowcase, 'SpinnerSimpleUsage'),\n  SpinnerSizes: () => ShowcaseIFrame(SpinnerSizesShowcase, 'SpinnerSizes'),\n  SpinnerStatuses: () => ShowcaseIFrame(SpinnerStatusesShowcase, 'SpinnerStatuses'),\n  StyledComponentSimpleUsage: () => ShowcaseIFrame(StyledComponentSimpleUsageShowcase, 'StyledComponentSimpleUsage'),\n  StyledComponentStates: () => ShowcaseIFrame(StyledComponentStatesShowcase, 'StyledComponentStates'),\n  StyledComponentVariants: () => ShowcaseIFrame(StyledComponentVariantsShowcase, 'StyledComponentVariants'),\n  TabBarAccessories: () => ShowcaseIFrame(TabBarAccessoriesShowcase, 'TabBarAccessories'),\n  TabBarSimpleUsage: () => ShowcaseIFrame(TabBarSimpleUsageShowcase, 'TabBarSimpleUsage'),\n  TabSimpleUsage: () => ShowcaseIFrame(TabSimpleUsageShowcase, 'TabSimpleUsage'),\n  TabStyling: () => ShowcaseIFrame(TabStylingShowcase, 'TabStyling'),\n  TabViewLazyLoading: () => ShowcaseIFrame(TabViewLazyLoadingShowcase, 'TabViewLazyLoading'),\n  TabViewSimpleUsage: () => ShowcaseIFrame(TabViewSimpleUsageShowcase, 'TabViewSimpleUsage'),\n  TextAppearances: () => ShowcaseIFrame(TextAppearancesShowcase, 'TextAppearances'),\n  TextSimpleUsage: () => ShowcaseIFrame(TextSimpleUsageShowcase, 'TextSimpleUsage'),\n  TextStatuses: () => ShowcaseIFrame(TextStatusesShowcase, 'TextStatuses'),\n  ThemeProviderSimpleUsage: () => ShowcaseIFrame(ThemeProviderSimpleUsageShowcase, 'ThemeProviderSimpleUsage'),\n  ToggleSimpleUsage: () => ShowcaseIFrame(ToggleSimpleUsageShowcase, 'ToggleSimpleUsage'),\n  ToggleStates: () => ShowcaseIFrame(ToggleStatesShowcase, 'ToggleStates'),\n  ToggleStatus: () => ShowcaseIFrame(ToggleStatusShowcase, 'ToggleStatus'),\n  ToggleStyling: () => ShowcaseIFrame(ToggleStylingShowcase, 'ToggleStyling'),\n  TooltipInlineStyling: () => ShowcaseIFrame(TooltipInlineStylingShowcase, 'TooltipInlineStyling'),\n  TooltipPlacement: () => ShowcaseIFrame(TooltipPlacementShowcase, 'TooltipPlacement'),\n  TooltipSimpleUsage: () => ShowcaseIFrame(TooltipSimpleUsageShowcase, 'TooltipSimpleUsage'),\n  TooltipStyledBackdrop: () => ShowcaseIFrame(TooltipStyledBackdropShowcase, 'TooltipStyledBackdrop'),\n  TooltipWithExternalSourceIcon: () => ShowcaseIFrame(TooltipWithExternalSourceIconShowcase, 'TooltipWithExternalSourceIcon'),\n  TooltipWithIcon: () => ShowcaseIFrame(TooltipWithIconShowcase, 'TooltipWithIcon'),\n  TopNavigationAccessories: () => ShowcaseIFrame(TopNavigationAccessoriesShowcase, 'TopNavigationAccessories'),\n  TopNavigationActionSimpleUsage: () => ShowcaseIFrame(TopNavigationActionSimpleUsageShowcase, 'TopNavigationActionSimpleUsage'),\n  TopNavigationSimpleUsage: () => ShowcaseIFrame(TopNavigationSimpleUsageShowcase, 'TopNavigationSimpleUsage'),\n  TopNavigationStyling: () => ShowcaseIFrame(TopNavigationStylingShowcase, 'TopNavigationStyling'),\n  UseStyleSheetSimpleUsage: () => ShowcaseIFrame(UseStyleSheetSimpleUsageShowcase, 'UseStyleSheetSimpleUsage'),\n  UseThemeSimpleUsage: () => ShowcaseIFrame(UseThemeSimpleUsageShowcase, 'UseThemeSimpleUsage'),\n  ViewPagerLazyLoading: () => ShowcaseIFrame(ViewPagerLazyLoadingShowcase, 'ViewPagerLazyLoading'),\n  ViewPagerSimpleUsage: () => ShowcaseIFrame(ViewPagerSimpleUsageShowcase, 'ViewPagerSimpleUsage'),\n  WithStylesSimpleUsage: () => ShowcaseIFrame(WithStylesSimpleUsageShowcase, 'WithStylesSimpleUsage')\n};\n\nconst AppStack = createStackNavigator(routes, { headerMode: 'none' });\nexport const AppNavigator = createBrowserApp(AppStack, { history: 'hash' });","import React from 'react';\nimport { Updates } from 'expo';\nimport * as eva from '@eva-design/eva';\nimport * as material from '@eva-design/material';\nimport {\n  ApplicationProvider,\n  ApplicationProviderProps,\n  IconRegistry,\n} from '@ui-kitten/components';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport { default as customMapping } from './mapping.json';\nimport { themes } from './themes';\nimport { AppNavigator } from '../navigation/app.navigator';\nimport {\n  AppMapping,\n  AppTheme,\n  ThemeContext,\n  ThemeContextType,\n} from '../services/theme.service';\n\nconst mappings = {\n  Eva: eva.mapping,\n  Material: material.mapping,\n};\n\nconst storedMapping: string = localStorage.getItem('mapping');\nconst isMappingKey: boolean = Object.keys(mappings).includes(storedMapping);\n\nconst mapping: AppMapping = isMappingKey ? (storedMapping as AppMapping) : AppMapping.eva;\n\nexport default (): React.ReactElement => {\n\n  const [theme, setTheme] = React.useState<AppTheme>(AppTheme.light);\n\n  const dispatchMappingChange = (nextMapping: AppMapping): void => {\n    localStorage.setItem('mapping', nextMapping);\n    Updates.reload().then();\n  };\n\n  const isDarkMode = (): boolean => {\n    return theme === AppTheme.dark;\n  };\n\n  const applicationProviderConfig: ApplicationProviderProps = {\n    mapping: mappings[mapping],\n    theme: themes[mapping][theme],\n    // @ts-ignore\n    customMapping: customMapping,\n  };\n\n  const themeContextProviderConfig: ThemeContextType = {\n    mapping: mapping,\n    theme: theme,\n    setMapping: dispatchMappingChange,\n    setTheme: setTheme,\n    isDarkMode: isDarkMode,\n  };\n\n  return (\n    <React.Fragment>\n      <IconRegistry icons={EvaIconsPack}/>\n      <ApplicationProvider {...applicationProviderConfig}>\n        <ThemeContext.Provider value={themeContextProviderConfig}>\n          <AppNavigator/>\n        </ThemeContext.Provider>\n      </ApplicationProvider>\n    </React.Fragment>\n  );\n};\n","import App from './app/app.component';\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/icon.a78e4b51.png\";","var map = {\n\t\"./af\": 158,\n\t\"./af.js\": 158,\n\t\"./ar\": 159,\n\t\"./ar-dz\": 160,\n\t\"./ar-dz.js\": 160,\n\t\"./ar-kw\": 161,\n\t\"./ar-kw.js\": 161,\n\t\"./ar-ly\": 162,\n\t\"./ar-ly.js\": 162,\n\t\"./ar-ma\": 163,\n\t\"./ar-ma.js\": 163,\n\t\"./ar-sa\": 164,\n\t\"./ar-sa.js\": 164,\n\t\"./ar-tn\": 165,\n\t\"./ar-tn.js\": 165,\n\t\"./ar.js\": 159,\n\t\"./az\": 166,\n\t\"./az.js\": 166,\n\t\"./be\": 167,\n\t\"./be.js\": 167,\n\t\"./bg\": 168,\n\t\"./bg.js\": 168,\n\t\"./bm\": 169,\n\t\"./bm.js\": 169,\n\t\"./bn\": 170,\n\t\"./bn.js\": 170,\n\t\"./bo\": 171,\n\t\"./bo.js\": 171,\n\t\"./br\": 172,\n\t\"./br.js\": 172,\n\t\"./bs\": 173,\n\t\"./bs.js\": 173,\n\t\"./ca\": 174,\n\t\"./ca.js\": 174,\n\t\"./cs\": 175,\n\t\"./cs.js\": 175,\n\t\"./cv\": 176,\n\t\"./cv.js\": 176,\n\t\"./cy\": 177,\n\t\"./cy.js\": 177,\n\t\"./da\": 178,\n\t\"./da.js\": 178,\n\t\"./de\": 179,\n\t\"./de-at\": 180,\n\t\"./de-at.js\": 180,\n\t\"./de-ch\": 181,\n\t\"./de-ch.js\": 181,\n\t\"./de.js\": 179,\n\t\"./dv\": 182,\n\t\"./dv.js\": 182,\n\t\"./el\": 183,\n\t\"./el.js\": 183,\n\t\"./en-SG\": 184,\n\t\"./en-SG.js\": 184,\n\t\"./en-au\": 185,\n\t\"./en-au.js\": 185,\n\t\"./en-ca\": 186,\n\t\"./en-ca.js\": 186,\n\t\"./en-gb\": 187,\n\t\"./en-gb.js\": 187,\n\t\"./en-ie\": 188,\n\t\"./en-ie.js\": 188,\n\t\"./en-il\": 189,\n\t\"./en-il.js\": 189,\n\t\"./en-nz\": 190,\n\t\"./en-nz.js\": 190,\n\t\"./eo\": 191,\n\t\"./eo.js\": 191,\n\t\"./es\": 192,\n\t\"./es-do\": 193,\n\t\"./es-do.js\": 193,\n\t\"./es-us\": 194,\n\t\"./es-us.js\": 194,\n\t\"./es.js\": 192,\n\t\"./et\": 195,\n\t\"./et.js\": 195,\n\t\"./eu\": 196,\n\t\"./eu.js\": 196,\n\t\"./fa\": 197,\n\t\"./fa.js\": 197,\n\t\"./fi\": 198,\n\t\"./fi.js\": 198,\n\t\"./fo\": 199,\n\t\"./fo.js\": 199,\n\t\"./fr\": 200,\n\t\"./fr-ca\": 201,\n\t\"./fr-ca.js\": 201,\n\t\"./fr-ch\": 202,\n\t\"./fr-ch.js\": 202,\n\t\"./fr.js\": 200,\n\t\"./fy\": 203,\n\t\"./fy.js\": 203,\n\t\"./ga\": 204,\n\t\"./ga.js\": 204,\n\t\"./gd\": 205,\n\t\"./gd.js\": 205,\n\t\"./gl\": 206,\n\t\"./gl.js\": 206,\n\t\"./gom-latn\": 207,\n\t\"./gom-latn.js\": 207,\n\t\"./gu\": 208,\n\t\"./gu.js\": 208,\n\t\"./he\": 209,\n\t\"./he.js\": 209,\n\t\"./hi\": 210,\n\t\"./hi.js\": 210,\n\t\"./hr\": 211,\n\t\"./hr.js\": 211,\n\t\"./hu\": 212,\n\t\"./hu.js\": 212,\n\t\"./hy-am\": 213,\n\t\"./hy-am.js\": 213,\n\t\"./id\": 214,\n\t\"./id.js\": 214,\n\t\"./is\": 215,\n\t\"./is.js\": 215,\n\t\"./it\": 216,\n\t\"./it-ch\": 217,\n\t\"./it-ch.js\": 217,\n\t\"./it.js\": 216,\n\t\"./ja\": 218,\n\t\"./ja.js\": 218,\n\t\"./jv\": 219,\n\t\"./jv.js\": 219,\n\t\"./ka\": 220,\n\t\"./ka.js\": 220,\n\t\"./kk\": 221,\n\t\"./kk.js\": 221,\n\t\"./km\": 222,\n\t\"./km.js\": 222,\n\t\"./kn\": 223,\n\t\"./kn.js\": 223,\n\t\"./ko\": 224,\n\t\"./ko.js\": 224,\n\t\"./ku\": 225,\n\t\"./ku.js\": 225,\n\t\"./ky\": 226,\n\t\"./ky.js\": 226,\n\t\"./lb\": 227,\n\t\"./lb.js\": 227,\n\t\"./lo\": 228,\n\t\"./lo.js\": 228,\n\t\"./lt\": 229,\n\t\"./lt.js\": 229,\n\t\"./lv\": 230,\n\t\"./lv.js\": 230,\n\t\"./me\": 231,\n\t\"./me.js\": 231,\n\t\"./mi\": 232,\n\t\"./mi.js\": 232,\n\t\"./mk\": 233,\n\t\"./mk.js\": 233,\n\t\"./ml\": 234,\n\t\"./ml.js\": 234,\n\t\"./mn\": 235,\n\t\"./mn.js\": 235,\n\t\"./mr\": 236,\n\t\"./mr.js\": 236,\n\t\"./ms\": 237,\n\t\"./ms-my\": 238,\n\t\"./ms-my.js\": 238,\n\t\"./ms.js\": 237,\n\t\"./mt\": 239,\n\t\"./mt.js\": 239,\n\t\"./my\": 240,\n\t\"./my.js\": 240,\n\t\"./nb\": 241,\n\t\"./nb.js\": 241,\n\t\"./ne\": 242,\n\t\"./ne.js\": 242,\n\t\"./nl\": 243,\n\t\"./nl-be\": 244,\n\t\"./nl-be.js\": 244,\n\t\"./nl.js\": 243,\n\t\"./nn\": 245,\n\t\"./nn.js\": 245,\n\t\"./pa-in\": 246,\n\t\"./pa-in.js\": 246,\n\t\"./pl\": 247,\n\t\"./pl.js\": 247,\n\t\"./pt\": 248,\n\t\"./pt-br\": 249,\n\t\"./pt-br.js\": 249,\n\t\"./pt.js\": 248,\n\t\"./ro\": 250,\n\t\"./ro.js\": 250,\n\t\"./ru\": 251,\n\t\"./ru.js\": 251,\n\t\"./sd\": 252,\n\t\"./sd.js\": 252,\n\t\"./se\": 253,\n\t\"./se.js\": 253,\n\t\"./si\": 254,\n\t\"./si.js\": 254,\n\t\"./sk\": 255,\n\t\"./sk.js\": 255,\n\t\"./sl\": 256,\n\t\"./sl.js\": 256,\n\t\"./sq\": 257,\n\t\"./sq.js\": 257,\n\t\"./sr\": 258,\n\t\"./sr-cyrl\": 259,\n\t\"./sr-cyrl.js\": 259,\n\t\"./sr.js\": 258,\n\t\"./ss\": 260,\n\t\"./ss.js\": 260,\n\t\"./sv\": 261,\n\t\"./sv.js\": 261,\n\t\"./sw\": 262,\n\t\"./sw.js\": 262,\n\t\"./ta\": 263,\n\t\"./ta.js\": 263,\n\t\"./te\": 264,\n\t\"./te.js\": 264,\n\t\"./tet\": 265,\n\t\"./tet.js\": 265,\n\t\"./tg\": 266,\n\t\"./tg.js\": 266,\n\t\"./th\": 267,\n\t\"./th.js\": 267,\n\t\"./tl-ph\": 268,\n\t\"./tl-ph.js\": 268,\n\t\"./tlh\": 269,\n\t\"./tlh.js\": 269,\n\t\"./tr\": 270,\n\t\"./tr.js\": 270,\n\t\"./tzl\": 271,\n\t\"./tzl.js\": 271,\n\t\"./tzm\": 272,\n\t\"./tzm-latn\": 273,\n\t\"./tzm-latn.js\": 273,\n\t\"./tzm.js\": 272,\n\t\"./ug-cn\": 274,\n\t\"./ug-cn.js\": 274,\n\t\"./uk\": 275,\n\t\"./uk.js\": 275,\n\t\"./ur\": 276,\n\t\"./ur.js\": 276,\n\t\"./uz\": 277,\n\t\"./uz-latn\": 278,\n\t\"./uz-latn.js\": 278,\n\t\"./uz.js\": 277,\n\t\"./vi\": 279,\n\t\"./vi.js\": 279,\n\t\"./x-pseudo\": 280,\n\t\"./x-pseudo.js\": 280,\n\t\"./yo\": 281,\n\t\"./yo.js\": 281,\n\t\"./zh-cn\": 282,\n\t\"./zh-cn.js\": 282,\n\t\"./zh-hk\": 283,\n\t\"./zh-hk.js\": 283,\n\t\"./zh-tw\": 284,\n\t\"./zh-tw.js\": 284\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 517;","var map = {\n\t\"./af\": 285,\n\t\"./af.js\": 285,\n\t\"./ar\": 286,\n\t\"./ar-dz\": 287,\n\t\"./ar-dz.js\": 287,\n\t\"./ar-kw\": 288,\n\t\"./ar-kw.js\": 288,\n\t\"./ar-ly\": 289,\n\t\"./ar-ly.js\": 289,\n\t\"./ar-ma\": 290,\n\t\"./ar-ma.js\": 290,\n\t\"./ar-sa\": 291,\n\t\"./ar-sa.js\": 291,\n\t\"./ar-tn\": 292,\n\t\"./ar-tn.js\": 292,\n\t\"./ar.js\": 286,\n\t\"./az\": 293,\n\t\"./az.js\": 293,\n\t\"./be\": 294,\n\t\"./be.js\": 294,\n\t\"./bg\": 295,\n\t\"./bg.js\": 295,\n\t\"./bm\": 296,\n\t\"./bm.js\": 296,\n\t\"./bn\": 297,\n\t\"./bn.js\": 297,\n\t\"./bo\": 298,\n\t\"./bo.js\": 298,\n\t\"./br\": 299,\n\t\"./br.js\": 299,\n\t\"./bs\": 300,\n\t\"./bs.js\": 300,\n\t\"./ca\": 301,\n\t\"./ca.js\": 301,\n\t\"./cs\": 302,\n\t\"./cs.js\": 302,\n\t\"./cv\": 303,\n\t\"./cv.js\": 303,\n\t\"./cy\": 304,\n\t\"./cy.js\": 304,\n\t\"./da\": 305,\n\t\"./da.js\": 305,\n\t\"./de\": 306,\n\t\"./de-at\": 307,\n\t\"./de-at.js\": 307,\n\t\"./de-ch\": 308,\n\t\"./de-ch.js\": 308,\n\t\"./de.js\": 306,\n\t\"./dv\": 309,\n\t\"./dv.js\": 309,\n\t\"./el\": 310,\n\t\"./el.js\": 310,\n\t\"./en-SG\": 311,\n\t\"./en-SG.js\": 311,\n\t\"./en-au\": 312,\n\t\"./en-au.js\": 312,\n\t\"./en-ca\": 313,\n\t\"./en-ca.js\": 313,\n\t\"./en-gb\": 314,\n\t\"./en-gb.js\": 314,\n\t\"./en-ie\": 315,\n\t\"./en-ie.js\": 315,\n\t\"./en-il\": 316,\n\t\"./en-il.js\": 316,\n\t\"./en-nz\": 317,\n\t\"./en-nz.js\": 317,\n\t\"./eo\": 318,\n\t\"./eo.js\": 318,\n\t\"./es\": 319,\n\t\"./es-do\": 320,\n\t\"./es-do.js\": 320,\n\t\"./es-us\": 321,\n\t\"./es-us.js\": 321,\n\t\"./es.js\": 319,\n\t\"./et\": 322,\n\t\"./et.js\": 322,\n\t\"./eu\": 323,\n\t\"./eu.js\": 323,\n\t\"./fa\": 324,\n\t\"./fa.js\": 324,\n\t\"./fi\": 325,\n\t\"./fi.js\": 325,\n\t\"./fo\": 326,\n\t\"./fo.js\": 326,\n\t\"./fr\": 327,\n\t\"./fr-ca\": 328,\n\t\"./fr-ca.js\": 328,\n\t\"./fr-ch\": 329,\n\t\"./fr-ch.js\": 329,\n\t\"./fr.js\": 327,\n\t\"./fy\": 330,\n\t\"./fy.js\": 330,\n\t\"./ga\": 331,\n\t\"./ga.js\": 331,\n\t\"./gd\": 332,\n\t\"./gd.js\": 332,\n\t\"./gl\": 333,\n\t\"./gl.js\": 333,\n\t\"./gom-latn\": 334,\n\t\"./gom-latn.js\": 334,\n\t\"./gu\": 335,\n\t\"./gu.js\": 335,\n\t\"./he\": 336,\n\t\"./he.js\": 336,\n\t\"./hi\": 337,\n\t\"./hi.js\": 337,\n\t\"./hr\": 338,\n\t\"./hr.js\": 338,\n\t\"./hu\": 339,\n\t\"./hu.js\": 339,\n\t\"./hy-am\": 340,\n\t\"./hy-am.js\": 340,\n\t\"./id\": 341,\n\t\"./id.js\": 341,\n\t\"./is\": 342,\n\t\"./is.js\": 342,\n\t\"./it\": 343,\n\t\"./it-ch\": 344,\n\t\"./it-ch.js\": 344,\n\t\"./it.js\": 343,\n\t\"./ja\": 345,\n\t\"./ja.js\": 345,\n\t\"./jv\": 346,\n\t\"./jv.js\": 346,\n\t\"./ka\": 347,\n\t\"./ka.js\": 347,\n\t\"./kk\": 348,\n\t\"./kk.js\": 348,\n\t\"./km\": 349,\n\t\"./km.js\": 349,\n\t\"./kn\": 350,\n\t\"./kn.js\": 350,\n\t\"./ko\": 351,\n\t\"./ko.js\": 351,\n\t\"./ku\": 352,\n\t\"./ku.js\": 352,\n\t\"./ky\": 353,\n\t\"./ky.js\": 353,\n\t\"./lb\": 354,\n\t\"./lb.js\": 354,\n\t\"./lo\": 355,\n\t\"./lo.js\": 355,\n\t\"./lt\": 356,\n\t\"./lt.js\": 356,\n\t\"./lv\": 357,\n\t\"./lv.js\": 357,\n\t\"./me\": 358,\n\t\"./me.js\": 358,\n\t\"./mi\": 359,\n\t\"./mi.js\": 359,\n\t\"./mk\": 360,\n\t\"./mk.js\": 360,\n\t\"./ml\": 361,\n\t\"./ml.js\": 361,\n\t\"./mn\": 362,\n\t\"./mn.js\": 362,\n\t\"./mr\": 363,\n\t\"./mr.js\": 363,\n\t\"./ms\": 364,\n\t\"./ms-my\": 365,\n\t\"./ms-my.js\": 365,\n\t\"./ms.js\": 364,\n\t\"./mt\": 366,\n\t\"./mt.js\": 366,\n\t\"./my\": 367,\n\t\"./my.js\": 367,\n\t\"./nb\": 368,\n\t\"./nb.js\": 368,\n\t\"./ne\": 369,\n\t\"./ne.js\": 369,\n\t\"./nl\": 370,\n\t\"./nl-be\": 371,\n\t\"./nl-be.js\": 371,\n\t\"./nl.js\": 370,\n\t\"./nn\": 372,\n\t\"./nn.js\": 372,\n\t\"./pa-in\": 373,\n\t\"./pa-in.js\": 373,\n\t\"./pl\": 374,\n\t\"./pl.js\": 374,\n\t\"./pt\": 375,\n\t\"./pt-br\": 376,\n\t\"./pt-br.js\": 376,\n\t\"./pt.js\": 375,\n\t\"./ro\": 377,\n\t\"./ro.js\": 377,\n\t\"./ru\": 378,\n\t\"./ru.js\": 378,\n\t\"./sd\": 379,\n\t\"./sd.js\": 379,\n\t\"./se\": 380,\n\t\"./se.js\": 380,\n\t\"./si\": 381,\n\t\"./si.js\": 381,\n\t\"./sk\": 382,\n\t\"./sk.js\": 382,\n\t\"./sl\": 383,\n\t\"./sl.js\": 383,\n\t\"./sq\": 384,\n\t\"./sq.js\": 384,\n\t\"./sr\": 385,\n\t\"./sr-cyrl\": 386,\n\t\"./sr-cyrl.js\": 386,\n\t\"./sr.js\": 385,\n\t\"./ss\": 387,\n\t\"./ss.js\": 387,\n\t\"./sv\": 388,\n\t\"./sv.js\": 388,\n\t\"./sw\": 389,\n\t\"./sw.js\": 389,\n\t\"./ta\": 390,\n\t\"./ta.js\": 390,\n\t\"./te\": 391,\n\t\"./te.js\": 391,\n\t\"./tet\": 392,\n\t\"./tet.js\": 392,\n\t\"./tg\": 393,\n\t\"./tg.js\": 393,\n\t\"./th\": 394,\n\t\"./th.js\": 394,\n\t\"./tl-ph\": 395,\n\t\"./tl-ph.js\": 395,\n\t\"./tlh\": 396,\n\t\"./tlh.js\": 396,\n\t\"./tr\": 397,\n\t\"./tr.js\": 397,\n\t\"./tzl\": 398,\n\t\"./tzl.js\": 398,\n\t\"./tzm\": 399,\n\t\"./tzm-latn\": 400,\n\t\"./tzm-latn.js\": 400,\n\t\"./tzm.js\": 399,\n\t\"./ug-cn\": 401,\n\t\"./ug-cn.js\": 401,\n\t\"./uk\": 402,\n\t\"./uk.js\": 402,\n\t\"./ur\": 403,\n\t\"./ur.js\": 403,\n\t\"./uz\": 404,\n\t\"./uz-latn\": 405,\n\t\"./uz-latn.js\": 405,\n\t\"./uz.js\": 404,\n\t\"./vi\": 406,\n\t\"./vi.js\": 406,\n\t\"./x-pseudo\": 407,\n\t\"./x-pseudo.js\": 407,\n\t\"./yo\": 408,\n\t\"./yo.js\": 408,\n\t\"./zh-cn\": 409,\n\t\"./zh-cn.js\": 409,\n\t\"./zh-hk\": 410,\n\t\"./zh-hk.js\": 410,\n\t\"./zh-tw\": 411,\n\t\"./zh-tw.js\": 411\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 518;"],"sourceRoot":""}