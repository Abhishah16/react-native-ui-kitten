{"version":3,"sources":["/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/assets/images/splash.png","/Users/artyorsh/Repositories/eva/packages/processor/js/src/service/common/common.service.ts","/Users/artyorsh/Repositories/eva/packages/processor/js/src/service/mapping/mapping.service.ts","/Users/artyorsh/Repositories/eva/packages/processor/js/src/service/style/style.service.ts","/Users/artyorsh/Repositories/eva/packages/processor/js/src/processor/mapping/mappingProcessor.ts","/Users/artyorsh/Repositories/eva/packages/processor/js/src/processor/meta/metaProcessor.ts","/Users/artyorsh/Repositories/eva/packages/processor/js/src/processor/schema/schemaProcessor.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/mapping/mappingContext.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/mapping/mappingProvider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/theme/themeContext.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/style/styleSheet.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/theme/themeProvider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/style/styleProvider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/modal/modalResolver.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/modal/modal.service.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/modal/modalPanel.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/application/applicationProvider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/style/styleConsumer.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/style/styled.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/style/type.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/theme/useTheme.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/animation/animation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/animation/pulseAnimation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/animation/shakeAnimation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/animation/zoomAnimation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/text/text.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/support/services/props.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/support/services/i18n/i18nLayoutFlexMap.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/support/services/i18n/i18nLayout.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/support/services/validation.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/support/services/webEventResponder.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/support/typings/props.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/input/input.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/list/list.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/list/listItem.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/measure/type.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/popover/type.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/popover/popoverView.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/popover/placement.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/measure/measure.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/popover/popover.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/autocomplete/autocomplete.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/avatar/avatar.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/support/components/tabIndicator.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/bottomNavigation/bottomNavigation.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/bottomNavigation/bottomNavigationTab.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/button/button.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/buttonGroup/buttonGroup.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/support/components/chevronDown.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/support/components/chevronLeft.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/support/components/chevronRight.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/components/calendarHeader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/components/calendarMonthHeader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/components/picker/calendarPickerRow.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/components/picker/calendarPickerCell.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/i18n/type.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/components/picker/calendarPicker.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/components/calendarDateContent.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/type.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/service/date.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/i18n/en.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/service/nativeDate.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/service/helpers.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/service/calendarData.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/divider/divider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/baseCalendar.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/calendar.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/card/card.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/card/cardHeader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/service/rangeDate.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/calendar/rangeCalendar.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/support/components/checkmark.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/support/components/minus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/checkbox/checkbox.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/datepicker/baseDatepicker.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/datepicker/datepicker.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/datepicker/rangeDatepicker.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/menu/menuItem.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/menu/subMenu.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/menu/menu.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/menu/menu.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/drawer/drawer.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/drawer/drawerHeaderFooter.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/select/selectOption.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/select/selectGroupOption.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/select/selectOptionsList.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/select/selection.strategy.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/select/select.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/icon/service/iconRegistry.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/icon/icon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/icon/iconAnimation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/icon/iconRegistry.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/layout/layout.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/modal/modal.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/overflowMenu/overflowMenu.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/radio/radio.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/radioGroup/radioGroup.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/spinner/animation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/spinner/spinner.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/tab/tabBar.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/viewPager/viewPager.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/tab/tabView.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/tab/tab.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/toggle/toggle.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/popover/popoverIndicator.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/tooltip/tooltip.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/topNavigation/topNavigation.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/ui/topNavigation/topNavigationAction.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/themes/themeContext.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/eva-icons/evaIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/eva-icons/index.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/eva-icons/createIconsMap.ts","/Users/artyorsh/Repositories/eva/packages/eva/index.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/icons/index.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/sharingHeight.container.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/autocomplete/autocompleteAsync.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/autocomplete/autocompleteCustomItem.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/autocomplete/autocompletePlaceholderData.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/autocomplete/autocompleteSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/autocomplete/autocompleteSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/autocomplete/autocompleteStates.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/autocomplete/autocompleteStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/autocomplete/autocompleteWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/autocomplete/autocompleteWithLabel.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/avatar/avatarInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/avatar/avatarRemoteImages.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/avatar/avatarShape.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/avatar/avatarSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/avatar/avatarSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/bottomNavigation/bottomNavigationInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/bottomNavigation/bottomNavigationSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/bottomNavigation/bottomNavigationTabInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/bottomNavigation/bottomNavigationTabSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/bottomNavigation/bottomNavigationTabWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/bottomNavigation/bottomNavigationWithIcons.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/bottomNavigation/bottomNavigationWithoutIndicator.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/button/buttonAppearances.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/button/buttonGhost.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/button/buttonOutline.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/button/buttonSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/button/buttonSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/button/buttonStates.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/button/buttonStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/button/buttonWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/buttonGroup/buttonGroupAppearance.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/buttonGroup/buttonGroupInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/buttonGroup/buttonGroupOutline.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/buttonGroup/buttonGroupSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/buttonGroup/buttonGroupSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/buttonGroup/buttonGroupStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/buttonGroup/buttonGroupWithIcons.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarBoundingMonth.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarBounds.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarCustomDay.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarCustomLocale.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarFilter.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/moment/momentDate.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarMoment.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarStartDayOfWeek.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/rangeCalendarSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/card/cardCustomHeader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/card/cardSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/card/cardStatuses.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/card/cardWithHeaderAndFooter.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/checkbox/checkboxIndeterminate.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/checkbox/checkboxInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/checkbox/checkboxSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/checkbox/checkboxStates.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/checkbox/checkboxStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerBoundingMonth.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerCustomDay.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerCustomLocale.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerFilter.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerMoment.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/rangeDatepickerSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerCustomHeader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerFooter.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerHeader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerHeaderFooterInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerHeaderFooterSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerHeaderFooterWithAccessory.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerHeaderFooterWithExternalSourceIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerNotificationBadgeItem.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerWithIcons.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/icon/iconAnimation.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/icon/iconAnimationInfinite.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/icon/iconExternalSource.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/icon/iconInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/icon/iconSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/icon/iconWithinButton.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/icon/iconWithinInput.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputStates.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputWithCaption.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputWithExternalSourceIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputWithLabel.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/layout/layoutInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/layout/layoutLevel.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/layout/layoutSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listCompositeItem.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listItemInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listItemSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listItemWithAccessory.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listItemWithExternalIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listItemWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/menu/menuDisabledOptions.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/menu/menuInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/menu/menuSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/menu/menuWithIcons.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/menu/menuWithSubMenu.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/menu/menuWithoutDivider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/modal/modalSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/modal/modalWithBackdrop.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/overflowMenu/overflowMenuExternalSourceIcons.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/overflowMenu/overflowMenuPlacement.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/overflowMenu/overflowMenuSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/overflowMenu/overflowMenuStyledBackdrop.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/overflowMenu/overflowMenuWithDisabledItems.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/overflowMenu/overflowMenuWithIcons.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/overflowMenu/overflowMenuWithoutDivider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/popover/popoverFullWidth.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/popover/popoverPlacement.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/popover/popoverSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/popover/popoverStyledBackdrop.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/radio/radioInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/radio/radioSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/radio/radioStates.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/radio/radioStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/radioGroup/radioGroupSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectCustomIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectDisabledOptions.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectInitialValue.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectMultiInitialValue.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectMultiSelect.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectStates.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectWithGroups.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/spinner/spinnerDataLoading.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/spinner/spinnerSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/spinner/spinnerSizes.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/spinner/spinnerStatuses.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/styled/styledComponentSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/styled/styledComponentStates.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/styled/styledComponentVariants.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabBarSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabBarWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabViewInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabViewLazyLoading.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabViewSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabViewWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabWithExternalSourceIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/text/textAppearances.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/text/textCategories.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/text/textInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/text/textSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/text/textStatuses.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/themeProvider/themeProviderSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/style/useStyleSheet.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/toggle/toggleInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/toggle/toggleSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/toggle/toggleStates.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/toggle/toggleStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tooltip/tooltipInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tooltip/tooltipPlacement.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tooltip/tooltipSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tooltip/tooltipStyledBackdrop.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tooltip/tooltipWithExternalSourceIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tooltip/tooltipWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationActionExternalSourceIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationActionInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationActionSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationActions.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationAlignments.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationWithMenu.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/useStyleSheet/useStyleSheetSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/useTheme/useThemeSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/viewPager/viewPagerInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/viewPager/viewPagerLazyLoading.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/viewPager/viewPagerSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/withStyles/withStylesSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/components/theme/theme/withStyles.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/navigation/app.navigator.web.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/icons/materialIconPack.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/app/loadingAnimation.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/app/applicationLoader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/app/app.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/App.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/node_modules/moment/locale sync /^/.//.*$","/Users/artyorsh/Repositories/react-native-ui-kitten/node_modules/moment/locale sync /^/.//.*$","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/assets/images/brand-logo.png","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/assets/fonts/opensans-regular.ttf","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/assets/fonts/roboto-regular.ttf"],"names":["module","exports","safe","reducer","toObject","array","p","c","getComponentDefaultState","mapping","getComponentMapping","states","value","Object","getStateAppearanceMapping","getAppearanceMapping","getStateMapping","getStatelessAppearanceMapping","getStateVariantMapping","getVariantMapping","getStatelessVariantMapping","getAppearance","groupValue","createStyle","variants","theme","normalizedAppearance","normalizeAppearance","normalizedVariants","normalizeVariants","normalizedStates","normalizeStates","appearanceMapping","reduce","apce","variantMapping","variant","stateMapping","state","strictlessMapping","withStrictTokens","normalize","appearances","getComponentDefaultAppearance","defaultVariants","variantGroups","getComponentDefaultVariants","separator","defaultState","preprocess","variations","createStateVariations","getStateVariationWeight","lhs","rhs","result","next","nextItem","acc","currentToken","nextToken","parts","stateWeight","key","params","noNulls","Set","noDuplicates","items","MappingProcessor","componentMapping","name","appearance","getComponentVariants","this","getComponentStates","concat","rhsValue","lhsValue","MetaProcessor","meta","entries","controlMeta","nextAppearanceEntries","stateless","createStyleEntry","withStates","withVariants","withVariantStates","createAllStyles","prevAppearanceStyles","nextAppearanceStyles","controlEntry","styles","style","SchemaProcessor","themeMapping","strictTheme","mappingProcessor","process","MappingContext","React","MappingProvider","children","ThemeContext","StyleSheet","createThemedStyles","createThemedStyle","createCompiledTheme","getThemeValue","themeKey","findThemeValue","isReference","toThemeKey","ThemeProvider","StyleProvider","ModalResolver","allowBackdrop","onBackdropPress","source","onPress","activeOpacity","pointerEvents","derivedProps","componentChildren","dialog","onStartShouldSetResponder","onResponderRelease","onStartShouldSetResponderCapture","defaultProps","visible","container","notVisibleWrapper","position","width","height","contentWrapper","alignSelf","ModalService","panel","element","config","identifier","update","ModalPanel","components","Math","Array","setState","panelChild","get","childElement","props","areThereAnyComponents","flex","ApplicationProvider","schemaProcessor","customizedMapping","merge","customMapping","StyleConsumerService","generatedConfig","docRoot","message","console","styleInfo","getStyleInfo","generatedMapping","getGeneratedStyleMapping","JSON","withValidParameters","themedStyle","styleKeys","componentStyles","query","invalidParameters","variantProps","getDerivedVariants","stateProps","getDerivedStates","matches","isDefault","isState","isAssigned","nextValue","transform","info","keyQuery","styled","Component","Wrapper","interaction","forwardedRef","restProps","ref","dispatch","ResultComponent","WrappingElement","hoistNonReactStatics","useTheme","Interaction","State","DEFAULT_CONFIG","cycles","useNativeDriver","Animation","counter","running","endCallback","animation","start","stop","end","easing","Easing","duration","PulseAnimation","Animated","restConfig","startAnimation","toValue","endAnimation","scale","offset","ShakeAnimation","translateX","ZoomAnimation","TextComponent","styledComponentName","Text","allWithRest","rest","allOf","from","allWithPrefix","styleName","FlexStartEndMapper","toI18n","rtl","FLEX_PREFIX","I18nLayoutFlexMap","alignContent","alignItems","justifyContent","flexDirection","FLEX_ROW_PREFIX","flexWrap","FLEX_WRAP_PREFIX","NativeI18nLayoutService","I18nLayoutService","I18nManager","ltr","isRTL","i18nStyle","currentStyleValue","i18nStyleValue","isValidString","WebEventResponderInstance","eventHandlers","WebEventResponder","onMouseEnter","onMouseLeave","onFocus","onBlur","FlexStyleProps","InputComponent","inputContainerStyle","containerStyle","textMarginHorizontal","textFontFamily","textFontSize","textFontWeight","textColor","placeholderColor","iconWidth","iconHeight","iconMarginHorizontal","iconTintColor","labelColor","labelFontSize","labelLineHeight","labelMarginBottom","labelFontWeight","captionMarginTop","captionColor","captionFontSize","captionLineHeight","captionFontWeight","captionIconWidth","captionIconHeight","captionIconMarginRight","captionIconTintColor","inputContainer","captionContainer","marginTop","text","marginHorizontal","fontFamily","fontSize","fontWeight","color","placeholder","icon","tintColor","label","lineHeight","marginBottom","captionIcon","marginRight","captionLabel","iconElement","caption","textStyle","componentStyle","getComponentStyle","renderComponentChildren","labelElement","captionElement","captionIconElement","webEventResponder","webStyles","placeholderTextColor","editable","flexGrow","flexShrink","flexBasis","textAlign","Platform","outlineWidth","Input","ListComponent","item","index","itemStyle","itemElement","listRef","current","scrollToOffset","keyExtractor","renderItem","List","ListItemComponent","titleMarginHorizontal","titleFontFamily","titleFontSize","titleLineHeight","titleFontWeight","titleColor","descriptionFontFamily","descriptionFontSize","descriptionFontWeight","descriptionLineHeight","descriptionColor","descriptionMarginHorizontal","accessoryMarginHorizontal","contentContainer","title","description","accessory","contentStyles","titleElement","descriptionElement","titleStyle","descriptionStyle","accessoryElement","onPressIn","onPressOut","onLongPress","ListItem","Point","x","y","other","Size","Frame","origin","size","equals","window","Dimensions","Offsets","offsetKeys","flatStyle","offsetValue","MARGIN","MARGIN_HORIZONTAL","frame","MARGIN_VERTICAL","MARGIN_LEFT","MARGIN_TOP","MARGIN_RIGHT","MARGIN_BOTTOM","PlacementOptions","bounds","offsets","PopoverPlacements","LEFT","options","direction","alignment","fitsStart","fitsTop","fitsBottom","LEFT_START","parent","LEFT_END","TOP","fitsLeft","fitsRight","TOP_START","TOP_END","RIGHT","fitsEnd","RIGHT_START","RIGHT_END","BOTTOM","BOTTOM_START","BOTTOM_END","PopoverViewComponent","indicatorWidth","indicatorHeight","indicatorBackgroundColor","content","indicator","backgroundColor","getDirectionStyle","isVertical","isStart","isEnd","isReverse","indicatorRotate","indicatorReverseRotate","containerTranslate","INDICATOR_WIDTH","indicatorTranslate","i18nVerticalIndicatorTranslate","rotate","renderIndicatorElement","indicatorElement","directionStyle","contentContainerStyle","onLayout","PopoverView","PLACEMENT_FAMILIES","PopoverPlacementService","findRecursive","preferredValue","oneOfCurrentFamily","findFromFamily","placement","oneOfReversedFamily","families","firstTruthy","nextPlacement","preferredFrame","familyFrame","familyValue","MeasureElement","onUIManagerMeasure","bindToWindow","measureSelf","node","findNodeHandle","UIManager","POINT_OUTSCREEN","Popover","childFrame","contentFrame","forceMeasure","placementOptions","displayFrame","contentElement","fullWidthStyle","onMeasure","modalId","contentPosition","force","left","top","backdropStyle","popoverView","Autocomplete","optionsVisible","data","inputProps","bounces","inputElement","listElement","fullWidth","length","hasData","popover","maxHeight","overflow","optionList","AvatarComponent","roundCoefficient","containerParameters","baseStyle","borderRadius","Avatar","TabIndicator","animationDuration","event","animated","contentOffset","addListener","nextProps","scrollToIndex","removeAllListeners","createOffsetAnimation","selectedPosition","BottomNavigationComponent","indicatorStyle","selectedIndex","positions","selected","onSelect","tabElements","BottomNavigation","BottomNavigationTabComponent","iconMarginVertical","textMarginVertical","textLineHeight","marginVertical","BottomNavigationTab","ButtonComponent","containerProps","childStyles","textElement","Button","ButtonGroupComponent","dividerBackgroundColor","dividerWidth","borderWidth","button","borderColor","isFirstElement","isLastElement","renderButtonElement","status","shapeStyle","borderEndWidth","borderEndColor","startShapeStyle","borderTopStartRadius","borderBottomStartRadius","endShapeStyle","borderTopEndRadius","borderBottomEndRadius","renderButtonElements","buttonElements","ButtonGroup","ChevronDown","viewBox","data-name","opacity","d","ChevronLeft","ChevronRight","CalendarHeader","svgProps","fill","IconComponent","onTitlePress","lateralNavigationAllowed","headerButton","headerButtonText","headerButtonIcon","lateralIcon","subContainer","CalendarMonthHeader","CalendarPickerRow","CalendarPickerCellComponent","getContainerBorderRadius","firstRangeItem","lastRangeItem","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","contentBorderWidth","contentBorderRadius","contentBorderColor","contentBackgroundColor","contentTextFontSize","contentTextLineHeight","contentTextFontWeight","contentTextColor","contentTextFontFamily","contentText","renderContentElement","CalendarPickerCell","CalendarPicker","range","isFirstRangeItem","isLastRangeItem","date","disabled","bounding","today","shouldComponentUpdate","CalendarDateContent","VIEW_MODE_DATE","id","navigationNext","VIEW_MODE_YEAR","pickNext","VIEW_MODE_MONTH","CalendarViewModes","DATE","MONTH","YEAR","DateService","locale","date1","compareDates","isBetweenIncluding","isSameDay","isSameMonth","isSameYear","DAYS_IN_WEEK","MONTHS_IN_YEAR","TranslationWidth","EN","dayNames","short","long","monthNames","DEFAULT_OPTIONS","startDayOfWeek","NativeDateService","isNaN","parse","SHORT","getFechaDayNames","fecha","Date","month","createDate","getMonthEnd","date2","year","batch","target","chunkIndex","res","producer","i","arr","DEFAULT_DATE_OPTIONS","holiday","CalendarDataService","dateService","weeks","yearStart","monthRange","rows","yearRange","numberOfDayPickers","numberOfYears","numberOfYearPickers","days","createDateRangeForMonth","activeMonth","withRangedDates","startOfWeekDayDiff","getStartOfWeekDayDiff","calendarRange","day","isSameStartDate","isSameEndDate","withBoundingMonths","isShouldAddPrevBoundingMonth","addPrevBoundingMonth","isShouldAddNextBoundingMonth","addNextBoundingMonth","firstWeek","numberOfBoundingDates","createPrevBoundingDays","lastWeek","createNextBoundingDays","addMonth","daysInMonth","getNumberOfDaysInMonth","startOfMonth","getMonthStart","getDayOfWeek","DividerComponent","Divider","BaseCalendarComponent","viewMode","visibleDate","nextVisibleDate","paddingVertical","headerContainer","paddingHorizontal","divider","daysHeaderContainer","row","minHeight","minDayStart","maxDayStart","fitsFilter","minMonthStart","maxMonthStart","minYearStart","maxYearStart","PICKER_ROWS","rowStyle","isItemSelected","isItemDisabled","isItemToday","shouldItemUpdate","titleSelector","iconStyle","onNavigationLeftPress","onNavigationRightPress","getCalendarStyle","renderHeaderElement","renderPickerElement","renderFooterElement","getYearStart","getYearEnd","boundingMonth","startView","CalendarComponent","compareDatesSafe","selectionChanged","disablingChanged","Calendar","CardComponent","headerStyles","bodyStyles","footerStyles","accentStyles","titleStyles","descriptionStyles","header","body","footer","accent","renderDivider","renderHeader","headerStyle","accentStyle","renderFooter","renderBody","childrenStyles","Card","CardHeader","RangeDateService","startDate","endDate","RangeCalendarComponent","rangeDateService","createRange","rangeChanged","rangeStartPlaceChanged","rangeEndPlaceChanged","RangeCalendar","CheckMark","Minus","CheckBoxComponent","outlineHeight","outlineBorderRadius","outlineBackgroundColor","highlightContainer","selectContainer","stroke","strokeWidth","highlight","createHitSlopInsets","right","bottom","renderTextElement","renderIconElement","Icon","selectContainerStyle","hitSlopInsets","hitSlop","CheckBox","BaseDatepickerComponent","popoverWidth","control","numberOfLines","ellipsizeMode","controlStyle","calendarElement","controlElement","DatepickerComponent","min","max","filter","renderDay","renderYear","Datepicker","RangeDatepickerComponent","formatDateToString","RangeDatepicker","MenuItemComponent","getComponentStyles","indicatorStyles","iconStyles","renderIcon","renderTitle","renderAccessory","restStyles","zIndex","MenuItem","SubMenuComponent","subItemsVisible","subItemsHeight","subItemsAnimation","iconAnimation","subItemsExpandAnimate","animateIcon","onMainItemPress","onSubItemPress","onSubMenuMeasure","getIsSelected","isMainItemDividerExist","isSubItemDividerExist","renderMainItemAccessory","animatedStyle","inputRange","outputRange","renderMenuItem","onPressHandler","isMainItem","mainMenuItemAccessory","renderSubItemsInvisible","renderSubItems","isSelected","dividerElement","prevProps","prevState","mainItem","subItems","invisibleSubs","invisibleMenu","SubMenu","MenuService","tempIndex","sub","MenuComponent","service","isDividerAbsent","areThereSubItems","setIndexes","ItemSeparatorComponent","Menu","DrawerComponent","renderMenu","showsVerticalScrollIndicator","menu","Drawer","DrawerHeaderFooter","SelectOptionComponent","onMultiSelectItemPress","renderDefaultItem","renderMultiSelectItem","indeterminate","checked","onChange","multiSelectText","SelectOption","SelectGroupOptionComponent","itemPaddingHorizontal","getMainItemStatus","someSelected","subItemsSelectedStatusArray","everySelected","renderSubItem","strategy","returningOption","separators","renderSubItemsElements","renderMultiSelectMainElement","subItemsElements","subItem","itemStatus","renderDefaultMainElement","renderMainElement","mainElement","SelectGroupOption","SelectOptionsList","multiSelect","multi","SelectionStrategy","selectedOption","verifyData","option1","option","subTexts","MultiSelectStrategy","hasOptionSubItems","selectOptionWithSubOptions","selectDefaultOption","removeOption","push","enabledItems","splice","processData","some","Error","SingleSelectStrategy","callback","SelectComponent","selection","interactions","deg","textStyles","placeholderStyles","popoverStyles","labelStyle","svgStyle","optionsListElement","optionsList","Select","throwPackNotFoundError","RegistryService","IconRegistryService","packs","Map","has","pack","iconsPack","getPackOrThrow","getIconFromPack","set","shouldThrow","throwIconNotFoundError","getIconAnimation","release","registeredIcon","IconRegistry","requestedPackIndex","defaultIconPack","icons","defaultIcons","registerIcons","LayoutComponent","Layout","Modal","windowFrame","absoluteRelatedStyle","testID","modal","measureStyledModal","handleVisibility","backdrop","hiddenModal","OverflowMenuComponent","renderPopoverContentElement","initialNumToRender","OverflowMenu","RadioComponent","iconBorderRadius","Radio","RadioGroupComponent","onRadioChange","itemMarginVertical","renderRadioElements","radioElements","RadioGroup","BaseBezierEasing","StartArcEasing","EndArcEasing","PI2","SpinnerAnimation","OFFSET_MAX","progress","boundedProgress","animationValue","setValue","containerInterpolation","startArcInterpolation","createArcInterpolation","endArcInterpolation","toStyleTransformProp","translateY","SpinnerComponent","arc","arcSize","animatingChanged","animating","stopAnimation","containerSize","renderArcElement","absolute","noOverflow","Spinner","TabBarComponent","indicatorBorderRadius","tabIndicator","renderTabElements","TabBar","ViewPager","PanResponder","i18nOffset","nextSelectedIndex","selectedPageOffset","contentView","childCount","getChildCount","contentWidth","panResponder","shouldLoadComponent","TabViewChildren","tabs","TabView","viewPager","tabBar","tabCount","tab","tabBarStyle","onOffsetChange","TabComponent","Tab","ToggleComponent","gestureState","thumbHeight","thumbBorderRadius","thumbBackgroundColor","toggleContainer","ellipseContainer","ellipse","thumb","elevation","Toggle","PopoverIndicator","borderLeftWidth","borderRightWidth","borderBottomWidth","borderBottomColor","borderLeftColor","borderRightColor","TooltipComponent","childrenStyle","contentChildren","Tooltip","TopNavigationComponent","titleContainer","rightControlsContainer","titleTextAlign","subtitleTextAlign","subtitleFontFamily","subtitleFontSize","subtitleLineHeight","subtitleFontWeight","subtitleColor","subtitle","leftControlContainer","leftControl","rightControls","subtitleStyle","alignmentStyles","getAlignmentDependentStyles","subtitleElement","leftControlElement","rightControlElements","containerCentered","titleContainerCentered","rightControlsContainerStart","TopNavigation","TopNavigationActionComponent","touchableProps","TopNavigationAction","EvaIcon","EvaIconsPack","findIconByName","require","light","dark","AppTheme","setTheme","isDarkMode","ColorPaletteIcon","themes","sharingHeightContainer","menuVisible","setMenuVisible","themeContext","onThemesButtonPress","postLayoutChangeEvent","nativeEvent","layoutChangeMessage","category","onThemeSelect","createThemeMenuItem","padding","optionsContainer","requestDataWithDebounce","AwesomeDebouncePromise","requestData","fetch","AutocompleteAsyncShowcase","setQuery","setData","updateData","response","json","applyFilter","onChangeText","DATA","releaseYear","AutocompleteCustomItemShowcase","PLACEHOLDER_DATA","AutocompletePlaceholderDataShowcase","placeholderData","AutocompleteSimpleUsageShowcase","useAutocompleteChanges","initialProps","AutocompleteSizeShowcase","smallAutocompleteChanges","mediumAutocompleteChanges","largeAutocompleteChanges","autocomplete","margin","AutocompleteStatesShowcase","AutocompleteStatusShowcase","primaryAutocompleteChanges","successAutocompleteChanges","infoAutocompleteChanges","warningAutocompleteChanges","dangerAutocompleteChanges","basicAutocompleteChanges","controlAutocompleteChanges","controlContainer","CloseIcon","AutocompleteWithIconShowcase","onIconPress","clearInput","AutocompleteWithLabelShowcase","AvatarInlineStylingShowcase","avatar","AvatarRemoteImagesShowcase","uri","AvatarShapeShowcase","shape","AvatarSimpleUsageShowcase","AvatarSizeShowcase","BottomNavigationInlineStylingShowcase","setSelectedIndex","bottomNavigation","BottomNavigationSimpleUsageShowcase","BottomNavigationTabInlineStylingShowcase","tabTitle","BottomNavigationTabSimpleUsageShowcase","PersonIcon","RemotePersonIcon","BottomNavigationTabWithIconShowcase","BellIcon","EmailIcon","BottomNavigationWithIconsShowcase","topSelectedIndex","setTopSelectedIndex","bottomSelectedIndex","setBottomSelectedIndex","BottomNavigationWithoutIndicatorShowcase","ButtonAppearancesShowcase","ButtonGhostShowcase","ButtonOutlineShowcase","ButtonSimpleUsageShowcase","pressCounter","setPressCounter","ButtonSizeShowcase","ButtonStatesShowcase","ButtonStatusShowcase","StarIcon","ButtonWithIconShowcase","ButtonGroupAppearanceShowcase","buttonGroup","ButtonGroupInlineStylingShowcase","ButtonGroupOutlineShowcase","ButtonGroupSimpleUsageShowcase","setText","onLeftPress","onMiddlePress","onRightPress","ButtonGroupSizeShowcase","ButtonGroupStatusShowcase","ButtonGroupWithIconsShowcase","CalendarBoundingMonthShowcase","setDate","now","minDate","maxDate","CalendarBoundsShowcase","DayCell","CalendarCustomDayShowcase","selectedDate","setSelectedDate","dayContainer","aspectRatio","i18n","CalendarCustomLocaleShowcase","CalendarFilterShowcase","moment","_rollupMoment","MomentDateService","setMomentLocaleData","months","years","getYear","getMonth","getDate","format","localeData","momentLocaleData","firstDayOfWeek","defaultFormat","CalendarMomentShowcase","CalendarSimpleUsageShowcase","CalendarStartDayOfWeekShowcase","RangeCalendarSimpleUsageShowcase","setRange","CustomHeader","CardCustomHeaderShowcase","headerText","headerImage","CardSimpleUsageShowcase","Header","CardStatusesShowcase","card","Footer","CardWithHeaderAndFooterShowcase","footerContainer","footerControl","CheckboxIndeterminateShowcase","allChecked","setAllChecked","setIndeterminate","readChecked","setReadChecked","writeChecked","setWriteChecked","updateGroup","someChecked","everyChecked","onGroupCheckedChange","onReadCheckedChange","onWriteCheckedChange","group","CheckboxInlineStylingShowcase","setChecked","onCheckedChange","checkbox","CheckboxSimpleUsageShowcase","CheckboxStatesShowcase","activeChecked","setActiveChecked","indeterminateChecked","setIndeterminateChecked","onActiveChange","onIndeterminateChange","useCheckboxChanges","initialCheck","CheckboxStatusShowcase","primaryCheckboxChanges","successCheckboxChanges","infoCheckboxChanges","warningCheckboxChanges","dangerCheckboxChanges","basicCheckboxChanges","controlCheckboxChanges","DatepickerBoundingMonthShowcase","DatepickerCustomDayShowcase","DatepickerCustomLocaleShowcase","DatepickerFilterShowcase","DatepickerMomentShowcase","DatepickerSimpleUsageShowcase","useDatepickerChanges","initialDate","DatepickerSizeShowcase","smallDatepickerChanges","mediumDatepickerChanges","largeDatepickerChanges","datepicker","DatepickerStatusShowcase","primaryDatepickerChanges","successDatepickerChanges","infoDatepickerChanges","warningDatepickerChanges","dangerDatepickerChanges","basicDatepickerChanges","CalendarIcon","DatepickerWithIconShowcase","RangeDatepickerSimpleUsageShowcase","drawerData","level","DrawerCustomHeaderShowcase","onRouteSelect","DrawerFooterShowcase","DrawerHeaderShowcase","DrawerHeaderFooterInlineStylingShowcase","drawerHeader","drawerHeaderTitle","drawerHeaderDescription","ProfileIcon","DrawerHeaderFooterSimpleUsageShowcase","LogoutIcon","LogoutButton","DrawerHeaderFooterWithAccessoryShowcase","DrawerHeaderFooterWithExternalSourceIconShowcase","NotificationBadge","DrawerNotificationBadgeItemShowcase","badge","DrawerSimpleUsageShowcase","DrawerWithIconsShowcase","IconAnimationShowcase","iconRef","IconAnimationInfiniteShowcase","animationConfig","RemoteBulbIcon","IconExternalSourceShowcase","IconInlineStylingShowcase","IconSimpleUsageShowcase","IconWithinButtonShowcase","liked","setLiked","IconWithinInputShowcase","secureTextEntry","setSecureTextEntry","InputInlineStylingShowcase","captionTextStyle","input","inputText","inputLabel","inputCaption","InputSimpleUsageShowcase","useInputChanges","initialValue","InputSizeShowcase","smallInputChanges","mediumInputChanges","largeInputChanges","InputStatesShowcase","InputStatusShowcase","primaryInputChanges","successInputChanges","infoInputChanges","warningInputChanges","dangerInputChanges","basicInputChanges","controlInputChanges","InputWithCaptionShowcase","isNotEmpty","InputWithExternalSourceIconShowcase","InputWithIconShowcase","InputWithLabelShowcase","LayoutInlineStylingShowcase","LayoutLevelShowcase","layout","LayoutSimpleUsageShowcase","ListCompositeItemShowcase","renderItemAccessory","renderItemIcon","ListInlineStylingShowcase","ListItemInlineStylingShowcase","listItem","listItemTitle","listItemDescription","ListItemSimpleUsageShowcase","ListItemWithAccessoryShowcase","RemoteStarIcon","ListItemWithExternalIconShowcase","ListItemWithIconShowcase","ListSimpleUsageShowcase","MenuDisabledOptionsShowcase","MenuInlineStylingShowcase","menuItemTitle","MenuSimpleUsageShowcase","MenuWithIconsShowcase","MenuWithSubMenuShowcase","MenuWithoutDividerShowcase","ModalSimpleUsageShowcase","setVisible","toggleModal","modalContainer","ModalWithBackdropShowcase","OverflowMenuExternalSourceIconsShowcase","toggleMenu","onItemSelect","PLACEMENTS","OverflowMenuPlacementShowcase","setPlacement","buttonContainer","OverflowMenuSimpleUsageShowcase","OverflowMenuStyledBackdropShowcase","OverflowMenuWithDisabledItemsShowcase","OverflowMenuWithIconsShowcase","OverflowMenuWithoutDividerShowcase","PopoverFullWidthShowcase","togglePopover","popoverContent","PopoverPlacementShowcase","PopoverSimpleUsageShowcase","PopoverStyledBackdropShowcase","RadioInlineStylingShowcase","radio","radioText","RadioSimpleUsageShowcase","RadioStatesShowcase","useRadioChanges","RadioStatusShowcase","primaryRadioChanges","successRadioChanges","infoRadioChanges","warningRadioChanges","dangerRadioChanges","basicRadioChanges","controlRadioChanges","RadioGroupSimpleUsageShowcase","SelectCustomIconShowcase","setSelectedOption","SelectDisabledOptionsShowcase","SelectInitialValueShowcase","SelectInlineStylingShowcase","placeholderStyle","option2","SelectMultiInitialValueShowcase","SelectMultiSelectShowcase","SelectSimpleUsageShowcase","useSelectChanges","initialSelection","SelectSizeShowcase","smallSelectChanges","mediumSelectChanges","largeSelectChanges","select","SelectStatesShowcase","SelectStatusShowcase","primarySelectChanges","successSelectChanges","infoSelectChanges","warningSelectChanges","dangerSelectChanges","basicSelectChanges","controlSelectChanges","SelectWithGroupsShowcase","SpinnerDataLoadingShowcase","setTimeout","loadData","renderDataItem","loading","SpinnerSimpleUsageShowcase","SpinnerSizesShowcase","SpinnerStatusesShowcase","StyledComponentSimpleUsageShowcase","StyledComponent","StyledComponentShowcase","styledComponentMapping","parameters","type","default","StyledComponentStatesShowcase","active","priority","StyledComponentVariantsShowcase","primary","danger","TabBarSimpleUsageShowcase","TabBarWithIconShowcase","topTabsIndex","setTopTabsIndex","bottomTabsIndex","setBottomTabsIndex","TabInlineStylingShowcase","TabSimpleUsageShowcase","TabViewInlineStylingShowcase","tabView","tabViewIndicator","TabViewLazyLoadingShowcase","TabViewSimpleUsageShowcase","tabContainer","TabViewWithIconShowcase","TabWithExternalSourceIconShowcase","TabWithIconShowcase","TextAppearancesShowcase","alternativeContainer","TextCategoriesShowcase","TextInlineStylingShowcase","TextSimpleUsageShowcase","TextStatusesShowcase","ThemeProviderSimpleUsageShowcase","ToggleInlineStylingShowcase","ToggleSimpleUsageShowcase","ToggleStatesShowcase","toggle","useToggleChanges","ToggleStatusShowcase","primaryToggleChanges","successToggleChanges","infoToggleChanges","warningToggleChanges","dangerToggleChanges","basicToggleChanges","controlToggleChanges","TooltipInlineStylingShowcase","toggleTooltip","tooltipText","TooltipPlacementShowcase","TooltipSimpleUsageShowcase","TooltipStyledBackdropShowcase","InfoIcon","TooltipWithExternalSourceIconShowcase","TooltipWithIconShowcase","BackIcon","TopNavigationActionExternalSourceIconShowcase","EditIcon","TopNavigationActionInlineStylingShowcase","action","TopNavigationActionSimpleUsageShowcase","MenuIcon","BackAction","EditAction","MenuAction","TopNavigationActionsShowcase","onBackPress","TopNavigationAlignmentsShowcase","TopNavigationInlineStylingShowcase","topNavigation","TopNavigationSimpleUsageShowcase","TopNavigationWithMenuShowcase","menuData","onMenuItemSelect","UseStyleSheetSimpleUsageShowcase","create","UseThemeSimpleUsageShowcase","ViewPagerInlineStylingShowcase","ViewPagerLazyLoadingShowcase","ViewPagerSimpleUsageShowcase","WithStylesSimpleUsageShowcase","withStyles","createStyles","ThemedComponent","routes","AutocompleteAsync","AutocompleteCustomItem","AutocompletePlaceholderData","AutocompleteSimpleUsage","AutocompleteSize","AutocompleteStates","AutocompleteStatus","AutocompleteWithIcon","AutocompleteWithLabel","AvatarInlineStyling","AvatarRemoteImages","AvatarShape","AvatarSimpleUsage","AvatarSize","BottomNavigationInlineStyling","BottomNavigationSimpleUsage","BottomNavigationTabInlineStyling","BottomNavigationTabSimpleUsage","BottomNavigationTabWithIcon","BottomNavigationWithIcons","BottomNavigationWithoutIndicator","ButtonAppearances","ButtonGhost","ButtonOutline","ButtonSimpleUsage","ButtonSize","ButtonStates","ButtonStatus","ButtonWithIcon","ButtonGroupAppearance","ButtonGroupInlineStyling","ButtonGroupOutline","ButtonGroupSimpleUsage","ButtonGroupSize","ButtonGroupStatus","ButtonGroupWithIcons","CalendarBoundingMonth","CalendarBounds","CalendarCustomDay","CalendarCustomLocale","CalendarFilter","CalendarMoment","CalendarSimpleUsage","CalendarStartDayOfWeek","RangeCalendarSimpleUsage","CardCustomHeader","CardSimpleUsage","CardStatuses","CardWithHeaderAndFooter","CheckboxIndeterminate","CheckboxInlineStyling","CheckboxSimpleUsage","CheckboxStates","CheckboxStatus","DatepickerBoundingMonth","DatepickerCustomDay","DatepickerCustomLocale","DatepickerFilter","DatepickerMoment","DatepickerSimpleUsage","DatepickerSize","DatepickerStatus","DatepickerWithIcon","RangeDatepickerSimpleUsage","DrawerCustomHeader","DrawerFooter","DrawerHeader","DrawerHeaderFooterInlineStyling","DrawerHeaderFooterSimpleUsage","DrawerHeaderFooterWithAccessory","DrawerHeaderFooterWithExternalSourceIcon","DrawerNotificationBadgeItem","DrawerSimpleUsage","DrawerWithIcons","IconAnimation","IconAnimationInfinite","IconExternalSource","IconInlineStyling","IconSimpleUsage","IconWithinButton","IconWithinInput","InputInlineStyling","InputSimpleUsage","InputSize","InputStates","InputStatus","InputWithCaption","InputWithExternalSourceIcon","InputWithIcon","InputWithLabel","LayoutInlineStyling","LayoutLevel","LayoutSimpleUsage","ListCompositeItem","ListInlineStyling","ListItemInlineStyling","ListItemSimpleUsage","ListItemWithAccessory","ListItemWithExternalIcon","ListItemWithIcon","ListSimpleUsage","MenuDisabledOptions","MenuInlineStyling","MenuSimpleUsage","MenuWithIcons","MenuWithSubMenu","MenuWithoutDivider","ModalSimpleUsage","ModalWithBackdrop","OverflowMenuExternalSourceIcons","OverflowMenuPlacement","OverflowMenuSimpleUsage","OverflowMenuStyledBackdrop","OverflowMenuWithDisabledItems","OverflowMenuWithIcons","OverflowMenuWithoutDivider","PopoverFullWidth","PopoverPlacement","PopoverSimpleUsage","PopoverStyledBackdrop","RadioInlineStyling","RadioSimpleUsage","RadioStates","RadioStatus","RadioGroupSimpleUsage","SelectCustomIcon","SelectDisabledOptions","SelectInitialValue","SelectInlineStyling","SelectMultiInitialValue","SelectMultiSelect","SelectSimpleUsage","SelectSize","SelectStates","SelectStatus","SelectWithGroups","SpinnerDataLoading","SpinnerSimpleUsage","SpinnerSizes","SpinnerStatuses","StyledComponentSimpleUsage","StyledComponentStates","StyledComponentVariants","TabBarSimpleUsage","TabBarWithIcon","TabInlineStyling","TabSimpleUsage","TabViewInlineStyling","TabViewLazyLoading","TabViewSimpleUsage","TabViewWithIcon","TabWithExternalSourceIcon","TabWithIcon","TextAppearances","TextCategories","TextInlineStyling","TextSimpleUsage","TextStatuses","ThemeProviderSimpleUsage","ToggleInlineStyling","ToggleSimpleUsage","ToggleStates","ToggleStatus","TooltipInlineStyling","TooltipPlacement","TooltipSimpleUsage","TooltipStyledBackdrop","TooltipWithExternalSourceIcon","TooltipWithIcon","TopNavigationActionExternalSourceIcon","TopNavigationActionInlineStyling","TopNavigationActionSimpleUsage","TopNavigationActions","TopNavigationAlignments","TopNavigationInlineStyling","TopNavigationSimpleUsage","TopNavigationWithMenu","UseStyleSheetSimpleUsage","UseThemeSimpleUsage","ViewPagerInlineStyling","ViewPagerLazyLoading","ViewPagerSimpleUsage","WithStylesSimpleUsage","AppStack","createStackNavigator","headerMode","AppNavigator","createBrowserApp","history","MaterialIconsPack","IconProvider","toReactElement","MaterialIconRegistry","MaterialIcon","LoadingAnimation","animationCompleted","isLoaded","triggerAnimation","interpolate","image","resizeMode","ApplicationLoader","loaded","SplashScreen","Font","tasks","images","Asset","Promise","startAsync","onFinish","onError","autoHideSplash","fonts","assets","loadFonts","loadImages","Light","Dark","applicationProviderConfig","themeContextProviderConfig","splash","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","keys","resolve"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,oC,6pCCQpC,SAASC,EAAT,KACL,KACE,OAAOC,EAAP,GA8CG,SAASC,EAASC,GACvB,OAAOA,UAAa,cAMlB,OALIC,GAAKA,iBAAiBC,EAA1B,IACED,EAAEC,EAAFD,I,iWAAAA,IAAeA,EAAEC,EAAjBD,OAA2BC,EAA3BD,IAEAA,EAAEC,EAAFD,IAAUC,EAAVD,GAEF,IANF,I,qBClBK,SAASE,EAAyBC,EAAlC,GAKL,OAAOP,EAFsCQ,EAAoBD,EAAjE,IAE8B,YAAwC,IAC5DE,EAAWC,EADgD,YAGnE,OAAOC,qBAAyB,YAC9B,WAAOF,mBA2CN,SAASG,EAA0BL,EAAnC,OAOL,OAAOP,EAFgCa,EAAqBN,EAAQ,EAApE,IAE+B,YAC7B,OAAOO,EAAgBJ,EAAvB,MAIG,SAASK,EAA8BR,EAAvC,KAML,OAAOP,EAFgCa,EAAqBN,EAAQ,EAApE,IAE+B,YACAG,EAD8C,MAG3E,OAH2E,oBAOxE,SAASM,EAAuBT,EAAhC,SAQL,OAAOP,EAF6BiB,EAAkBV,EAAQ,EAAT,EAArD,IAE4B,YAC1B,OAAOO,EAAgBJ,EAAvB,MAIG,SAASQ,EAA2BX,EAApC,OAOL,OAAOP,EAF6BiB,EAAkBV,EAAQ,EAAT,EAArD,IAE4B,YACGG,EAD2C,MAGxE,OAHwE,oBAOrE,SAASF,EAAoBD,EAA7B,GAGL,OAAOA,EAAP,GAGF,kBAME,OAAOP,EAFsCQ,EAAoBD,EAAjE,IAE8B,YAC5B,OAAOG,cAAP,MAIJ,kBAME,OAAOV,EAFyCmB,EAAcZ,EAAQ,EAAtE,IAE8B,YAC5B,OAAOG,EAAP,WAIJ,oBAOE,OAAOV,EAFyCmB,EAAcZ,EAAQ,EAAtE,IAE8B,YAC5B,OAAOP,EAAKU,EAAD,eAAsB,YAM/B,OAAOV,EAJWW,qBAA6B,YAC7C,gBAAOS,YAGc,YACrB,OAAOA,KAAP,YAMR,gBAEE,OAAOpB,EAAKO,EAAD,OAAgB,YACzB,OAAOG,EAAP,M,ikBCzHG,SAASW,EAAYd,EAArB,KAGqBe,MAE0C,uDAFrB,GACrBb,EAC0C,uDADvB,GACnBc,EAA0C,uDAArB,GAEzCC,EAAiCC,EAAoBlB,EAAQ,EAAnE,GACMmB,EAA+BC,EAAkBpB,EAAQ,EAA/D,GACMqB,EAA6BC,EAAgBtB,EAAQ,EAAT,GAA6B,YAC7E,OAAOE,UAAP,MAGIqB,EAA0CC,EAAOP,GAAsB,SAAAQ,GAC3E,OAAOjB,EAA8BR,EAAQ,EAA7C,MAGI0B,EAAuCF,EAAOL,GAAoB,SAAAQ,GACtE,OAAOH,EAAOP,GAAsB,SAAAQ,GAClC,OAAOd,EAA2BX,EAAQ,EAAT,EAAjC,SAIE4B,EAAqCJ,EAAOH,GAAkB,SAAAQ,GAWlE,OAAO,EAAP,GAV+BL,EAAOP,GAAsB,SAAAQ,GAC1D,OAAOpB,EAA0BL,EAAQ,EAAT,EAAhC,MASF,GANkDwB,EAAOL,GAAoB,SAAAQ,GAC3E,OAAOH,EAAOP,GAAsB,SAAAQ,GAClC,OAAOhB,EAAuBT,EAAQ,EAAT,IAA7B,aAOA8B,EAAuC,eAA7C,GAMA,OAAOC,EAAiBD,EAAxB,GAkFK,SAASZ,EAAoBlB,EAA7B,KAML,OAAOgC,EAAU,CDpMZ,SAAuChC,EAAvC,GAKL,OAAOP,EAFsCQ,EAAoBD,EAAjE,IAE8B,YAAwC,IAC5DiC,EAAgB9B,EAD2C,iBAGnE,OAAOC,qBAA8B,YACnC,WAAO6B,mBCyLuBC,CAA8BlC,EAAhE,GAEA,IAmBK,SAASoB,EAAkBpB,EAA3B,KAIL,IAAMmC,ED7MD,SAAqCnC,EAArC,GAKL,OAAOP,EAFsCQ,EAAoBD,EAAjE,IAE8B,YAA0C,IAC9DoC,EAAkBjC,EAD2C,mBAGrE,OAAOC,oBAA+B,YACpC,OAAOA,YAAYgC,EAAZhC,UAAuC,YAC5C,WAAOgC,yBCmMqBC,CAA4BrC,EAA9D,GAEA,OAAOgC,EAAU,GAAD,kBAAhB,KA0BK,SAASV,EAAgBtB,EAAzB,OAIyBsC,MAAuD,uDA5OhF,IA8OCC,EAAuBxC,EAAyBC,EAAtD,GAEMwC,EAAuBR,EAAU,CAACO,GAAF,WAAtC,KACA,OAAIC,SACF,OAAOA,EAGT,IAAMC,EAAaC,EAAsB,IAAD,KAAxC,IAEA,OAAOD,QAAgB,cAGrB,OAFkBE,EAAwBC,EAAI,EAA9C,GACkBD,EAAwBE,EAAI,EAA9C,MAKJ,gBAAoEC,MAAiC,uDAAd,GACrF,OAAI5C,SACF,OAAO4C,EAGT,IAAMC,EAAO7C,UAAc,cACzB,IAAM8C,EAAWC,OAAQ,SAAA9C,GAAK,OAAIA,WAAJ,MAC9B,MAAM,GAAN,wBACC,CAACD,EAHJ,UAKA,OAAOwC,EAAsBxC,EAAO,EAAR,qBAA5B,KAGF,gBACE,OAAOE,uBAA4B,cACjC,IAAM8C,EAA8BlD,EAApC,GACMmD,EAA2BnC,MAAjC,EAEA,OAAO,EAAP,oBAJF,IAQF,kBAIE,IAAMoC,EAAQvB,QAAd,GACA,OAAOuB,UAAa,cAClB,OAAOH,EAAMI,EAANJ,GAA6BG,EAApC,SADF,GAmCF,oBAI0BzB,MAEoD,uDAFlC,GAClBE,EACoD,uDADpC,GAChBb,EAAoD,uDAA/B,GAEvCb,EAAQW,EAAY,EAAD,IAIvBa,QAxUG,KAyUHE,QAzUG,KAoUL,GASA,MAAO,CAACyB,EAAR,GAGF,cACE,OF5TK,YACL,OAAOC,SAAP,SE2TOC,CFxUF,YACL,OAAO,IAAI,IAAIC,IAAf,IEuUeC,CAAf,IAYF,gBACE,OAAOC,UAAa,+BAAgCZ,EAAhC,MAApB,ICpWF,IAAaa,EAAb,mFAE+D,IAAD,OAC1D,OAAOxD,uBAA2B,cAChC,MAAM,GAAN,kBAEK,4BAFL,OADF,MAHJ,mDAWoG,IAAD,OACzFyD,EAAuC7D,EAA7C,GAEA,OAAOI,YAAYyD,EAAZzD,kBAA8C,YACnD,MAAO,CACL0D,KADK,EAELC,WAFK,EAGLhD,SAAU,yBAHL,GAILb,OAAQ,uBAJV,SAfN,gDAyBI,IAAMa,EFsBH,cAKL,OAAOtB,EAFsCQ,EAAoBD,EAAjE,IAE8B,YAA4C,IAChEoC,EAAkBjC,EAD6C,mBAGvE,OAAOC,oBAA+B,YACpC,OAAOA,YAAYgC,EAAnB,UE/B2B4B,CAAqBhE,EAAlD,GAEA,OAAOiE,KAAA,4BAAP,MA3BJ,8CA+BI,IAAM/D,EF8BH,cAKL,OAAOT,EAFsCQ,EAAoBD,EAAjE,IAE8B,YAA0C,IAC9DE,EAAWC,EADkD,YAGrE,OAAOC,YAAP,MEtCyB8D,CAAmBlE,EAA5C,GAEA,OAAOiE,KAAA,0BAAP,MAjCJ,iDAoC0F,IAAD,OAAjCnB,EAAiC,uDAAd,GACvE,OAAI/B,SACF,OAAO+B,EAGT,IAAMqB,EAASpD,UAAgB,cAC7B,MAAM,GAAN,kBAAmB,wBAAnB,OACCA,EAFH,SAIA,OAAOkD,KAAA,+CAAP,OA7CJ,+CAiDI,OAAOrB,UAAW,cAChB,IAAMuB,EAAStB,OAAQ,SAAAuB,GACrB,OAAOC,SD7CR,IC6CC,MAEF,MAAM,GAAN,wBAJF,MAjDJ,+CAyDkDvB,MAAiC,uDAAd,GACjE,OAAI5C,SACF,OAAO4C,EAGT,IAAMqB,EAASjE,UAAc,cAC3B,IAAM6C,EAAOE,OAAQ,SAAA9C,GAAK,OAAIA,SDzD7B,ICyDyB,MAC1B,MAAM,GAAN,wBACC,CAACD,EAHJ,UAKA,OAAO+D,KAAA,6CAAP,SAnEJ,K,ikBCQA,IAAaK,GAAb,mFAEsE,IAC1DtE,EAAyBuD,EADgC,QAChDgB,EAAgBhB,EADgC,KAC1CvC,EAAUuC,EADgC,MAG3DiB,EAAUD,UAAY,cAAwD,IAC1ET,EAAuCW,EADkC,KACnEV,EAAiCU,EADkC,WACvD1D,EAAqB0D,EADkC,SAC7CvE,EAAWuE,EADkC,OAG3EC,EFsFL,SAAyB1E,EAAzB,WAOL,IAAM2E,EAAYC,EAAiB5E,EAAQ,EAAT,UAAlC,GASM6E,EAAa3E,UAAc,cAC/B,IAAMoD,EAAMS,SAjHT,IAiHH,GACMhB,EAAO6B,EAAiB5E,EAAQ,EAAT,SAA7B,GACA,MAAM,GAAN,qBAHF,IAMM8E,EAAe/D,OAAa,SAAAY,GAChC,IAAM2B,EAAMS,SAvHT,IAuHH,GACA,OAAOa,EAAiB5E,EAAQ,EAAT,SAAvB,MAGI+E,EAAoBhE,UAAgB,cACxC,IAAMgC,EAAO7C,OAAW,SAAA2B,GACtB,IAAMyB,EAAMS,SA7HX,IA6HWA,EA7HX,IA6HD,GACA,OAAOa,EAAiB5E,EAAQ,EAAT,QAAvB,MAEF,MAAM,GAAN,wBALF,IAQA,MAAM,CAAN,gCEzHkCgF,CAAgBhF,EAAQ,EAAT,MAA7C,GACMiF,EAAuBhC,EAA7B,GACMiC,EAAuBvF,EAA7B,GAEA,OAAO,EAAP,+BAPF,IAUA,OAAOsE,KAAA,kBAAP,KAfJ,2CAmBI,OAAO7D,uBAA0B,cAC/B,IAAM+E,EAAuC,CAC3CZ,KAAMvE,KADqC,KAE3CoF,OAAQC,EAFV,IAKA,OAAO,EAAP,oBANF,QAnBJ,KCfaC,GAAb,0DAE+C,IAF/C,qBAGyC,IAHzC,kDAKsD,IAC9BC,EAAsChC,EADT,WACPiC,EAAgBjC,EADT,OAG3CgB,EAA0BN,KAAKwB,iBAAiBC,QAAtD,GAEA,OAAOzB,KAAA,sBAA2B,CAChCjE,QADgC,EAEhCuE,KAFgC,EAGhCvD,MAHF,QAVJ,KCNa2E,GAAgDC,kBAF7D,ICMaC,GAAb,yIAEoC,IAAD,EACF5B,KADE,MACvBmB,EADuB,SACfU,EADe,WAG/B,OACE,kBAACH,GAAD,UACExF,MADF,GADF,OALJ,GAAqCyF,IAArC,eCEaG,GAAyCH,kBAFtD,I,qkBCDA,IAAaI,GAAb,0BAAaA,GAEJC,mBAAqB,cAC1B,OAAO7F,uBAA2B,cAChC,OAAO,GAAP,cAAwB4F,qBAA6BZ,EAA7BY,GAAxB,OADF,KAHSA,GAQJE,kBAAoB,cACzB,OAAO9F,uBAA0B,cAC/B,IAAMD,EAAakF,EAAnB,GACA,OAAO,GAAP,cAAwBW,qBAAxB,OAFF,KATSA,GAeJG,oBAAsB,YAC3B,OAAO/F,uBAA0B,cAC/B,OAAO,GAAP,cAAwB4F,qBAAxB,OADF,KAhBSA,GAqBJI,cAAgB,gBACrB,GAAIJ,eAAJ,GAAkC,CAChC,IAAMK,EAAmBL,cAAzB,GACA,OAAOA,wBAAP,EAGF,OAAOA,wBAAP,GA3BSA,GA8BJM,eAAiB,cACtB,IAAMnG,EAAoBa,EAA1B,GAEA,GAAIgF,eAAJ,GAAmC,CACjC,IAAMK,EAAmBL,cAAzB,GACA,OAAOA,oBAAP,GAGF,UAtCSA,GA4CJO,YAAc,YACnB,OAAO,iBAAP,MA7CSP,GAmDJQ,WAAa,YAClB,OAAO,gBAAP,ICjCJ,IAAaC,GAAb,yIAEoC,IAAD,EACHxC,KADG,MACvBjD,EADuB,QAChB8E,EADgB,WAG/B,OACE,kBAACC,GAAD,UACE5F,MAAO6F,uBADT,IADF,OALJ,GAAmCJ,IAAnC,eCTac,GAAb,yIAEoC,IAAD,EACKzC,KADL,MACvBmB,EADuB,SACfpE,EADe,QACR8E,EADQ,WAG/B,OACE,sBAAiBV,OAAjB,GACE,sBAAepE,MAAf,GAFJ,QALJ,GAAmC4E,IAAnC,e,6CCSae,GAAb,mMAM4B,WAAa,IAAD,EACO,EADP,MAC5BC,EAD4B,gBACbC,EADa,kBAGpC,GACEA,KAVN,4BAcsC,WAClC,OAAO,GAfX,qBAkB+B,aAlB/B,mCAsB6C,WACzC,OAAO,GAvBX,uBA0BiC,YAC7B,OAAOjB,mBAA2B,CAChCP,MAAO,CAACyB,QAAD,MAAqB,QAD9B,UA3BJ,0BAgCoC,YAChC,OAAOlB,mBAA2B,EAAlC,uBAjCJ,qBAoC+B,YAG3B,OACE,wBACEP,MAAO,CAACD,GAAD,UAAmB,QAD5B,OAEE2B,QAAS,EAFX,gBAGEC,cAHF,GADF,IAvCJ,wBAiDkC,YAC9B,OACE,wBAAM3B,MAAOD,GAAb,mBACE,wBACEC,MAAOD,GADT,UAEE6B,cAHJ,SADF,IAlDJ,kBA4D4B,WAA8D,IAAD,EAChC,EADgC,MAC7EnB,EAD6E,WACnEc,EADmE,gBACjDM,EADiD,oCAE/EC,EAA0C,0BAAhD,GAEMC,EACJ,kCAEE/B,MAAOD,GAFT,eAGEiC,0BAA2B,EAH7B,0BAIEC,mBAAoB,EAJtB,mBAKEC,iCAAkC,EALpC,iCAMEN,cANF,aADF,GAWA,OAAOL,EACL,qBADkB,GACgB,wBADpC,IA3EJ,wDAgFI,OAAO3C,KAAA,cAAqBA,KAArB,kBAAP,SAhFJ,GAAmC2B,IAAnC,WAAae,GAEJa,aAA4C,CACjDC,SADiD,GAkFrD,IAAMrC,GAASY,YAAkB,CAC/B0B,UAAW1B,KADoB,mBAE/B2B,kBAAmB,CACjBC,SADiB,WAEjBC,MAFiB,EAGjBC,OAL6B,GAO/BC,eAAgB,CACdC,UARJ,gBCNaC,GAAe,I,yCA3C1BC,MAAgC,K,0CAEnBA,GACXjE,KAAKiE,MAAL,I,gCAIAjE,KAAKiE,MAAL,O,2BAGUC,EAA6BC,GACvC,GAAInE,KAAJ,MACE,OAAOA,KAAA,aAAP,K,6BAIUoE,EAAoBvC,GAC5B7B,KAAJ,OACEA,KAAKiE,MAAMI,OAAOD,EAAW,K,2BAIrBA,GACV,GAAIpE,KAAJ,MACE,OAAOA,KAAA,WAAP,O,qOCpDN,IAAasE,GAAb,yLAEkC,CAC9BC,WAAY,IAHhB,YAcgB,YACZ,IAAMA,EAA2C,QAAjD,WAGA,OAFAA,YACA,WAAc,CAAEA,WAAhB,IACM,IAlBV,6BAkDuC,WACnC,OAAOC,qCAAP,IAnDJ,wBAsDkC,WAC9B,OAAO,oBAAP,IAAgC,yBAvDpC,cA0DwB,cACpB,OACE,6BACML,UADN,OAEE/C,MAAO+C,EAFT,cAGEX,SAHF,EAIEnE,IAJF,EAKEsD,cAAewB,EALjB,cAMEvB,gBAAiBuB,EANnB,kBAOGA,EARL,UA3DJ,eAwEyB,WACrB,OAAOM,WAAW,mBAAXA,cAA+C,EAAtD,cAzEJ,mEAOIT,iBAPJ,6CAWIA,eAXJ,gCAsBI,IAAM3E,EAAcW,KAApB,6BACMuE,EAA2CvE,KAAKpC,MAAM2G,WAAX,M,mWAAA,OACxBL,QADzB,KAKA,OAFAlE,KAAK0E,SAAS,CAAEH,WAAhB,IAEOlF,IA5BX,kCAgCI,IAAMsF,EAA8B3E,KAAKpC,MAAM2G,WAAWK,IAA1D,GAEA,MAIA,IAAMC,EAAmCF,EAAzC,QAEAA,UAAqBhD,mBAAiC,CACpDE,SADF8C,IAIA,IAAMJ,EAA2CvE,KAAKpC,MAAtD,WACA2G,YACAA,WACAvE,KAAK0E,SAAS,CAAEH,WAAhB,OA/CJ,+BA6EI,OACE,wBAAMnD,MAAOD,GAAb,WACGnB,KAAK8E,MADR,SAEG9E,KAAK+E,yBAA2B/E,KAHrC,oBA7EJ,GAAgC2B,IAAhC,WAsFMR,GAASY,YAAkB,CAC/B0B,UAAW,CACTuB,KAFJ,KC/CaC,GAAb,YAIE,cAA8C,IAAD,eAC3C,iCAHMC,gBAAmC,IAAI,GAEF,eAStB,cACrB,IAAMC,EAAgCC,IAAM,GAAG,EAA/C,GAEA,OAAO,0BAAP,IAZ2C,MAER,EAFQ,MAEnCrJ,EAFmC,UAE1BsJ,EAF0B,gBAIrClE,EAAyB,iBAA/B,GAJ2C,OAM3C,QAAa,CAAEA,OAAf,GAN2C,EAJ/C,sDAoBI,OACE,sBACEpE,MAAOiD,KAAK8E,MADd,MAEE3D,OAAQnB,KAAKpC,MAFf,QAGE,0BACGoC,KAAK8E,MALZ,eApBJ,GAAyCnD,IAAzC,W,0lBCtDA,IAQa2D,GAAb,WAKE,gBAOE,GAP2C,IAAD,QAC1CtF,KAAKH,KAAL,EAEAG,KAAKM,KAAON,KAAKxE,KAAK4F,EAAV,IAAuB,YACjC,OAAOmE,EAAP,SAGGvF,KAAL,KAAgB,CACd,IAAMwF,EAAN,sDAEMC,EAAkB,CAAC,KAClBzF,KADiB,qXAAxB,MAQA0F,kBAvBN,yDAgCI,OAAO,GAAP,CAAS5F,WAJkBE,KAA3B,wBAC4CA,KAA5C,qBAGA,GAF2CA,KAA3C,sBA9BJ,+CAwCI,IAAM2F,EAAuB3F,KAAK4F,aAAa/C,EAA/C,GAEMgD,EAA8B7F,KAAK8F,yBAAyB1E,EAAlE,GAEA,MAAuB,CACrB,IAEMqE,EAAkB,CACnBzF,KADmB,8EAEoB+F,sBAFpB,iGAGqB/F,KAAKH,KAH1B,2BAAxB,MAQA,OAFA6F,gBAEO1F,KAAA,2BAAqCA,KAArC,0BAAP,GAGF,IAAMjE,EAAqBiE,KAAKgG,oBAAhC,GAGA,OAAO,GAAP,MAAoBjJ,MAApB,EAA2BkJ,YAFIlE,uBAA/B,OA3DJ,oDAgEkH,IAAD,OAE7G,OAAO/B,KAAA,KAAUoB,EAAMpB,KAAhB,OAA4B,YACjC,IAAMkG,EAAsB/J,YAAYgK,EAAxC,QACMC,EAAgB,uBAAtB,GAEA,OAAOD,SAAP,QAtEN,6CA0E8D,IAAD,OACnDE,EAAN,GASA,GAPAlK,wBAA6B,YACtBA,YAAY,OAAZA,qBAAL,KACEkK,iBACOtK,EAAP,OAIJ,IAAIsK,SAAgC,CAClC,IAEMZ,EAAkB,CACnBzF,KADmB,uOAAxB,MAOA0F,gBAGF,WAjGJ,wCAqGI,IAAMY,EAA2BtG,KAAKuG,mBAAmBvG,KAAxB,KAAjC,GACMwG,EAAyBxG,KAAKyG,iBAAiBzG,KAAtB,KAA/B,GAEMlD,EAAqBX,oBAA8B,YACvD,OAAOmK,EAAP,MAGIrK,EAAmBE,YAAzB,GAEA,MAAO,CACL2D,WAAYgF,EADP,WAELhI,SAFK,EAGLb,OAAO,GAAD,kBAHR,OA9GJ,6CAqH0C,IAAD,OAC/ByK,EAAoBvK,YAAY6D,KAAKM,KAAjBnE,qBAA0C,YAClE,WAAO,iCAGT,OAAOuK,EAAQA,SAAf,KA1HJ,2CA8HI,OAAO1G,KAAA,gBAAqBA,KAAKM,KAA1B,eAA8C,cACnD,OAAOnE,YAAYW,EAAZX,UAAkC,YAEvC,WAAOW,wBAjIf,yCAuII,OAAOkD,KAAA,gBAAqBA,KAAKM,KAA1B,QAAuC,cAC5C,IAAMqG,GAAN,IAA2B1K,aAE3B,OAAO0K,QAAP,OA1IN,8CA+II,OAAO3G,KAAA,mBAA4B,cAGjC,OAF2B7D,YAAYmE,EAAZnE,wBAA3B,GAEmBP,EAAH,QAAhB,OAlJN,4CAuJI,OAAOoE,KAAA,mBAA4B,cACjC,IAAM4G,EAAmBzK,YAAYmE,EAAZnE,iBAAzB,GACM0K,GAAN,IAA4BjL,KAE5B,OAAOgL,GAAP,OA3JN,2CAuKI,OAAOzK,uBAA0B,cAC/B,IAAM2K,EAAiBC,EAAU7K,EAAjC,GAEA,OAAO4K,EAAS,qBAAhB,IAHF,MAvKJ,8CAgMqF,IAAD,OAC1EV,EAAe,CACnBY,EADmB,uBAEhBA,EAFgB,cAGhBA,EAHL,SAYA,OAN0BnE,UAAc,YACtC,IAAMoE,EAAqB5H,QAhNjC,KAkNM,OAAO,kBAAP,MAGF,KA7MJ,yCAuNI,OAAIV,WAAeC,EAAnB,QAIOD,UAAW,qBAA4CK,GAAOJ,WAAnD,MAAlB,KA3NJ,kCAwOI,SACSnD,EAAP,GAGF,MA5OJ,K,qkBCiCO,IC5DP,GAQA,GDoDayL,YAAS,GAGpB,IAAKC,EAAL,oBAEE,OADAzB,2EACO,KAL6F,IAchG0B,EAdgG,yLAgB9E,CACpBC,YAjBkG,uBA0BnF,cAEf,UAAe,IAAI,GAAqBF,EAAzB,sBAAf,GACA,eAAoB,UAApB,qBAEA,WA/BkG,aAkC/E,YACnB,WAAc,CAAEE,YAAhB,KAnCkG,kBAsC1E,gBAAuE,IACvFA,EAAgB,EADsE,kBAGxFvC,EAAoB,MAAQ,EAAR,gBAA1B,GAEA,OAAO,gCAAP,IA3CkG,uBA8CrE,cACxB,EAAL,MACE,cAFwF,MAKnD,EALmD,MAKlFwC,EALkF,eAKjEC,EALiE,wBAMpFzC,EAAkC,sBAAxC,GAEA,OACE,+BAEE0C,IAFF,EAGEC,SAAU,EAJd,eAtDkG,wDA+DlE,IAAD,OAC/B,OACE,kBAAC/F,GAAD,eAA0B,mBACxB,kBAACI,GAAD,eAAwB,YACvB,OAAO,yBAAP,aAnE6F,GAchFH,IAdgF,WAqFhG+F,EAAkB/F,gBAXlBgG,SAAkB,KACtB,OAGE,+BAEEL,aALJ,QAkBF,OANAI,cAA8BP,eAAyBA,EAAvDO,KAGAE,KAAqBF,EAArBE,GAGOF,GEhJIG,cACX,OAAOlG,eAAP,K,+kBDVUmG,K,cAAAA,E,gBAAAA,E,kBAAAA,E,8BAAAA,E,mBAAAA,Q,cAQAC,K,kBAAAA,E,oBAAAA,E,qBAAAA,Q,oOENL,IAAMC,GAAkC,CAC7CC,OAD6C,EAE7CC,iBAFK,GAYeC,GAAtB,WAUE,cAAyB,IAAD,wBAPdC,QAAkB,EAOJ,KALdC,SAAmB,EAKL,oBAwBG,YACzB,aACI,YAAiB,SAArB,QACE,SAEE,EAAJ,SACE,QAAW,EAAX,aAEG,EAAL,UACE,YACA,eAAoB,cAApB,GACA,qBAlCFrI,KAAKmE,O,mWAAL,aAXJ,6CAkBInE,KAAKsI,YAAL,EACAtI,KAAKqI,SAAL,EAEArI,KAAKuI,UAAUC,MAAMxI,KAArB,kBArBJ,6BAyBIA,KAAKqI,SAAL,EAEArI,KAAKuI,UAAUE,SA3BnB,gCA+BIzI,KAAKyI,WA/BT,K,ulBCJA,IAAMT,GAAuC,CAC3CQ,MAD2C,EAE3CE,IAF2C,KAG3CC,OAAQC,KAHmC,OAI3CC,SAJF,KAcaC,GAAb,YAuBE,cAA4C,IAAD,sBACzC,8CACA,MAAa,IAAIC,KAAJ,MAAmB,SAAhC,OAFyC,EAvB7C,uDAI0D,IAAD,EACf/I,KADe,OAC7CwI,EAD6C,QACtCE,EADsC,MAC9BM,EAD8B,uBAG/CC,EAA8CF,YAAgB/I,KAAhB+I,UAClDG,QADkDH,GAApD,IAKMI,EAA4CJ,YAAgB/I,KAAhB+I,UAChDG,QADgDH,GAAlD,IAKA,OAAOA,cAAkB,CAAC,EAA1B,QAjBJ,uCA6BI,MAAO,CAEL3H,MAAO,CACL2F,UAAW,CAAC,CAAEqC,MAAOpJ,KAHzB,cA7BJ,O,qkBCdA,IAAMgI,GAAuC,CAC3CQ,MAD2C,EAE3Ca,OAF2C,IAG3CV,OAAQC,KAHmC,OAI3CC,SAJ2C,GAK3CZ,OALF,GAeaqB,GAAb,YAuBE,cAA4C,IAAD,sBACzC,8CACA,MAAa,IAAIP,KAAJ,MAAmB,SAAhC,OAFyC,EAvB7C,uDAI0D,IAAD,EACZ/I,KADY,OACtCqJ,GADsC,kBAC3BL,EAD2B,0BAG/CC,EAA8CF,YAAgB/I,KAAhB+I,UAClDG,QAASlJ,KAAKoI,QAAL,SADyCW,GAApD,IAKMI,EAA4CJ,YAAgB/I,KAAhB+I,UAChDG,QAASlJ,KAAKoI,QAAL,SADuCW,GAAlD,IAKA,OAAOA,cAAkB,CAAC,EAA1B,QAjBJ,uCA6BI,MAAO,CAEL3H,MAAO,CACL2F,UAAW,CAAC,CAAEwC,WAAYvJ,KAH9B,cA7BJ,O,qkBCfA,IAAMgI,GAAsC,CAC1CQ,MAD0C,EAE1CE,IAF0C,GAG1CC,OAAQC,KAHkC,OAI1CC,SAJF,KAcaW,GAAb,YAuBE,cAA2C,IAAD,sBACxC,8CACA,MAAa,IAAIT,KAAJ,MAAmB,SAAhC,OAFwC,EAvB5C,uDAI0D,IAAD,EACf/I,KADe,OAC7CwI,EAD6C,QACtCE,EADsC,MAC9BM,EAD8B,uBAG/CC,EAA8CF,YAAgB/I,KAAhB+I,UAClDG,QADkDH,GAApD,IAKMI,EAA4CJ,YAAgB/I,KAAhB+I,UAChDG,QADgDH,GAAlD,IAKA,OAAOA,cAAkB,CAAC,EAA1B,QAjBJ,uCA6BI,MAAO,CAEL3H,MAAO,CACL2F,UAAW,CAAC,CAAEqC,MAAOpJ,KAHzB,cA7BJ,O,wDCgCayJ,GAAb,yIAIoD,IAAD,EACCzJ,KADD,MACvCiG,EADuC,cAC1B7E,EAD0B,QAChB6B,EADgB,+BAG/C,OACE,kCAEE7B,MAAO,CAAC6E,EAHZ,UAPJ,GAAmCtE,IAAnC,WAAa8H,GAEJC,oBAA8B,OAchC,IAAMC,GAAOzC,GAAb,I,qkBCrCA,SAAS0C,GAAY/G,EAArB,GACL,SAIO1G,uBAA2B,cAA8E,IAGrF,EAFjB0N,EAAmB7K,EADkF,KAC5F8K,EAD4F,gBAG7G,OAAIC,WAAJ,GACS,GAAP,mBAA2BlH,EAA3B,wBAGF,SAAmBgH,KAAK,GAAD,cAAqBhH,EAA5C,SAPF,IAHS,CAAEgH,KAAT,IAsBG,SAASG,GAAcnH,EAAvB,GACL,OAAO1G,uBACG,mBAAuB8N,WAAvB,MADH9N,QAEG,cACN,OAAO,GAAP,cAEc0G,EAFd,OAHJ,I,aChDIqH,GAAmD,CACvDC,OADuD,cAErD,OAAKC,GAAQlO,aAdjB,QAkB+BA,WAd/B,OAiBgBmO,aAGFA,WATDnO,IA0DAoO,GAAkE,CAC7EC,aAD6E,GAE7EC,WAF6E,GAG7EzG,UAH6E,GAI7E0G,eAJ6E,GAK7EC,cA7CkD,CAClDP,OADkD,cAEhD,OAAKC,GAAQlO,aAlCjB,OAsC+BA,WAlC/B,WAJA,MA4CcyO,cATDzO,IA2CX0O,SAzBmD,CACnDT,OADmD,cAEjD,OAAKC,GAAQlO,aAtDjB,QA0D+BA,uBA1D/B,OAgEc2O,eATD3O,K,qkBClDP4O,IAiCOC,GAAoB,I,gFA9B7B,OAAOC,KAAP,Q,6BAGeC,EAAQb,GACvB,OAAOpK,KAAA,UAAP,I,kCAWiB6C,GAAmBuH,MAAwC,uDAAzBpK,KAAKkL,QAClDC,EAAuBhP,wBAAsC,cACjE,IAAMiP,EAAoBvI,EAA1B,GACA,KAAuB,CACrB,IAAMwI,EAAiBf,eAAvB,GACA,OAAO,GAAP,kBAGF,WAPF,IAUA,OAAO,GAAP,e,MCpCSgB,YAAgB,GAC3B,SAAIzI,GAAUA,SAAd,ICMW0I,GAGX,cAAgD,IAAD,QAC7CvL,KAAKwL,cAAL,GAuBSC,G,oFAlBGtH,GACZ,OAAO,OAA8B,CACnCuH,aAAc,WACZvH,gBAAuBA,EAAvBA,gBAEFwH,aAAc,WACZxH,gBAAuBA,EAAvBA,gBAEFyH,QAAS,WACPzH,WAAkBA,EAAlBA,WAEF0H,OAAQ,WACN1H,UAAiBA,EAAjBA,gB,KCIK2H,GAA2B,CAAC,eAAD,ipBAAjC,a,2kBC4FP,IAAaC,GAAb,gMAIqDpK,IAJrD,gCAKyD8J,eALzD,YAOiB,WACb,gCARJ,OAWgB,WACZ,+BAZJ,YAeqB,WACjB,OAAO,uBAAP,aAhBJ,QAmBiB,WACb,gCApBJ,eAyBwB,WACpB,iBAAoB,CAAC3D,GAArB,SA1BJ,eA6BwB,WACpB,sBA9BJ,mBAiC6B,YACzB,iBAAoB,CAACA,GAArB,UAEI,QAAJ,SACE,oBArCN,kBAyC4B,YACxB,qBAEI,QAAJ,QACE,mBA7CN,cAiDwB,YAChB,QAAJ,aACE,wBAnDN,oBAuD8B,YAC1B,IAD4D,EAEH8B,GAD3B7H,aAAmB,QAAjD,OAD4D,IAE9CiK,EAF8C,OAEtBC,EAFsB,gBAK1DC,EA0BErJ,EA/BwD,qBAM1DsJ,EAyBEtJ,EA/BwD,eAO1DuJ,EAwBEvJ,EA/BwD,aAS1DwJ,GAsBExJ,EA/BwD,eA+BxDA,EA/BwD,gBAU1DyJ,EAqBEzJ,EA/BwD,UAW1D0J,EAoBE1J,EA/BwD,iBAY1D2J,EAmBE3J,EA/BwD,UAa1D4J,EAkBE5J,EA/BwD,WAc1D6J,EAiBE7J,EA/BwD,qBAe1D8J,EAgBE9J,EA/BwD,cAgB1D+J,EAeE/J,EA/BwD,WAiB1DgK,EAcEhK,EA/BwD,cAkB1DiK,EAaEjK,EA/BwD,gBAmB1DkK,EAYElK,EA/BwD,kBAoB1DmK,EAWEnK,EA/BwD,gBAqB1DoK,EAUEpK,EA/BwD,iBAsB1DqK,EASErK,EA/BwD,aAuB1DsK,EAQEtK,EA/BwD,gBAwB1DuK,EAOEvK,EA/BwD,kBAyB1DwK,EAMExK,EA/BwD,kBA0B1DyK,EAKEzK,EA/BwD,iBA2B1D0K,EAIE1K,EA/BwD,kBA4B1D2K,EAGE3K,EA/BwD,uBA6B1D4K,EAEE5K,EA/BwD,qBAiC5D,MAAO,CACLY,UADK,EAELiK,eAAe,GAAD,GAnC4C,ycAmC5C,GAFT,GAMLC,iBAAkB,CAChBC,UAPG,GASLC,KAAM,CACJC,iBADI,EAEJC,WAFI,EAGJC,SAHI,EAMJC,WANI,EAOJC,MAhBG,GAkBLC,YAAa,CACXD,MAnBG,GAqBLE,KAAM,CACJxK,MADI,EAEJC,OAFI,EAGJiK,iBAHI,EAIJO,UAzBG,GA2BLC,MAAO,CACLJ,MADK,EAELF,SAFK,EAGLO,WAHK,EAILC,aAJK,EAKLP,WAhCG,GAkCLQ,YAAa,CACX7K,MADW,EAEXC,OAFW,EAGXwK,UAHW,EAIXK,YAtCG,GAwCLC,aAAc,CACZX,SADY,EAEZC,WAFY,EAGZM,WAHY,EAIZL,MA5CJ,KAxFJ,6BAyIuC,YACnC,IAAMU,EAA2B,oBAAjC,GAEA,OACE,wBAA0B9L,QAAS,EAAnC,aADF,IA5IJ,oBAmJ8B,YAC1B,IAAM8L,EAA2B,aAAjC,GAEA,OAAOjN,mBAAgC,CACrCtC,IADqC,EAErC+B,MAAO,CAACA,EAAOD,GAAR,KAAqByN,QAF9B,UAtJJ,qBA4J+B,YAC3B,OACE,sBACEvP,IADF,EAEE+B,MAAO,CAACA,EAAOD,GAAR,MAAsB,QAF/B,aAGG,QAJL,QA7JJ,uBAsKiC,YAC7B,OACE,sBACE9B,IADF,EAEE+B,MAAO,CAACA,EAAOD,GAAR,aAA6B,QAFtC,mBAGG,QAJL,UAvKJ,2BAgLqC,YACjC,IAAMyN,EAA2B,oBAAjC,GAEA,OAAOjN,mBAAgC,CACrCtC,IADqC,EAErC+B,MAAO,CAACA,EAAOD,GAAR,YAA4ByN,QAFrC,UAnLJ,0BAyLoC,YAA6C,IAAD,EAC9B,EAD8B,MACpER,EADoE,OAC9DE,EAD8D,QACvDG,EADuD,cAC1CI,EAD0C,UAG5E,MAAO,CACLT,GAAQ,6BAAgChN,EADnC,MAELkK,OAAwB,qBAAwBlK,EAF3C,OAGLkK,OAA0B,uBAA0BlK,EAH/C,cAILqN,GAAe,2BAA8BrN,EAJ/C,eA5LJ,wDAoMkD,IAAD,EACIpB,KADJ,MACrCiG,EADqC,cACxB6I,EADwB,YACVvH,EADU,mCAEvCwH,EAA4B/O,KAAKgP,kBAAvC,GAF6C,EASzChP,KAAKiP,wBAToC,cAK3CL,EAL2C,KAM3CM,EAN2C,KAO3CC,EAP2C,KAQ3CC,EAR2C,KAW7C,OACE,wBAAMhO,MAAO,CAAC2N,EAAD,UAA2B5N,GAAxC,cAEE,wBACEC,MAAO,CAAC2N,EAAD,eAAgC5N,GADzC,iBAEE,6BACEqG,IAAKxH,KADP,gBAGMA,KAAKqP,kBAHX,eAIEjO,MAAO,CAAC2N,EAAD,KAAsB5N,GAAtB,KAAmCmO,GAAnC,KAJT,GAKEC,qBAAsBR,cALxB,MAMES,UAAWjI,EANb,SAOEqE,QAAS5L,KAPX,iBAQE6L,OAAQ7L,KAVZ,mBAFF,GAgBE,wBAAMoB,MAAO,CAAC2N,EAAD,iBAAkC5N,GAA/C,qBAjBJ,QA/MJ,GAAoCQ,IAApC,WAAaoK,GAEJrC,oBAA8B,QAuOvC,IAAMvI,GAASY,YAAkB,CAC/B0B,UAD+B,GAE/BiK,eAAgB,CACdhD,cADc,MAEdF,WAFc,SAGd5G,MAL6B,QAO/B+J,iBAAkB,CAChBjD,cADgB,MAEhBF,WAT6B,UAW/BqD,KAAM,CACJ4B,SADI,EAEJC,WAFI,EAGJC,UAd6B,QAgB/BxB,YAhB+B,GAiB/BC,KAjB+B,GAkB/BE,MAAO,CACLsB,UAnB6B,QAqB/BnB,YArB+B,GAsB/BE,aAAc,CACZiB,UAvBJ,UA2BMN,GAAYO,iBAAyB9N,YAAkB,CAC3D8L,KAAM,CAEJiC,aAHJ,KAOaC,GAAQ7I,GAAd,I,SCnUM8I,GAAb,2LAIyDrO,IAJzD,0BAMuB,YACnB,kCAPJ,gBAUyB,YACrB,oCAXJ,oBAkB8B,YAC1B,MAAO,CACL8B,UADK,EAELwM,KAFF,KAnBJ,eAyByB,cAGrB,OAFiBpN,EADqD,MAzB1E,eA+ByB,cACrB,OAAOqN,EAAP,YAhCJ,aAmCuB,YACnB,IAAMC,EAAuB,eAAkB,QAAlB,YAA0CnJ,EAAvE,OACMoJ,EAAiD,qBAAvD,GAEA,OAAOzO,mBAAgC,CACrCP,MAAO,CAAC+O,EAAWhP,GAAZ,KAAyBiP,QADK,OAErCF,MAAOlJ,EAFT,SAvCJ,iEAeIhH,KAAKqQ,QAAQC,QAAQC,eAAejR,KAfxC,+BA6CgE,IAAD,EACXU,KADW,MACnDoB,EADmD,QAC5C6E,EAD4C,cAC5BhD,EAD4B,+BAErD8L,EAA4B/O,KAAKgP,kBAAvC,GAEA,OACE,6BACEwB,aAAcxQ,KADhB,iBAGEwH,IAAKxH,KAHP,QAIEoB,MAAO,CAAC2N,EAAD,UAA2B5N,GAA3B,UAJT,GAKEsP,WAAYzQ,KANhB,kBAjDJ,GAAmC2B,IAAnC,WAAaqO,GAEJtG,oBAA8B,OA2DvC,IAAMvI,GAASY,YAAkB,CAC/B0B,UAD+B,GAE/BwM,KAFF,KAKaS,GAAOxJ,GAAb,IC7BMyJ,GAAb,2LAIoB,YACZ,QAAJ,SACE,gBAAmB,QAAnB,UANN,YAUsB,YAClB,iBAAoB,CAAC7I,GAArB,SAEI,QAAJ,WACE,kBAAqB,QAArB,UAdN,aAkBuB,YACnB,qBAEI,QAAJ,YACE,mBAAsB,QAAtB,UAtBN,cA0BwB,YAChB,QAAJ,aACE,oBAAuB,QAAvB,UA5BN,oBAgC8B,YAAmC,IAE3D0E,EAkBE3J,EApBwD,UAG1D4J,EAiBE5J,EApBwD,WAI1D6J,EAgBE7J,EApBwD,qBAK1D8J,EAeE9J,EApBwD,cAM1D+N,EAcE/N,EApBwD,sBAO1DgO,EAaEhO,EApBwD,gBAQ1DiO,EAYEjO,EApBwD,cAS1DkO,EAWElO,EApBwD,gBAU1DmO,EAUEnO,EApBwD,gBAW1DoO,EASEpO,EApBwD,WAY1DqO,EAQErO,EApBwD,sBAa1DsO,EAOEtO,EApBwD,oBAc1DuO,EAMEvO,EApBwD,sBAe1DwO,EAKExO,EApBwD,sBAgB1DyO,EAIEzO,EApBwD,iBAiB1D0O,EAGE1O,EApBwD,4BAkB1D2O,EAEE3O,EApBwD,0BAsB5D,MAAO,CACLY,UAvB0D,+VAwB1DgO,iBAFK,GAGLrD,KAAM,CACJxK,MADI,EAEJC,OAFI,EAGJiK,iBAHI,EAIJO,UAPG,GASLqD,MAAO,CACL5D,iBADK,EAELC,WAFK,EAGLC,SAHK,EAILO,WAJK,EAKLN,WALK,EAMLC,MAfG,GAiBLyD,YAAa,CACXzD,MADW,EAEXH,WAFW,EAGXC,SAHW,EAIXC,WAJW,EAKXM,WALW,EAMXT,iBAvBG,GAyBL8D,UAAW,CACT9D,iBA1BJ,KAtDJ,oBAqF8B,YAAqC,IAAD,EAEtC,EAFsC,MAEtDoC,EAFsD,QAIxDtB,GAA2BR,EAJ6B,QAIxBhN,EAAtC,GAEA,OAAOO,mBAAgC,CACrCtC,IADqC,EAErC+B,MAAO,CAACA,EAAOD,GAAR,KAAqByN,QAF9B,UA3FJ,uBAiGiC,YAAsD,IAC3E6C,EAAuCrQ,EADmC,iBACrDyQ,EADqD,8BAEvC,+BAFuC,cAE3EC,EAF2E,KAE7DC,EAF6D,KAIlF,OACE,wBACE1S,IADF,EAEE+B,MAAO,CAACqQ,EAAkBtQ,GAF5B,qBADF,IArGJ,qBA+G+B,YAAoC,IAAD,EAEhC,EAFgC,MAEtDuQ,EAFsD,QAE/CM,EAF+C,aAI9D,OACE,sBACE3S,IADF,EAEE+B,MAAO,CAACA,EAAOD,GAAR,MAFT,IADF,IAnHJ,2BA4HqC,YAAoC,IAAD,EAE1B,EAF0B,MAE5DwQ,EAF4D,cAE/CM,EAF+C,mBAIpE,OACE,sBACE5S,IADF,EAEE+B,MAAO,CAACA,EAAOD,GAAR,YAFT,IADF,IAhIJ,yBAyImC,YAA2C,IAAD,EAE5C,EAF4C,MAEjE+O,EAFiE,QAInEgC,GAAuCN,EAJ4B,aAIlBxQ,EAAvD,GAEA,OAAOO,mBAAqC,CAC1CtC,IAD0C,EAE1C+B,MAAO,CAACA,EAAOD,GAAR,UAA0B+Q,QAFnC,UA/IJ,+BAqJyC,YAA6C,IAAD,EAElD,EAFkD,MAEzER,EAFyE,QAElEC,EAFkE,cAIjF,MAAO,CACLrG,OAAwB,qBAAwBlK,EAD3C,OAELkK,OAA8B,2BAA8BlK,EAF9D,eAzJJ,yBA+JmC,YAA6C,IAAD,EAE3B,EAF2B,MAEnEgN,EAFmE,OAE7DsD,EAF6D,QAEtDC,EAFsD,cAEzCC,EAFyC,YAI3E,MAAO,CACLxD,GAAQ,oBAAuBhN,EAD1B,OAEJsQ,GAAD,IAA0B,uBAFrB,GAGLE,GAAa,yBAA4BxQ,EAH3C,aAnKJ,0BA0KoC,YAAwC,IAChES,EAAa,EADkD,eAGvE,OAAOA,GAAsB,yBAA7B,IA7KJ,wDAgL8D,IAAD,EACT7B,KADS,MACjDiG,EADiD,cACpC7E,EADoC,QAC1B6B,EAD0B,iCAEfjD,KAAKgP,kBAFU,GAEjDvL,EAFiD,YAEnC0C,EAFmC,qBAInDjD,EAAqClD,KAAKiP,wBAAhD,GAEA,OACE,6BACElM,cADF,MAGE3B,MAAO,CAACqC,EAAWtC,GAAZ,UAA8BmO,GAA9B,UAHT,GAIExM,QAAS9C,KAJX,QAKEmS,UAAWnS,KALb,UAMEoS,WAAYpS,KANd,WAOEqS,YAAarS,KAPf,cADF,OAtLJ,GAAuC2B,IAAvC,WAAagP,GAEJjH,oBAA8B,WAmMvC,IAAMvI,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETF,WAH6B,UAK/BiH,iBAAkB,CAChBzM,KAN6B,GAQ/BoJ,KAR+B,GAS/BsD,MAAO,CACL9B,UAV6B,QAY/B+B,YAAa,CACX/B,UAb6B,QAe/BgC,UAfF,KAkBMtC,GAAYO,iBAAyB9N,YAAkB,CAC3D0B,UAAW,CAETqM,aAHJ,KAOawC,GAAWpL,GAAjB,I,SClUMqL,GAAb,WAEE,gBACiC,IAAD,aADXC,IACW,KAAXC,IAHvB,8CAOI,OAAOzS,KAAA,IAAW0S,EAAX,GAAsB1S,KAAKyS,IAAMC,EAAxC,KAPJ,8BAWI,OAAO,QAAP,OAXJ,KAeaC,GAAb,WAEE,gBACsC,IAAD,aADhB/O,QACgB,KAAhBC,SAHvB,8CAQI,OAAO7D,KAAA,QAAe0S,EAAf,OAA8B1S,KAAK6D,SAAW6O,EAArD,UARJ,8BAYI,OAAO,QAAP,OAZJ,KAgBaE,GAAb,WAKE,oBAAkE,IAAD,QAC/D5S,KAAK6S,OAAS,IAAI,GAAJ,EAAd,GACA7S,KAAK8S,KAAO,IAAI,GAAJ,EAAZ,GAPJ,8CAWI,OAAO9S,KAAA,cAAmB0S,EAAnB,SAAoC1S,KAAK8S,KAAKC,OAAOL,EAA5D,QAXJ,gCAkBI,OAAO,MACLA,WAAiB1S,KAAK8S,KADjB,MAEL9S,KAAK6S,OAFA,EAGL7S,KAAK8S,KAHA,MAIL9S,KAAK8S,KAJP,UAlBJ,+BA8BI,OAAO,MACL9S,KAAK6S,OADA,EAELH,WAAiB1S,KAAK8S,KAFjB,OAGL9S,KAAK8S,KAHA,MAIL9S,KAAK8S,KAJP,UA9BJ,iCA0CI,OAAO,MACLJ,WAAiBA,OADZ,MAEL1S,KAAK6S,OAFA,EAGL7S,KAAK8S,KAHA,MAIL9S,KAAK8S,KAJP,UA1CJ,kCAsDI,OAAO,MACL9S,KAAK6S,OADA,EAELH,WAAiBA,OAFZ,OAGL1S,KAAK8S,KAHA,MAIL9S,KAAK8S,KAJP,UAtDJ,4CAkEI,OAAO,MACLJ,YAAkBA,aAAmB1S,KAAK8S,KAAzB,OADZ,EAEL9S,KAAK6S,OAFA,EAGL7S,KAAK8S,KAHA,MAIL9S,KAAK8S,KAJP,UAlEJ,0CA8EI,OAAO,MACL9S,KAAK6S,OADA,EAELH,YAAkBA,cAAoB1S,KAAK8S,KAA1B,QAFZ,EAGL9S,KAAK8S,KAHA,MAIL9S,KAAK8S,KAJP,WA9EJ,8BAuFI,OAAO,YAAP,KAvFJ,+BA2FI,IAAME,EAAqBC,SAA3B,UACA,OAAO,UAAgBD,EAAhB,MAA8BA,EAArC,YA5FJ,KChBaE,GAAb,qFA2DI,IAAMC,EAAuB,CAC3BD,SAD2B,SAE3BA,oBAF2B,SAG3BA,kBAH2B,SAI3BA,cAJ2B,SAK3BA,aAL2B,SAM3BA,eAN2B,SAO3BA,gBAPF,UAUME,EAAuBrR,iBAA7B,GAEA,OAAO5F,uBACc,mBAA0BgX,WAA1B,MADdhX,QAEc,cAEnB,IAAMD,EAAgBkX,EAAtB,GACMC,EAAkCH,QAAxC,GAEA,OAAOG,EAAcA,UAAH,GAAlB,IACCT,GARH,UAvEJ,iCAmFI,OAAOM,cAAgCA,gBAAvC,KAnFJ,uCAuFI,UACE,KAAKA,SAAL,SACE,OAAOA,EAAP,OACF,KAAKA,oBAAL,SACE,OAAOA,EAAP,kBACF,KAAKA,kBAAL,SACE,OAAOA,EAAP,gBACF,KAAKA,cAAL,SACE,OAAOA,EAAP,YACF,KAAKA,aAAL,SACE,OAAOA,EAAP,WACF,KAAKA,eAAL,SACE,OAAOA,EAAP,aACF,KAAKA,gBAAL,SACE,OAAOA,EAAP,cACF,QACE,OAhBJ,KAvFJ,gCA8GI,gBAHiD,eA3GrD,KAAaA,GAEJI,OAAiB,8GAIpB,OAAO,aAAP,OAJoB,MAFbJ,GAUJK,kBAA4B,wHAI/B,OAAO,SAAiBC,SAAjB,IAAwCA,OAA/C,YAJ+B,MAVxBN,GAkBJO,gBAA0B,sHAI7B,OAAO,OAAUD,SAAV,IAAiCA,OAAjC,MAAP,OAJ6B,MAlBtBN,GA0BJQ,YAAsB,kHAIzB,OAAO,SAAiBF,SAAjB,EAAiCA,OAAjC,MAAmDA,OAA1D,YAJyB,MA1BlBN,GAkCJS,WAAqB,iHAIxB,OAAO,OAAUH,SAAV,IAAiCA,OAAjC,MAAmDA,OAA1D,YAJwB,MAlCjBN,GA0CJU,aAAuB,mHAI1B,OAAO,OAAUJ,SAAV,EAA0BA,SAA1B,IAAiDA,OAAxD,YAJ0B,MA1CnBN,GAkDJW,cAAwB,oHAI3B,OAAO,OAAUL,SAAV,EAA0BA,SAA1B,EAA0CA,OAA1C,MAAP,OAJ2B,MAgEjC,IAAaM,GACX,aAGqD,IAHhCjR,EAG+B,uDAHf+P,GAArC,OACqBF,EAE+B,uDAFhBE,GADpC,OAEqBmB,EAC+B,uDADfnB,GAFrC,OAGqBoB,EAA+B,uDAAdpB,GAHtC,OAGoD,iBAH/B/P,SAG+B,KAF/B6P,QAE+B,KAD/BqB,SAC+B,KAA/BC,WAoBVC,GAAb,wFAgfI,OAAOA,cAA0CA,gBAAjD,KAhfJ,uCAofI,UACE,KAAKA,OAAL,SACE,OAAOA,EAAP,KACF,KAAKA,MAAL,SACE,OAAOA,EAAP,IACF,KAAKA,QAAL,SACE,OAAOA,EAAP,MACF,KAAKA,SAAL,SACE,OAAOA,EAAP,OACF,KAAKA,aAAL,SACE,OAAOA,EAAP,WACF,KAAKA,WAAL,SACE,OAAOA,EAAP,SACF,KAAKA,YAAL,SACE,OAAOA,EAAP,UACF,KAAKA,UAAL,SACE,OAAOA,EAAP,QACF,KAAKA,cAAL,SACE,OAAOA,EAAP,YACF,KAAKA,YAAL,SACE,OAAOA,EAAP,UACF,KAAKA,eAAL,SACE,OAAOA,EAAP,aACF,KAAKA,aAAL,SACE,OAAOA,EAAP,WACF,QACE,OA1BJ,KApfJ,gCAqhBI,gBAH2D,eAlhB/D,KAAaA,GAEJC,KAAyB,0GAGW,IAAD,EACbC,gBAAsBA,EAAtBA,wBAAsDA,EADzC,OAC9BtB,EAD8B,SACtBC,EADsB,OAGhCN,EAAYzH,UAChB8H,IAAWsB,iBADKpJ,EAEhBoJ,oBAA4BrB,EAA5BqB,OAA0CtB,IAAWsB,eAFvD,QAKA,OAAO,SAELtB,EAFK,EAGLC,EAHK,MAILA,EAJF,UAX4B,6BAoB5B,MAAO,CACLsB,UADK,MAELC,UAFF,YApB4B,+BA2B5B,OAAOrU,OA3BqB,gCA+B5B,OAAOiU,GAAP,QA/B4B,+BAmC5B,MAAO,CACLA,GADK,KAELA,GAFK,WAGLA,GAHF,YAnC4B,gCA2C5B,OAAOK,GAAUd,EAAVc,IAA2BC,GAAQf,EAAnCc,IAAoDE,GAAWhB,EAAtE,OA3C4B,MAFrBS,GAiDJQ,WAA+B,gHAGK,IAAD,EACbzU,KAAK0U,SAASlB,MADD,GAC9BX,EAD8B,SACtBC,EADsB,OAGtC,OAAO,OACLD,EADK,EAELA,KAAYsB,oBAA4BrB,EAA7B,QAAXD,EAA2DsB,iBAFtD,EAGLrB,EAHK,MAILA,EAJF,UANkC,6BAelC,MAAO,CACLsB,UADK,MAELC,UAFF,gBAfkC,+BAsBlC,OAAOJ,GAAP,OAtBkC,gCA0BlC,OAAOA,GAAP,cA1BkC,+BA8BlC,OAAOjU,KAAA,SAAP,WA9BkC,gCAkClC,OAAOA,KAAA,gBAAP,OAlCkC,MAjD3BiU,GAuFJU,SAA6B,8GAGO,IAAD,EACb3U,KAAK0U,SAASlB,MADD,GAC9BX,EAD8B,SACtBC,EADsB,OAGtC,OAAO,OACLD,EADK,EAELA,KAAYsB,oBAA4BrB,EAA7B,QAAXD,EAA2DsB,eAFtD,OAGLrB,EAHK,MAILA,EAJF,UANgC,6BAehC,MAAO,CACLsB,UADK,MAELC,UAFF,cAfgC,+BAsBhC,OAAOJ,GAAP,OAtBgC,gCA0BhC,OAAOA,GAAP,YA1BgC,+BA8BhC,OAAOjU,KAAA,SAAP,WA9BgC,gCAkChC,OAAOA,KAAA,gBAAP,OAlCgC,MAvFzBiU,GA6HJW,IAAwB,yGAGY,IAAD,EACbT,eAAqBA,EAArBA,0BAAuDA,EAD1C,OAC9BtB,EAD8B,SACtBC,EADsB,OAIhCN,EAAYzH,UAChB8H,EADgB9H,EAEhBoJ,qBAA6BtB,IAAWC,EAF1C,QAKA,OAAO,SAELD,IAAWsB,iBAFN,EAGLrB,EAHK,MAILA,EAJF,UAZ2B,6BAqB3B,MAAO,CACLsB,UADK,SAELC,UAFF,YArB2B,+BA4B3B,OAAOrU,OA5BoB,gCAgC3B,OAAOiU,GAAP,SAhC2B,+BAoC3B,MAAO,CACLA,GADK,IAELA,GAFK,UAGLA,GAHF,WApC2B,gCA4C3B,OAAOM,GAAQf,EAARe,IAAyBM,GAASrB,EAAlCe,IAAmDO,GAAUtB,EAApE,OA5C2B,MA7HpBS,GA6KJc,UAA8B,+GAGM,IAAD,EACb/U,KAAK0U,SAASlB,MADD,GAC9BX,EAD8B,SACtBC,EADsB,OAGtC,OAAO,OACLD,KAAYsB,mBAA2BrB,EAA5B,OAAXD,EAAyDsB,iBADpD,EAELtB,EAFK,EAGLC,EAHK,MAILA,EAJF,UANiC,6BAejC,MAAO,CACLsB,UADK,SAELC,UAFF,gBAfiC,+BAsBjC,OAAOJ,GAAP,MAtBiC,gCA0BjC,OAAOA,GAAP,eA1BiC,+BA8BjC,OAAOjU,KAAA,SAAP,WA9BiC,gCAkCjC,OAAOA,KAAA,gBAAP,OAlCiC,MA7K1BiU,GAmNJe,QAA4B,6GAGQ,IAAD,EACbhV,KAAK0U,SAASlB,MADD,GAC9BX,EAD8B,SACtBC,EADsB,OAGtC,OAAO,OACLD,KAAYsB,mBAA2BrB,EAA5B,OAAXD,EAAyDsB,eADpD,MAELtB,EAFK,EAGLC,EAHK,MAILA,EAJF,UAN+B,6BAe/B,MAAO,CACLsB,UADK,SAELC,UAFF,cAf+B,+BAsB/B,OAAOJ,GAAP,MAtB+B,gCA0B/B,OAAOA,GAAP,aA1B+B,+BA8B/B,OAAOjU,KAAA,SAAP,WA9B+B,gCAkC/B,OAAOA,KAAA,gBAAP,OAlC+B,MAnNxBiU,GAyPJgB,MAA0B,2GAGU,IAAD,EACbd,iBAAuBA,EAAvBA,wBAAuDA,EAD1C,OAC9BtB,EAD8B,SACtBC,EADsB,OAGhCN,EAAYzH,UAChB8H,IAAWsB,eADKpJ,MAEhBoJ,oBAA4BrB,EAA5BqB,OAA0CtB,IAAWsB,eAFvD,QAKA,OAAO,SAELtB,EAFK,EAGLC,EAHK,MAILA,EAJF,UAX6B,6BAoB7B,MAAO,CACLsB,UADK,cAELC,UAFF,YApB6B,+BA2B7B,OAAOrU,OA3BsB,gCA+B7B,OAAOiU,GAAP,OA/B6B,+BAmC7B,MAAO,CACLA,GADK,MAELA,GAFK,YAGLA,GAHF,aAnC6B,gCA2C7B,OAAOiB,GAAQ1B,EAAR0B,IAAyBX,GAAQf,EAAjC0B,IAAkDV,GAAWhB,EAApE,OA3C6B,MAzPtBS,GAwSJkB,YAAgC,iHAGI,IAAD,EACbnV,KAAK0U,SAASlB,MADD,GAC9BX,EAD8B,SACtBC,EADsB,OAGtC,OAAO,OACLD,EADK,EAELA,KAAYsB,oBAA4BrB,EAA7B,QAAXD,EAA2DsB,iBAFtD,EAGLrB,EAHK,MAILA,EAJF,UANmC,6BAenC,MAAO,CACLsB,UADK,cAELC,UAFF,gBAfmC,+BAsBnC,OAAOJ,GAAP,QAtBmC,gCA0BnC,OAAOA,GAAP,aA1BmC,+BA8BnC,OAAOjU,KAAA,SAAP,WA9BmC,gCAkCnC,OAAOA,KAAA,gBAAP,OAlCmC,MAxS5BiU,GA8UJmB,UAA8B,+GAGM,IAAD,EACbpV,KAAK0U,SAASlB,MADD,GAC9BX,EAD8B,SACtBC,EADsB,OAGtC,OAAO,OACLD,EADK,EAELA,KAAYsB,oBAA4BrB,EAA7B,QAAXD,EAA2DsB,eAFtD,OAGLrB,EAHK,MAILA,EAJF,UANiC,6BAejC,MAAO,CACLsB,UADK,cAELC,UAFF,cAfiC,+BAsBjC,OAAOJ,GAAP,QAtBiC,gCA0BjC,OAAOA,GAAP,WA1BiC,+BA8BjC,OAAOjU,KAAA,SAAP,WA9BiC,gCAkCjC,OAAOA,KAAA,gBAAP,OAlCiC,MA9U1BiU,GAoXJoB,OAA2B,4GAGS,IAAD,EACblB,kBAAwBA,EAAxBA,0BAA0DA,EAD7C,OAC9BtB,EAD8B,SACtBC,EADsB,OAGhCN,EAAYzH,UAChB8H,EADgB9H,EAEhBoJ,qBAA6BtB,IAAWC,EAF1C,QAKA,OAAO,SAELD,IAAWsB,eAFN,OAGLrB,EAHK,MAILA,EAJF,UAX8B,6BAoB9B,MAAO,CACLsB,UADK,iBAELC,UAFF,YApB8B,+BA2B9B,OAAOrU,OA3BuB,gCA+B9B,OAAOiU,GAAP,MA/B8B,+BAmC9B,MAAO,CACLA,GADK,OAELA,GAFK,aAGLA,GAHF,cAnC8B,gCA2C9B,OAAOO,GAAWhB,EAAXgB,IAA4BK,GAASrB,EAArCgB,IAAsDM,GAAUtB,EAAvE,OA3C8B,MApXvBS,GAmaJqB,aAAiC,kHAGG,IAAD,EACbtV,KAAK0U,SAASlB,MADD,GAC9BX,EAD8B,SACtBC,EADsB,OAGtC,OAAO,OACLD,KAAYsB,mBAA2BrB,EAA5B,OAAXD,EAAyDsB,iBADpD,EAELtB,EAFK,EAGLC,EAHK,MAILA,EAJF,UANoC,6BAepC,MAAO,CACLsB,UADK,iBAELC,UAFF,gBAfoC,+BAsBpC,OAAOJ,GAAP,SAtBoC,gCA0BpC,OAAOA,GAAP,YA1BoC,+BA8BpC,OAAOjU,KAAA,SAAP,WA9BoC,gCAkCpC,OAAOA,KAAA,gBAAP,OAlCoC,MAna7BiU,GAycJsB,WAA+B,gHAGK,IAAD,EACbvV,KAAK0U,SAASlB,MADD,GAC9BX,EAD8B,SACtBC,EADsB,OAGtC,OAAO,OACLD,KAAYsB,mBAA2BrB,EAA5B,OAAXD,EAAyDsB,eADpD,MAELtB,EAFK,EAGLC,EAHK,MAILA,EAJF,UANkC,6BAelC,MAAO,CACLsB,UADK,iBAELC,UAFF,cAfkC,+BAsBlC,OAAOJ,GAAP,SAtBkC,gCA0BlC,OAAOA,GAAP,UA1BkC,+BA8BlC,OAAOjU,KAAA,SAAP,WA9BkC,gCAkClC,OAAOA,KAAA,gBAAP,OAlCkC,MAqFxC,IAAMsU,YAAY,KAChB,OAAOvJ,mBAAP,IAGImK,YAAU,KACd,OAAOnK,mBAAP,IAGI8J,YAAW,KACf,OAAOrB,YAAkBd,SAAzB,GAGIoC,YAAY,KAChB,OAAOtB,WAAiBA,OAAjBA,OAAqCd,OAA5C,OAGI6B,YAAU,KACd,OAAOf,YAAkBd,SAAzB,GAGI8B,YAAa,KACjB,OAAOhB,WAAiBA,OAAjBA,QAAsCd,OAA7C,QC1qBI8C,G,mLAQIxG,kBAAoB,YAAwB,IAC1CyG,EAAsF5S,EAD7C,eACzB6S,EAAsE7S,EAD7C,gBACR8S,EAAqD9S,EAD7C,yBAGjD,MAAO,CACL+S,QAJ+C,uEAK/CC,UAAW,CACTjS,MADS,EAETC,OAFS,EAGTiS,gBALJ,K,EAUMC,kBAAoB,WAAO,IAAD,EACC,YADD,OACxB3B,EADwB,YACbC,EADa,YAG1B2B,EAAsB5B,aAA5B,UACM6B,EAAmB5B,WAAzB,SACM6B,EAAiB7B,WAAvB,OACM8B,EAAqB/B,WAA3B,WAIMgC,EAA0BJ,EAAU,IAA1C,GACMK,EAAiCF,EAAS,EAAhD,IAMIG,EAA8B,oBAAD,EAAwCC,EAAzE,EACAD,EAAqBH,EAAS,GAA9BG,EAKA,IAAIE,EAA6BR,GA/CrC,IAgDIQ,EAAqBL,GAAS,EAA9BK,EACA,IAAMC,EAAiC1L,aAAvC,GAoBA,OAnBAyL,EAAqBR,EAAU,EAA/BQ,EAmBO,CACL/S,UAAW,CACTiH,cADS,EAETF,WAHG,GAKLoL,QAtByC,CACzC7O,UAAW,CACT,CAAEwC,WAFN,KAuBEsM,UAjB2C,CAC3C9O,UAAW,CACT,CAAE2P,OAAWN,EADJ,OAET,CAAEM,OAAWL,EAFJ,OAKT,CAAE9M,WAAY0M,GAAO,EALZ,GAMT,CAAE1M,WAAY2M,EAAK,EAPvB,O,EAqBMS,uBAAyB,cAC/B,IAAMC,EAAuC,kBAA7C,GAEA,OAAOjV,mBAAqC,CAC1CP,MAAO,CAACA,EAAM,EAAiBwV,QADjC,U,EAKM3H,wBAA0B,cAChC,MAAO,CACL,mBAAwB,yBAA4B7N,EAA5B,UAA6CyV,EADvE,a,wDAK8C,IAAD,EAC6B7W,KAD7B,MACrCoB,EADqC,QAC9B0V,EAD8B,wBACP7Q,EADO,cACM8Q,EADN,WACmBjS,EADnB,oEAEN9E,KAAKgP,kBAFC,GAErC4G,EAFqC,UAEzB7G,EAFyB,mBAIvC8H,EAAiB7W,KAAvB,oBAJ6C,EAKIA,KAAKiP,wBAAwBF,EALjC,GAKtC6H,EALsC,YAO7C,OACE,wBACExV,MAAO,CAACyV,EAAD,UADT,GAEEE,SAFF,KAIE,kCAEE3V,MAAO,CAACwU,EAASiB,EAAV,QAPb,S,gCA5FA,OAAO5C,SAAwBjU,KAAK8E,MAApC,e,GAL+BnD,IAAMwF,WAAnCqO,GAEG9L,oBAA8B,UA6GhC,IAAMsN,GAAc9P,GAApB,ICzID+P,GAA+B,CACnChD,UADmC,SAEnCA,OAFmC,SAGnCA,QAHmC,SAInCA,SAJF,UAOaiD,GAAb,kFAKI,OAFoClX,KAAKmX,cAAcC,EAAe,GAAtE,IAEA,IALJ,2CASI,IAAMC,EAAuCrX,KAAKsX,eAAeC,EAAjE,GAEA,KACE,OAAOF,EAGT,IAAMG,EAAwCxX,KAAKsX,eAAeC,EAApB,UAA9C,GAEA,KACE,OAAOC,SAGFC,EAASA,UAAiBF,WAAjC,kBACOE,EAASA,UAAiBF,qBAAjC,WAEA,IAAMG,EAAsBD,kBAA5B,GAEA,KAAiB,CACf,IAAME,EAAkC1D,SAAxC,GAEA,OAAOjU,KAAA,kBAAP,GAGF,cAhCJ,0CAoCI,IAAM4X,EAAwBL,QAA9B,GAEA,OAAIA,SAA+BpD,EAAnC,QACSoD,EAGFA,iBAAwB,YAC7B,IAAMM,EAAcC,QAApB,GAEA,OAAOA,SAA8B3D,EAArC,eA7CN,K,kBCuBa4D,YAAiB,GAE5B,IAAMvQ,EAA4B7F,IAAlC,SAiBMqW,WAAqB,SACzB,IAAMxE,EAhBFyE,WAAe,KACnB,OAAIzE,WAAiBR,OAArB,MACSQ,EAUFyE,EAPmB,IAAI,GAC5BzE,WAAiBR,OADO,MAExBQ,SAFwB,EAGxBA,OAHwB,MAIxBA,OAJF,QAOA,GAIqByE,CAAa,IAAI,GAAJ,MAAD,GAAwBrF,GAAzD,UACA9N,gBAGIoT,aACJ,IAAMC,EAAeC,aAAe5Q,EAApC,SACA6Q,2BAOF,OAJIvT,EAAJ,OACEoT,IAGKvW,iBAAmBmD,EAAnBnD,SAAmC,CAAE6F,IAAF,EAAOuP,SAAjD,KC7BIuB,GAAyB,IAAI,IAAJ,KAA/B,KAsCaC,GAAb,yLAOwB,CACpBC,WAAY5F,GADQ,OAEpB6F,aAAc7F,GAFM,OAGpB8F,cAVJ,2CAesD,IAftD,qBAiB8C,EAjB9C,oCA6C2B,YACvB,qBAEK,EAAD,UAAiB,QAArB,QAKI,WAAgB,QAApB,SACE1U,UAAoB,EAApBA,QAAkC,EAAlCA,wBALA,UAAeA,QAAkB,EAAlBA,gCAAwD,EAAvE,iBAjDN,mBA0D6B,YACzB,uBAEA,IAAM2U,EAAqC,yBAAwC,QAAnF,YACA,kBAAuB,wBAA2B,EAA3B,mBAAvB,GAEA,IAAMC,EAAsB,wBAA5B,GACA,kBAAuBA,EAAvB,OAEA5U,UAAoB,EAApBA,QAAkC,EAAlCA,yBAnEJ,uBAsEiC,cAC7B,IAAMJ,EAAgB,kBAAuB4U,OAAvB,MAA+CC,OAArE,MACMjF,EAAe,IAAI,GAAMiF,SAAV,EAAiCA,SAAjC,IAA+DA,OAApF,QAEA,OAAO,WAAwC7F,GAAxC,SAAwDA,GAA/D,SA1EJ,uBA6EiC,WAC7B,IAAMiG,EAAqC,QAA3C,QACMC,EAAiB,CAAElV,MAAO,wBAAhC,OAEA,OAAOjC,mBAAmC,CACxCP,MAAO,CAAC,mBAAD,EAAyCyX,QADlD,UAjFJ,uBAsFiC,WAA2B,IAAD,EACX,EADW,MAC/C/B,EAD+C,wBACrBhS,EADqB,iCAGvD,OACE,gCAEEgS,sBAAuB,CAACA,EAAuB3V,GAAxB,YAA4C,EAFrE,qBAGEoW,UAAW,kBAHb,YAIG,EALL,yBAzFJ,gCAmG0C,WACtC,OACE,sBAAgBwB,UAAW,EAA3B,kBACG,EAFL,yBApGJ,qEAkCS/Y,KAAD,UAAiBA,KAAK8E,MAAtB,SAAwC9E,KAAKpC,MAAjD,aAKIoC,KAAKgZ,UAAYhZ,KAAK8E,MAA1B,UACE9E,KAAKiZ,gBAAL,GACAjZ,KAAKgZ,QAAUhV,QAAkBhE,KAAjC,UANAA,KAAK0E,SAAS,CAAEgU,cAAhB,MAnCN,+BA4GI,OACE,sBACEQ,MAAOlZ,KAAKpC,MADd,aAEEmb,UAAW/Y,KAFb,gBAGGA,KAAK8E,MAJV,YA5GJ,yCAoBI,OAAOmP,SAAwBjU,KAAK8E,MAApC,aApBJ,0CAuBqC,IAAD,EACJ9E,KADI,gBAEhC,MAAO,CAAEmZ,KAFuB,IAEjBC,IAFiB,OAvBpC,qCA4BgC,IAAD,EAC+BpZ,KAD/B,MAE3B,MAAO,CAAE2C,cAFkB,gBAEHC,gBAFG,kBAEcyW,cAFd,qBA5B/B,GAA6B1X,IAA7B,WAAa4W,GAEJhV,aAAsC,CAC3CZ,eAD2C,EAE3C4U,UAAWtD,GAFgC,QAoH/C,IAAM9S,GAASY,YAAkB,CAC/BuX,YAAa,CACX3V,SAFJ,cCzHa4V,GAAb,yLAEwB,CACpBC,gBAHJ,kBAWyB,YACrB,WAAc,CAAEA,gBAAhB,IAEI,QAAJ,SACE,oBAfN,kBAmB4B,WACxB,WAAc,CAAEA,gBAAhB,KApBJ,gBAuB0B,YAClB,QAAJ,WACE,iBAAoB,aAApB,IACA,WAAc,CAAEA,gBAAhB,MA1BN,sBA8BgC,YAC5B,OACE,sBACE9H,MAAO1K,OADT,MAEElE,QAAS,EAHb,iBA/BJ,4BAuCsC,YAClC,OACE,sBAAUA,QAAS,EAAnB,eACG,mBAFL,KAxCJ,qBA2D+B,YAC3B,OACE,gCAEE8I,QAAS,EAHb,iBA5DJ,0BAoEoC,YAAqD,IAC7E6N,EAAqD3U,EADuB,KACtE2L,EAA+C3L,EADuB,WACtC4U,GAAe5U,EADuB,gEAEpF,MAAO,CACL,qBADK,GAEL,0BAA6B,CAAE2U,KAAF,EAAQhJ,WAFvC,MAtEJ,0EAgDI,OACE,2BACErP,MAAOD,GADT,eAGEsY,KAAMzZ,KAHR,KAIE2Z,SAJF,EAKElJ,WAAY3L,cAAoB9E,KAApB8E,2BAAsD9E,KANtE,yBAhDJ,+BA4EmC,IAAD,EAC4BA,KAAKiP,wBAAwBjP,KADzD,kBACvB4Z,EADuB,KACTC,EADS,KAG9B,OACE,sBACEzY,MAAOD,GADT,QAEEqC,QAASxD,KAAKpC,MAFhB,eAGEkc,WAHF,EAIElE,QAJF,EAKEhT,gBAAiB5C,KALnB,iBADF,KA/EJ,2BAQI,OADyBA,KAAK8E,MAAM2U,MAAQzZ,KAAK8E,MAAM2U,KAAKM,OAA5D,GACkB/Z,KAAK8E,MAAhBkV,MAA8Bha,KAAK8E,MAA1C,oBARJ,GAA6DnD,IAA7D,WA4FMR,GAASY,YAAkB,CAC/BkY,QAAS,CACPC,UADO,IAEPC,SAH6B,UAK/BC,WAAY,CACV3K,SADU,EAEV0K,SAPJ,Y,8kBC3HA,IAAaE,GAAb,qMAI8B,YAAmC,IACrDC,EAA6CzX,EADO,iBAC/B0X,EAD+B,4BAItDC,EAAwBzY,aAAmB,CAAC,EAEhD,QAFF,QAQA,OAAO,GAAP,CACE0Y,aAH2BH,EAAmBE,EAAhD,QAEA,IAhBJ,wDAsBmD,IAAD,EACRxa,KADQ,MACtCiG,EADsC,cACtBsB,EADsB,uBAExCwH,EAA6B/O,KAAKgP,kBAAxC,GAEA,OACE,kCAEE5N,MAHJ,SA1BJ,GAAqCO,IAArC,WAAa0Y,GAEJ3Q,oBAA8B,SAiChC,IAAMgR,GAASxT,GAAf,I,oPCnEP,IAAayT,GAAb,iMAQ0C,IAAI5R,KAAJ,MAR1C,0CAuDiD,cAvDjD,mCA2D6C,cA3D7C,wBA+DkC,YAC9B,IAAM6R,EAA4Btb,WAAkB,QAAlBA,kBAAlC,EAEA,OAAOyJ,YAAgB,EAAhBA,cAAoC,CACzCG,QAAS6B,UAAyBzL,EAAzByL,QAAyCzL,EADT,QAEzCuJ,SAFyC,EAGzCF,OAAQC,KAHV,UAlEJ,WAyEqB,YACjB,iBAAsBiS,qBAAtB,MAEA,iBAAoB,CAClBxR,OAAQ,iBAAsB,QADZ,iBAElByR,UAFF,KA5EJ,oBAkF8B,WAG1B,MAAO,CACLlX,MAH2B,IAAM,QAAnC,UAEO,IAILmD,UAAW,CAAC,CAAEwC,WAAY,EAJ5B,kBArFJ,mEAWIvJ,KAAK+a,cAAcC,YAAYhb,KAA/B,wCAXJ,+CAeI,OAAOA,KAAA,yBAAgCib,EAAvC,mBAfJ,2CAkB+B,IACD/K,EAAUlQ,KADV,uBAG1BA,KAAKkb,cAAc,CAAEhL,MAAF,EAAS4K,UAA5B,MArBJ,6CAyBI9a,KAAK+a,cAAcI,uBAzBvB,uCAoCuE,IAC3DjL,EAAmB5Q,EADuC,MAChDuK,EADgD,iBAE5DR,EAAiBrJ,KAAKyV,eAA5B,EAEAzV,KAAKuQ,e,mWAAe,CAApB,CAAsBlH,OAAtB,SAxCJ,wCAoDIrJ,KAAKob,sBAAsB9b,GAAQkJ,MAAMxI,KAAzC,oCApDJ,+BA6FkD,IAAD,EACbA,KADa,MACrCoB,EADqC,QAC3BmG,EAD2B,iBAEvCwH,EAA4B/O,KAAlC,oBAEA,OACE,kBAAC+I,GAAA,EAAD,gBAEEgO,SAAU/W,KAFZ,SAGEoB,MAAO,CAACA,EAJZ,UAjGJ,GAAkCO,IAAlC,WAAagZ,GAEJpX,aAA2C,CAChD8X,iBADgD,EAEhDT,kBAFgD,KCiGpD,IAAaU,GAAb,+LAQwB,YAChB,kBAAuB,wBAA3B,GACE,qBAVN,oBAc8B,YAAmC,IACrD5F,EAAsE7S,EADlB,gBACnC8S,EAAqD9S,EADlB,yBAG5D,MAAO,CACLY,UAJ0D,sDAK1DwM,KAFK,GAGL4F,UAAW,CACThS,OADS,EAETiS,gBALJ,KAjBJ,yBA2BmC,cAA+D,IAAD,EACnD,EADmD,MACrFyF,EADqF,iBACrEC,EADqE,gBAG7F,OACE,sBACEnc,IADF,EAEE+B,MAAO,CAACA,EAAOD,GAAR,UAFT,GAGEka,iBAHF,EAIEI,UALJ,KA9BJ,mBAwC6B,cACzB,OAAO9Z,mBAA4B,CACjCtC,IADiC,EAEjC+B,MAAO,CAACD,GAAD,KAAc+C,QAFY,OAGjCwX,SAAUxL,IAAU,QAHa,cAIjCyL,SAAU,kBAAM,cAAN,OA7ChB,oBAiD8B,YAC1B,OAAOha,mBAA2B,EAAlC,mBAlDJ,0BAqDoC,YAChC,IAAMia,EAA4C,oBAAuB,QAAzE,UAIA,MAAM,CAFwBxa,mBAA9B,GAGkB,yBAA4Bwa,EAA5B,OAAgDxa,EADlE,4BA1DJ,wDAgEkD,IAAD,EACGpB,KADH,MACrCiG,EADqC,cACxB7E,EADwB,QACd6B,EADc,iCAEHjD,KAAKgP,kBAFF,GAErCvL,EAFqC,YAEvB0C,EAFuB,uBAIFnG,KAAKiP,wBAJH,aAItC2H,EAJsC,KAIjBgF,EAJiB,WAM7C,OACE,kCAEExa,MAAO,CAACqC,EAAWtC,GAAZ,UAFT,OADF,OAtEJ,GAA+CQ,IAA/C,WAAa2Z,GAEJ5R,oBAA8B,mBAF1B4R,GAIJ/X,aAA+C,CACpDiY,cADoD,GA6ExD,IAAMra,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cAF6B,OAI/BuF,KAAM,CACJjL,KAL6B,GAO/B6Q,UAAW,CACTlS,SARJ,cAYakY,GAAmB3U,GAAzB,IC5IM4U,GAAb,qMAKyDrQ,eALzD,mBASwB,WACpB,iBAAoB,CAAC3D,GAArB,SAVJ,eAawB,WACpB,sBAdJ,UAiBoB,WACZ,QAAJ,UACE,kBAAqB,QAArB,WAnBN,oBAuB8B,YAAmC,IAE3D0E,EAWE3J,EAbwD,UAG1D4J,EAUE5J,EAbwD,WAI1DkZ,EASElZ,EAbwD,mBAK1D8J,EAQE9J,EAbwD,cAM1DmZ,EAOEnZ,EAbwD,mBAO1DsJ,EAMEtJ,EAbwD,eAQ1DuJ,EAKEvJ,EAbwD,aAS1DoZ,EAIEpZ,EAbwD,eAU1DwJ,EAGExJ,EAbwD,eAW1DyJ,EAEEzJ,EAbwD,UAe5D,MAAO,CACLY,UAhB0D,0KAiB1DoK,KAAM,CACJqO,eADI,EAEJnO,WAFI,EAGJC,SAHI,EAIJO,WAJI,EAKJN,WALI,EAMJC,MARG,GAULE,KAAM,CACJxK,MADI,EAEJC,OAFI,EAGJqY,eAHI,EAIJ7N,UAdJ,KAtCJ,oBAyD8B,YAC1B,IAAMO,EAA2B,aAAjC,GAEA,OAAOjN,mBAAgC,CACrCtC,IADqC,EAErC+B,MAAO,CAACA,EAAOD,GAAR,KAAqByN,QAF9B,UA5DJ,qBAkE+B,YAAoC,IAAD,EAChC,EADgC,MACtD8C,EADsD,QAC/CM,EAD+C,aAG9D,OACE,sBACE3S,IADF,EAEE+B,MAAO,CAACA,EAAOD,GAAR,KAFT,IADF,IArEJ,0BA8EoC,YAA6C,IAAD,EACpD,EADoD,MACpEiN,EADoE,OAC9DsD,EAD8D,QAG5E,MAAO,CACLtD,GAAQ,oBAAuBhN,EAD1B,MAELkK,OAAwB,qBAAwBlK,EAFlD,QAjFJ,wDAuF8D,IAAD,EACZpB,KADY,MACjDoB,EADiD,QAC1C6E,EAD0C,cAC1BsB,EAD0B,iCAEfvH,KAAKgP,kBAFU,GAEjDvL,EAFiD,YAEnC0C,EAFmC,uBAGrBnG,KAAKiP,wBAHgB,cAGlDL,EAHkD,KAGrCkD,EAHqC,KAKzD,OACE,6BACE/O,cADF,KAGM/C,KAAKqP,kBAHX,eAIEjO,MAAO,CAACqC,EAAWtC,GAAZ,UAA8BmO,GAA9B,UAJT,GAKExM,QAAS9C,KALX,YADF,OA5FJ,GAAkD2B,IAAlD,WAAama,GAGJpS,oBAA8B,sBAuGvC,IAAMvI,GAASY,YAAkB,CAC/B0B,UAAW,CACTgH,eADS,SAETD,WAH6B,UAK/BqD,KAL+B,GAM/BO,KANF,KASMkB,GAAYO,iBAAyB9N,YAAkB,CAC3D0B,UAAW,CAETqM,aAHJ,KAOaqM,GAAsBjV,GAA5B,ICtGMkV,GAAb,qMAIyD3Q,eAJzD,mBAQwB,WACpB,iBAAoB,CAAC3D,GAArB,SATJ,eAYwB,WACpB,sBAbJ,UAgBmB,WACf,iBAAoB,CAACA,GAArB,WAjBJ,SAoBkB,WACd,sBArBJ,UAwBoB,YACZ,QAAJ,SACE,oBA1BN,YA8BsB,YAClB,iBAAoB,CAACA,GAArB,SAEI,QAAJ,WACE,sBAlCN,aAsCuB,YACnB,qBAEI,QAAJ,YACE,uBA1CN,oBA8C8B,YAAmC,IAE3DwE,EAWEzJ,EAbwD,UAG1DsJ,EAUEtJ,EAbwD,eAI1DuJ,EASEvJ,EAbwD,aAK1DoZ,EAQEpZ,EAbwD,eAM1DwJ,EAOExJ,EAbwD,eAO1DqJ,EAMErJ,EAbwD,qBAQ1D2J,EAKE3J,EAbwD,UAS1D4J,EAIE5J,EAbwD,WAU1D8J,EAGE9J,EAbwD,cAW1D6J,EAEE7J,EAbwD,qBAe5D,MAAO,CACLY,UAhB0D,8KAiB1DoK,KAAM,CACJK,MADI,EAEJH,WAFI,EAGJC,SAHI,EAIJO,WAJI,EAKJN,WALI,EAMJH,iBARG,GAULM,KAAM,CACJxK,MADI,EAEJC,OAFI,EAGJwK,UAHI,EAIJP,iBAdJ,KA7DJ,oBAgF8B,YAC1B,OACE,sBACEzO,IADF,EAEE+B,MAAO,CAACA,EAAOD,GAAR,KAAqB,QAF9B,YAGG,QAJL,WAjFJ,oBA0F8B,YAC1B,IAAMyN,EAA2B,aAAjC,GAEA,OAAOjN,mBAAgC,CACrCtC,IADqC,EAErC+B,MAAO,CAACA,EAAOD,GAAR,KAAqByN,QAF9B,UA7FJ,0BAmGoC,YAA6C,IAAD,EACjD,EADiD,MACpER,EADoE,OAC9DvM,EAD8D,WAG5E,MAAO,CACLuM,GAAQ,oBAAuBhN,EAD1B,MAELkK,OAA2B,oBAAuBlK,EAFpD,QAtGJ,wDA4G8D,IAAD,EACPpB,KADO,MACjDiG,EADiD,cACpC7E,EADoC,QAC1Bib,EAD0B,iCAEnBrc,KAAKgP,kBAFc,GAEjDvL,EAFiD,YAEnC6Y,EAFmC,uBAGtBtc,KAAKiP,wBAHiB,cAGlDL,EAHkD,KAGrC2N,EAHqC,KAKzD,OACE,6BACExZ,cADF,KAGM/C,KAAKqP,kBAHX,eAIEjO,MAAO,CAACqC,EAAWtC,GAAZ,UAA8BmO,GAA9B,UAJT,GAKExM,QAAS9C,KALX,QAMEmS,UAAWnS,KANb,UAOEoS,WAAYpS,KAPd,eADF,OAjHJ,GAAqC2B,IAArC,WAAaya,GAEJ1S,oBAA8B,SA+HvC,IAAMvI,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETD,eAFS,SAGTD,WAJ6B,UAM/BqD,KAN+B,GAO/BO,KAPF,KAUMkB,GAAYO,iBAAyB9N,YAAkB,CAC3D0B,UAAW,CAETqM,aAHJ,KAOa0M,GAAStV,GAAf,I,qkBC5KDuV,O,mLAIIzN,kBAAoB,YAAmC,IACrD0N,EAAiE7Z,EADb,uBAC5B8Z,EAAyC9Z,EADb,aACX0X,EADW,iDAG5D,MAAO,CACL9W,UAAU,GAAD,MAEPmZ,YAAarC,cAHV,MAKLsC,OAAQ,CACND,YADM,EAENE,YAPJ,K,EAYMC,eAAiB,YACvB,WAAO7M,G,EAGD8M,cAAgB,YACtB,OAAO9M,IAAUvO,mBAAqB,QAArBA,UAAjB,G,EAGMsb,oBAAsB,gBAA6E,IAAD,EACnE,EADmE,MAChGnd,EADgG,aACpFgT,EADoF,OAC9EoK,EAD8E,SAEhGzC,EAA4BrZ,EAFoE,yBAGxDA,EAHwD,OAGhGwb,EAHgG,cAGnFE,EAHmF,cAKlGK,GAAyB,gBAAD,IAA8B,CAC1DC,eAD0D,EAE1DC,eAFF,GAKMC,EAA6B,qBAA8B,CAC/DC,qBAD+D,EAE/DC,wBAFF,GAKMC,EAA2B,oBAA6B,CAC5DC,mBAD4D,EAE5DC,sBAFF,GAKA,OAAOhc,mBAA4B,CACjCtC,IADiC,EAEjCS,WAFiC,EAGjCgT,KAHiC,EAIjCoK,OAJiC,EAKjC9b,MAAO,CAAC8C,QAAD,MAAsB/C,GAAtB,WALT,M,EASMyc,qBAAuB,cAC7B,OAAOjc,oBAA2B,cAChC,OAAO,0BAAP,O,wDAI4C,IAAD,EACa3B,KADb,MACrCiG,EADqC,cACxB7E,EADwB,QACjBS,EADiB,WACJoB,EADI,0CAEvC8L,EAA4B/O,KAAKgP,kBAAvC,GAEM6O,EAAkC7d,KAAK4d,qBAAqB/b,EAAlE,GAEA,OACE,kCAEET,MAAO,CAAC2N,EAAD,UAA2B5N,GAA3B,UAFT,KADF,O,GApE+BQ,IAAMwF,WAAnCsV,GAEG/S,oBAA8B,cA4EvC,IAAMvI,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETyP,SAH6B,UAK/B0C,OAAQ,CACNpC,aADM,EAENmC,YAPJ,KAWakB,GAAc5W,GAApB,I,QC9IM6W,GAAb,yIAGI,OACE,iCAAS/d,KAAT,OAAqBge,QAArB,cACE,wBAAGC,YAAH,WACE,wBAAGA,YAAH,gBACE,2BAAMra,MAAN,KAAiBC,OAAjB,KAA6Bqa,QAD/B,MAEE,2BACEC,EANV,8HAHJ,GAAiCxc,IAAjC,WCAayc,GAAb,yIAGI,OACE,iCAASpe,KAAT,OAAqBge,QAArB,cACE,wBAAGC,YAAH,WACE,wBAAGA,YAAH,gBACE,2BACEra,MADF,KAEEC,OAFF,KAGEkD,UAHF,mBAIEmX,QALJ,MAOE,2BACEC,EAXV,2IAHJ,GAAiCxc,IAAjC,WCAa0c,GAAb,yIAGI,OACE,iCAASre,KAAT,OAAqBge,QAArB,cACE,wBAAGC,YAAH,WACE,wBAAGA,YAAH,iBACE,2BACEra,MADF,KAEEC,OAFF,KAGEkD,UAHF,oBAIEmX,QALJ,MAOE,2BACEC,EAXV,wJAHJ,GAAkCxc,IAAlC,WCkCa2c,GAAb,mMAE4B,WAA2B,IAAD,EACf,QADe,UAC1CjQ,EAD0C,YAC5BkQ,EAD4B,qBAGlD,OACE,2BACEnd,MAAOD,GADT,iBAEEqd,KAFF,GADF,KALJ,iBAc2B,WAA2B,IAAD,EACd,QADc,UACzCnQ,EADyC,YAC3BkQ,EAD2B,qBAE3CE,EAA+C1T,aAArD,IAEA,OACE,0BACE3J,MAAOD,GADT,YAEEqd,KAFF,GADF,KAlBJ,kBA2B4B,WAA4B,IAAD,EAChB,QADgB,UAC3CnQ,EAD2C,YAC7BkQ,EAD6B,qBAE7CE,EAA+C1T,aAArD,IAEA,OACE,0BACE3J,MAAOD,GADT,YAEEqd,KAFF,GADF,KA/BJ,kCAwC4C,WACxC,OACE,wBAAMpd,MAAOD,GAAb,cACE,sBACEC,MAAOD,GADT,aAEErB,WAFF,QAIEsO,KAAM,EAJR,eAKEtL,QAAS,QANb,wBAQE,sBACE1B,MAAOD,GADT,aAEErB,WAFF,QAIEsO,KAAM,EAJR,gBAKEtL,QAAS,QAdf,2BAzCJ,wDA6DkD,IAAD,EAC8C9C,KAD9C,MACrCoB,EADqC,QAC9B4Q,EAD8B,aAClB0M,EADkB,eACJhN,EADI,QACGiN,EADH,2BACgCpX,EADhC,gFAG7C,OACE,6BAAMnG,MAAO,CAACD,GAAD,UAAb,OACE,sBACEC,MAAOD,GADT,aAEErB,WAFF,QAGEgP,UAAW,CAACkD,EAAY7Q,GAH1B,kBAKEiN,KAAMpO,KALR,gBAME8C,QANF,GADF,GAUG6b,GAA4B3e,KAXjC,uCAhEJ,GAAoC2B,IAApC,WAiFMR,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETF,WAFS,SAGTC,eAJ6B,iBAM/BmU,aAAc,CACZlU,cAP6B,eAS/BmU,iBAAkB,CAChB/Q,iBAV6B,GAY/BgR,iBAAkB,CAChBhR,iBAb6B,GAe/BiR,YAAa,CACXjR,iBAhB6B,GAkB/BkR,aAAc,CACZtU,cADY,MAEZD,eApBJ,YC3GawU,GAAb,yIAEkD,IAAD,EACGjf,KADH,MACrCoB,EADqC,QAC9BqY,EAD8B,OACxB5X,EADwB,WACX0F,EADW,mCAG7C,OACE,kCAEEnG,MAAO,CAACD,GAAD,UAFT,KAGGsY,MAJL,QALJ,GAAyC9X,IAAzC,WAeMR,GAASY,YAAkB,CAC/B0B,UAAW,CACTgH,eADS,SAETC,cAHJ,SCbawU,GAAb,yIAEkD,IAAD,EACGlf,KADH,MACrCoB,EADqC,QAC9BqY,EAD8B,OACxB5X,EADwB,WACX0F,EADW,mCAG7C,OACE,kCAEEnG,MAAO,CAACD,GAAD,UAFT,KAGGsY,MAJL,QALJ,GAA0C9X,IAA1C,WAeMR,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETyP,SAHJ,Y,qkBCDMgF,O,mLAWIrc,QAAU,WACZ,QAAJ,UACE,iBAAoB,QAApB,O,EAIIsc,yBAA2B,YAAsC,IAAD,EAC5B,EAD4B,MAC9DC,EAD8D,iBAC9CC,EAD8C,gBAGtE,SACS,CACLC,uBADK,EAELC,wBAFK,EAGLC,oBAHK,EAILC,qBAJF,GAOF,EACS,CACLH,uBADK,EAELC,wBAFK,EAGLC,oBAHK,EAILC,qBAJF,GAQF,I,EAGM1Q,kBAAoB,YAAmC,IAE3D2Q,EAWE9c,EAbwD,mBAG1D+c,EAUE/c,EAbwD,oBAI1Dgd,EASEhd,EAbwD,mBAK1Did,EAQEjd,EAbwD,uBAM1Dkd,EAOEld,EAbwD,oBAO1Dmd,EAMEnd,EAbwD,sBAQ1Dod,EAKEpd,EAbwD,sBAS1Dqd,EAIErd,EAbwD,iBAU1Dsd,EAGEtd,EAbwD,sBAW1D4X,EAEE5X,EAbwD,aAe5D,MAAO,CACLY,UAAU,GAAD,GAhBiD,kOAgBjD,GAEJ,2BAHA,IAKLgO,iBAAkB,CAChBmL,YADgB,EAEhBnC,aAFgB,EAGhBqC,YAHgB,EAIhBhH,gBATG,GAWLsK,YAAa,CACXpS,SADW,EAEXC,WAFW,EAGXM,WAHW,EAIXL,MAJW,EAKXH,WAhBJ,K,EAqBMsS,qBAAuB,cAC7B,OAAOxd,GAAUA,EAAO,QAAD,KAAkB,CACvCY,UAAWrC,EAD4B,iBAEvCyM,KAAMzM,EAFR,e,qEAzE2B6Z,GAC3B,OAAIA,EAAJ,uBACSA,wBAAgCjb,KAAhCib,MAAP,K,+BA6EwD,IAAD,EACcjb,KADd,MACjDoB,EADiD,QAC1C6E,EAD0C,cACbpE,GADa,8BACA0F,EADA,8DAEfvH,KAAKgP,kBAFU,GAEjDvL,EAFiD,YAEnC0C,EAFmC,qBAIzD,OACE,6BACEpD,cADF,EAEED,QAAS9C,KAFX,YAIEoB,MAAO,CAACqC,EAAWtC,GAAZ,UAJT,KAKGnB,KAAKqgB,qBAAqBxe,EAN/B,Q,GAvFyCF,IAAMwF,WAA7CgY,GAEGzV,oBAA8B,eAiGvC,IC9HA,GD8HMvI,GAASY,YAAkB,CAC/B0B,UAAW,CACTuB,KAFJ,KAMasb,GAAqBpZ,GAA3B,IExGMqZ,GAAb,oMAU6B,cACzB,WAAOC,cAXX,kBAc4B,cACxB,OAAOA,eAAwBA,SAA/B,GAfJ,oBAkB8B,cAC1B,IAAMC,EAA4B,qBAA4B,EAA9D,aACMC,EAA2B,oBAA2B,EAA5D,aAEA,OACE,sBACErhB,IADF,EAEEshB,KAFF,EAGEjF,SAAU,uBAHZ,GAIEkF,SAAU,uBAJZ,GAKEC,SAAU5Q,EALZ,SAME6Q,MAAO,oBANT,GAOEN,MAAOvQ,EAPT,MAQEoP,eARF,EASEC,cATF,EAUE3D,SAAU,QAVZ,SAWEoF,sBAAuB,QAXzB,kBAYG,QAbL,WAtBJ,mBAwC6B,cACzB,OACE,sBACE1hB,IADF,EAEE+B,MAAO,QAFT,SAGEqY,KAHF,GAIG,EALL,oBAzCJ,wDAmDkD,IAAD,EACJzZ,KADI,MACrCyZ,EADqC,OAClBlS,GADkB,uCAG7C,OACE,yBAEGkS,MAASzZ,KAHd,qBAtDJ,kCAEoD,IAAD,EACvCyZ,EAASzZ,KAD8B,WAG/C,OAAO,qCAA0B,YAC/B,OAAOiQ,EAAP,aANN,GAAuCtO,IAAvC,WCdaqf,GAAb,yIAEkD,IAAD,EACQhhB,KADR,MACrCoB,EADqC,QAC9B0N,EAD8B,YACnBjN,EADmB,WACN0F,EADM,wCAG7C,OACE,kCAEEnG,MAAO,CAACD,GAAD,UAFT,KAGE,sBAAMC,MAAN,GAJJ,QALJ,GAAyCO,IAAzC,WAeMR,GAASY,YAAkB,CAC/B0B,UAAW,CACTuB,KADS,EAETyF,eAFS,SAGTD,WAJJ,YCjBMyW,GAAmC,CACvCC,GADuC,OAEvCC,eAAgB,WACd,OAAOC,IAETC,SAAU,WACR,OAAOJ,KAILK,GAAoC,CACxCJ,GADwC,QAExCC,eAAgB,WACd,OAAOF,IAETI,SAAU,WACR,OAAOJ,KAILG,GAAmC,CACvCF,GADuC,OAEvCC,eAAgB,WACd,OAAOF,IAETI,SAAU,WACR,OAAOC,KAgBEC,GAAuC,CAClDC,KADkD,GAElDC,MAFkD,GAGlDC,KAHK,I,6BCxDeC,GAAtB,qFAOI3hB,KAAK4hB,OAAL,IAPJ,4CAWI,OAAIC,GAAJ,EACS7hB,KAAA,eAAP,GACU6hB,GAAL,GAGP,EAFS,IAdb,uCAuBI,OAAO7hB,KAAA,qBAAsCA,KAAK8hB,aAAanB,EAAK,GAApE,IAvBJ,2CA8BI,OAAOA,SAAwB3gB,KAAK8hB,aAAanB,EAAK,GAA/CA,GAA8D3gB,KAAK8hB,aAAanB,EAAK,GAA5F,IA9BJ,gDAqCI,OAAO3gB,KAAA,sBAAuCA,KAAK8hB,aAAanB,EAAK,IAArE,IArCJ,oDA4CI,OAAOA,SAAwB3gB,KAAK+hB,mBAAmBpB,EAAK,EAA5D,KA5CJ,yCAmDI,OAAOkB,MAAkB7hB,KAAKgiB,UAAUH,EAAxC,KAnDJ,2CA0DI,OAAOA,MAAkB7hB,KAAKiiB,YAAYJ,EAA1C,KA1DJ,0CAiEI,OAAOA,MAAkB7hB,KAAKkiB,WAAWL,EAAzC,OAjEJ,KAAsBF,GACbQ,aAAuB,EADVR,GAEbS,eAAyB,G,SJAtBC,K,cAAAA,E,aAAAA,Q,KKPL,IAAMC,GAAiB,CAC5BC,SAAU,CACRC,MAAO,CAAC,KAAD,yBADC,MAURC,KAAM,CAAC,SAAD,mDAXoB,aAqB5BC,WAAY,CACVF,MAAO,CAAC,MAAD,4DADG,OAeVC,KAAM,CAAC,UAAD,yFApCH,c,qkBCYA,IAQDE,GAA4C,CAChDC,eADF,GAQaC,GAAb,YAIE,aAAkF,IAAD,EAArEjB,EAAqE,uDApB5E,KAoBwCzN,EAAoC,2DAC/E,+BACA,uBACA,wDAAgB,iBAvBb,MAwBH,qBAAwB,gBAAxB,IAJ+E,EAJnF,0DAYIzO,kDAZJ,6CAgBI,OAAQod,MAAM9iB,KAAK+iB,MAAMpC,EAAK,GAA9B,aAhBJ,8BAoBI,OAAO,IAAP,OApBJ,iCAwBI,OAAOA,EAAP,YAxBJ,kCA4BI,OAAOA,EAAP,aA5BJ,iCAgCI,OAAOA,EAAP,gBAhCJ,sCAoCI,OAAOA,EAAP,WApCJ,0CA4CI,OAAO3gB,KAAA,QAAP,iBA5CJ,sCA+CkCoB,MAA0D,uDAAhCihB,GAAiBW,MACnE9S,EAAgByQ,EAAtB,WAEA,OAAO3gB,KAAA,sBAAP,KAlDJ,6CAqD4CoB,MAA0D,uDAAhCihB,GAAiBW,MACnF,OAAOhjB,KAAA,sBAAP,KAtDJ,0CAyD2BoB,MAA4D,uDAAlCihB,GAAiBW,MAC5DT,EAAqBviB,KAAKijB,iBAAhC,GAGA,OAAOjjB,KAAA,2BAAwCA,KAAKmU,QAApD,kBA7DJ,kCAiEI,OAAO+O,cAAP,KAjEJ,iCAwEI,OAAO,SAASC,WAAhB,MAxEJ,kCA4EI,OAAOnjB,KAAA,WAAgB2gB,EAAhB,cAAoCA,EAApC,WAAqDA,YAA5D,KA5EJ,oCAgFI,IAAMyC,EAAcpjB,KAAKqjB,WAAW1C,EAAhB,cAAoCA,aAApC,EAApB,GAMA,OAFAyC,UAAc5e,SAASmc,EAATnc,UAAyBxE,KAAKsjB,YAAYF,GAAxDA,YAEOA,IAtFX,mCA0FI,OAAOpjB,KAAA,WAAgB2gB,gBAAhB,EAA0CA,EAA1C,WAA2DA,EAAlE,aA1FJ,+BA8FI,OAAO,SAASA,EAAhB,aA9FJ,wCAkGI,OAAOkB,YAAkB0B,EAAzB,YAlGJ,4CAsGI,OAAIvjB,KAAK8hB,aAAaD,EAAM,GAA5B,GACE,EACS7hB,KAAK8hB,aAAaD,EAAM,GAA5B,EACE,EACF,IAAI7hB,KAAK8hB,aAAaD,EAAM,GAC1B,OADF,IA1GX,wCAgHI,IAAMhjB,EAAS,IAAIskB,KAAKK,EAAK,EAA7B,GAQA,OAJIA,MAAaA,EAAjB,KACE3kB,cAAmBA,gBAAnBA,MAGF,IAxHJ,qCA4HI,OAAOmB,KAAA,WAAgB2gB,EAAhB,cAAoCA,aAApC,EAAP,KA5HJ,uCAgII,OAAO3gB,KAAA,WAAgB2gB,EAAhB,cAAoCA,EAApC,WAAP,KAhIJ,gDAoII,OAAO3gB,KAAA,eAAP,YApIJ,oCAwII,OAAOA,KAAA,WAAgB2gB,EAAhB,iBAAP,MAxIJ,sCA4II,OAAO3gB,KAAA,WAAgB2gB,EAAhB,gBAAP,KA5IJ,qCAgJI,OAAO3gB,KAAA,kBAAkC6hB,cAAoB0B,EAA7D,YAhJJ,uCAoJI,OAAOvjB,KAAA,iBAAiC6hB,eAAqB0B,EAA7D,aApJJ,sCAwJI,OAAO1B,kBAAwB0B,EAA/B,gBAxJJ,8BA4JI,MAAM,WA5JV,+CAgKI,OAAOrnB,mBAAP,KAhKJ,0CAoKI,UACE,KAAKmmB,GAAL,MACE,OAAOa,UAAP,cACF,KAAKb,GAAL,KACE,OAAOa,UAJX,YApKJ,4CA6KI,UACE,KAAKb,GAAL,MACE,OAAOa,UAAP,gBACF,KAAKb,GAAL,KACE,OAAOa,UAJX,cA7KJ,4CAsLIA,mBAAsB/e,WAAgBke,GAAtCa,MACAA,wBAA2B/e,WAAgBke,GAA3Ca,OACAA,qBAAwB/e,aAAkBke,GAA1Ca,MACAA,0BAA6B/e,aAAkBke,GAA/Ca,WAzLJ,OCxBaO,YAAQ,KAAoCpa,MAA8B,uDAAb,EACxE,OAAOqa,UAAc,gBACnB,IAAMC,EAAanf,YAAY0L,EAAD,GAA9B,GAMA,OALK0T,EAAL,KACEA,SAEFA,aAEOA,IAPT,KAcWpD,YAAQ,GAGnB,IAHsCqD,MAAqC,uDAAX,SAAAC,GAAC,UAC3DC,EAAN,GAESD,EAAT,EAAgBA,EAAhB,EAA2BA,IACzBC,OAASF,EAATE,IAGF,U,qkBCXF,IAAMC,GAA4C,CAChDnD,UADgD,EAEhDoD,SAFgD,EAGhDzD,OAHF,GASa0D,GAAb,WAEE,cAAoD,IAAD,wBAA7BC,cAA6B,yBAGtB,cAC3B,IAAMC,EAAsB,mBAA5B,GAEA,OAAO,uBAAP,IANiD,2BASpB,gBAC7B,IAAMC,EAAe,2BAArB,GACMC,EAA2B9D,GAAM+D,EAAD,GAAiB,YAErD,OAAO,GAAP,CAAS5D,KADY,yBAArB,IACA,OAGF,OAAO8C,GAAMa,EAAb,IAhBiD,0BAmBrB,gBAC5B,IAAMD,EAAe,2BAArB,GACMG,EAA0BhE,GAAM+D,EAAD,GAAiB,YAEpD,OAAO,GAAP,CAAS5D,KADW,wBAApB,IACA,OAGF,OAAO8C,GAAMe,EAAb,IA1BiD,8BA6BjB,cAChC,IAAMC,EAA6B,yBAAnC,EAEA,OAAOjE,GAAMiE,GAAoB,YAE/B,OAAO,GAAP,CAAS9D,KADY,yBAArB,IACA,QAlC+C,+BAsChB,kBACjC,IAAM+D,EAAwB,wBAA9B,EACMC,EAA8BngB,SAASA,UAAUkgB,GAAiBH,EAApC/f,IAApC,GAEA,OAAOgc,GAAMmE,GAAqB,YAEhC,OAAO,GAAP,CAAShE,KADW,wBAAoCzQ,IAAxD,IACA,QA5C+C,uBAgDxB,cACzB,IAAMwU,EAAwB,qBAA9B,GAGA,OAF+B,0BAAiC,uBAAhE,GAEwBA,EAAgB/C,GAAxC,gBApDiD,sBAuDzB,cACxB,OAAO,yBAAgC,sBAAvC,IA1DJ,uDA8DI,IAAIiD,EAAqB5kB,KAAK6kB,wBAAwBC,EAAtD,GAEA,IACEF,EAAO5kB,KAAK+kB,gBAAgBH,EAA5BA,IAGF,IAAMI,EAA6BhlB,KAAKilB,sBAAxC,GAEA,OAAOxB,GAAMmB,EAAMjD,GAAP,aAAZ,KAtEJ,2CA0EI,OAAIuD,cAA4BA,EAAhC,QACSllB,KAAA,uBAAgCklB,EAAvC,WAGEA,aAA2BA,EAA/B,QACSllB,KAAA,0BAAmCklB,EAAnC,UAA4DA,EAAnE,SAGF,IAlFJ,gDAqF6E,IAAD,OACxE,OAAON,OAAS,YAEd,OADA,IAAiC,+BAAkCO,EAAlC,QACX,SAAa3E,OAAb,IAAtB,OAxFN,qDA4F+F,IAAD,OAC1F,OAAOoE,OAAS,YACd,IAAMQ,EAAN,IAAiC,+BAAkCD,EAAlC,QAC3BE,EAAN,IAA+B,+BAAkCF,EAAlC,QAE/B,OACS,GAAP,KADEC,GAAJ,EACE,CAAiB5E,OAAjB,GAGA,CAAiBA,MADU,wBAA2B2E,EAA3B,OAA3B,UApGR,8CA2GI,IAAIG,EAAJ,EAUA,OARItlB,KAAKulB,6BAAT,KACED,EAAqBtlB,KAAKwlB,qBAAqBF,EAA/CA,IAGEtlB,KAAKylB,6BAAT,KACEH,EAAqBtlB,KAAK0lB,qBAAqBJ,EAA/CA,IAGF,IArHJ,gDAyHI,IAAMK,EAA0BvB,EAAhC,QACMwB,EAAgCjE,gBAA2BgE,EAAjE,OAGA,OAFAA,kBAAS,IAAY3lB,KAAK6lB,uBAAuBf,EAAjDa,KAEM,CAAN,oBA7HJ,gDAiII,IAAMG,EAAyB1B,EAA/B,MACMwB,EAAgCjE,gBAA2BmE,EAAjE,OAGA,OAFAA,eAAQ,IAAS9lB,KAAK+lB,uBAAuBjB,EAA7CgB,KAEM,GAAN,qBArIJ,kDAyII,IAAM1C,EAAWpjB,KAAKmkB,YAAY6B,SAASlB,GAA3C,GACMmB,EAAsBjmB,KAAKmkB,YAAY+B,uBAA7C,GAEA,OAAOlmB,KAAA,oCACEimB,EADF,QAEA,YACH,OAAO,GAAP,MAAkBpF,UAAlB,SA/IR,kDAoJI,IAAMuC,EAAWpjB,KAAKmkB,YAAY6B,SAASlB,EAA3C,GAEA,OAAO9kB,KAAA,8CAEA,YACH,OAAO,GAAP,MAAkB6gB,UAAlB,SAzJR,+CA8JI,IAAMsF,EAAkBnmB,KAAKmkB,YAAYiC,cAAzC,GAEA,OAAOpmB,KAAA,iBAAP,KAhKJ,0CAoKI,OACE2hB,gBACE3hB,KAAKmkB,YADPxC,oBAEE3hB,KAAKmkB,YAAYkC,aAHd,IAIH1E,GAJJ,eApKJ,sDA4KI,OAAOyC,YAAkBzC,GAAzB,eA5KJ,sDAgLI,OAAOyC,EAAMA,SAANA,UAAiCzC,GAAxC,eAhLJ,mDAmL6F,IAAD,OAClFsE,EAAsBjmB,KAAKmkB,YAAY+B,uBAA7C,GAEA,OAAO1F,GAAMyF,GAAa,YACxB,IAAMzC,EAAe,sBAArB,GACMJ,EAAgB,uBAAtB,GAGA,OAAO,GAAP,CAASzC,KAFO,6BAAyCmD,EAAzD,IAEA,UA3LN,KCAMwC,G,yIAI6B,IAAD,EACetmB,KADf,MACtBoB,EADsB,QACf6E,EADe,cACCsB,EADD,+BAG9B,OACE,kCAEEnG,MAAO,CAAC6E,EAHZ,U,GAP2BtE,IAAMwF,WAA/Bmf,GAEG5c,oBAA8B,UAchC,IAAM6c,GAAUrf,GAAhB,IC8Besf,GAAtB,yLAQ2B,CACvBC,SAAU,QADa,UAEvBC,YAAa,4BAA+B,EAVhD,+BAwBkD,IAAI,GAAoB,EAxB1E,6BAsCyB,WACrB,WAAc,CACZD,SAAUlF,GADE,KAEZmF,YAAa,cAFf,WAvCJ,cA6CwB,YAAG/F,MAAsC,EAAtCA,KACvB,mBA9CJ,gBAiD0B,YAAGA,MAAsC,EAAtCA,KACnBgG,EAAqB,yBACzB,sBAAyB,QADA,aAEzB,uBAFyB,GAGzB,sBAAyB,QAH3B,cAMA,WAAc,CACZF,SAAU,iBADE,WAEZC,YAFF,KAxDJ,eA8DyB,YAAG/F,MAAsC,EAAtCA,KAClBgG,EAAqB,yBACzB,sBADyB,GAEzB,uBAA0B,QAFD,aAGzB,sBAAyB,QAH3B,cAMA,WAAc,CACZF,SAAU,iBADE,WAEZC,YAFF,KArEJ,0BA2EoC,WAChC,WAAc,CACZD,SAAU,iBADZ,oBA5EJ,8BAiFwC,WACpC,WAAc,CACZC,YAAa,6BADf,MAlFJ,+BAuFyC,WACrC,WAAc,CACZA,YAAa,4BADf,MAxFJ,mBA6F4B,YACxB,MAAO,CACLjjB,UAAW,CACTG,MAAOf,EADE,MAET+jB,gBAAiB/jB,EAFR,gBAGTia,YAAaja,EAHJ,YAIT+Z,YAAa/Z,EAJJ,YAKT4X,aAAc5X,EANX,cAQLgkB,gBAAiB,CACfC,kBAAmBjkB,EADJ,wBAEf+jB,gBAAiB/jB,EAVd,uBAYL6O,MAAO,CACL1D,SAAUnL,EADL,cAELoL,WAAYpL,EAFP,gBAGL0L,WAAY1L,EAHP,gBAILqL,MAAOrL,EAJF,WAKLkL,WAAYlL,EAjBT,iBAmBLuL,KAAM,CACJxK,MAAOf,EADH,UAEJgB,OAAQhB,EAFJ,WAGJwL,UAAWxL,EAtBR,eAwBLkkB,QAAS,CACP7K,eAAgBrZ,EAzBb,uBA2BLmkB,oBAAqB,CACnBlZ,iBAAkBjL,EA5Bf,qBA8BLokB,IAAK,CACHC,UAAWrkB,EADR,aAEHiL,iBAAkBjL,EAhCtB,uBA9FJ,kBAmI4B,YACxB,MAAO,CACLmL,SAAUnL,EADL,oBAELoL,WAAYpL,EAFP,sBAGL0L,WAAY1L,EAHP,sBAILqL,MAAOrL,EAJF,iBAKLkL,WAAYlL,EALd,wBApIJ,gBA6I0B,YAAG8d,MAAyC,EAAzCA,KACzB,OAAO,iBAAP,IA9IJ,kBAiJ4B,YAAGA,MAAyC,EAAzCA,KAC3B,OAAO,gCAAuC,EAA9C,iBAlJJ,iBAqJ2B,YAAGA,MAAyC,EAAzCA,KAC1B,OAAO,+BAAsC,EAA7C,iBAtJJ,gBAyJyB,YAAGA,MAAyC,EAAzCA,KAClBwG,EAAiB,yBACrB,sBAAyB,EADJ,KAErB,uBAA0B,EAFL,KAGrB,sBAAyB,EAH3B,MAMMC,EAAiB,yBACrB,sBAAyB,EADJ,KAErB,uBAA0B,EAFL,KAGrB,sBAAyB,EAH3B,MAMMC,EAAsB,iBAAsB,eAAtB,KAA5B,EAEA,OAAQ,yCAAD,IAAP,GAxKJ,kBA2K4B,YAAG1G,MAAyC,EAAzCA,KACrB2G,EAAmB,4BAA+B,EAAxD,KACMC,EAAmB,4BAA+B,EAAxD,KAEA,OAAQ,yCAAR,IA/KJ,iBAkL2B,YAAG5G,MAAyC,EAAzCA,KACpB6G,EAAkB,2BAA8B,EAAtD,KACMC,EAAkB,yBAA4B,EAApD,KAEA,OAAQ,yCAAR,IAtLJ,aAyLsB,YAAG9G,MAAyC,EAAzCA,KACrB,OAAO,8BAAqC,cAA5C,UA1LJ,eA6LyB,YACrB,OAAO,8BAAiCA,EAAjC,KAA4C,cAAnD,UA9LJ,cAiMwB,YAAGA,MAAyC,EAAzCA,KACvB,OAAO,+BAAsC,cAA7C,UAlMJ,4BAqMsC,WAClC,OAAO,sBAA2BY,SAAlC,IAtMJ,4BAyMsC,YAClC,OAAQ,iBAAR,IACE,KAAKA,QAAL,GACE,OAAO,uBAA0B,QAA1B,YAAP,GAEF,KAAKA,SAAL,GACE,OAAO,sBAAyB,QAAzB,YAAP,GAEF,KAAKA,QAAL,GACE,OAAO,sBAAyB,QAAzB,YA3NiBmG,GA2NxB,KAlNR,4BAuNsC,cAClC,OAAQjB,EAAR,IACE,KAAKlF,QAAL,GACE,OAAO,uBA9Nf,aAgOM,KAAKA,SAAL,GACE,OAAO,uBAhOf,QAkOM,KAAKA,QAAL,GAIE,OAH8B,qBAAwB,EAAxB,IAlOtC,QAqOQ,MAF8B,qBAAwB,EAAxB,IAnOtC,UAEA,oBAwO8B,cAG1B,OAF+BtR,EAAD,UAAkB,QAAhD,eAGyB,mBAAwB,EAA/C,kBACsBA,EAAtB,GAGF,MAhPJ,uBAmPiC,cAC7B,OACE,sBACE5Q,IADF,EAEEyP,UAAW,kBAAqB,QAFlC,cADF,IApPJ,mBA6P6B,cAAG6R,MAA8E,EAA9EA,KAC5B,OACE,sBACEvf,MAAOA,EADT,UAEE0N,UAAW1N,EAFb,MAGG,uBAzQT,OAOA,qBAuQ+B,cAAGuf,MAA8E,EAA9EA,KAC9B,OACE,sBACEvf,MAAOA,EADT,UAEE0N,UAAW1N,EAFb,MAGG,uBAlRT,SAMA,oBAiR8B,cAAGuf,MAA8E,EAA9EA,KAC7B,OACE,sBACEvf,MAAOA,EADT,UAEE0N,UAAW1N,EAFb,MAGG,uBA3RT,UAKA,yBA2RmC,cAC/B,OACE,kBAAC,IAAD,cACE,sBACEA,MAAOA,EADT,oBAEEqY,KAAM,cAFR,qBAGG,EAJL,sBAME,sBAASrY,MAAOA,EANlB,UAOE,sBACEumB,SAAUvmB,EADZ,IAEEqY,KAAM,cAFR,GAGEkC,SAAU,EAHZ,YAIEiM,eAAgB,EAJlB,cAKEC,eAAgB,EALlB,cAMEC,YAAa,EANf,WAOEC,iBAAkB,EAPpB,kBAQG,EAhBP,qBA5RJ,2BAkTqC,cACjC,OACE,sBACEJ,SAAUvmB,EADZ,IAEEqY,KAAM,sCAjUd,EACA,GAiUQkC,SAAU,EAHZ,cAIEiM,eAAgB,EAJlB,gBAKEC,eAAgB,EALlB,gBAMEC,YAAa,EANf,cAOG,qBAA0B,EAR/B,qBAnTJ,0BAgUoC,cAChC,OACE,sBACEH,SAAUvmB,EADZ,IAEEqY,KAAM,qCA/Ud,EACA,GA+UQkC,SAAU,EAHZ,aAIEiM,eAAgB,EAJlB,eAKEC,eAAgB,EALlB,eAMEC,YAAa,EANf,aAOG,oBAAyB,EAR9B,oBAjUJ,sBA8UgC,cAC5B,OAAQ,iBAAR,IACE,KAAKvG,QAAL,GACE,OAAO,2BAAP,GACF,KAAKA,SAAL,GACE,OAAO,6BAAP,GACF,KAAKA,QAAL,GACE,OAAO,4BANX,KA/UJ,sBAyVgC,YAC5B,OAAI,QAAJ,aACS,QAAP,eAEF,MA7VJ,sBAgWgC,YAC5B,IAAMyG,EAAgB,eAAoB,EAA1C,0BAEA,OACE,sBACE5mB,MAAOA,EADT,gBAEEsQ,MAAOsW,EAAc,QAAD,YAAyB,QAF/C,UAGEhW,WAAY5Q,EAHd,MAIE6mB,UAAW7mB,EAJb,KAKEud,yBAA0B,EAL5B,4BAMED,aAAc,EANhB,wBAOEwJ,sBAAuB,EAPzB,4BAQEC,uBAAwB,EAT5B,gCAnWJ,wDAiXkD,IAAD,EACAnoB,KADA,MACrCoB,EADqC,QAC9B6E,EAD8B,cACdsB,EADc,iCAEJvH,KAAKooB,iBAFD,GAErC3kB,EAFqC,YAEvBsL,EAFuB,qBAI7C,OACE,kCAEE3N,MAAO,CAACqC,EAFV,KAGGzD,KAAKqoB,oBAHR,GAIGroB,KAAKsoB,oBAAoBtoB,KAAKpC,MAA9B,YAJH,GAKGoC,KAAKuoB,oBANV,MArXJ,kCA2BI,OAAOvoB,KAAA,MAAP,cA3BJ,0BA+BI,OAAOA,KAAA,WAAkBA,KAAKmkB,YAAYqE,aAAaxoB,KAAKmkB,YAA5D,WA/BJ,0BAmCI,OAAOnkB,KAAA,WAAkBA,KAAKmkB,YAAYsE,WAAWzoB,KAAKmkB,YAA1D,aAnCJ,GAAiExiB,IAAjE,WAAsB6kB,GAEbjjB,aAA2C,CAChD4gB,YAAa,IADmC,GAEhDuE,eAFgD,EAGhDC,UAAWpH,GAHqC,MCEpD,IAAaqH,GAAb,YAIE,cAAsC,IAAD,sBACnC,iCAEA,YAAmB,wBAAnB,IACA,eAAoB,yBAApB,IACA,eAAoB,yBAApB,IACA,iBAAsB,2BAAtB,IACA,mBAAwB,6BAAxB,IAPmC,EAJvC,4DAiBI,OAAO5oB,KAAA,gCAAP,KAjBJ,qCAqBI,OAAOA,KAAA,YAAmBA,KAAKmkB,YAA/B,UArBJ,sCAyBQnkB,KAAK8E,MAAT,UACE9E,KAAK8E,MAAM6W,SAASgF,KA1B1B,wCA+BI,OAAO3gB,KAAA,4BAAqCA,KAA5C,kBA/BJ,4CAqCI,GAFA,IAA6BA,KAAKmkB,YAAY0E,iBAAiB/jB,OAAlC,KAAmDmW,OAAnD,MAG3B,OAAO,EAGT,IAAM6N,EAA4BhkB,aAAmBmW,EAArD,SACM8N,EAA4BjkB,aAAmBmW,EAArD,SAIA,SAFuB6N,IAAvB,IAMOhkB,UAAgBmW,EAAvB,UAlDJ,OAAa2N,GAEJlf,oBAA8B,WAoDhC,IAAMsf,GAAW9hB,GAAjB,ICpDD+hB,G,mLAIIja,kBAAoB,YAAmC,IAE3D8G,EAIEjT,EANwD,gBAG1D4X,EAGE5X,EANwD,aAI1D+Z,EAEE/Z,EANwD,YAK1Dia,EACEja,EANwD,YAQtDqmB,EAA0Blf,GAAcnH,EAA9C,UACMsmB,EAAwBnf,GAAcnH,EAA5C,QACMumB,EAA0Bpf,GAAcnH,EAA9C,UACMwmB,EAA0Brf,GAAcnH,EAA9C,UACMymB,EAAyBtf,GAAcnH,EAA7C,SACM0mB,EAA+Bvf,GAAcnH,EAAnD,eAEA,MAAO,CACLY,UAAW,CACTqS,gBADS,EAET2E,aAFS,EAGTmC,YAHS,EAITE,YALG,GAOL0M,OAAQ,CACN5C,gBAAiBsC,EADX,sBAENpC,kBAAmBoC,EAThB,yBAWLO,KAAM,CACJ7C,gBAAiBuC,EADb,oBAEJrC,kBAAmBqC,EAbhB,uBAeLO,OAAQ,CACN9C,gBAAiBwC,EADX,sBAENtC,kBAAmBsC,EAjBhB,yBAmBL1X,MAAO,CACL3D,WAAYub,EADP,gBAELtb,SAAUsb,EAFL,cAGLrb,WAAYqb,EAHP,gBAIL/a,WAAY+a,EAJP,gBAKLpb,MAAOob,EALF,WAMLxb,iBAAkBwb,EAzBf,uBA2BL3X,YAAa,CACX5D,WAAYwb,EADD,gBAEXvb,SAAUub,EAFC,cAGXtb,WAAYsb,EAHD,gBAIXhb,WAAYgb,EAJD,gBAKXrb,MAAOqb,EALI,iBAMXzb,iBAAkByb,EAjCf,6BAmCLI,OAAQ,CACN7T,gBAAiBuT,EADX,sBAENxlB,OAAQwlB,EArCZ,gB,EA0CMO,cAAgB,WACtB,OACE,qBADF,O,EAKMC,aAAe,YACrB,IAAML,EAAqB,QAA3B,SAEA,OAAO7nB,mBAA2B,CAChCmoB,YAAa,CAAC3oB,GAAD,OAAgB+nB,EAAhB,MAAoCM,QADjB,OAEhCO,YAAab,EAFmB,OAGhClX,WAAYkX,EAHoB,MAIhCjX,iBAAkBiX,EAJpB,e,EAQMc,aAAe,YACrB,IAAMN,EAAqB,QAA3B,SAEA,OAAO/nB,mBAA2B,CAChCP,MAAO,CAACA,EAAOD,GAAR,OAAuBuoB,QADhC,U,EAKMO,WAAa,YACnB,OACE,wBAAM7oB,MAAO,CAACD,GAAD,KAAb,IACG,QAFL,W,EAOM8N,wBAA0B,YAA6C,IAAD,EACjD,EADiD,MACpEua,EADoE,SAC5DE,EAD4D,SAGtER,EAA6B,CACjC9nB,MAAOA,EAD0B,OAEjCuoB,OAAQvoB,EAFyB,OAGjCsQ,MAAOtQ,EAH0B,MAIjCuQ,YAAavQ,EAJf,aAOA,MAAO,CACLooB,GAAU,eADL,GAEL,aAAgBpoB,EAFX,MAGLsoB,GAAU,eAAkBtoB,EAH9B,U,wDAO4B,IAAD,EAC4BpB,KAD5B,MACnBiG,EADmB,cACN7E,EADM,QACcmG,GADd,wDAEcvH,KAAKgP,kBAFnB,GAEnBvL,EAFmB,YAELymB,EAFK,uBAGIlqB,KAAKiP,wBAHT,cAGpBua,EAHoB,KAGZC,EAHY,KAGNC,EAHM,KAK3B,OACE,6BACE3mB,cADF,MAGE3B,MAAO,CAACqC,EAAWtC,GAAZ,UAHT,OAKGqoB,GAAUxpB,KALb,kBAOG0pB,GAAU1pB,KAPb,gBADF,O,GApHwB2B,IAAMwF,WAA5B8hB,GAEGvf,oBAA8B,OAiIvC,IAAMvI,GAASY,YAAkB,CAC/B0B,UAAW,CACT0W,SADS,SAET1P,eAH6B,iBAK/B+e,OAAQ,CACN1T,gBAN6B,eAQ/B2T,KAAM,CACJ3T,gBAT6B,eAW/B4T,OAAQ,CACN5T,gBAZJ,iBAgBaqU,GAAOjjB,GAAb,ICvLMkjB,GAAb,yIAEwC,IAAD,EACuBpqB,KADvB,MAC3B+pB,EAD2B,cACd3oB,EADc,QACP0oB,EADO,cACSviB,EADT,6CAGnC,OACE,kBAAC,IAAD,cACE,wBAAMnG,MADR,IAEE,2BACEA,MAAO,CAACA,EADV,IAHJ,SALJ,GAAgCO,IAAhC,WCvCa0oB,GAAb,WAIE,cAA0C,IAAD,QACvCrqB,KAAKmkB,YAAL,EALJ,qDASI,WACE,KAAO3D,EAAD,YAAqBA,EAA3B,QACE,MAAO,CAAE8J,UAAF,EAAmBC,QAA1B,MACF,KAAM/J,cAAoBA,EAA1B,QACE,OAAOxgB,KAAA,sBAAP,GACF,KAAMwgB,oBAAN,OAAkCA,UAChC,OAAOxgB,KAAA,uBAAP,GACF,QACE,OARJ,KATJ,+CAsBI,WAAIA,KAAKmkB,YAAY0E,iBAAiBlI,EAAMH,EAAxC,WACK,CAAE8J,UAAW9J,EAAb,UAA8B+J,QAArC,IACK,IAAIvqB,KAAKmkB,YAAY0E,iBAAiBlI,EAAMH,EAAxC,WACF,CAAE8J,UAAF,EAAmBC,QAAS/J,EAAnC,WAEOA,IA3Bb,gDAgCI,MAAO,CAAE8J,UAAF,EAAmBC,QAA1B,UAhCJ,KC6DaC,GAAb,YAME,cAA2C,IAAD,sBACxC,iCAHMC,iBAAwC,IAAI,GAAiB,EAArB,aAK9C,cAAmB,wBAAnB,IACA,eAAoB,yBAApB,IACA,eAAoB,yBAApB,IACA,iBAAsB,2BAAtB,IACA,mBAAwB,6BAAxB,IAPwC,EAN5C,4DAmBI,OAAOzqB,KAAA,kCAA2CA,KAAK8E,MAAvD,SAnBJ,qCAuBI,OAAO9E,KAAA,YAAP,UAvBJ,sCA2BI,GAAIA,KAAK8E,MAAT,SAAyB,CACvB,IAAM0b,EAA0BxgB,KAAKyqB,iBAAiBC,YAAY1qB,KAAK8E,MAAvC,MAAhC,GACA9E,KAAK8E,MAAM6W,SAAS,MA7B1B,wCAkCI,OAAO,IAlCX,4CAwCI,GAFA,IAA6B3b,KAAKmkB,YAAY0E,iBAAiB/jB,OAAlC,KAAmDmW,OAAnD,MAG3B,OAAO,EAGT,IAAM6N,EAA4BhkB,aAAmBmW,EAArD,SACM8N,EAA4BjkB,aAAmBmW,EAArD,SACM0P,EAAwB7lB,UAAgBmW,EAA9C,MACM2P,EAAkC9lB,mBAAyBmW,EAAjE,eACM4P,EAAgC/lB,kBAAwBmW,EAA9D,cASA,SANE6N,YADF,IAWOhkB,UAAgBmW,EAAvB,UA7DJ,OAAauP,GAEJ9gB,oBAA8B,WA+DhC,IAAMohB,GAAgB5jB,GAAtB,ICrHM6jB,GAAb,yIAGI,OACE,iCAAS/qB,KAAT,OAAqBge,QAArB,cACE,wBAAGC,YAAH,WACE,wBAAGA,YAAH,aACE,2BAAMra,MAAN,KAAiBC,OAAjB,KAA6Bqa,QAD/B,MAEE,2BACEC,EANV,uIAHJ,GAA+Bxc,IAA/B,WCAaqpB,GAAb,yIAGI,OACE,iCAAShrB,KAAT,OAAqBge,QAArB,cACE,wBAAGC,YAAH,WACE,wBAAGA,YAAH,SACE,2BACEra,MADF,KAEEC,OAFF,KAGEkD,UAHF,oBAIEmX,QALJ,MAOE,2BAAMC,EAVd,oDAHJ,GAA2Bxc,IAA3B,WCiFMspB,G,mLAII5b,kBAA+C5D,mB,EAIhDC,aAAe,WACpB,iBAAoB,CAAC5D,GAArB,S,EAGK6D,aAAe,WACpB,sB,EAGKC,QAAU,WACf,iBAAoB,CAAC9D,GAArB,W,EAGK+D,OAAS,WACd,sB,EAGM/I,QAAU,WAChB,qBAEI,QAAJ,UACE,kBAAqB,QAArB,a,EAIIqP,UAAY,YAClB,iBAAoB,CAACrK,GAArB,SAEI,QAAJ,WACE,sB,EAIIsK,WAAa,YACnB,qBAEI,QAAJ,YACE,uB,EAIIpD,kBAAoB,YAAmC,IAE3D9C,EAeErJ,EAjBwD,qBAG1DsJ,EAcEtJ,EAjBwD,eAI1DuJ,EAaEvJ,EAjBwD,aAK1DwJ,EAYExJ,EAjBwD,eAM1DoZ,EAWEpZ,EAjBwD,eAO1DyJ,EAUEzJ,EAjBwD,UAQ1D2J,EASE3J,EAjBwD,UAS1D4J,EAQE5J,EAjBwD,WAW1D8J,GAME9J,EAjBwD,iBAiBxDA,EAjBwD,eAY1DiN,EAKEjN,EAjBwD,aAa1DqoB,EAIEroB,EAjBwD,cAc1DsoB,EAGEtoB,EAjBwD,oBAe1DuoB,EAEEvoB,EAjBwD,uBAmB5D,MAAO,CACLY,UADK,GAEL4nB,mBAFK,GAGLC,gBAtB0D,wPAuB1Dzd,KAAM,CACJC,iBADI,EAEJC,WAFI,EAGJC,SAHI,EAIJC,WAJI,EAKJM,WALI,EAMJL,MAVG,GAYLE,KAAM,CACJxK,MADI,EAEJC,OAFI,EAGJ2a,KAHI,EAIJ+M,OAJI,EAKJC,YAjBG,GAmBLC,UAAW,CACT7nB,MADS,EAETC,OAFS,EAGT4W,aAHS,EAIT3E,gBAvBJ,K,EA4BM4V,oBAAsB,YAA0C,IAIhExvB,EAAgB,GAHJ6F,aADmD,SAMrE,MAAO,CACLoX,KADK,EAELC,IAFK,EAGLuS,MAHK,EAILC,OAJF,I,EAQMC,kBAAoB,YAAoC,IAAD,EACjC,EADiC,MACrDhe,EADqD,OAC/CiB,EAD+C,YAG7D,OACE,sBAAM1N,MAAO,CAACA,EAAOD,GAAR,KAAb,IADF,I,EAKM2qB,kBAAoB,YAC1B,IAAMC,EAAyD,yBAA/D,GACA,OACE,oBADF,I,EAKM9c,wBAA0B,YAA6C,IACrEpB,EAAS,EAD2D,WAG5E,MAAO,CACL,oBAAuBzM,EADlB,MAELkK,OAAuB,oBAAuBlK,EAFhD,Q,wDAM0D,IAAD,EACOpB,KADP,MACjDiG,EADiD,cACpC7E,EADoC,QAC7Bwf,EAD6B,WACV3d,GADU,2DASrDjD,KAAKgP,kBATgD,GAIvDvL,EAJuD,YAKvD4nB,EALuD,qBAMvDI,EANuD,YAOvDH,EAPuD,kBAQpDvc,EARoD,wEAWnDid,EAA6C,CAACV,EAAiBnqB,GAArE,iBACM8qB,EAAwBjsB,KAAK0rB,oBAAnC,GAZyD,EActB1rB,KAAKiP,wBAdiB,cAclDL,EAdkD,KAcrC2N,EAdqC,KAgBzD,OACE,6BACExZ,cADF,KAGM/C,KAAKqP,kBAHX,eAIEjO,MAAO,CAACqC,EAAWtC,GAAZ,UAA8BmO,GAA9B,UAJT,GAKEsR,SALF,EAMEsL,QANF,EAOEppB,QAAS9C,KAPX,QAQEmS,UAAWnS,KARb,UASEoS,WAAYpS,KATd,aAUE,wBAAMoB,MAAO,CAACiqB,EAAoBlqB,GAAlC,qBACE,wBAAMC,MAAO,CAACqqB,EAAWtqB,GAD3B,aAEE,wBAAMC,MAAN,GAZJ,IADF,O,GArJ4BO,IAAMwF,WAAhC8jB,GAEGvhB,oBAA8B,WA0KvC,IAAMvI,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETF,WAH6B,UAK/B6gB,mBAAoB,CAClB5gB,eADkB,SAElBD,WAP6B,UAS/B8gB,gBAAiB,CACf7gB,eADe,SAEfD,WAX6B,UAa/BihB,UAAW,CACT9nB,SAd6B,YAgB/ByK,KAhB+B,GAiB/BP,KAjBF,KAoBMyB,GAAYO,iBAAyB9N,YAAkB,CAC3D0B,UAAW,CAETqM,aAHJ,KAOaqc,GAAWjlB,GAAjB,ICpPeklB,GAAtB,yLAOwB,CACpB5oB,SARJ,uBAmB8B,YAAkC,IAE1D4I,EAUEhL,EAZuD,aAGzD6a,EASE7a,EAZuD,eAIzDiL,EAQEjL,EAZuD,eAKzD+K,EAOE/K,EAZuD,eAMzDkL,EAMElL,EAZuD,UAOzDoL,EAKEpL,EAZuD,UAQzDqL,EAIErL,EAZuD,WASzDuL,EAGEvL,EAZuD,cAUzDirB,EAEEjrB,EAZuD,aAc3D,MAAO,CACLkrB,QAfyD,+IAgBzDle,KAAM,CACJxK,MADI,EAEJC,OAFI,EAGJwK,UALG,GAOLR,KAAM,CACJG,SADI,EAEJO,WAFI,EAGJN,WAHI,EAIJC,MAJI,EAKJH,WAZG,GAcLkM,QAAS,CACPrW,MAfJ,KAjCJ,UAqDoB,YAChB,kBAEI,QAAJ,SACE,oBAzDN,YA6DsB,YAClB,iBAAoB,CAACkE,GAArB,SAEI,QAAJ,WACE,sBAjEN,aAqEuB,YACnB,qBAEI,QAAJ,YACE,uBAzEN,gBA6E0B,WACtB,IAAMtE,GAAoB,QAA1B,QACA,WAAc,CAAEA,QAAhB,GAA2B,EAA3B,iBA/EJ,iBAkF2B,WACnB,QAAJ,QACE,iBAAoB,CAACsE,GAArB,SAEA,sBAtFN,oBA0F8B,YAC1B,IAAM8G,EAA8C,aAApD,GAEA,OAAOjN,mBAAgC,CACrCP,MAAO,CAACA,EAAOwN,QADjB,UA7FJ,oBAkG8B,YAC1B,OACE,sBACExN,MADF,EAEEmrB,cAFF,EAGEC,cAHF,QAIG,EALL,sBAnGJ,wBA6GkC,YAC9B,MAAO,CACL,cAAmB,oBAAuBprB,EADrC,MAEL,oBAAuBA,EAFzB,QA9GJ,uBAoHiC,YAAkE,IAAD,EAC1C,EAD0C,MACzEqrB,GADyE,8BACxDllB,EADwD,wCAE3D,wBAF2D,cAEvFqH,EAFuF,KAE1E2N,EAF0E,KAI9F,OACE,kCAEExZ,cAFF,EAGE3B,MAAO,CAACD,GAAD,QAAiBC,EAAjB,QAHT,GAIE0B,QAAS,EAJX,QAKEqP,UAAW,EALb,UAMEC,WAAY,EANd,eADF,IAxHJ,0BAsIoC,YAChC,MAAO,CACL,EADK,iBAEL,uBAFF,KAvIJ,qEAgBI,OAAOpS,KAAA,2BAlBX,gBAEA,+BA6IkD,IAAD,EACdA,KADc,MACrCiG,EADqC,cACxB7E,EADwB,UAEKpB,KAAKgP,kBAFV,GAErCiL,EAFqC,UAEzBlL,EAFyB,qBAIH/O,KAAKiP,wBAJF,cAItCyd,EAJsC,KAIrBC,EAJqB,KAM7C,OACE,wBAAMvrB,MAAN,GACE,sBACEA,MAAO,CAAC6Y,EAAS9Y,GADnB,SAEEoW,UAAWtD,GAFb,aAGEzQ,QAASxD,KAAKpC,MAHhB,QAIEgY,QAJF,EAKEhT,gBAAiB5C,KALnB,eAFJ,QAnJJ,GAAmE2B,IAAnE,WAAsByqB,GAEb7oB,aAA6C,CAClD4gB,YAAa,IADqC,GAElDhW,YAFkD,cAgKtD,IAAMhN,GAASY,YAAkB,CAC/BuqB,QAAS,CACP5hB,cADO,MAEPF,WAFO,SAGPC,eAJ6B,iBAM/BwP,QAAS,CACP2C,YAPJ,KC3HagQ,GAAb,oJAwBI,OAAI5sB,KAAK8E,MAAT,KACS9E,KAAA,mBAAwBA,KAAK8E,MAApC,MAEO9E,KAAA,MAAP,cA3BN,uCAgCI,OAEE,qBAAcA,KAFhB,iBAhCJ,oCAKI,MAAO,CACL6sB,IAAK7sB,KAAK8E,MADL,IAELgoB,IAAK9sB,KAAK8E,MAFL,IAGL6b,KAAM3gB,KAAK8E,MAHN,KAILqf,YAAankB,KAAK8E,MAJb,YAKL4jB,cAAe1oB,KAAK8E,MALf,cAML6jB,UAAW3oB,KAAK8E,MANX,UAOLioB,OAAQ/sB,KAAK8E,MAPR,OAQL4M,MAAO1R,KAAK8E,MARP,MASL6W,SAAU3b,KAAK8E,MATV,SAULkoB,UAAWhtB,KAAK8E,MAVX,UAWLmoB,WAAYjtB,KAAK8E,MAXZ,WAYLklB,aAAchqB,KAAK8E,MAZrB,kBALJ,OAAa8nB,GAEJljB,oBAA8B,aAqChC,IAAMwjB,GAAahmB,GAAnB,ICxDMimB,GAAb,oJAuByC,IAAD,EACLntB,KAAK8E,MADA,MAC5BwlB,EAD4B,YACjBC,EADiB,UAGpC,OAAID,GAAJ,GACwBA,EAAYtqB,KAAKotB,mBAAR,GAA/B,IAGA,OAFoB7C,EAAUvqB,KAAKotB,mBAAR,GAA3B,IAIOptB,KAAA,MAAP,cAhCN,uCAqCI,OAEE,qBAAmBA,KAFrB,iBArCJ,oCAKI,MAAO,CACL6sB,IAAK7sB,KAAK8E,MADL,IAELgoB,IAAK9sB,KAAK8E,MAFL,IAGL0b,MAAOxgB,KAAK8E,MAHP,MAILqf,YAAankB,KAAK8E,MAJb,YAKL4jB,cAAe1oB,KAAK8E,MALf,cAML6jB,UAAW3oB,KAAK8E,MANX,UAOLioB,OAAQ/sB,KAAK8E,MAPR,OAQL4M,MAAO1R,KAAK8E,MARP,MASL6W,SAAU3b,KAAK8E,MATV,SAULkoB,UAAWhtB,KAAK8E,MAVX,UAWLmoB,WAAYjtB,KAAK8E,MAXZ,WAYLklB,aAAchqB,KAAK8E,MAZrB,kBALJ,OAAaqoB,GAEJzjB,oBAA8B,aA0ChC,IAAM2jB,GAAkBnmB,GAAxB,I,+NC5CDomB,O,mLAIIje,kBAA+C5D,mB,EAEhDC,aAAe,WACpB,iBAAoB,CAAC5D,GAArB,S,EAGK6D,aAAe,WACpB,sB,EAGKC,QAAU,WACf,iBAAoB,CAAC9D,GAArB,W,EAGK+D,OAAS,WACd,sB,EAGM/I,QAAU,YACZ,QAAJ,SACE,gBAAmB,QAAnB,c,EAIIqP,UAAY,YAClB,iBAAoB,CAACrK,GAArB,SAEI,QAAJ,WACE,kBAAqB,QAArB,c,EAIIsK,WAAa,YACnB,qBAEI,QAAJ,YACE,mBAAsB,QAAtB,c,EAIIC,YAAc,YAChB,QAAJ,aACE,oBAAuB,QAAvB,c,EAIIkb,mBAAqB,YAAkC,IACrDzG,EAAwD1lB,EADJ,kBACjCwlB,EAAqCxlB,EADJ,gBAChB0U,EAAoB1U,EADJ,gBAGtDkoB,EAAyBtf,GAAc5I,EAA7C,SACMosB,EAA6BxjB,GAAc5I,EAAjD,aACMqsB,EAAwBzjB,GAAc5I,EAA5C,QAEA,MAAO,CACLqC,UAAW,CACTqjB,kBADS,EAETF,gBAFS,EAGT9Q,gBAJG,GAMLpE,MAAO,CACL5D,iBAAkBwb,EADb,sBAELvb,WAAYub,EAFP,gBAGLtb,SAAUsb,EAHL,cAILrb,WAAYqb,EAJP,gBAKL/a,WAAY+a,EALP,gBAMLpb,MAAOob,EAZJ,YAcLzT,UAAW,CACTjS,MAAO4pB,EADE,eAET1X,gBAAiB0X,EAhBd,0BAkBLpf,KAAM,CACJxK,MAAO6pB,EADH,UAEJ5pB,OAAQ4pB,EAFJ,WAGJ3f,iBAAkB2f,EAHd,qBAIJpf,UAAWof,EAtBf,iB,EA2BMC,WAAa,YACnB,IAAM9e,EAA2B,aAAjC,GAEA,OAAOjN,mBAAgC,CACrCP,MAAO,CAACA,EAAOwN,QADjB,U,EAKM+e,YAAc,YAAoC,IAAD,EACzB,EADyB,MAC/Cjc,EAD+C,QACxCM,EADwC,aAGvD,OACE,sBAAM5Q,MAAO,CAACA,EAAd,IADF,I,EAKMwsB,gBAAkB,YACxB,OAAO,kBAAP,I,EAGM3e,wBAA0B,YAA6C,IAAD,EACzC,EADyC,MACpEyC,EADoE,QAC7DtD,EAD6D,OACvDwD,EADuD,YAG5E,MAAO,CACLxD,GAAQ,aAAgBhN,EADnB,MAELsQ,GAAS,cAAiBtQ,EAFrB,OAGLwQ,GAAa,kBAAqBxQ,EAHpC,Q,wDAOgC,IAAD,EACcpB,KADd,MACvBiG,EADuB,cACV7E,EADU,QACAmG,EADA,iCAEiBvH,KAAKutB,mBAFtB,GAEvB9pB,EAFuB,YAEZoS,EAFY,YAEEgY,EAFF,mCAGsB7tB,KAAKiP,wBAH3B,cAGxBL,EAHwB,KAGX2N,EAHW,KAGErK,EAHF,KAK/B,OACE,6BACEnP,cADF,KAGM/C,KAAKqP,kBAHX,eAIEjO,MAAO,CAACD,GAAD,YAA8BmO,GAA9B,UAJT,GAKExM,QAAS9C,KALX,QAMEmS,UAAWnS,KANb,UAOEoS,WAAYpS,KAPd,WAQEqS,YAAarS,KARf,cASE,wBAAMoB,MAAO,CAACD,GAAD,UATf,KAUE,wBAAMC,MAAOD,GAAb,gBAVF,GADF,O,GAvH4BQ,IAAMwF,WAAhCmmB,GAEG5jB,oBAA8B,WA0IvC,IAAMvI,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETF,WAFS,SAGTC,eAJ6B,iBAM/BuU,aAAc,CACZtU,cADY,MAEZF,WAR6B,UAU/BqL,U,mWAAU,CAAD,GACJ9T,KADI,oBAEP+rB,OAZJ,MAgBMxe,GAAYO,iBAAyB9N,YAAkB,CAC3D0B,UAAW,CAETqM,aAHJ,KAOaie,GAAW7mB,GAAjB,ICnLD8mB,G,mLAIGpwB,MAAwB,CAC7BqwB,iBAD6B,EAE7BC,eAF6B,G,EAKvBC,kBAAoC,IAAIplB,KAAJ,S,EACpCqlB,cAAgC,IAAIrlB,KAAJ,S,EAchCslB,sBAAwB,YAC9BtlB,YAAgB,EAAhBA,kBAAwC,CACtCG,QADFH,a,EAKMulB,YAAc,YACpBvlB,YAAgB,EAAhBA,cAAoC,CAClCG,QADkC,EAElCL,SAFFE,e,EAMMwlB,gBAAkB,WACxB,IAAMN,GAA4B,QAAlC,gBAEA,WAAc,CAAEA,gBAAhB,K,EAGMO,eAAiB,cACnB,QAAJ,UACE,uB,EAIIjB,mBAAqB,YAC3B,MAAO,CACLvO,aAAc,CACZ8H,kBAAmB1lB,EAFvB,6B,EAOMqtB,iBAAmB,YACzB,WAAc,CAAEP,eAAgB1a,OAAhC,U,EAGMkb,cAAgB,YAGtB,OAF0B,EAD6B,sBAG9Bze,EAAzB,W,EAGM0e,uBAAyB,WAAgB,IACvC5H,EAAY,EAD0B,cAI9C,OAF4B,EAFkB,uBAI9C,OAA0BA,G,EAGpB6H,sBAAwB,cAAiD,IACvE7H,EAAY,EAD0D,cAG9E,OAAQ7W,IAAUD,kBAAX,GAAP,OAAgD8W,G,EAG1C6C,cAAgB,WAAuB,IACrC7C,EAAY,EADwB,cAG5C,OAAOA,GAAWplB,mBAA4B,CAC5CtC,IAtFN,a,EA0FUwvB,wBAA0B,YAChC,IAIMC,EAA2B,CAAE/nB,UAAW,CAAC,CAAE2P,OAJvB,4BAA+B,CACvDqY,WAAY,MAD2C,GAEvDC,YAAa,CAAC,UAFhB,aAMA,OACE,kBAACjmB,GAAA,EAAD,MAAe3H,MAAf,GACE,qBAFJ,K,EAOM6tB,eAAiB,gBAIvB,IAAMC,EAAiCC,EAAa,EAAH,gBAA0B,EAA3E,eACMC,EAAwBD,EAAa,EAAH,wBAAxC,KAEA,OACE,gCAEE9vB,IAFF,EAGEuS,UAHF,EAIE9O,QALJ,M,EAUMusB,wBAA0B,YAChC,OACE,sBAAgBtW,UAAW,EAA3B,kBACE,wBACE/V,cADF,OAEE5B,MAAOD,GAFT,eAFJ,K,EAWMmuB,eAAiB,WAA4B,IAAD,EACX,EADW,MAC1Crf,EAD0C,OACpChK,EADoC,wBAGlD,OAAOgK,gBAAkB,cAAuC,IACtD+O,EAAiB,qBADoC,gBAEvDuQ,EAAsB,gBAA5B,GAEMrrB,EAA2BvC,iBAAmB,sBAAnBA,GAA2D,CAC1FP,MAD0F,EAE1Fsa,SAFF,IAIM8T,EAAiC,6BACrC,EADqC,gBAAvC,KAGA,OACE,kBAAC,IAAD,UAAgBnwB,IAAhB,KADF,O,EASI4P,wBAA0B,WAA6B,IACrDgB,EAAS,EAD2C,WAG5D,MAAO,CACL,sBAjKN,aAkKM,EAFK,iBAGL,2BAAgC,EAAhC,gBAHF,O,kEAjJwBwf,EAAyBC,GAC7CA,oBAA8B1vB,KAAKpC,MAAvC,kBACMoC,KAAKpC,MAAT,iBACEoC,KAAKquB,sBAAsBruB,KAAKpC,MAAhC,gBACAoC,KAAKsuB,aAAL,OAEAtuB,KAAKquB,sBAAsB,GAC3BruB,KAAKsuB,YAAY,O,+BAiJe,IAC5BL,EAAoBjuB,KADO,wBAEGA,KAFH,qCAE5B2vB,EAF4B,KAElBC,EAFkB,KAER7I,EAFQ,KAG7B8I,EAAoC7vB,KAAKqvB,wBAA/C,GAEMP,EAA2B,CAAEjrB,OAAQ7D,KAA3C,mBAEA,OACE,kBAAC,IAAD,kBAGE,kBAAC+I,GAAA,EAAD,MAAe3H,MAAf,GACG6sB,GAJL,GADF,O,GA3K2BtsB,IAAMwF,WAA/B6mB,GAEGtkB,oBAA8B,UAsLvC,IAAMvI,GAASY,YAAkB,CAC/B+tB,cAAe,CACb5R,QADa,EAEbva,SAHJ,cAOaosB,GAAU7oB,GAAhB,ICzOM8oB,GAAb,sFASI,IAAIC,EAAJ,EACA,OAAOxW,OAAS,YAWd,OAVKxJ,EAAD,UAAJ,IAAsBA,kBAIpBA,WAAgBA,gBAAkB,YAGhC,OAFAigB,cACAD,KACOC,MANTjgB,cACAggB,MAQF,SArBN,KCyDME,G,mLAIIC,QAAuB,IAAI,G,EAE3BzU,SAAW,cACb,QAAJ,UACE,uB,EAII0U,gBAAkB,WAGxB,oBAFuB,EADgB,kB,EAMjCC,iBAAmB,YACzB,OAAOrgB,YAAP,IAAwBA,mB,EAGlBye,cAAgB,YAGtB,OAF0B,EAD6B,sBAG9Bze,EAAzB,W,EAGMgf,eAAiB,YAA+D,IAC9EzT,EAAkB,EAD2D,oBAE/E+T,EAAsB,gBAAmBvoB,EAA/C,MAEA,OAAO,mBAAsBA,EAAtB,MACL,sBACEiJ,KAAMjJ,EADR,KAEEwU,cAFF,EAGEuL,QAAS,EAHX,gBAIEpL,SAAU,EALP,WAQL,6BACM3U,EADN,MAEE0U,SAFF,EAGE5Y,QAAS,EAXb,a,EAgBM8mB,cAAgB,WACtB,OAAO,qBACL,qBADF,O,wDAKgC,IAAD,EACY5pB,KADZ,MACXyZ,GADW,qBACFlS,EADE,6BAEzB7H,EAAwBM,KAAKowB,QAAQG,WAA3C,GAEA,OACE,2BACEC,uBAAwBxwB,KAD1B,cAEEyQ,WAAYzQ,KAFd,eAGEyZ,KAHF,GADF,Q,GA1DwB9X,IAAMwF,WAA5BgpB,GAEGzmB,oBAA8B,OAmEhC,IAAM+mB,GAAOvpB,GAAb,IChCDwpB,G,mLAII7G,aAAe,WACrB,OAAO,QAAP,U,EAGMG,aAAe,WACrB,OAAO,QAAP,U,EAGM2G,WAAa,WAAoB,IAAD,EACuB,EADvB,MACP1qB,GADO,yCACSsB,EADT,iDAGtC,OACE,2BACEnG,MADF,EAEEwvB,8BAFF,EAGEjX,SAHF,GADF,K,EAUM1K,wBAA0B,WAA6B,IAAD,EACjC,EADiC,MACpDua,EADoD,SAC5CE,EAD4C,SAG5D,MAAO,CACLF,GAAU,EADL,eAEL,EAFK,aAGLE,GAAU,EAHZ,iB,wDAOoC,IAAD,EACJ1pB,KADI,qCAC5BwpB,EAD4B,KACpBqH,EADoB,KACdnH,EADc,KAGnC,OACE,kBAAC,IAAD,kBADF,O,GAtC0B/nB,IAAMwF,WAA9BupB,GAEGhnB,oBAA8B,SA8ChC,IAAMonB,GAAS5pB,GAAf,IC9GM6pB,GAAb,yIAGI,OACE,qBAAc/wB,KADhB,WAHJ,GAAwC2B,IAAxC,WCUMqvB,G,mLAII3hB,kBAA+C5D,mB,EAEhDC,aAAe,WACpB,iBAAoB,CAAC5D,GAArB,S,EAGK6D,aAAe,WACpB,sB,EAGM7I,QAAU,YACZ,QAAJ,SACE,gBAAmB,QAAnB,S,EAIIqP,UAAY,YAClB,iBAAoB,CAACrK,GAArB,SAEI,QAAJ,WACE,kBAAqB,QAArB,S,EAIIsK,WAAa,YACnB,qBAEI,QAAJ,YACE,mBAAsB,QAAtB,S,EAIIC,YAAc,YAChB,QAAJ,aACE,oBAAuB,QAAvB,S,EAII4e,uBAAyB,YAC/B,iB,EAGMjiB,kBAAoB,YAAmC,IAE3D1C,EAOEzJ,EATwD,UAG1DsJ,EAMEtJ,EATwD,eAI1DuJ,EAKEvJ,EATwD,aAK1DwJ,EAIExJ,EATwD,eAM1DoZ,EAGEpZ,EATwD,eAO1DqJ,EAEErJ,EATwD,qBAW5D,MAAO,CACLY,UAZ0D,8GAa1DoK,KAAM,CACJK,MADI,EAEJH,WAFI,EAGJC,SAHI,EAIJC,WAJI,EAKJM,WALI,EAMJT,iBARJ,K,EAaM+d,kBAAoB,YAC1B,OACE,sBAAMzqB,MAAO,CAACA,EAAOD,GAAR,KAAqB,aAAlC,YACG,aAFL,O,EAOM+vB,kBAAoB,WAAoB,IAAD,EACM,EADN,MACrCjrB,EADqC,cACxB7E,EADwB,QACRmG,GADQ,gDAEjB,oBAFiB,GAErC9D,EAFqC,YAE1BoK,EAF0B,OAGvC0O,EAA2B,oBAAjC,GAEA,OACE,6BACExZ,cADF,KAGM,oBAHN,eAIE3B,MAAO,CAACD,GAAD,YAJT,GAKE2B,QAAS,EALX,QAMEqP,UAAW,EANb,UAOEC,WAAY,EAPd,WAQEC,YAAa,EARf,cADF,I,EAeM8e,sBAAwB,WAAoB,IAAD,EACqC,EADrC,MACzC/vB,EADyC,QAClC6E,EADkC,cACrByV,EADqB,WACXkF,EADW,WACDwQ,EADC,gBACcnhB,EADd,OACuB1I,EADvB,8EAErB,oBAFqB,GAEzC9D,EAFyC,YAE9BoK,EAF8B,OAIjD,OACE,iCAEM,oBAFN,eAGEzM,MAAO,CAACD,GAAD,YAA8BmO,GAA9B,UAHT,KAIE,sBACEzB,KAAMoC,EADR,KAEEnB,UAAW,CAACjB,EAAMoC,EAAP,UAAuB9O,GAFpC,iBAGEyf,SAHF,EAIEyQ,QAJF,EAKED,cALF,EAMEE,SAAU,EAXhB,2B,wDAkBA,OAAOtxB,KAAA,YAAmBA,KAAnB,wBAAkDA,KAAzD,wB,GAxHgC2B,IAAMwF,WAApC6pB,GAEGtnB,oBAA8B,eA0HvC,IAAMvI,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETF,WAH6B,UAK/B4D,KAL+B,GAM/BP,KAN+B,GAO/B0jB,gBAAiB,CACf3tB,MARJ,UAYM0L,GAAYO,iBAAyB9N,YAAkB,CAC3D0B,UAAW,CAETqM,aAHJ,KAOa0hB,GAAetqB,GAArB,I,qkBC9JDuqB,O,mLAIIziB,kBAAoB,YAAmC,IAE3D0iB,EAEE7uB,EAJwD,sBAM5D,MAAO,CACLY,UAP0D,iCAQ1DwM,KAAM,CACJ6W,kBAHJ,K,EAQM6K,kBAAoB,YAC1B,IAAMC,EAAwBC,QACtB,uBAAmB5hB,KACrB6hB,EAAyBD,SACtB,uBAAmB5hB,KAE5B,WACE,KAAM2hB,IAAN,EACE,MAAO,CAAElW,UAAF,EAAkB0V,eAAzB,GACF,OACE,MAAO,CAAE1V,UAAF,EAAmB0V,eAA1B,GACF,KAAKU,EACH,MAAO,CAAEpW,UAAF,EAAkB0V,eAN7B,K,EAUMW,cAAgB,cAAmE,IAAD,EACnC,EADmC,MAC1EthB,GAD0E,qBAC9DuhB,EAD8D,WACjDzqB,EADiD,wCAElF0qB,EAAwD,CAC5DhiB,KAD4D,EAE5DC,MAF4D,EAG5DgiB,WAHF,MAKMxW,EAAoBsW,aAA1B,GAEA,OAAOvhB,EAAaA,EAAH,GACf,gCAEEiL,SAFF,EAGEzL,KAJJ,M,EASMkiB,uBAAyB,WAA8B,IAAD,EAC9B,EAD8B,MACpDliB,EADoD,OAC9ChK,EAD8C,cAE9CkK,EAAc,oBAFgC,QAI5D,OAAOF,aACA,cACH,IAAM/L,EAA+B,kBAArC,GAEA,OAAOvC,4BAELP,MAAO,CAAC8C,QAAD,MAFFvC,GAGLtC,IAHF,S,EAQE+yB,6BAA+B,YAAmE,IAAD,EACxE,EADwE,MAC/FniB,EAD+F,OACtF1I,EADsF,gBAEjGsqB,EAAyCQ,OACxC,mBAAkCC,QAAlC,YACDC,EAA6B,oBAAnC,GAEA,OACE,kCAGEtiB,KAJJ,M,EASMuiB,yBAA2B,WACjC,OACE,sBACEviB,KAAM,QADR,KAEE2Q,UAHJ,K,EAQM6R,kBAAoB,YAC1B,OAAO,cAAmB,+BAAnB,GAAyE,EAAhF,4B,wDAGyC,IACjCxsB,EAAgBjG,KADgB,kBAEhCyD,EAAczD,KAAKgP,kBAFa,aAGlCqjB,EAA0CryB,KAAhD,yBACM0yB,EAAmC1yB,KAAKyyB,kBAA9C,GAEA,OACE,wBAAMrxB,MAAN,KADF,O,GAtGqCO,IAAMwF,WAAzCsqB,GAEG/nB,oBAA8B,oBA6GhC,IAAMipB,GAAoBzrB,GAA1B,ICjHM0rB,GAAb,4LAEqB,cACjB,uBAHJ,WAMqB,YACjB,OAAO3iB,SAAP,IAAqBA,gBAPzB,kBAU4B,YAA2E,IAAD,EACpD,EADoD,MAC1FQ,EAD0F,aAC9EoiB,EAD8E,cACjEb,EADiE,WAGlG,OACE,gCAEEA,SAFF,EAGEc,MAHF,EAIEriB,WAJF,EAKE3N,QAAS,EANb,aAbJ,mBAwB6B,YACzB,OACE,gCAEE8d,SAAU5Z,OAFZ,SAGE0U,SAAU,4BAA+B1U,EAH3C,MAIE8rB,MAAO,QAJT,YAKEhwB,QAAS,EANb,aAzBJ,aAoCuB,YACnB,OAAO,WAAckE,EAAd,MAA2B,kBAA3B,GAAwD,mBAA/D,IArCJ,wDAyCI,OACE,6BACMhH,KADN,OAEEyQ,WAAYzQ,KAHhB,kBAzCJ,GAAuC2B,IAAvC,WClCsBoxB,GAAtB,WAKE,kBAA8F,IAAD,QAE3F/yB,KAAKgzB,eAAL,EACAhzB,KAAKwQ,aAAL,EACAxQ,KAAKizB,WAAWxZ,GATpB,wDAqBI,OAAKzZ,KAAL,aAGUkzB,GAAD,GAAwBlzB,KAAKwQ,aAAa0iB,KAAalzB,KAAKwQ,aAAnE,GAFO0iB,IAAP,IAtBN,2CA6BI,OAAOC,SAAP,IAAuBA,iBA7B3B,qCAgC6D,IAAD,OACxD,OAAO1Z,UACG,cACN,GAAI,oBAAJ,GAAqC,CACnC,IAAM2Z,EAAqB9iB,aAAkB,YAC3C,OAAOL,EAAP,QAEF,OAAOjR,SAAP,GAGA,OADAA,OAASsR,EAATtR,MACOA,IATb,QAjCJ,KAgDaq0B,GAAb,YAEE,aAE8C,IAAD,EAFjClf,EAEiC,uDAFgB,GACjDsF,EACiC,uCAAjCjJ,EAAiC,0DAEvC/L,cAAJ,KACE,qCAHyC,OAJ/C,yDAoBI,OARiCzE,KAAKszB,kBAAtC,GAGEtzB,KAAKuzB,2BAA2BJ,GAEhCnzB,KAAKwzB,oBAAoBL,GAGpBnzB,KAAP,iBApBJ,6CAuB+D,IAAD,OACtBA,KAAKgzB,eAAL,MAC5B,YACJ,OAAO,mBAAP,MAGFhzB,KAAKyzB,aAAaN,GAElBnzB,KAAKgzB,eAAeU,KAAKP,KA/B/B,oDAmCsE,IAAD,OASjE,GARwCnzB,KAAKgzB,eAAL,MAChC,YACJ,OAAOG,cACC,YACJ,OAAOb,IAAP,QAKNa,iBAAqB,mBAA+B,eAA/B,UAChB,CACL,IAAMQ,EAAmCR,gBAC/B,YACN,OAAQljB,EAAR,YAEJjQ,KAAKgzB,eAAiBhzB,KAAKgzB,eAAe9yB,OAA1C,MAnDN,wCAwDI,OAAIF,KAAJ,wBACSA,KAAA,oBACA,YACH,OAAOiQ,GAAQA,EAAf,QAFG,KAAP,MAMO9B,IA/Db,oCAmEsD,IAAD,OACjD,OAAOnO,KAAA,qBACC,YACJ,OAAO,mBAAP,QAtER,8CA2EI,OAAOA,KAAA,gBAAP,IAA8BA,KAAKgzB,eAAejZ,SA3EtD,sCA8EwD,IAAD,OAC7C7J,EAAgBlQ,KAAKgzB,eAAL,WACT,YACT,OAAO,mBAAP,OAEJ,IAAI9iB,GACFlQ,KAAKgzB,eAAeY,OAAO1jB,EAAM,KApFvC,oCAwFwD,IAAD,OAOnD,IANyClQ,KAAK6zB,YAAYpa,GAAMqa,MAAK,YACnE,OAAO,uBAAyB,YAC9B,OAAOpY,SAAP,SAIJ,IAAgC1b,KAAKgzB,eAAejZ,OAAc,CAGhE,MAAMga,MAFkB,2FAhG9B,OAuGaC,GAAb,YAEE,kBAE8C,IAAD,qBAEtCvvB,cAAL,KACE,qCAHyC,OAJ/C,yDAkBI,OANAzE,KAAKgzB,eAAL,EAEA,GACEiB,IAGKj0B,KAAP,iBAlBJ,wCAsBI,OAAIA,KAAJ,eACSA,KAAA,eAAP,KAEOmO,IAzBb,oCA6BsD,IAAD,OACjD,OAAInO,KAAKszB,kBAAT,GACSrjB,cAAgB,YACrB,OAAO,aAAP,MAGKjQ,KAAA,iBAA0BA,KAAjC,kBAnCN,oCAuCwD,IAAD,OAOnD,IANyCA,KAAK6zB,YAAYpa,GAAMqa,MAAK,YACnE,GAAI,EAAJ,eACE,OAAO7jB,IAAS,iBAAhB,SAI4BjQ,KAAhC,eAAqD,CACnD,IAAMyF,EAAe,WAAezF,KAAKgzB,eAApB,KAArB,sCACA,MAAMe,MAAN,QAhDN,OCKMG,G,YAiBJ,cAAiC,IAAD,eAC9B,iCAVKt2B,MAAe,CACpB4F,SADoB,GASU,EALxB6L,kBAA+C5D,mBAKvB,EAFxB2iB,cAAgC,IAAIrlB,KAAJ,SAER,eASV,WACf,QAAL,SACE,iBAAoB,CAACjB,GAArB,SAX4B,eAeV,WACf,QAAL,SACE,sBAjB4B,UAqBf,WACf,iBAAoB,CAACA,GAArB,WAtB8B,SAyBhB,WACd,sBA1B8B,UA6Bd,YAChB,kBAEI,QAAJ,SACE,oBAjC4B,YAqCZ,YAClB,iBAAoB,CAACA,GAArB,SAEI,QAAJ,WACE,sBAzC4B,aA6CX,YACnB,qBAEI,QAAJ,YACE,uBAjD4B,WAqDb,cACjB,GAAI,QAAJ,SAAyB,CACvB,IAAMqsB,EAA0B,6BAAsC,EAAtE,eACA,sBAEA,kBA1D4B,gBA8DR,WACtB,IAAM3wB,GAAoB,QAA1B,QACA,WAAc,CAAEA,QAAhB,GAA2B,EAA3B,sBAhE8B,sBAmEF,WAC5B,mBACA,wBArE8B,iBAwEP,WACvB,IAAM4wB,EAA8B,gBAAqB,CAACtsB,GAAtB,QAApC,GACA,qBA1E8B,qBA6EH,WAC3B,IAAMusB,EAAc,qBAApB,EACA,kBA/E8B,cAkFV,YACpBtrB,YAAgB,EAAhBA,cAAoC,CAClCG,QADkC,EAElCL,SAFFE,eAnF8B,oBAyFJ,YAAmC,IAE3D+M,EAOEjT,EATwD,gBAG1Dia,EAMEja,EATwD,YAI1D+Z,EAKE/Z,EATwD,YAK1DqkB,EAIErkB,EATwD,UAM1DikB,EAGEjkB,EATwD,kBAO1D+jB,EAEE/jB,EATwD,gBAQ1D4X,EACE5X,EATwD,aAWtD4qB,EAAwBzjB,GAAcnH,EAA5C,QACMyxB,EAAwBtqB,GAAcnH,EAA5C,QACM0xB,EAA+BvqB,GAAcnH,EAAnD,eACM2xB,EAA2BxqB,GAAcnH,EAA/C,WACM4xB,EAAwBzqB,GAAcnH,EAA5C,SAEA,MAAO,CACLypB,QAAS,CACPxW,gBADO,EAEPgH,YAFO,EAGPF,YAHO,EAIPsK,UAJO,EAKPJ,kBALO,EAMPF,gBANO,EAOPnM,aARG,GAULrM,KAAM,CACJvK,OAAQ4pB,EADJ,WAEJ7pB,MAAO6pB,EAFH,UAGJ3f,iBAAkB2f,EAHd,qBAIJpf,UAAWof,EAdR,eAgBL5f,KAAM,CACJC,iBAAkBwmB,EADd,qBAEJpmB,MAAOomB,EAFH,UAGJtmB,SAAUsmB,EAHN,aAIJrmB,WAAYqmB,EAJR,eAKJ/lB,WAAY+lB,EALR,eAMJvmB,WAAYumB,EAtBT,gBAwBLnmB,YAAa,CACXL,iBAAkBymB,EADP,4BAEXrmB,MAAOqmB,EAFI,iBAGXvmB,SAAUumB,EAHC,oBAIXtmB,WAAYsmB,EAJD,sBAKXhmB,WAAYgmB,EALD,sBAMXxmB,WAAYwmB,EA9BT,uBAgCLta,QAAS,CACPC,UAAWsa,EADJ,iBAEP/Z,aAAc+Z,EAFP,oBAGP1X,YAAa0X,EAHN,mBAIP5X,YAAa4X,EApCV,oBAsCLlmB,MAAO,CACLE,aAAcimB,EADT,kBAELvmB,MAAOumB,EAFF,WAGLzmB,SAAUymB,EAHL,cAILxmB,WAAYwmB,EAJP,gBAKLlmB,WAAYkmB,EALP,gBAML1mB,WAAY0mB,EA5ChB,mBA1G8B,qBA2JH,YAC3B,OACE,sBAAMrzB,MAAO,CAACA,EAAO,QAArB,aACG,QAFL,QA5J8B,2BAmKG,YACjC,IAKM0tB,EAA2B,CAAE/nB,UAAW,CAAC,CAAE2P,OALvB,4BAA+B,CACvDqY,WAAY,MAD2C,GAEvDC,YAAa,CAAC,UAFhB,aAMQ3gB,EAA2BjN,EAPyC,UAOtDszB,EAPsD,qBAS5E,OACE,kBAAC3rB,GAAA,EAAD,MAAe3H,MAAf,GACE,2BAAaod,KAAb,GAFJ,MA5K8B,oBAmLJ,YAC1B,IAAM5P,EAAc,eAAuB,QAA3C,SAEA,OAAOjN,mBAAgC,CACrCP,MAAO,CAACA,EAAOwN,QADjB,UAtL8B,oBA2LJ,cAAsE,IAAD,EAC5D,EAD4D,MACvFT,EADuF,cAC1EW,EAD0E,YAEzF5S,EAAgB,mCAAtB,GACMkF,EAAmB+M,QAAzB,EAEA,OACE,sBACE/M,MAAO,CAACA,EAAOD,GAAR,KADT,GAEEorB,cAFF,EAGEC,cAHF,QADF,IAhM8B,2BA0MG,YAAiD,IAAD,EAC5B,EAD4B,MAC1CjlB,GAD0C,sEAGjF,OACE,2BACEqpB,8BADF,MAGEvxB,IAHF,EAIE+B,MAAOD,GAJT,YAKEwY,SALF,EAMEqY,SAAU,EANZ,kBAOErW,SAAU,EARd,aA7M8B,wBA0NA,YAG9B,MAAO,CAF0B,cAAmB,oBAAuBva,EAA3E,OAGiB,2BAA8BA,EADxC,MAEL,oBAAuBA,EAAvB,KAAmCA,EAFrC,eA7N8B,uBAmOD,YAAuC,IAAD,EACf,EADe,MAC9CqrB,GAD8C,8BAC7BllB,EAD6B,wCAEhC,wBAFgC,cAE5DqH,EAF4D,KAE/C2N,EAF+C,KAInE,OACE,6BACExZ,cADF,KAGM,oBAHN,eAIE3B,MAAO,CAACD,GAAD,QAAiBC,EAAjB,QAAgCkO,GAAhC,QAJT,GAKExM,QAAS,EALX,QAMEqP,UAAW,EANb,UAOEC,WAAY,EAPd,eADF,IAvO8B,0BAsPE,YAChC,MAAO,CACL,2BAA8BhR,EADzB,aAELkK,GAAc,QAAdA,QAAmC,qBAAwBlK,EAFtD,OAGL,uBAHF,KAvP8B,MAE8B,EAF9B,MAEtByxB,EAFsB,cAETG,EAFS,iBAEOxiB,EAFP,eAEqBiJ,EAFrB,cAI9B,oBAAyBoZ,EACvB,IAAI,GAAJ,IADkC,GAElC,IAAI,GAAJ,IAFF,GAJ8B,E,sDA8PgB,IAAD,EACd7yB,KADc,MACrCiG,EADqC,cACxB7E,EADwB,UAEKpB,KAAKgP,kBAFV,GAErCiL,EAFqC,UAEzBlL,EAFyB,qBAIc/O,KAAKiP,wBAJnB,cAItC0lB,EAJsC,KAIlBzlB,EAJkB,KAIJyd,EAJI,KAM7C,OACE,wBAAMvrB,MAAN,KAEE,sBACEA,MAAO,CAAC6Y,EAAS9Y,GADnB,SAEE2Y,WAFF,EAGEtW,QAASxD,KAAKpC,MAHhB,QAIEgY,QAJF,EAKEhT,gBAAiB5C,KALnB,eAHJ,Q,GArR0B2B,IAAMwF,WAA9B+sB,GAEGxqB,oBAA8B,SAFjCwqB,GAGG3wB,aAAqC,CAC1C4K,YAD0C,gBAE1C0kB,aAF0C,GAkS9C,IAAM1xB,GAASY,YAAkB,CAC/BuqB,QAAS,CACP5hB,cADO,MAEPF,WAFO,SAGPC,eAJ6B,iBAM/BoD,KAAM,CACJ7I,KAP6B,GAS/B4vB,YAAa,CACXnlB,SAV6B,GAY/BwK,QAAS,CACPE,SAbJ,YAiBM7K,GAAYO,iBAAyB9N,YAAkB,CAC3DuqB,QAAS,CAEPxc,aAHJ,KAOa+kB,GAAS3tB,GAAf,ICldP,SAAS4tB,GAAuBj1B,GAC9B,IAEM4F,EAAkB,CAAC,sBAAD,4NAAxB,MAMA,MAAMsuB,MAAN,GAGF,iBACE,IAEMtuB,EAAkB,CAAC,YAAD,iNAAxB,MAMA,MAAMsuB,MAAN,GAeIgB,IAsFOC,GAAsB,I,yCApFvBC,MAA0C,IAAIC,I,+CAQZ,IAAC,IAAD,0BAAtBD,EAAsB,yBAAtBA,EAAsB,gBAC1CA,WAAc,YACZ,2B,yCAUsBp1B,GACnBG,KAAKi1B,MAAME,IAAhB,IACEL,MAGF90B,KAAA,gB,kCAOoBH,GACpB,OAAOG,KAAA,UAAP,K,8BASgBH,EAAcu1B,GAC9B,IAAMC,EAAyBD,EAAOp1B,KAAKs1B,eAAR,GAA+Bt1B,KAAlE,iBAEA,MAAO,CACLH,KADK,EAELu1B,KAAMC,EAFD,KAGLjnB,KAAMpO,KAAKu1B,gBAAgB11B,EAH7B,M,uCAY4Bu1B,GAC5Bp1B,KAAKi1B,MAAMO,IAAIJ,EAAf,U,qCAG0Bv1B,GAC1B,IAAMu1B,EAA4Bp1B,KAAKi1B,MAAMrwB,IAA7C,GAMA,OAJA,GACEkwB,MAGF,I,uCAIA,OAAO90B,KAAA,YAAiBA,KAAxB,e,sCAG2BH,EAAcu1B,GAAmBK,QAAqC,yDAKjG,OAJIA,IAAgBL,QAApB,IACEM,GAAuB71B,EAAMu1B,EAA7BM,MAGKN,QAAP,O,MC/DSrJ,GAAb,YAQE,cAAkC,IAAD,sBAC/B,iCAD+B,eAST,YACtB,sBAV+B,gBAaV,WACrB,oBAd+B,oBAiBL,WAC1B,OAAO,YAAP,WAhBA,YC1DG,SAA0BxjB,EAA1B,GACL,UACE,IAAI,OACF,OAAO,OAAP,GACF,IAAI,QACF,OAAO,OAAP,GACF,IAAI,QACF,OAAO,OANX,IDyDmBotB,CAAiB7wB,EAAD,UAAkBA,EAAnD,iBAF+B,EARnC,oEAcI9E,KAAKuI,UAAUqtB,YAdnB,+BA6BkD,IAAD,EACR51B,KADQ,MACrCH,EADqC,OAC/Bu1B,EAD+B,OACtB7tB,EADsB,uBAEvCsuB,EAAoCb,aAA1C,GAEA,OACE,kBAACjsB,GAAA,EAAD,KAAmB/I,KAAnB,oBACG61B,sBAFL,QAjCJ,GAA6Bl0B,IAA7B,WAAaoqB,GAEJxoB,aAAmC,CACxCgF,UADwC,QErB5C,IAAautB,GAAb,uMAMgC,cAC5B,IAAMC,EAA6Bd,aAAgB,YACjD,OAAOG,SAAP,KAGF,OAAOH,EAAMzwB,WAAb,KAXJ,gBAc0B,cACtB,IAAMywB,EAAyBxwB,mBAAiC,CAAhE,GACMuxB,EAAiC,wBAAvC,GAEAhB,qBAAmB,IAAnBA,IACAA,sBAAuCgB,EAAvChB,OAnBJ,wDAsBoC,IAAD,EACCh1B,KADD,MACvBi2B,EADuB,QAChBC,EADgB,eAI/B,OAFAl2B,KAAKm2B,cAAcF,EAAM,GAElB,SA1BX,GAAkCt0B,IAAlC,WAAam0B,GAEJvyB,aAA2C,CAChD0yB,MADgD,I,WCJvCG,GAAb,yIAIkD,IAAD,EACGp2B,KADH,MACrCoB,EADqC,QAC9B6E,EAD8B,cACdhD,EADc,+BAG7C,OACE,kCAEE7B,MAAO,CAAC6E,EAHZ,UAPJ,GAAqCtE,IAArC,WAAay0B,GAEJ1sB,oBAA8B,SAchC,IAAM2sB,GAASnvB,GAAf,IChCD8L,GAAgBJ,GAAtB,SAoCa0jB,GAAb,+LAM8B3jB,GAN9B,kCAkB6B,YAA8B,IAAD,EACX,EADW,MAC9ChQ,EAD8C,gBAC/BC,EAD+B,kBAGtD,GAAIkC,EAAJ,QAAmB,CACjB,IAAMZ,EAA8B,EAApC,cACA,KAAUF,UAA2B,CAAErB,cAAF,EAAiBC,gBAAtD,SAEA,KAAUoB,QAAkB,EAA5B,KAzBN,0BA6BoC,WAChC,IAAMuyB,EAAqB3jB,GAA3B,SAEA,MAAO,CACLwG,KAAMmd,cAA0B,cAA3B,QADA,EAELpd,MAAOod,aAAyB,cAA1B,OAFR,IAhCJ,YAsCsB,YAClB,cAAmB/iB,EAAnB,MAvCJ,kBA0C4B,WAAsC,IAAD,EACnB,EADmB,MACrDpS,EADqD,QAC9CS,EAD8C,WACjC0F,EADiC,4BAEvDivB,EAAkC,EAAxC,0BAEA,OACE,kCAEEC,OApFD,cAqFCr1B,MAAO,CAACD,GAAD,YAHT,KADF,IA9CJ,cAwDwB,WAA2B,IACvCkY,EAAkB,EADoB,oBAExCqd,EAAuC,EAA7C,kBAEA,OAAOrd,EACL,kBAAC,IAAD,cACE,wBACErW,cADF,WAEE5B,MAAO,CAACD,GAAD,SAHX,KADkB,GAApB,GA5DJ,oBAsE8B,WAC1B,IAAMu1B,EAA4B,EAAlC,kBACMC,EAAyCh1B,mBAA0B,CACvEP,MAAO,CAACs1B,QAAD,MAAoBv1B,GAD4C,aAEvE6B,cAFF,SAKA,OACE,sBAAgB+V,UAAW,EAA3B,WADF,IA7EJ,qEAUI,GAAI0W,YAAsBzvB,KAAK8E,MAA/B,QACE9E,KAAK42B,iBAAiB52B,KAAtB,YACK,GAAIyvB,WAAqBzvB,KAAK8E,MAA9B,QAA6C,CAClD,IAAMZ,EAA8BlE,KAApC,cACAgE,UAAoBhE,KAApBgE,GAA6BE,QAA7BF,aAdN,+BAqFI,OAAOhE,KAAP,wBArFJ,GAA2B2B,IAA3B,WAAa20B,GAEJ/yB,aAAoC,CACzCX,gBAAiB,yBAsFrB,IAAMzB,GAASY,YAAkB,CAC/B0B,UAAW,CACTE,SAF6B,YAI/BkzB,SAAU,CACRlzB,SADQ,WAERC,MAAOoP,QAFC,MAGRnP,OAAQmP,QAPqB,QAS/B8jB,YAAa,CACX5Y,QAVJ,KCtEM6Y,G,mLAII/nB,kBAAoB,YAAmC,IACrD2G,EAAqD9S,EADD,yBAG5D,MAAO,CACLY,UAJ0D,oCAK1DoS,UAAW,CACTC,gBAHJ,K,EAQMkhB,4BAA8B,WAAoB,IAAD,EACsB,EADtB,MACRvd,GADQ,kDACQlS,GADR,2EAGvD,OACE,gCAEEnG,MAAOD,GAFT,KAGEsY,KAHF,EAIEwd,mBAAoBxd,EAJtB,OAKEmX,8BALF,EAMEjX,SAPJ,M,wDAY+B,IAAD,EACqD3Z,KADrD,MACtBoB,EADsB,QACf6E,EADe,cACcpE,GADd,6BACuC0F,GADvC,wFAEGvH,KAAKgP,kBAFR,GAEtBvL,EAFsB,YAIxBoV,GAJwB,YAIM7Y,KAApC,+BAEA,OACE,gCAEEoB,MAAO,CAACqC,EAFV,GAGEmS,QAHF,IADF,O,GApCgCjU,IAAMwF,WAApC4vB,GAEGrtB,oBAA8B,eA6CvC,IAAMvI,GAASY,YAAkB,CAC/B8uB,KAAM,CACJphB,SAFJ,KAMaynB,GAAehwB,GAArB,IC5DMiwB,GAAb,qMAIyD1rB,eAJzD,mBAMwB,WACpB,iBAAoB,CAAC3D,GAArB,SAPJ,eAUwB,WACpB,sBAXJ,UAcmB,WACf,iBAAoB,CAACA,GAArB,WAfJ,SAkBkB,WACd,sBAnBJ,UAsBoB,WACZ,QAAJ,UACE,kBAAqB,QAArB,UAxBN,YA4BsB,YAClB,iBAAoB,CAACA,GAArB,SAEI,QAAJ,WACE,sBAhCN,aAoCuB,YACnB,qBAEI,QAAJ,YACE,uBAxCN,oBA4C8B,YAAmC,IAE3DoE,EAeErJ,EAjBwD,qBAG1DsJ,EAcEtJ,EAjBwD,eAI1DuJ,EAaEvJ,EAjBwD,aAK1DwJ,EAYExJ,EAjBwD,eAM1DoZ,EAWEpZ,EAjBwD,eAO1DyJ,EAUEzJ,EAjBwD,UAQ1D2J,EASE3J,EAjBwD,UAS1D4J,EAQE5J,EAjBwD,WAU1Du0B,EAOEv0B,EAjBwD,iBAW1D8J,EAME9J,EAjBwD,cAY1DiN,EAKEjN,EAjBwD,aAa1DqoB,EAIEroB,EAjBwD,cAc1DsoB,EAGEtoB,EAjBwD,oBAe1DuoB,EAEEvoB,EAjBwD,uBAmB5D,MAAO,CACLY,UADK,GAEL4nB,mBAFK,GAGLC,gBAtB0D,wPAuB1Dzd,KAAM,CACJC,iBADI,EAEJC,WAFI,EAGJC,SAHI,EAIJO,WAJI,EAKJN,WALI,EAMJC,MAVG,GAYLE,KAAM,CACJxK,MADI,EAEJC,OAFI,EAGJ4W,aAHI,EAIJ3E,gBAhBG,GAkBL2V,UAAW,CACT7nB,MADS,EAETC,OAFS,EAGT4W,aAHS,EAIT3E,gBAtBJ,KA/DJ,sBA0FgC,YAC5B,IAGM5Z,EAAgB,GAHO6F,aAA7B,GAGA,MAEA,MAAO,CACLoX,KADK,EAELC,IAFK,EAGLuS,MAHK,EAILC,OAJF,IAhGJ,oBAwG8B,YAAoC,IAAD,EACjC,EADiC,MACrD/d,EADqD,OAC/CiB,EAD+C,YAG7D,OACE,sBACEzP,IADF,EAEE+B,MAAO,CAACA,EAAOD,GAAR,KAFT,IADF,IA3GJ,0BAoHoC,YAA6C,IACrE0M,EAAS,EAD2D,WAG5E,MAAO,CACLvC,OAAuB,oBAAuBlK,EADhD,QAvHJ,wDA4H8D,IAAD,EACCpB,KADD,MACjDoB,EADiD,QAC1C6E,EAD0C,cAC7B2a,EAD6B,WAChB3d,EADgB,4CAUrDjD,KAAKgP,kBAVgD,GAIvDvL,EAJuD,YAKvD4nB,EALuD,qBAMvDC,EANuD,kBAOvDld,EAPuD,OAQvDqd,EARuD,YASpDtlB,EAToD,+EAYnD6lB,EAA6C,CAACV,EAAiBnqB,GAArE,iBACM8qB,EAAwBjsB,KAAK0rB,oBAAnC,GAbyD,EAenC1rB,KAAKiP,wBAf8B,GAelDsN,EAfkD,YAiBzD,OACE,6BACExZ,cADF,KAGM/C,KAAKqP,kBAHX,eAIEjO,MAAO,CAACqC,EAAWtC,GAAZ,UAA8BmO,GAA9B,UAJT,GAKEsR,SALF,EAMEsL,QANF,EAOEppB,QAAS9C,KAPX,QAQEmS,UAAWnS,KARb,UASEoS,WAAYpS,KATd,aAUE,wBAAMoB,MAAO,CAACiqB,EAAoBlqB,GAAlC,qBACE,wBAAMC,MAAO,CAACqqB,EAAWtqB,GAD3B,aAEE,wBAAMC,MAAN,GACE,wBAAMA,MAAO,CAACgN,EAAMjN,GAb1B,UADF,OA7IJ,GAAoCQ,IAApC,WAAaw1B,GAEJztB,oBAA8B,QAkKvC,IAAMvI,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETF,WAH6B,UAK/B6gB,mBAAoB,CAClB5gB,eADkB,SAElBD,WAP6B,UAS/B8gB,gBAAiB,CACf7gB,eADe,SAEfD,WAX6B,UAa/B4D,KAb+B,GAc/Bqd,UAAW,CACT9nB,SAf6B,YAiB/BkK,KAjBF,KAoBMyB,GAAYO,iBAAyB9N,YAAkB,CAC3D0B,UAAW,CAETqM,aAHJ,KAQaunB,GAAQnwB,GAAd,IChODowB,G,mLAQIC,cAAgB,YAClB,QAAJ,UACE,qB,EAIIvoB,kBAAoB,YAAmC,IACrDwoB,EAA+C30B,EADK,mBAG5D,MAAO,CACLY,UAJ0D,8BAK1DwM,KAAM,CACJiM,eAHJ,K,EAQMub,oBAAsB,cAC5B,OAAO91B,oBAA2B,cAChC,OAAOA,mBAA4B,CACjCtC,IADiC,EAEjC+B,MAAO,CAACA,EAAO8C,QAFkB,OAGjCmtB,QAAS,wBAHwB,EAIjCC,SAAU,kBAAM,gBAAN,U,wDAKgC,IAAD,EACatxB,KADb,MACrCiG,EADqC,cACxB7E,EADwB,QACjBS,EADiB,WACJoB,EADI,0CAEvC8L,EAA4B/O,KAAKgP,kBAAvC,GAEM0oB,EAAgC13B,KAAKy3B,oBAAoB51B,EAAUkN,EAAzE,MAEA,OACE,kCAEE3N,MAAO,CAAC2N,EAAD,UAA2B5N,GAA3B,UAFT,KADF,O,GA1C8BQ,IAAMwF,WAAlCmwB,GAEG5tB,oBAA8B,aAFjC4tB,GAIG/zB,aAAyC,CAC9CiY,eAD8C,GAgDlD,IAAMra,GAASY,YAAkB,CAC/B0B,UADF,KAIak0B,GAAazwB,GAAnB,I,qkBCzFP,IAKM0wB,GAAmChvB,oBAAzC,GAEMivB,YAAiC,GACrC,OAA0B,IAAoBD,GAA9C,GAAO,KAGHE,YAA+B,GACnC,OAAOC,KAAmB,IAAqBH,GAA/C,IAGI5vB,GAAyC,CAC7Ca,SAD6C,KAE7CF,OAAQC,KAFqC,OAG7CX,QAHF,GAqBa+vB,GAAb,YAUE,gBAA+D,IAAD,sBAC5D,8CAD4D,iBAuCnC,YAGzB,OAAO,UAFwB,KAA/B,KAEO,KAAP,IA1C4D,+BA6CvB,WACrC,OAAO,6BAAgC,CACrCjJ,WAAY,CAAC,EADwB,GAErCC,YAAa,CACX,aAAgBiJ,IAChB,aAAiB,SAlDuC,yBAuD7B,YAC/B,OAAO,6BAAgC,CACrClJ,WAAY,EADyB,mCAErCC,YAAa,oCAFf,MAxD4D,mCAmEnB,WACzC,OAAO,uBAAyB,cAC9B,OAAOxb,GAAS,yBAAhB,OArE0D,oCA+ElB,YAC1C,OAAO,uBAAyB,cAC9B,IAAM0kB,EAAmB,KAAa,yBAAtC,GACMC,EAA0B3zB,SAAS,EAATA,EAAhC,GAEA,OAAO,aAAgBmE,EAAvB,QApF0D,uBA6F/B,YAAyC9F,MAAsC,uDAAlB,GACpFkE,EAAS,cAAQlE,aAAR,KAAiC,CAAE6T,OAAlD,KAGA,OAAO,GAAP,MAAoB3P,UAApB,KAjG4D,aAwGzC,YACnB,OAAUlE,EAAV,OAvGA,YACA,iBAAsB,IAAIkG,KAAJ,MAAtB,GACA,kBAAuB,mBAAsB,SAA7C,UAJ4D,EAVhE,uDAOI,OAAOA,YAAgB/I,KAAhB+I,mBAAuCG,QAAvCH,GAAwD/I,KAA/D,aAPJ,sCAmBIA,KAAKo4B,eAAeC,SAAS,GAC7B,mDApBJ,6BAwBI,8CACAr4B,KAAKo4B,eAAeC,SAAS,KAzBjC,gCAgCI,IAAMC,EAAyDt4B,KAA/D,+BACMu4B,EAAwDv4B,KAAKw4B,uBAAnE,IACMC,EAAsDz4B,KAAKw4B,uBAAjE,IAEA,MAAO,CACL/0B,UAAWzD,KAAK04B,qBADX,GAELlwB,MAAOxI,KAAK04B,qBAFP,GAGLhwB,IAAK1I,KAAK04B,qBAAqBD,EAAqB,CAClD1xB,UAAW,CAAC,CAAE4xB,YAAa34B,KAAD,QAJ9B,WApCJ,OCSa44B,GAAb,6LAQwC,IAAI,GAAiB,gBAR7D,yBAsC2B,WACvB,qBAvCJ,gBA0C0B,WACtB,oBA3CJ,oBA8C8B,YAY1B,MAAO,CAAEpwB,MAXsB,CAC7B/E,UAAWZ,EADkB,UAE7Bg2B,IAAKh2B,EAFP,OAWgB6F,IANa,CAC3BjF,UAAWZ,EADgB,UAE3Bg2B,IAAKh2B,EAFsB,IAG3BsX,SAAU,CAAEf,IAAK,uBAHnB,MApDJ,mBA6D6B,cACzB,IAAM0f,EAAgB,IAAI,GAAKhmB,EAAT,MAAqBA,SAA3C,GAEA,OACE,kBAAC/J,GAAA,EAAD,MAAe3H,MAAO,CAACA,EAAD,UAAkBD,GAAlB,SAAtB,IACE,wBAAMC,MAAO,CAACD,GAAD,WAAoBC,EAApB,SAAb,IACE,kBAAC2H,GAAA,EAAD,MAAe3H,MAAO,CAACA,EAAD,IAAtB,IACE,wBAAMA,MAAO,CAACD,GAAD,WAAb,IACE,wBAAMC,MAAO,CAAC,QAAD,YAAyB,QALhD,cAhEJ,mEAiBQpB,KAAK8E,MAAT,WACE9E,KAAKiJ,mBAlBX,4CAuBI,IAAM8vB,EAA4B/4B,KAAK8E,MAAMk0B,YAAcvJ,EAA3D,UAEIsJ,GAAoB/4B,KAAK8E,MAA7B,WACE9E,KAAKiJ,iBAGH8vB,IAAqB/4B,KAAK8E,MAA9B,WACE9E,KAAKi5B,kBA9BX,6CAmCIj5B,KAAKuI,UAAUqtB,YAnCnB,+BA8EI,IAAMsD,EAAsBl5B,KAA5B,cAD6C,EAEtBA,KAAKgP,kBAAkBhP,KAAKuI,UAFN,WAErCC,EAFqC,QAE9BE,EAF8B,MAI7C,OACE,wBAAMtH,MAAN,GACGpB,KAAKm5B,iBAAiB3wB,EADzB,GAEGxI,KAAKm5B,iBAAiBzwB,EAH3B,MAjFJ,oCAUqC,IAAD,EACN3G,aAAmB,CAAC/B,KAAK8E,MAAN,YAAyB9E,KAAK8E,MAD3C,QACxBlB,EADwB,QACjBC,EADiB,SAGhC,OAAO,SAAP,OAbJ,GAAsClC,IAAtC,eAAai3B,GAEJlvB,oBAA8B,UAF1BkvB,GAIJr1B,aAAsC,CAC3Cy1B,WAD2C,GAsF/C,IAAM73B,GAASY,YAAkB,CAC/Bq3B,SAAUr3B,KADqB,mBAE/Bs3B,WAAY,CACVlf,SAHJ,YAOamf,GAAUpyB,GAAhB,IC9CMqyB,GAAb,mMAQ2D53B,IAR3D,0BAsBwB,YAChB,QAAJ,UACE,qBAxBN,oBA4B8B,YAAmC,IAE3D+T,EAIE7S,EANwD,gBAG1D22B,EAGE32B,EANwD,sBAI1D8S,EAEE9S,EANwD,yBAQ5D,MAAO,CACLY,UAT0D,8EAU1DwM,KAFK,GAGL4F,UAAW,CACThS,OADS,EAET4W,aAFS,EAGT3E,gBANJ,KApCJ,gBA+C0B,YACtB,OAAO5F,IAAU,QAAjB,eAhDJ,mBAmD6B,cACzB,OAAOvO,mBAA4B,CACjCtC,IADiC,EAEjC+B,MAAO,CAACD,GAAD,KAAc+C,QAFY,OAGjCwX,SAAU,gBAHuB,GAIjCC,SAAU,kBAAM,cAAN,OAxDhB,oBA4D8B,YAC1B,OAAOha,mBAA2B,EAAlC,mBA7DJ,gEAWsC3B,KADsC,wBAGxEy5B,mBAbJ,wCAiBsCz5B,KADwC,wBAG1Ey5B,oBAnBJ,+BAgEkD,IAAD,EAC4Cz5B,KAD5C,MACrCiG,EADqC,cACxB7E,EADwB,QACjBma,EADiB,iBACDC,EADC,gBACc3Z,EADd,WAC2BoB,EAD3B,2EAEvC8L,EAA4B/O,KAAKgP,kBAAvC,GAEM4M,EAA4B5b,KAAK05B,kBAAvC,GAEA,OACE,4BACE,kCAEEt4B,MAAO,CAAC2N,EAAD,UAA2B5N,GAA3B,UAFT,KADF,GAME,sBACEqG,IAAKxH,KADP,gBAEEoB,MAAO,CAAC2N,EAAD,UAA2B5N,GAA3B,UAFT,GAGEka,iBAHF,EAIEI,UAAWG,EAXjB,cAtEJ,GAAqCja,IAArC,WAAa43B,GAEJ7vB,oBAA8B,SAF1B6vB,GAIJh2B,aAAqC,CAC1CiY,cAD0C,GAoF9C,IAAMra,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cAF6B,OAI/BuF,KAAM,CACJjL,KAL6B,GAO/B6Q,UAPF,KAUa8jB,GAASzyB,GAAf,I,yOCjJP,IAAa0yB,GAAb,gMAOgDj4B,IAPhD,oEAU0C,IAAIoH,KAAJ,MAAmB,EAV7D,mCAW+C8wB,iBAX/C,kCA4BuC,cAGnC,GAFkCr1B,SAAS5G,EAAT4G,OAA0BA,SAAS5G,EAAT4G,IAAqBA,SAAS5G,EAA1F,IAEsB,CACpB,IAAMk8B,EAAqB/uB,UAAyBnN,EAAzBmN,IAAoCnN,EAA/D,IACMm8B,EAA4B,sBAA2Bv1B,UAA7D,GAEA,OAAOu1B,MAA0BA,EAAoB,EAArD,gBAGF,UAtCJ,qBAyC8B,cAC1B,IAAMD,EAAqB/uB,UAAyB,EAAzBA,cAA6C,EAAxE,cACMivB,EAA6B,sBAAnC,EAEA,yBAA4Bp8B,KAA5B,IA7CJ,wBAgDiC,cAC7B,GAAI4G,SAAS5G,EAAT4G,SAA6BA,SAAS5G,EAAT4G,KAAsB,GAAM,EAA7D,aAAgF,CAC9E,IACM0L,EADqBnF,UAAyBnN,EAAzBmN,IAAoCnN,EAA/D,IACsBk8B,EAAiB,sBAAjBA,EAAgD,sBAAtE,EACA,gBAAmB,CAAE5pB,MAAF,EAAS4K,UAA5B,QACK,CACL,IAAM5K,EAAgB,QAAtB,cACA,gBAAmB,CAAEA,MAAF,EAAS4K,UAA5B,MAvDN,iBAmE0B,YACtB,iCAAyC,EAAzC,mCApEJ,WAuEqB,YACjB,eAAoBD,2BAAiC,EAArD,gBAEA,gBAAmB,CACjB3K,MAAO,QADT,iBA1EJ,uCA+EiD,YAC7C,qBAA0BnF,WAA0BnN,EAA1BmN,MAAuCnN,EAAjE,OAEI,QAAJ,gBACE,uBAA0B,EAA1B,qBAnFN,mCAuF6C,YACzC,IAAM4d,EAAwB,qBAA0B,EAAxD,aAEIA,IAAkB,QAAlBA,eAA8C,QAAlD,UACE,iBAAoBhX,WAApB,KA3FN,wBA+FkC,YAC9B,IAAMoW,EAA4Btb,eAAlC,EAEA,OAAOyJ,YAAgB,EAAhBA,cAAoC,CACzCG,QAAS6B,WAA0BzL,EAA1ByL,OAAyCzL,EADT,QAEzCqJ,OAAQC,KAFiC,OAGzCC,SAHF,KAlGJ,uBAyGiC,cAC7B,IAAMoxB,EAAmC,iCAAzC,KAEA,OACE,wBAAM74B,MAAOD,GAAb,kBADF,IA5GJ,0BAmHoC,YAChC,OAAOQ,mBAA2B,EAAlC,uBApHJ,gBAuH0B,WACtB,OAAOA,mBAAqB,QAA5B,WAxHJ,oBA2H8B,WAC1B,MAAO,CACLiC,MAAU,IAAM,EAAX,gBADA,IAILmD,UAAW,CAAC,CAAEwC,WAAY,EAJ5B,kBA5HJ,mEAcIvJ,KAAK+a,cAAcC,YAAYhb,KAA/B,wCAdJ,4CAkBI,GAAIyvB,kBAA4BzvB,KAAK8E,MAArC,cAA0D,CACxD,IAAMoL,EAAgBlQ,KAAK8E,MAA3B,cACA9E,KAAKkb,cAAc,CAAEhL,MAAF,EAAS4K,UAA5B,OApBN,6CAyBI9a,KAAK+a,cAAcI,uBAzBvB,uCA2D6E,IACjEjL,EAAmB5Q,EAD6C,MACtDuK,EADsD,iBAElEqwB,EAAal6B,KAAKm6B,gBAAxB,EACM9wB,EAAiBrJ,KAAKo6B,cAAgBlqB,MAAgBA,MAA5D,GAEAlQ,KAAKuQ,e,mWAAe,CAApB,CAAsBlH,OAAtB,SAhEJ,+BAoIkD,IAAD,EACHrJ,KADG,MACrCoB,EADqC,QAC9BS,EAD8B,WACjB0F,EADiB,4BAG7C,OACE,kBAACwB,GAAA,EAAD,gBAEEvB,IAAKxH,KAFP,aAGEoB,MAAO,CAACD,GAAD,YAA0BnB,KAHnC,qBAIE+W,SAAU/W,KAJZ,UAKMA,KAAKq6B,aALX,aAMGr6B,KAAKiP,wBAPV,QAvIJ,GAA+BtN,IAA/B,WAAai4B,GAEJr2B,aAAwC,CAC7CiY,cAD6C,EAE7C8e,oBAAqB,sBAgJzB,IAAMn5B,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cAF6B,OAI/B+G,iBAAkB,CAChBzM,KADgB,EAEhBpB,MANJ,UCtLM22B,G,8BACJC,KAAqB,G,KACrB5kB,QAA+B,IA6CpB6kB,GAAb,gMAMqD94B,IANrD,wBAO4CA,IAP5C,0BASwB,YACW,EADc,qBAG7C+4B,cAAwB,CAAExqB,MAAF,EAAS4K,UAAjC4f,KAZJ,sBAegC,YAA2B,IACtCC,EAAW,EAD0B,kBAEhDC,EAAmBj5B,mBAAqBg5B,QAA9C,UAEAA,iBAAsB,CAAEtxB,OAAQA,EAAhCsxB,KAnBJ,gBAsB0B,YAClB,QAAJ,UACE,qBAxBN,uBA4BiC,cAC7B,MAAO,CACLE,IAAKl5B,mBAA4B,CAAEtC,IAD9B,IAELuW,QAAS1R,QAFX,WA7BJ,0BAmCoC,YAChC,OAAOvC,gCAAsC,gBAA+D,IAAD,EAChF,yBADgF,GACjGk5B,EADiG,MAC5FjlB,EAD4F,UAEzG,MAAO,CACL4kB,KAAK,GAAD,WAAMx7B,EAAN,OADC,IAEL4W,QAAQ,GAAD,WAAM5W,EAAN,UAFT,OAIC,IANH,KApCJ,wDA6CkD,IAAD,EAC4CgB,KAD5C,MACrCoB,EADqC,QAC9Boa,EAD8B,gBACf3Z,EADe,WACLi5B,EADK,cACQvf,EADR,iBAC2BtY,EAD3B,6EAGnBjD,KAAKiP,wBAHc,GAGrCurB,EAHqC,OAG/B5kB,EAH+B,UAK7C,OACE,6BACExU,MAAO,CAACD,GAAD,UADT,OAGE,sBACEC,MADF,EAEEoG,IAAKxH,KAFP,UAGEwb,cAHF,EAIED,eAJF,EAKEI,SAAU3b,KALZ,aAHF,GAWE,2BACEwH,IAAKxH,KADP,iBAGEoB,MAAO,CAACD,GAAD,UAHT,GAIEqa,cAJF,EAKE8e,oBAAqBt6B,KAAK8E,MAL5B,oBAMEi2B,eAAgB/6B,KANlB,oBAOE2b,SAAU3b,KAPZ,gBAZJ,QAlDJ,GAA6B2B,IAA7B,WAAa84B,GAEJl3B,aAAsC,CAC3CiY,cAD2C,GA2E/C,IAAMra,GAASY,YAAkB,CAC/B0B,UAAW,CACT0W,SAFJ,YCxEa6gB,GAAb,qMAQyDvvB,eARzD,mBAUwB,WACpB,iBAAoB,CAAC3D,GAArB,SAXJ,eAcwB,WACpB,sBAfJ,UAkBoB,WACZ,QAAJ,UACE,kBAAqB,QAArB,WApBN,oBAwB8B,YAAmC,IAE3DkU,EAWEnZ,EAbwD,mBAG1DsJ,EAUEtJ,EAbwD,eAI1DuJ,EASEvJ,EAbwD,aAK1DoZ,EAQEpZ,EAbwD,eAM1DwJ,EAOExJ,EAbwD,eAO1DyJ,EAMEzJ,EAbwD,UAQ1D2J,EAKE3J,EAbwD,UAS1D4J,EAIE5J,EAbwD,WAU1DkZ,EAGElZ,EAbwD,mBAW1D8J,EAEE9J,EAbwD,cAe5D,MAAO,CACLY,UAhB0D,0KAiB1D2K,KAAM,CACJxK,MADI,EAEJC,OAFI,EAGJqY,eAHI,EAIJ7N,UANG,GAQLqD,MAAO,CACLwK,eADK,EAELnO,WAFK,EAGLC,SAHK,EAILO,WAJK,EAKLN,WALK,EAMLC,MAdJ,KAvCJ,qBA0D+B,YAAoC,IAAD,EAChC,EADgC,MACtDwD,EADsD,QAC/CM,EAD+C,aAG9D,OACE,sBACE3S,IADF,EAEE+B,MAAO,CAACA,EAAOD,GAAR,MAFT,IADF,IA7DJ,oBAsE8B,YAC1B,IAAMyN,EAA8C,aAApD,GAEA,OAAOjN,mBAAgC,CACrCtC,IADqC,EAErC+B,MAAO,CAACA,EAAOD,GAAR,KAAqByN,QAF9B,UAzEJ,0BA+EoC,YAA6C,IAAD,EACpD,EADoD,MACpE8C,EADoE,QAG5E,MAAO,CAHqE,QAIlE,oBAAuBtQ,EAD1B,MAELkK,OAAwB,qBAAwBlK,EAFlD,SAlFJ,wDAwF8D,IAAD,EACTpB,KADS,MACjDiG,EADiD,cACpC7E,EADoC,QAC1B6B,EAD0B,iCAEfjD,KAAKgP,kBAFU,GAEjDvL,EAFiD,YAEnC0C,EAFmC,uBAIrBnG,KAAKiP,wBAJgB,cAIlDL,EAJkD,KAIrCkD,EAJqC,KAMzD,OACE,6BACE/O,cADF,KAGM/C,KAAKqP,kBAHX,eAIEjO,MAAO,CAACqC,EAAWtC,GAAZ,UAA8BmO,GAA9B,UAJT,GAKExM,QAAS9C,KALX,YADF,OA9FJ,GAAkC2B,IAAlC,WAAaq5B,GAEJtxB,oBAA8B,MAF1BsxB,GAIJz3B,aAAkC,CACvCmY,UADuC,GAwG3C,IAAMva,GAASY,YAAkB,CAC/B0B,UAAW,CACTgH,eADS,SAETD,WAH6B,UAK/B4D,KAL+B,GAM/BsD,MANF,KASMpC,GAAYO,iBAAyB9N,YAAkB,CAC3D0B,UAAW,CAETqM,aAHJ,KAOamrB,GAAM/zB,GAAZ,I,qkBCtHP,IAAag0B,GAAb,YAWE,cAAiC,IAAD,eAC9B,iCAHM7rB,kBAA+C5D,mBAEvB,eAaV,WACf,QAAL,UACE,iBAAoB,CAAC3D,GAArB,SAf4B,eAmBV,WACf,QAAL,UACE,sBArB4B,UAyBf,WACV,QAAL,UACE,iBAAoB,CAACA,GAArB,WA3B4B,SA+BhB,WACT,QAAL,UACE,sBAjC4B,+BAuCM,WACpC,OAAO,GAxCuB,sCA2Ca,WAC3C,OAAO,GA5CuB,8BA+CK,WACnC,OAAO,GAhDuB,qCAmDY,WAC1C,OAAO,GApDuB,mCAuDU,WACxC,OAAO,GAxDuB,sBA2DH,WAAa,IAAD,EACI,EADJ,MAC/BupB,EAD+B,UACtBzQ,EADsB,WACZ3a,EADY,cAGvC,OAMA,GAFA,cAEI,EAAJ,8BAGE,OAFA,wCACA,mBAIF,wBAAuBA,cACvB,sBAAyBorB,EAAO,EAAhC,OA3E8B,qBA8EW,WACzC,OAAO,GA/EuB,wBAkFD,cAA6E,IAAD,EAC9D,EAD8D,MACjGA,EADiG,UACxFzQ,EADwF,WAC9E3a,EAD8E,cAGzG,KACQorB,GAAW8J,MAAb,GAAuC9J,GAAW8J,KAAtD,EACE,SAAY,EAAZ,SAEA,sBAAyB9J,EAAO,IAAhC,IAIJ,oBAAuBprB,EAAvB,YACA,gBA9F8B,YAiGZ,WAClB,iBAAoB,CAAC6B,GAArB,UAlG8B,aAqGX,WACnB,sBAtG8B,UAyGd,WACZ,QAAJ,UACE,kBAAqB,QAArB,UA3G4B,oBA+GJ,YAAmC,IAAD,EAC9B,EAD8B,MACpDupB,EADoD,UAC3CzQ,EAD2C,WAI1D9Q,EAoBEjN,EAxBwD,aAK1DqoB,EAmBEroB,EAxBwD,cAM1DsoB,EAkBEtoB,EAxBwD,oBAO1DuoB,EAiBEvoB,EAxBwD,uBAS1Du4B,GAeEv4B,EAxBwD,WAwBxDA,EAxBwD,aAU1Dw4B,EAcEx4B,EAxBwD,kBAW1Dy4B,EAaEz4B,EAxBwD,qBAY1DqJ,EAYErJ,EAxBwD,qBAa1DuJ,EAWEvJ,EAxBwD,aAc1DwJ,EAUExJ,EAxBwD,eAe1DoZ,EASEpZ,EAxBwD,eAgB1DsJ,EAQEtJ,EAxBwD,eAiB1DyJ,EAOEzJ,EAxBwD,UAoB1D8J,GAIE9J,EAxBwD,UAwBxDA,EAxBwD,WAwBxDA,EAxBwD,eAqB1DiT,EAGEjT,EAxBwD,gBAsB1Dia,EAEEja,EAxBwD,YAuBvD0X,EAvBuD,2UA0B5D,MAAO,CACLghB,gBADK,GAELC,iBAAiB,GAAD,CACd1e,YADc,EAEdhH,gBAFc,GAFX,GAOL2V,UAAW,CACT7nB,MADS,EAETC,OAFS,EAGT4W,aAHS,EAIT3E,gBAXG,GAaL2lB,QAAS,CACP73B,MAAO2W,QADA,EAC6BA,cACpC1W,OAAQ0W,SAFD,EAE+BA,cACtCE,cAAe5X,SAAD,EAAkBA,eAHzB,EAIPiT,gBAjBG,GAmBL4lB,MAAO,CACL33B,UAAWstB,EAAO,WADb,aAELztB,MAAO,EAFF,oBAGLC,OAHK,EAIL4W,aAJK,EAKL3E,gBALK,EAML6lB,UAAW/a,EAAQ,EANd,EAOL7Z,UAAW,CAAC,CAAEwC,WAAY,EA1BvB,2BA4BLsE,KAAM,CACJC,iBADI,EAEJE,SAFI,EAGJC,WAHI,EAIJM,WAJI,EAKJR,WALI,EAMJG,MAlCG,GAoCLE,KAAM,CACJxK,MAAOf,EADH,UAEJgB,OAAQhB,EAFJ,WAGJ2b,KAHI,EAIJ+M,OAJI,EAKJC,YAzCJ,KAzI8B,wBAuLA,YAAgByI,MAA4C,uDAArB,wBACrE,mCAEAlrB,YAAgB,EAAhBA,wBAA8C,CAC5CG,QAAS6B,aADmC,GAE5ClC,SAF4C,IAG5CF,OAAQC,KAHVG,gBAIS,WACP,mCACAkrB,QAhM4B,oBAoMJ,YAAgBA,MAA4C,uDAArB,wBACjElrB,YAAgB,EAAhBA,oBAA0C,CACxCG,QADwC,EAExCL,SAFwC,IAGxCF,OAAQC,KAHVG,mBArM8B,sBA4MF,YAAgBkrB,MAA4C,uDAArB,wBACnElrB,YAAgB,EAAhBA,sBAA4C,CAC1CG,QAD0C,EAE1CL,SAF0C,IAG1CF,OAAQC,KAHVG,mBA7M8B,iBAoNP,WACvB,IAAM7M,EAAgB,oBAAtB,EAEA,0CACA,wCACA,sCAEA,qCA3N8B,SA8Nf,WAAC+3B,MAAkD,uDAAvC,yBACrB/3B,EAAgB,oBAAtB,GAEA,2BAAkC,WAChC,sCACA+3B,GAAU,QAAVA,YAGF,oBAAuB,oBAAvB,aAtO8B,oBAyOJ,YAC1B,OACE,sBAAM7yB,MAAO,CAACA,EAAO,QAArB,YACG,QAFL,OA1O8B,0BAiPE,YAChC,MAAO,CACL,cAAmB,oBAAuBA,EAD5C,QAlP8B,IAGtBiwB,EAAyBvsB,EAHH,QAGbmB,EAAgBnB,EAHH,mBAK9B,sBAA2B,IAAIiE,KAAJ,MAAmB9C,EAA9C,YACA,0BAA+B,IAAI8C,KAAJ,MAA/B,GACA,wBAA6B,IAAIA,KAAJ,MAAmBsoB,EAAO,IAAvD,GACA,mCAEA,eAAoBwI,iBAApB,IAV8B,EAXlC,sDAkQkD,IAAD,EACS75B,KADT,MACrCiG,EADqC,cACxB7E,EADwB,QACLmG,GADK,oDAGvCwH,EAA4B/O,KAAKgP,kBAAvC,GAH6C,EAIvBhP,KAAKiP,wBAJkB,GAItCsN,EAJsC,YAM7C,OACE,+BACMvc,KAAKq6B,aADX,aAEEj5B,MAAO,CAACD,GAAD,UAFT,KAGE,6BACE4B,cADF,KAGM/C,KAAKqP,kBAHX,eAIEjO,MAAO,CAAC2N,EAAD,gBAAiCO,GAAjC,gBAA4DnO,GAJrE,mBAKE,wBAAMC,MAAO,CAAC2N,EAAD,UAA2B5N,GAL1C,aAME,kBAAC4H,GAAA,EAAD,MAAe3H,MAAO,CAAC2N,EAAD,iBAAkC5N,GAAxD,mBACE,kBAAC4H,GAAA,EAAD,MAAe3H,MAAO,CAAC2N,EAAD,QAAyB5N,GADjD,WAEE,kBAAC4H,GAAA,EAAD,MAAe3H,MAAO,CAAC2N,EAAD,MAAuB5N,GAA7C,QACE,qBAAe4N,EAZvB,SADF,OAxQJ,GAAqCpN,IAArC,WAAau5B,GAEJxxB,oBAA8B,SA6RvC,IAAMvI,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETF,WAFS,SAGTC,eAJ6B,UAM/B8wB,gBAAiB,CACf/wB,WADe,SAEfC,eAR6B,UAU/B+wB,iBAAkB,CAChB/wB,eADgB,SAEhB1G,UAFgB,SAGhBoW,SAb6B,UAe/BshB,QAAS,CACP13B,UADO,SAEPJ,SAjB6B,YAmB/B8nB,UAAW,CACT1nB,UADS,SAETJ,SArB6B,YAuB/B+3B,MAAO,CACLjxB,eADK,SAELD,WAzBJ,YA6BM8E,GAAYO,iBAAyB9N,YAAkB,CAC3Dw5B,gBAAiB,CAEfzrB,aAHJ,KAOa8rB,GAAS10B,GAAf,IC1YM20B,GAAb,qMAE8B,YAC1B,IAAMzoB,EAAuBrR,aAA7B,GAEA,MAAO,CACL0B,UAAW,CAETq4B,gBAAiB1oB,EAFR,MAIT2oB,iBAAkB3oB,EAJT,MAMT4oB,kBAAmB5oB,EANV,OAOT6oB,kBAAmB7oB,EAPV,gBAQT8oB,gBARS,cASTC,iBATS,cAUTrmB,gBAXJ,iBALJ,wDAqBkD,IAAD,EACjB9V,KADiB,MACrCoB,EADqC,QAC3B0D,EAD2B,iBAEvCiK,EAAiB/O,KAAKgP,kBAA5B,GAEA,OACE,kCAEE5N,MAAO,CAACA,EAAOD,GAAR,UAA0B4N,EAHrC,kBAzBJ,GAAsCpN,IAAtC,WAkCMR,GAASY,YAAkB,CAC/B0B,UADF,KCyCa24B,GAAb,qMAI8B,YAAwB,IAEhDzmB,EAYE9S,EAd6C,yBAG/C2J,EAWE3J,EAd6C,UAI/C4J,EAUE5J,EAd6C,WAK/C6J,EASE7J,EAd6C,qBAM/C8J,EAQE9J,EAd6C,cAO/CqJ,EAOErJ,EAd6C,qBAQ/CuJ,EAMEvJ,EAd6C,aAS/CwJ,EAKExJ,EAd6C,eAU/CoZ,EAIEpZ,EAd6C,eAW/CsJ,EAGEtJ,EAd6C,eAY/CyJ,EAEEzJ,EAd6C,UAgBjD,MAAO,CACLY,UAjB+C,yMAkB/CmS,QAFK,GAGLC,UAAW,CACTC,gBAJG,GAML1H,KAAM,CACJxK,MADI,EAEJC,OAFI,EAGJiK,iBAHI,EAIJO,UAVG,GAYLR,KAAM,CACJC,iBADI,EAEJE,SAFI,EAGJO,WAHI,EAIJN,WAJI,EAKJF,WALI,EAMJG,MAlBJ,KApBJ,oBA2C8B,YAC1B,OACE,sBACE7O,IADF,EAEE+B,MAAO,CAACA,EAAO,QAFjB,YAGG,QAJL,OA5CJ,oBAqD8B,YAC1B,IAAMwN,EAA2B,aAAjC,GAEA,OAAOjN,mBAAgC,CACrCtC,IADqC,EAErC+B,MAAO,CAACA,EAAOwN,QAFjB,UAxDJ,+BA8DyC,YACrC,MAAO,CACL,cAAmB,oBAAuBxN,EADrC,MAEL,oBAAuBA,EAFzB,QA/DJ,gCAqE0C,YAA2C,IACzEyU,EAAc,oBAAuB,QADmC,uBAEhF,OACE,sBAAkBzU,MADpB,KAvEJ,8BA4EwC,YAAsD,IAClFwU,EAA8BxU,EADmD,QACrEi7B,EADqE,mBAGnFC,EAAmC,+BAAzC,GAEA,OACE,wBAAMl7B,MAAO,CAACwU,EAASzU,GAAvB,UADF,IAjFJ,wDAwFmC,IAAD,EACqBnB,KADrB,MACtBiG,EADsB,cACT7E,EADS,QACFS,EADE,WACWiD,EADX,4CAEsB9E,KAAKgP,kBAF3B,GAEtBvL,EAFsB,YAEGsL,GAFH,8CAIxB8J,EAA8B7Y,KAAKg3B,4BAAzC,GAEA,OACE,gCAEE51B,MAAO,CAACqC,EAFV,GAGEmS,QAHF,EAIEC,UAAW7V,KAJb,gCADF,OA9FJ,GAAsC2B,IAAtC,WAAay6B,GAEJ1yB,oBAA8B,UAwGvC,IAAMvI,GAASY,YAAkB,CAC/B6T,QAAS,CACPlL,cADO,MAEPD,eAHJ,YAOa8xB,GAAUr1B,GAAhB,I,+NC9HP,IAAas1B,GAAb,+MAIwC,YACpC,iBAAInoB,EACK,CACL5Q,UAAWtC,GADN,kBAELs7B,eAAgBt7B,GAFlB,wBAMK,CACLu7B,uBAAwBv7B,GAD1B,8BAZJ,oBAiB8B,YAAmC,IAE3Dw7B,EAaE95B,EAfwD,eAG1DgO,EAYEhO,EAfwD,gBAI1DiO,EAWEjO,EAfwD,cAK1DkO,EAUElO,EAfwD,gBAM1DmO,EASEnO,EAfwD,gBAO1DoO,EAQEpO,EAfwD,WAQ1D+5B,EAOE/5B,EAfwD,kBAS1Dg6B,EAMEh6B,EAfwD,mBAU1Di6B,EAKEj6B,EAfwD,iBAW1Dk6B,EAIEl6B,EAfwD,mBAY1Dm6B,EAGEn6B,EAfwD,mBAa1Do6B,EAEEp6B,EAfwD,cAkB5D,MAAO,CACLY,UAnB0D,mOAoB1Dg5B,eAFK,GAGL/qB,MAAO,CACL9B,UADK,EAEL7B,WAFK,EAGLC,SAHK,EAILO,WAJK,EAKLN,WALK,EAMLC,MATG,GAWLgvB,SAAU,CACRttB,UADQ,EAER7B,WAFQ,EAGRC,SAHQ,EAIRE,MAJQ,EAKRD,WALQ,EAMRM,WAjBG,GAmBL4uB,qBAnBK,GAoBLT,uBApBF,KAnCJ,oBA2D8B,cAC1B,OACE,sBAAMt7B,MAAN,GADF,IA5DJ,0BA4EoC,YAA6C,IAAD,EAQxE,EARwE,MAE1EsQ,EAF0E,QAG1EwrB,EAH0E,WAI1EE,EAJ0E,cAK1EC,EAL0E,gBAM1ErrB,EAN0E,aAO1EsrB,EAP0E,gBAU5E,MAAO,CACLhyB,OAAwB,sBAA8B,CAAClK,EAAD,MAAcD,GAAd,MADjD,IAELmK,OAA2B,sBAAiC,CAAClK,EAAD,SAAiBD,GAAjB,SAFvD,IAGLi8B,GAAe,uBAHV,GAILC,GAAiB,uBAJnB,KAtFJ,uEAmEyF,IAAD,OACpF,OAAO17B,oBAA2B,cAChC,OAAOA,mBAA4B,CACjCtC,IADiC,EAEjCS,WAAY,QAFd,kBArEN,+BA8FkD,IAAD,EACWE,KADX,MACrCiG,EADqC,cACxB7E,EADwB,QACjBiT,EADiB,YACH9M,EADG,6CASzCvH,KAAKgP,kBAToC,GAI3CvL,EAJ2C,YAK3C05B,EAL2C,uBAM3CV,EAN2C,iBAO3CC,EAP2C,yBAQxCv2B,EARwC,sFAWvCo3B,EAA6Bv9B,KAAKw9B,4BAAxC,GAX6C,EAkBzCx9B,KAAKiP,wBAlBoC,cAc3C6C,EAd2C,KAe3C2rB,EAf2C,KAgB3CC,EAhB2C,KAiB3CC,EAjB2C,KAoB7C,OACE,6BACEv8B,MAAO,CAACqC,EAAWtC,GAAZ,UAA8Bo8B,EAA9B,UADT,OAGE,wBAAMn8B,MAAO,CAAC+7B,EAAsBh8B,GAApC,uBAHF,GAME,wBAAMC,MAAO,CAACq7B,EAAgBt7B,GAAjB,eAAwCo8B,EAArD,mBANF,GAUE,wBAAMn8B,MAAO,CAACs7B,EAAwBv7B,GAAzB,uBAAwDo8B,EAArE,yBAXJ,QAlHJ,GAA4C57B,IAA5C,WAAa66B,GAEJ9yB,oBAA8B,gBAmIvC,IAAMvI,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETF,WAH6B,UAK/BozB,kBAAmB,CACjBnzB,eAN6B,iBAQ/BgyB,eAR+B,GAS/BoB,uB,mWAAuB,CAAD,GACjB97B,KADiB,oBAEpB0I,eAFoB,SAGpBD,WAZ6B,WAc/BkH,MAd+B,GAe/BwrB,SAf+B,GAgB/BC,qBAAsB,CACpBzyB,cADoB,MAEpBojB,OAlB6B,GAoB/B4O,uBAAwB,CACtBhyB,cADsB,MAEtBojB,OAtB6B,GAwB/BgQ,4BAA6B,CAC3B94B,KAD2B,EAE3ByF,eA1BJ,cA8BaszB,GAAgB72B,GAAtB,I,qkBCvLD82B,O,mLAKI3uB,kBAA+C5D,mB,EAEhDC,aAAe,WACpB,iBAAoB,CAAC5D,GAArB,S,EAGK6D,aAAe,WACpB,sB,EAGKC,QAAU,WACf,iBAAoB,CAAC9D,GAArB,W,EAGK+D,OAAS,WACd,sB,EAGM/I,QAAU,YACZ,QAAJ,SACE,oB,EAIIqP,UAAY,YAClB,iBAAoB,CAACrK,GAArB,SAEI,QAAJ,WACE,sB,EAIIsK,WAAa,YACnB,qBAEI,QAAJ,YACE,uB,EAIIpD,kBAAoB,YAAmC,IAE3DrC,EAIE9J,EANwD,cAG1D2J,EAGE3J,EANwD,UAI1D4J,EAEE5J,EANwD,WAQ5D,MAAO,CACLY,UAAW,CACTqK,iBAJAjL,EANwD,sBAY1DuL,KAAK,GAAD,CACFC,UADE,EAEFzK,MAFE,EAGFC,OAHE,GAIC1C,GARP,Q,EAaMuqB,oBAAsB,YAC5B,IAGMxvB,EAAgB,GAHQ6F,aAA9B,GAGA,MAEA,MAAO,CACLoX,KADK,EAELC,IAFK,EAGLuS,MAHK,EAILC,OAJF,I,EAQME,kBAAoB,YAC1B,IAAMld,EAA2B,aAAjC,GAEA,OAAOjN,mBAAgC,CACrCP,MAAO,CAACA,EAAOwN,QADjB,U,wDAKgC,IAAD,EACyB5O,KADzB,MACvBiG,EADuB,cACV7E,EADU,QACM68B,GADN,8CAEzBlvB,EAA4B/O,KAAKgP,kBAAvC,GAEMid,EAAwBjsB,KAAK0rB,oBAAoB3c,EAAvD,MAEMH,EAA2B5O,KAAK8rB,kBAAkB/c,EAAxD,MAEA,OACE,6BACEhM,cADF,EAEEmpB,QAFF,KAIMlsB,KAAKqP,kBAJX,eAKEjO,MAAO,CAAC2N,EAAD,UAA2B5N,GAA3B,UAA6CmO,GAA7C,UALT,GAMExM,QAAS9C,KANX,QAOEmS,UAAWnS,KAPb,UAQEoS,WAAYpS,KARd,aADF,O,GAhGuC2B,IAAMwF,WAA3C62B,GAGGt0B,oBAA8B,sBA6GvC,ICrKA,GDqKMvI,GAASY,YAAkB,CAC/B0B,UAD+B,GAE/B2K,KAFF,KAKMkB,GAAYO,iBAAyB9N,YAAkB,CAC3D0B,UAAW,CAETqM,aAHJ,KAOaouB,GAAsBh3B,GAA5B,I,UE5KMi3B,GAAb,WAEE,cAA6C,IAAD,aAAxBvoB,UAFtB,sDAMI,IAAMmW,EAAsB/rB,KAA5B,QAGQqO,EAA4BvJ,EAJc,UAI5ByC,EAJ4B,qBAMlD,OACE,0BACEiX,KADF,GADF,QAXJ,KCHa4f,GAAmC,CAC9Cv+B,KAD8C,MAE9Co2B,MCAO,aAAc,CACnBrxB,IADmB,cAEjB,OAAO,OAAYy5B,0BAAnB,QCROtiC,GAAUuiC,EAAhB,KACMC,GAAQD,EAAd,KACME,GAAOF,EAAb,K,+BJAKG,K,MAAAA,U,KAAAA,O,CAAAA,Q,KAWL,IAAM38B,GAAeH,kBAAsC,CAChE5E,MAAO0hC,GADyD,MAEhEC,SAAU,cACVC,WAAY,kBAHP,KKoBMC,eAAmB,OAC9B,2BAAM/+B,KAAN,iBADK,KCLDg/B,GAAqB,CAACJ,GAAD,MAAiBA,GAA5C,MAEaK,iBACmG,IAAD,EAEvEn9B,cAFuE,cAEtGo9B,EAFsG,KAEzFC,EAFyF,KAGvGC,EAAiCt9B,eAAvC,IAEMu9B,aACJF,GADF,IAeMG,cAA2BC,MAA2C,EAA3CA,YACzBC,EAAuD,CAC3Dne,GAD2D,EAE3Drd,OAAQu7B,SAFV,QAKApsB,4BANF,MAaA,OACE,sBACE5R,MAAOD,GADT,UAEE4V,SAtBEA,YACJ,QAAIlH,SACFsvB,OAqBA,wBAAM/9B,MAAOD,GAAb,kBACE,sBACErB,WADF,OAEEw/B,SAFF,MADF,+BAME,sBACE97B,QADF,EAEEmY,SApCF4jB,YACJN,WAAsBJ,GAAtBI,IACAD,GAFF,IAqCQvlB,KAAMolB,QAjBRW,YACJ,MAAO,CAAE9tB,MADX,MAkBQ9O,gBAJF,GAKE,sBACE9C,WADF,QAEEod,OAFF,QAGEpK,KAHF,QAIE1E,KAJF,GAKEtL,QALF,GAMGm8B,EApBT,SAwBE,oBA3DC,QAgED99B,GAASY,YAAkB,CAC/B0B,UAAW,CACTg8B,QADS,GAETvY,UAH6B,KAK/BwY,iBAAkB,CAChBh1B,cADgB,MAEhBD,eAPJ,mB,UCrFMk1B,GAA0BC,cAD1BC,WAAc,OAAMC,MAA1B,yDACA,KAEaC,cAAmC,IAAD,EAEnBp+B,aAFmB,iBAEtCyE,EAFsC,KAE/B45B,EAF+B,OAGrBr+B,aAHqB,iBAGtC8X,EAHsC,KAGhCwmB,EAHgC,KAa7Ct+B,eARMu+B,WACJP,WACQ,SAAAQ,GAAQ,OAAIA,EADpBR,gBAEQ,SAAAS,GAAI,OAAIA,EAFhBT,uBADF,KAQ4B,CAA5Bh+B,IAEA,IAIM0+B,cAEJ,OAAOlsB,UAAe,SAAAlE,GAAI,OAAIA,+BAAkC7J,EAAhE,mBAGF,OACE,sBAAQhF,MAAOD,GAAf,WACE,sBACEgN,YADF,gCAEEjS,MAFF,EAGEud,KAHF,EAIE6mB,aAJF,EAKE3kB,SAhBAA,YAAcjK,MAAY,EAAZA,MAClBsuB,EADF,QAsBI7+B,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OCpCMqZ,GAAO,CACX,CAAErf,GAAF,EAASxP,MAAT,YAA6B8uB,YADlB,MAEX,CAAEtf,GAAF,EAASxP,MAAT,qBAAsC8uB,YAF3B,MAGX,CAAEtf,GAAF,EAASxP,MAAT,aAA8B8uB,YAHnB,MAIX,CAAEtf,GAAF,EAASxP,MAAT,YAA6B8uB,YAJlB,MAKX,CAAEtf,GAAF,EAASxP,MAAT,eAAgC8uB,YALlC,OAQaC,cAAwC,IAAD,EAExB9+B,aAFwB,iBAE3CzF,EAF2C,KAEpCm8B,EAFoC,OAG1B12B,aAH0B,eAG3C8X,EAH2C,KAGrCwmB,EAHqC,KA0BlD,OACE,sBAAQ7+B,MAAOD,GAAf,WACE,sBACEgN,YADF,kBAEEjS,MAFF,EAGEud,KAHF,EAIEhJ,WAlBAA,YAAa,IAAGR,EAAH,cACjB,kBAAC,IAAD,cACE,sBAAQ6C,KAAR,QAAqBjQ,OAAQy7B,EAD/B,MAEE,wBAAMl9B,MAAO,CAAE0M,iBAAf,IACE,0BAAOmC,EADT,OAEE,sBAAMnQ,WAAN,OAAwBw/B,SAAxB,SACMrvB,EANZ,gBAmBMqwB,aAxBAA,YACJjI,KACA4H,EAAQM,WAAY,SAAAtwB,GAAI,OAAIA,+BAAkC7J,EAA9D65B,oBAuBItkB,SA7BAA,YAAcjK,MAAY,EAAZA,MAClB2mB,EADF,QAmCIl3B,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OCrDMqZ,GAAO,CACX,CAAErf,GAAF,EAASxP,MAAT,YAA6B8uB,YADlB,MAEX,CAAEtf,GAAF,EAASxP,MAAT,qBAAsC8uB,YAF3B,MAGX,CAAEtf,GAAF,EAASxP,MAAT,aAA8B8uB,YAHnB,MAIX,CAAEtf,GAAF,EAASxP,MAAT,YAA6B8uB,YAJlB,MAKX,CAAEtf,GAAF,EAASxP,MAAT,eAAgC8uB,YALlC,OAQME,GAAmB,CACvB,CAAEhvB,MADJ,4BAIaivB,cAA6C,IAAD,EAE7Bh/B,aAF6B,iBAEhDzF,EAFgD,KAEzCm8B,EAFyC,OAG/B12B,aAH+B,eAGhD8X,EAHgD,KAG1CwmB,EAH0C,KAcvD,OACE,sBAAQ7+B,MAAOD,GAAf,WACE,sBACEgN,YADF,mBAEEjS,MAFF,EAGEud,KAHF,EAIEmnB,gBAJF,GAKEN,aAZAA,YACJjI,KACA4H,EAAQM,WAAY,SAAAtwB,GAAI,OAAIA,+BAAkC7J,EAA9D65B,oBAWItkB,SAjBAA,YAAcjK,MAAY,EAAZA,MAClB2mB,EADF,QAuBIl3B,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OCxCMqZ,GAAO,CACX,CAAErf,GAAF,EAASxP,MAAT,YAA6B8uB,YADlB,MAEX,CAAEtf,GAAF,EAASxP,MAAT,qBAAsC8uB,YAF3B,MAGX,CAAEtf,GAAF,EAASxP,MAAT,aAA8B8uB,YAHnB,MAIX,CAAEtf,GAAF,EAASxP,MAAT,YAA6B8uB,YAJlB,MAKX,CAAEtf,GAAF,EAASxP,MAAT,eAAgC8uB,YALlC,OAQaK,cAAyC,IAAD,EAEzBl/B,aAFyB,iBAE5CzF,EAF4C,KAErCm8B,EAFqC,OAG3B12B,aAH2B,eAG5C8X,EAH4C,KAGtCwmB,EAHsC,KAcnD,OACE,sBAAQ7+B,MAAOD,GAAf,WACE,sBACEgN,YADF,kBAEEjS,MAFF,EAGEud,KAHF,EAIE6mB,aAXAA,YACJjI,KACA4H,EAAQM,WAAY,SAAAtwB,GAAI,OAAIA,+BAAkC7J,EAA9D65B,oBAUItkB,SAhBAA,YAAcjK,MAAY,EAAZA,MAClB2mB,EADF,QAsBIl3B,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OCnCMqZ,GAAO,CACX,CAAErf,GAAF,EAASxP,MAAT,YAA6B8uB,YADlB,MAEX,CAAEtf,GAAF,EAASxP,MAAT,qBAAsC8uB,YAF3B,MAGX,CAAEtf,GAAF,EAASxP,MAAT,aAA8B8uB,YAHnB,MAIX,CAAEtf,GAAF,EAASxP,MAAT,YAA6B8uB,YAJlB,MAKX,CAAEtf,GAAF,EAASxP,MAAT,eAAgC8uB,YALlC,OAQMM,eAA4C,IAAD,EACrBn/B,aAAeo/B,EADM,kBACxC7kC,EADwC,KACjCm8B,EADiC,OAEvB12B,aAAeo/B,EAFQ,iBAExCtnB,EAFwC,KAElCwmB,EAFkC,KAa/C,MAAO,CAAE/jC,MAAF,EAASud,KAAT,EAAekC,SAThBA,YAAcjK,MAAY,EAAZA,MAClB2mB,EADF,IASgCiI,aAL1BA,YACJjI,KACA4H,EAAQM,WAAY,SAAAtwB,GAAI,OAAIA,+BAAkC7J,EAA9D65B,sBAMSe,cAEX,IAAMC,EAA2BH,GAAuB,CAAE5kC,MAAF,KAAeud,KAAvE,KACMynB,EAA4BJ,GAAuB,CAAE5kC,MAAF,KAAeud,KAAxE,KACM0nB,EAA2BL,GAAuB,CAAE5kC,MAAF,KAAeud,KAAvE,KAEA,OACE,0BAEE,2BACErY,MAAOD,GADT,aAEE2R,KAFF,QAGE3E,YAHF,SAFF,IASE,2BACE/M,MAAOD,GADT,aAEE2R,KAFF,SAGE3E,YAHF,UATF,IAgBE,2BACE/M,MAAOD,GADT,aAEE2R,KAFF,QAGE3E,YAHF,SAvBC,MAkCDhN,GAASY,YAAkB,CAC/Bq/B,aAAc,CACZC,OAFJ,KC1DMd,GAAO,CACX,CAAErf,GAAF,EAASxP,MAAT,YAA6B8uB,YADlB,MAEX,CAAEtf,GAAF,EAASxP,MAAT,qBAAsC8uB,YAF3B,MAGX,CAAEtf,GAAF,EAASxP,MAAT,aAA8B8uB,YAHnB,MAIX,CAAEtf,GAAF,EAASxP,MAAT,YAA6B8uB,YAJlB,MAKX,CAAEtf,GAAF,EAASxP,MAAT,eAAgC8uB,YALlC,OAQac,cAAoC,IAAD,EAEpB3/B,aAFoB,iBAEvCzF,EAFuC,KAEhCm8B,EAFgC,OAGtB12B,aAHsB,eAGvC8X,EAHuC,KAGjCwmB,EAHiC,KAc9C,OACE,sBAAQ7+B,MAAOD,GAAf,WAEE,sBACEC,MAAOD,GADT,aAEEgN,YAFF,SAGEjS,MAHF,EAIEud,KAJF,EAKE6mB,aAjBAA,YACJjI,KACA4H,EAAQM,WAAY,SAAAtwB,GAAI,OAAIA,+BAAkC7J,EAA9D65B,oBAgBItkB,SAbAA,YAAcjK,MAAY,EAAZA,MAClB2mB,EADF,MAgBI,sBACEj3B,MAAOD,GADT,aAEEyf,UAFF,EAGEzS,YA7BD,eAoCDhN,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAF6B,KAI/Bka,aAAc,CACZC,OALJ,KCzCMd,GAAO,CACX,CAAErf,GAAF,EAASxP,MAAT,YAA6B8uB,YADlB,MAEX,CAAEtf,GAAF,EAASxP,MAAT,qBAAsC8uB,YAF3B,MAGX,CAAEtf,GAAF,EAASxP,MAAT,aAA8B8uB,YAHnB,MAIX,CAAEtf,GAAF,EAASxP,MAAT,YAA6B8uB,YAJlB,MAKX,CAAEtf,GAAF,EAASxP,MAAT,eAAgC8uB,YALlC,OAQMM,eAA4C,IAAD,EACrBn/B,aAAeo/B,EADM,kBACxC7kC,EADwC,KACjCm8B,EADiC,OAEvB12B,aAAeo/B,EAFQ,iBAExCtnB,EAFwC,KAElCwmB,EAFkC,KAa/C,MAAO,CAAE/jC,MAAF,EAASud,KAAT,EAAekC,SAThBA,YAAcjK,MAAY,EAAZA,MAClB2mB,EADF,IASgCiI,aAL1BA,YACJjI,KACA4H,EAAQM,WAAY,SAAAtwB,GAAI,OAAIA,+BAAkC7J,EAA9D65B,sBAMSsB,cAEX,IAAMC,EAA6BV,GAAuB,CAAE5kC,MAAF,KAAeud,KAAzE,KACMgoB,EAA6BX,GAAuB,CAAE5kC,MAAF,KAAeud,KAAzE,KACMioB,EAA0BZ,GAAuB,CAAE5kC,MAAF,KAAeud,KAAtE,KACMkoB,EAA6Bb,GAAuB,CAAE5kC,MAAF,KAAeud,KAAzE,KACMmoB,EAA4Bd,GAAuB,CAAE5kC,MAAF,KAAeud,KAAxE,KACMooB,EAA2Bf,GAAuB,CAAE5kC,MAAF,KAAeud,KAAvE,KACMqoB,EAA6BhB,GAAuB,CAAE5kC,MAAF,KAAeud,KAAzE,KAEA,OACE,0BAEE,2BACErY,MAAOD,GADT,aAEE+b,OAFF,UAGE/O,YAHF,WAFF,IASE,2BACE/M,MAAOD,GADT,aAEE+b,OAFF,UAGE/O,YAHF,WATF,IAgBE,2BACE/M,MAAOD,GADT,aAEE+b,OAFF,OAGE/O,YAHF,QAhBF,IAuBE,2BACE/M,MAAOD,GADT,aAEE+b,OAFF,UAGE/O,YAHF,WAvBF,IA8BE,2BACE/M,MAAOD,GADT,aAEE+b,OAFF,SAGE/O,YAHF,UA9BF,IAqCE,2BACE/M,MAAOD,GADT,aAEE+b,OAFF,QAGE/O,YAHF,SArCF,IA4CE,wBAAM/M,MAAOD,GAAb,kBACE,2BACEC,MAAOD,GADT,aAEE+b,OAFF,UAGE/O,YAHF,WAxDD,OAoEDhN,GAASY,YAAkB,CAC/Bq/B,aAAc,CACZC,OAF6B,GAI/BU,iBAAkB,CAChBtnB,aADgB,EAEhB4mB,OAFgB,EAGhBvrB,gBAPJ,aCzFMksB,eAAY,OAChB,gCAAiBniC,KADnB,YAIM0gC,GAAO,CACX,CAAErf,GAAF,EAASxP,MAAT,YAA6B8uB,YADlB,MAEX,CAAEtf,GAAF,EAASxP,MAAT,qBAAsC8uB,YAF3B,MAGX,CAAEtf,GAAF,EAASxP,MAAT,aAA8B8uB,YAHnB,MAIX,CAAEtf,GAAF,EAASxP,MAAT,YAA6B8uB,YAJlB,MAKX,CAAEtf,GAAF,EAASxP,MAAT,eAAgC8uB,YALlC,OAQayB,cAAsC,IAAD,EAEtBtgC,aAFsB,iBAEzCzF,EAFyC,KAElCm8B,EAFkC,OAGxB12B,aAHwB,eAGzC8X,EAHyC,KAGnCwmB,EAHmC,KAmBhD,OACE,sBAAQ7+B,MAAOD,GAAf,WACE,sBACEgN,YADF,kBAEEjS,MAFF,EAGEud,KAHF,EAIErL,KAJF,GAKE8zB,YAZAC,WACJ9J,MACA4H,EAFF,KAaMK,aAlBAA,YACJjI,KACA4H,EAAQM,WAAY,SAAAtwB,GAAI,OAAIA,+BAAkC7J,EAA9D65B,oBAiBItkB,SAvBAA,YAAcjK,MAAY,EAAZA,MAClB2mB,EADF,QA6BIl3B,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OCpDMqZ,GAAO,CACX,CAAErf,GAAF,EAASxP,MAAT,YAA6B8uB,YADlB,MAEX,CAAEtf,GAAF,EAASxP,MAAT,qBAAsC8uB,YAF3B,MAGX,CAAEtf,GAAF,EAASxP,MAAT,aAA8B8uB,YAHnB,MAIX,CAAEtf,GAAF,EAASxP,MAAT,YAA6B8uB,YAJlB,MAKX,CAAEtf,GAAF,EAASxP,MAAT,eAAgC8uB,YALlC,OAQa4B,cAAuC,IAAD,EAEvBzgC,aAFuB,iBAE1CzF,EAF0C,KAEnCm8B,EAFmC,OAGzB12B,aAHyB,eAG1C8X,EAH0C,KAGpCwmB,EAHoC,KAcjD,OACE,sBAAQ7+B,MAAOD,GAAf,WACE,sBACEmN,MADF,SAEEH,YAFF,kBAGEjS,MAHF,EAIEud,KAJF,EAKE6mB,aAZAA,YACJjI,KACA4H,EAAQM,WAAY,SAAAtwB,GAAI,OAAIA,+BAAkC7J,EAA9D65B,oBAWItkB,SAjBAA,YAAcjK,MAAY,EAAZA,MAClB2mB,EADF,QAuBIl3B,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OCvCamb,cAA8B,OACzC,sBACEjhC,MAAOD,GADT,OAEE0B,OAAQy7B,EAHL,OAODn9B,GAASY,YAAkB,CAC/BugC,OAAQ,CACN1+B,MADM,GAENC,OAFM,GAGN4W,aAJJ,MCRa8nB,cAA6B,OACxC,sBAAQ1/B,OAAQ,CAAE2/B,IADb,mECIMC,cAAsB,OACjC,sBAAQrhC,MAAOD,GAAf,WAEE,sBAAQC,MAAOD,GAAf,OAA8BuhC,MAA9B,SAA6C7/B,OAAQy7B,EAFvD,MAIE,sBAAQl9B,MAAOD,GAAf,OAA8BuhC,MAA9B,UAA8C7/B,OAAQy7B,EAJxD,MAME,sBAAQl9B,MAAOD,GAAf,OAA8BuhC,MAA9B,QAA4C7/B,OAAQy7B,EAPjD,QAYDn9B,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETF,WAFS,SAGTI,SAHS,OAIT60B,QAL6B,GAO/B6C,OAAQ,CACNjB,OARJ,KCfasB,cAA4B,OACvC,sBACEvhC,MAAOD,GADT,OAEE0B,OAAQy7B,EAHL,OAODn9B,GAASY,YAAkB,CAC/BugC,OAAQ,CACNjB,OAFJ,MCJauB,cAAqB,OAChC,sBAAQxhC,MAAOD,GAAf,WAEE,sBAAQC,MAAOD,GAAf,OAA8B2R,KAA9B,OAA0CjQ,OAAQy7B,EAFpD,MAIE,sBAAQl9B,MAAOD,GAAf,OAA8B2R,KAA9B,QAA2CjQ,OAAQy7B,EAJrD,MAME,sBAAQl9B,MAAOD,GAAf,OAA8B2R,KAA9B,SAA4CjQ,OAAQy7B,EANtD,MAQE,sBAAQl9B,MAAOD,GAAf,OAA8B2R,KAA9B,QAA2CjQ,OAAQy7B,EARrD,MAUE,sBAAQl9B,MAAOD,GAAf,OAA8B2R,KAA9B,QAA2CjQ,OAAQy7B,EAXhD,QAgBDn9B,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETF,WAFS,SAGTI,SAHS,OAIT60B,QAL6B,GAO/B6C,OAAQ,CACNjB,OARJ,KChBawB,cAA+C,IAAD,EAEflhC,aAFe,cAElD6Z,EAFkD,KAEnCsnB,EAFmC,KAIzD,OACE,sBACE1hC,MAAOD,GADT,iBAEEoa,eAAgBpa,GAFlB,UAGEqa,cAHF,EAIEG,SAJF,GAKE,sBAAqBjK,MALvB,UAME,sBAAqBA,MANvB,WAOE,sBAAqBA,MAZpB,kBAiBDvQ,GAASY,YAAkB,CAC/BghC,iBAAkB,CAAEjtB,gBADW,SAE/BD,UAAW,CAAEC,gBAFf,WClBaktB,cAA6C,IAAD,EAEbrhC,aAFa,cAEhD6Z,EAFgD,KAEjCsnB,EAFiC,KAIvD,OACE,sBACEtnB,cADF,EAEEG,SAFF,GAGE,sBAAqBjK,MAHvB,UAIE,sBAAqBA,MAJvB,WAKE,sBAAqBA,MAVpB,mBCFMuxB,cAA2C,OACtD,sBACE7hC,MAAOD,GADT,IAEE6Q,WAAY7Q,GAFd,SAGEuQ,MAJG,WAQDvQ,GAASY,YAAkB,CAC/B84B,IAAK,CAAE/kB,gBADwB,WAE/BotB,SAAU,CAAEh1B,MAFd,aCTai1B,cAAyC,OACpD,sBAAqBzxB,MADhB,WCUD0xB,eAAa,OACjB,gCAAiBvjC,KADnB,aAIMwjC,eAAmB,OACvB,wBACEjiC,MADF,EAEEyB,OAAQ,CAAE2/B,IAHd,gEAOac,cAAsC,OACjD,0BAEE,sBAAqB5xB,MAArB,WAAsCtD,KAFxC,KAIE,sBAAqBsD,MAArB,kBAA6CtD,KAL1C,OCVDg1B,eAAa,OACjB,gCAAiBvjC,KADnB,qBAIM0jC,eAAW,OACf,gCAAiB1jC,KADnB,mBAIM2jC,eAAY,OAChB,gCAAiB3jC,KADnB,oBAIa4jC,cAA2C,IAAD,EAEL9hC,aAFK,cAE9C+hC,EAF8C,KAE5BC,EAF4B,OAGChiC,aAHD,cAG9CiiC,EAH8C,KAGzBC,EAHyB,KAKrD,OACE,0BAEE,sBACEziC,MAAOD,GADT,iBAEEqa,cAFF,EAGEG,SAHF,GAIE,sBAAqBvN,KAJvB,KAKE,sBAAqBA,KALvB,KAME,sBAAqBA,KARzB,MAWE,sBACEhN,MAAOD,GADT,iBAEEqa,cAFF,EAGEG,SAHF,GAIE,sBAAqBjK,MAArB,QAAmCtD,KAJrC,KAKE,sBAAqBsD,MAArB,SAAoCtD,KALtC,KAME,sBAAqBsD,MAArB,eAA0CtD,KAvB3C,QA8BDjN,GAASY,YAAkB,CAC/BghC,iBAAkB,CAChB7mB,eAFJ,KClDa4nB,cAAkD,IAAD,EAElBniC,aAFkB,cAErD6Z,EAFqD,KAEtCsnB,EAFsC,KAI5D,OACE,sBACEhjC,WADF,cAEE0b,cAFF,EAGEG,SAHF,GAIE,sBAAqBjK,MAJvB,UAKE,sBAAqBA,MALvB,WAME,sBAAqBA,MAXpB,mBCCMqyB,cAA4B,OACvC,sBAAQ3iC,MAAOD,GAAf,WAEE,sBAAQC,MAAOD,GAAf,OAA8BrB,WAA9B,UAFF,UAIE,sBAAQsB,MAAOD,GAAf,OAA8BrB,WAA9B,WAJF,WAME,sBAAQsB,MAAOD,GAAf,OAA8BrB,WAA9B,SAPG,WAYDqB,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETE,SAH6B,QAK/BiS,OAAQ,CACNwkB,OANJ,KCTa2C,cAAsB,OACjC,sBAAQ5iC,MAAOD,GAAf,WAEE,sBAAQC,MAAOD,GAAf,OAA8BrB,WAA9B,QAAiDod,OAAjD,WAFF,WAIE,sBAAQ9b,MAAOD,GAAf,OAA8BrB,WAA9B,QAAiDod,OAAjD,WAJF,WAME,sBAAQ9b,MAAOD,GAAf,OAA8BrB,WAA9B,QAAiDod,OAAjD,QANF,QAQE,sBAAQ9b,MAAOD,GAAf,OAA8BrB,WAA9B,QAAiDod,OAAjD,WARF,WAUE,sBAAQ9b,MAAOD,GAAf,OAA8BrB,WAA9B,QAAiDod,OAAjD,UAVF,UAYE,sBAAQ9b,MAAOD,GAAf,OAA8BrB,WAA9B,QAAiDod,OAAjD,SAZF,SAcE,wBAAM9b,MAAOD,GAAb,kBACE,sBAAQC,MAAOD,GAAf,OAA8BrB,WAA9B,QAAiDod,OAAjD,WAhBC,cAsBD/b,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETE,SAH6B,QAK/BiS,OAAQ,CACNwkB,OAN6B,GAQ/BU,iBAAkB,CAChBtnB,aADgB,EAEhB4mB,OAFgB,EAGhBvrB,gBAXJ,aCtBamuB,cAAwB,OACnC,sBAAQ7iC,MAAOD,GAAf,WAEE,sBAAQC,MAAOD,GAAf,OAA8BrB,WAA9B,UAAmDod,OAAnD,WAFF,WAIE,sBAAQ9b,MAAOD,GAAf,OAA8BrB,WAA9B,UAAmDod,OAAnD,WAJF,WAME,sBAAQ9b,MAAOD,GAAf,OAA8BrB,WAA9B,UAAmDod,OAAnD,QANF,QAQE,sBAAQ9b,MAAOD,GAAf,OAA8BrB,WAA9B,UAAmDod,OAAnD,WARF,WAUE,sBAAQ9b,MAAOD,GAAf,OAA8BrB,WAA9B,UAAmDod,OAAnD,UAVF,UAYE,sBAAQ9b,MAAOD,GAAf,OAA8BrB,WAA9B,UAAmDod,OAAnD,SAZF,SAcE,wBAAM9b,MAAOD,GAAb,kBACE,sBAAQC,MAAOD,GAAf,OAA8BrB,WAA9B,UAAmDod,OAAnD,WAhBC,cAsBD/b,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETE,SAH6B,QAK/BiS,OAAQ,CACNwkB,OAN6B,GAQ/BU,iBAAkB,CAChBtnB,aADgB,EAEhB4mB,OAFgB,EAGhBvrB,gBAXJ,aC7BaouB,cAAmC,IAAD,EAELviC,aAFK,cAEtCwiC,EAFsC,KAExBC,EAFwB,KAQ7C,OACE,sBAAQthC,QALJA,WACJshC,EAAgBD,EADlB,KAKE,aATG,WCIME,cAAqB,OAChC,sBAAQjjC,MAAOD,GAAf,WAEE,sBAAQC,MAAOD,GAAf,OAA8B2R,KAA9B,QAFF,QAIE,sBAAQ1R,MAAOD,GAAf,OAA8B2R,KAA9B,SAJF,SAME,sBAAQ1R,MAAOD,GAAf,OAA8B2R,KAA9B,UANF,UAQE,sBAAQ1R,MAAOD,GAAf,OAA8B2R,KAA9B,SARF,SAUE,sBAAQ1R,MAAOD,GAAf,OAA8B2R,KAA9B,SAXG,WAgBD3R,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETF,WAFS,SAGTI,SAJ6B,QAM/BiS,OAAQ,CACNwkB,OAPJ,KChBaiD,cAAuB,OAClC,sBAAQljC,MAAOD,GAAf,WAEE,sBAAQC,MAAOD,GAAf,QAFF,UAIE,sBAAQC,MAAOD,GAAf,OAA8Byf,UAA9B,GALG,cAUDzf,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETE,SAH6B,QAK/BiS,OAAQ,CACNwkB,OANJ,KCPakD,cAAuB,OAClC,sBAAQnjC,MAAOD,GAAf,WAEE,sBAAQC,MAAOD,GAAf,OAA8B+b,OAA9B,WAFF,WAIE,sBAAQ9b,MAAOD,GAAf,OAA8B+b,OAA9B,WAJF,WAME,sBAAQ9b,MAAOD,GAAf,OAA8B+b,OAA9B,QANF,QAQE,sBAAQ9b,MAAOD,GAAf,OAA8B+b,OAA9B,WARF,WAUE,sBAAQ9b,MAAOD,GAAf,OAA8B+b,OAA9B,UAVF,UAYE,sBAAQ9b,MAAOD,GAAf,OAA8B+b,OAA9B,SAZF,SAcE,wBAAM9b,MAAOD,GAAb,kBACE,sBAAQC,MAAOD,GAAf,OAA8B+b,OAA9B,WAhBC,cAsBD/b,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETE,SAFS,OAGT60B,QAJ6B,GAM/B5iB,OAAQ,CACNwkB,OAP6B,GAS/BU,iBAAkB,CAChBtnB,aADgB,EAEhB4mB,OAFgB,EAGhBvrB,gBAZJ,aCnBM0uB,eAAW,OACf,gCAAiB3kC,KADnB,WAIa4kC,cAAyB,OACpC,sBAAQrjC,MAAOD,GAAf,WAEE,sBAAQC,MAAOD,GAAf,OAA8B+b,OAA9B,UAA+C9O,KAA/C,IAFF,WAIE,sBAAQhN,MAAO,CAACD,GAAD,OAAgB,CAAEuJ,cAAjC,gBAAkEwS,OAAlE,UAAmF9O,KAAnF,IAJF,WAME,sBAAQhN,MAAOD,GAAf,OAA8B+b,OAA9B,SAA8C9O,KANhD,KAQE,sBAAQhN,MAAOD,GAAf,OAA8BrB,WAA9B,QAAiDod,OAAjD,SAAiE9O,KAT9D,OAcDjN,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETE,SAH6B,QAK/BiS,OAAQ,CACNwkB,OANJ,KCvBaqD,cAAgC,OAC3C,sBAAQtjC,MAAOD,GAAf,WAEE,sBAAaC,MAAOD,GAApB,YAAwCrB,WAAxC,UACE,0BADF,KAEE,0BAFF,KAGE,0BALJ,MAQE,sBAAasB,MAAOD,GAApB,YAAwCrB,WAAxC,WACE,0BADF,KAEE,0BAFF,KAGE,0BAZC,QAkBDqB,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAET+0B,QAH6B,GAK/BkF,YAAa,CACXtD,OANJ,KCnBauD,cAAmC,OAC9C,sBAAaxjC,MAAOD,GAApB,aACE,0BADF,KAEE,0BAFF,KAGE,0BAJG,OAQDA,GAASY,YAAkB,CAC/B4iC,YAAa,CACXtD,OADW,GAEX5mB,aAHJ,KCJaoqB,cAA6B,OACxC,sBAAQzjC,MAAOD,GAAf,WAEE,sBAAaC,MAAOD,GAApB,YAAwCrB,WAAxC,UAA6Dod,OAA7D,WACE,0BADF,KAEE,0BAJJ,MAOE,sBAAa9b,MAAOD,GAApB,YAAwCrB,WAAxC,UAA6Dod,OAA7D,WACE,0BADF,KAEE,0BATJ,MAYE,sBAAa9b,MAAOD,GAApB,YAAwCrB,WAAxC,UAA6Dod,OAA7D,QACE,0BADF,KAEE,0BAdJ,MAiBE,sBAAa9b,MAAOD,GAApB,YAAwCrB,WAAxC,UAA6Dod,OAA7D,WACE,0BADF,KAEE,0BAnBJ,MAsBE,sBAAa9b,MAAOD,GAApB,YAAwCrB,WAAxC,UAA6Dod,OAA7D,UACE,0BADF,KAEE,0BAxBJ,MA2BE,sBAAa9b,MAAOD,GAApB,YAAwCrB,WAAxC,UAA6Dod,OAA7D,SACE,0BADF,KAEE,0BA7BJ,MAgCE,wBAAM9b,MAAOD,GAAb,kBACE,sBAAaC,MAAOD,GAApB,YAAwCrB,WAAxC,UAA6Dod,OAA7D,WACE,0BADF,KAEE,0BApCD,SA2CD/b,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETE,SAFS,OAGT60B,QAJ6B,GAM/BkF,YAAa,CACXtD,OAP6B,GAS/BU,iBAAkB,CAChBtnB,aADgB,EAEhB4mB,OAFgB,EAGhBvrB,gBAZJ,aC7CagvB,cAAwC,IAAD,EAE1BnjC,aAF0B,+BAE3CkM,EAF2C,KAErCk3B,EAFqC,KAgBlD,OACE,sBAAQ3jC,MAAOD,GAAf,WAEE,0BACE,sBAAQ2B,QAhBRkiC,WACJD,EADF,yBAeI,KAEE,sBAAQjiC,QAbRmiC,WACJF,EADF,2BAWI,KAGE,sBAAQjiC,QAVRoiC,WACJH,EADF,0BAKE,MAQE,sBAAM3jC,MAAOD,GAAb,MAzBC,KA+BDA,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETF,WAH6B,UAK/BqD,KAAM,CACJC,iBANJ,KChCaq3B,cAA0B,OACrC,sBAAQ/jC,MAAOD,GAAf,WAEE,sBAAaC,MAAOD,GAApB,YAAwC2R,KAAxC,QACE,0BADF,KAEE,0BAJJ,MAOE,sBAAa1R,MAAOD,GAApB,YAAwC2R,KAAxC,SACE,0BADF,KAEE,0BATJ,MAYE,sBAAa1R,MAAOD,GAApB,YAAwC2R,KAAxC,UACE,0BADF,KAEE,0BAdJ,MAiBE,sBAAa1R,MAAOD,GAApB,YAAwC2R,KAAxC,SACE,0BADF,KAEE,0BAnBJ,MAsBE,sBAAa1R,MAAOD,GAApB,YAAwC2R,KAAxC,SACE,0BADF,KAEE,0BAzBC,QA+BD3R,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETF,WAFS,SAGTI,SAHS,OAIT60B,QAL6B,GAO/BkF,YAAa,CACXtD,OARJ,KC5Ba+D,cAA4B,OACvC,sBAAQhkC,MAAOD,GAAf,WAEE,sBAAaC,MAAOD,GAApB,YAAwC+b,OAAxC,WACE,0BADF,KAEE,0BAJJ,MAOE,sBAAa9b,MAAOD,GAApB,YAAwC+b,OAAxC,WACE,0BADF,KAEE,0BATJ,MAYE,sBAAa9b,MAAOD,GAApB,YAAwC+b,OAAxC,QACE,0BADF,KAEE,0BAdJ,MAiBE,sBAAa9b,MAAOD,GAApB,YAAwC+b,OAAxC,WACE,0BADF,KAEE,0BAnBJ,MAsBE,sBAAa9b,MAAOD,GAApB,YAAwC+b,OAAxC,UACE,0BADF,KAEE,0BAxBJ,MA2BE,sBAAa9b,MAAOD,GAApB,YAAwC+b,OAAxC,SACE,0BADF,KAEE,0BA7BJ,MAgCE,wBAAM9b,MAAOD,GAAb,kBACE,sBAAaC,MAAOD,GAApB,YAAwC+b,OAAxC,WACE,0BADF,KAEE,0BApCD,SA2CD/b,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETE,SAFS,OAGT60B,QAJ6B,GAM/BkF,YAAa,CACXtD,OAP6B,GAS/BU,iBAAkB,CAChBtnB,aADgB,EAEhB4mB,OAFgB,EAGhBvrB,gBAZJ,aC7CM0uB,eAAW,OACf,gCAAiB3kC,KADnB,WAIawlC,cAA+B,OAC1C,sBAAQjkC,MAAOD,GAAf,WAEE,sBAAaC,MAAOD,GAApB,aACE,sBAAQiN,KADV,KAEE,sBAAQA,KAFV,KAGE,sBAAQA,KALZ,MAQE,sBAAahN,MAAOD,GAApB,YAAwCrB,WAAxC,UAA6Dod,OAA7D,WACE,sBAAQ9O,KADV,KAEE,sBAAQA,KAFV,KAGE,sBAAQA,KAXZ,MAcE,sBAAahN,MAAOD,GAApB,YAAwC+b,OAAxC,UACE,sBAAQ9O,KADV,KAEE,sBAAQA,KAFV,KAGE,sBAAQA,KAlBP,QAwBDjN,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETE,SAH6B,QAK/B+5B,YAAa,CACXtD,OANJ,KClCaiE,cAAuC,IAAD,EAEzB3jC,aAFyB,iBAE1Cgf,EAF0C,KAEpC4kB,EAFoC,KAIjD,OACE,sBACE5kB,KADF,EAEEhF,SAFF,EAGE+M,eARC,KCAD8c,GAAN,SACMC,GAAU,IAAItiB,KAAKqiB,GAAT,cAA4BA,GAA5B,WAAhB,IACME,GAAU,IAAIviB,KAAKqiB,GAAT,cAA4BA,cAA5B,EAAhB,IAEaG,cAAgC,IAAD,EAElBhkC,aAFkB,iBAEnCgf,EAFmC,KAE7B4kB,EAF6B,KAI1C,OACE,sBACE1Y,IADF,GAEEC,IAFF,GAGEnM,KAHF,EAIEhF,SATC,KCGDiqB,iBAAU,IAAGjlB,EAAH,cACd,wBACEvf,MAAO,CAACD,GAAD,aAAsBC,EAD/B,YAEE,sBAAMA,MAAOA,EAAb,SAA6Buf,EAF/B,WAGE,sBAAMvf,MAAO,CAACA,EAAD,KAAaD,GAA1B,QACM,IAAMwf,EAAN,UAAuBnc,SAASmc,EAATnc,UAD7B,GAJJ,OAUaqhC,cAAmC,IAAD,EAELlkC,aAFK,iBAEtCmkC,EAFsC,KAExBC,EAFwB,KAI7C,OACE,sBACEplB,KADF,EAEEhF,SAFF,EAGEqR,UARC,MAaD7rB,GAASY,YAAkB,CAC/BikC,aAAc,CACZhhC,KADY,EAEZyF,eAFY,SAGZD,WAHY,SAIZy7B,YAL6B,GAO/B/pC,MAAO,CACL8R,SADK,GAELC,WATJ,SChBMkW,GAAc,IAAI,GAAJ,KAA4B,CAAE+hB,KAXrC,CACX3jB,SAAU,CACRC,MAAO,CAAC,KAAK,KAAN,oBADC,MAERC,KAAM,CAAC,SAAS,SAAV,0CAHG,aAKXC,WAAY,CACVF,MAAO,CAAC,MAAM,MAAP,sDADG,OAEVC,KAAM,CAAC,UAAU,WAAX,8EAPV,gBAaa0jB,cAAsC,IAAD,EAExBxkC,aAFwB,iBAEzCgf,EAFyC,KAEnC4kB,EAFmC,KAIhD,OACE,sBACEphB,YADF,GAEExD,KAFF,EAGEhF,SARC,KChBMyqB,cAAgC,IAAD,EAEFzkC,aAFE,iBAEnCmkC,EAFmC,KAErBC,EAFqB,KAM1C,OACE,sBACEplB,KADF,EAEEhF,SAFF,EAGEoR,OANEA,YAAS,OAAUpM,gBAAzB,IAAgDA,e,oBCS5C0lB,GAASC,MAAf,KAEaC,GAAb,YASE,aAAoC,IAAD,EAAvB3kB,EAAuB,uDAAN,KAAM,oBACjC,+BACA,aAFiC,EATrC,0DAeI,qDACA5hB,KAAKwmC,oBAAoB5kB,KAhB7B,kCAoBI,OAAO5hB,KAAA,aAAqB,CAAE4kB,KAA9B,MApBJ,oCAwBI,OAAO5kB,KAAA,aAAqB,CAAEymC,OAA9B,MAxBJ,mCA4BI,OAAOzmC,KAAA,aAAqB,CAAE0mC,MAA9B,MA5BJ,+BAgCI,OAAO/lB,iBAAoB3gB,KAA3B,UAhCJ,wCAoCI,OAAOA,KAAA,WAAsBA,KAAK2mC,QAA3B,IACL3mC,KAAK4mC,SAAS/kB,GAAS7hB,KAAK4mC,SADvB,IAEL5mC,KAAK6mC,QAAQhlB,GAAS7hB,KAAK6mC,QAF7B,KApCJ,wCA0CI,OAAOR,OAAW,CAAC7iB,EAAK,EAAxB,MA1CJ,kCA8CI,SACS7C,SAAYmmB,GAAU9mC,KAAK+mC,WAAlC,eAGF,KAlDJ,iCAsDI,OAAO/mC,KAAA,SAAP,SAtDJ,sCA0DI,OAAOA,KAAA,SAAP,QA1DJ,0CA6D2BoB,MAA4D,uDAAlCihB,GAAiBW,MAClE,OAAOhjB,KAAA,gBAAP,KA9DJ,0CAkEI,OAAOA,KAAA,WAAP,iBAlEJ,kCAsEI,OAAOA,KAAA,SAAP,UAtEJ,qCA0EI,OAAOA,KAAA,eAAP,WA1EJ,sCA6EoCoB,MAA0D,uDAAhCihB,GAAiBW,MACrEI,EAAgBpjB,KAAK4mC,SAA3B,GAEA,OAAO5mC,KAAA,sBAAP,KAhFJ,6CAmF4CoB,MAA0D,uDAAhCihB,GAAiBW,MACnF,OAAOhjB,KAAA,qBAAP,KApFJ,uCAwFI,OAAOA,KAAA,iBAAP,WAxFJ,gDA4FI,OAAOA,KAAA,SAAP,gBA5FJ,iCAgGI,OAAOA,KAAA,SAAP,SAhGJ,oCAoGI,OAAOA,KAAA,eAAP,UApGJ,sCAwGI,OAAOA,KAAA,iBAAP,UAxGJ,qCA4GI,OAAOA,KAAA,kBAAkCA,KAAK6mC,QAAQhlB,KAAW7hB,KAAK6mC,QAAtE,KA5GJ,uCAgHI,OAAO7mC,KAAA,iBAAiCA,KAAK4mC,SAAS/kB,KAAW7hB,KAAK4mC,SAAtE,KAhHJ,sCAoHI,OAAO5mC,KAAA,aAAwBA,KAAK2mC,QAApC,KApHJ,6CAwHI,OAAON,GAAO1lB,EAAP0lB,GAAP,YAxHJ,iCA4HI,OAAOA,GAAO1lB,EAAd,KA5HJ,8BAgII,OAAO0lB,OAhIX,8BAoII,MAAM,WApIV,6CAuIiD,IAAD,IACtCW,EAAmBX,cAAzB,GAEArmC,KAAK+mC,WAAa,CAChBE,eAAgBD,EADA,iBAEhBE,cAAeF,iBAFC,KAGhBP,QAAM,WACHpkB,GADG,MACsB2kB,EADtB,qBAEH3kB,GAFG,KAEqB2kB,EAFrB,UAHU,GAOhBpiB,MAAI,WACDvC,GADC,MACwB2kB,EADxB,uBAED3kB,GAFC,KAEuB2kB,EAFvB,YAPN,QA1IJ,O,oBCRM7iB,GAAN,OAEagjB,cAAgC,IAAD,EAElBxlC,aAAe0kC,QAFG,WAEnC1lB,EAFmC,KAE7B4kB,EAF6B,KAI1C,OACE,sBACEphB,YADF,GAEExD,KAFF,EAGEhF,SARC,KCJMyrB,cAAqC,IAAD,EAEvBzlC,aAFuB,qBAExCgf,EAFwC,KAElC4kB,EAFkC,KAI/C,OACE,sBAAQnkC,MAAOD,GAAf,WAEE,sBACEC,MAAOD,GADT,KAEEm+B,SAFF,wBAGqB3e,EALvB,sBAQE,sBACEA,KADF,EAEEhF,SAfD,MAsBDxa,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAF6B,KAI/BrZ,KAAM,CACJqO,eALJ,KCxBMiI,GAAc,IAAI,GAAJ,KAA4B,CAAEvB,eAAlD,IAEaykB,cAAwC,IAAD,EAE1B1lC,aAF0B,iBAE3Cgf,EAF2C,KAErC4kB,EAFqC,KAIlD,OACE,sBACEphB,YADF,GAEExD,KAFF,EAGEhF,SARC,KCLM2rB,cAA0C,IAAD,EAE1B3lC,aAAe,CAAE2oB,UAAF,KAAmBC,QAFR,kBAE7C/J,EAF6C,KAEtC+mB,EAFsC,KAIpD,OACE,sBACE/mB,MADF,EAEE7E,SAPC,KCOM6rB,cAAe,OAC1B,kBAAC,IAAD,cACE,wBACEpmC,MAAOD,GADT,YAEE0B,OAAQ,CAAE2/B,IAHd,8EAKE,sBACEphC,MAAOD,GADT,WAEEm+B,SAFF,MANG,cAcMmI,cAA2B,OACtC,sBAAMje,OAAN,IACE,0BAFG,6OAUDroB,GAASY,YAAkB,CAC/B2lC,WAAY,CACV55B,iBADU,GAEVoO,eAH6B,IAK/ByrB,YAAa,CACX3iC,KADW,EAEXnB,OAPJ,OC5Ba+jC,cAA0B,OACrC,0BACE,0BAFG,6OCGDC,cAAS,OACb,sBAAYn2B,MADd,cAIao2B,cAAuB,OAClC,0BAEE,sBAAM1mC,MAAOD,GAAb,KAA0BqoB,OAA1B,GAA0CtM,OAA1C,WACE,0BAHJ,4OAUE,sBAAM9b,MAAOD,GAAb,KAA0BqoB,OAA1B,GAA0CtM,OAA1C,UACE,0BAZC,8OAsBD/b,GAASY,YAAkB,CAC/BgmC,KAAM,CACJ7rB,eAFJ,KCvBM2rB,cAAS,OACb,sBACEn2B,MADF,WAEEC,YAHJ,kBAOMq2B,cAAS,OACb,wBAAM5mC,MAAOD,GAAb,iBACE,sBACEC,MAAOD,GADT,cAEE2R,KAFF,QAGEoK,OAHF,SADF,UAOE,sBACE9b,MAAOD,GADT,cAEE2R,KAFF,SARJ,YAgBam1B,cAAkC,OAC7C,sBAAMze,OAAN,GAAsBE,OAAtB,IACE,0BAFG,6OAUDvoB,GAASY,YAAkB,CAC/BmmC,gBAAiB,CACfx9B,cADe,MAEfD,eAH6B,YAK/B09B,cAAe,CACbr6B,iBANJ,KCtCas6B,cAAuC,IAAD,EAEbzmC,cAFa,cAE1C0mC,EAF0C,KAE9BC,EAF8B,OAGP3mC,cAHO,cAG1CyvB,EAH0C,KAG3BmX,EAH2B,OAIX5mC,cAJW,cAI1C6mC,EAJ0C,KAI7BC,EAJ6B,OAKT9mC,cALS,cAK1C+mC,EAL0C,KAK5BC,EAL4B,KAuB3CC,aAA8B,IAAD,uBAAX3sC,EAAW,yBAAXA,KAAW,UAAXA,GACtB,IAAM4sC,EAAc5sC,QAAY,mBAAhC,IAA0CgU,KACpC64B,EAAe7sC,SAAa,mBAAlC,IAA4CgU,KAExC44B,IAAJ,GACEP,MACAC,GAFF,IAGYM,GAAL,EAGA,IACLP,MACAC,QAJAD,MACAC,GAFK,KAST,OACE,0BACE,sBACEnnC,MAAOD,GADT,MAEE0M,KAFF,cAGEwjB,QAHF,EAIED,cAJF,EAKEE,SAvCAyX,YACJN,KACAE,KACAL,EAHF,MAyCI,sBACEz6B,KADF,OAEEzM,MAAOD,GAFT,OAGEkwB,QAHF,EAIEC,SAvCA0X,YACJP,KACAG,EAAYvX,EAFd,MAyCI,sBACExjB,KADF,QAEEzM,MAAOD,GAFT,OAGEkwB,QAHF,EAIEC,SAxCA2X,YACJN,KACAC,EAAYvX,EAFd,QA8CWlwB,GAASY,YAAkB,CACtCmnC,MAAO,CACLhtB,eAFoC,GAItCiX,OAAQ,CACNjX,eADM,EAENpO,iBANG,MCnEMq7B,cAAuC,IAAD,EAEnBxnC,cAFmB,cAE1C0vB,EAF0C,KAEjC+X,EAFiC,KAQjD,OACE,sBACEhoC,MAAOD,GADT,SAEE2N,UAAW3N,GAFb,KAGEkwB,QAHF,EAIExjB,KAJF,kBAKEyjB,SAVE+X,YACJD,EADF,OAeIjoC,GAASY,YAAkB,CAC/BunC,SAAU,CACRjI,OAF6B,GAI/BxzB,KAAM,CACJK,MADI,UAEJF,SANJ,MCpBau7B,cAAqC,IAAD,EAEjB5nC,cAFiB,cAExC0vB,EAFwC,KAE/B+X,EAF+B,KAQ/C,OACE,sBACEv7B,KAAI,YADN,EAEEwjB,QAFF,EAGEC,SARE+X,YACJD,EADF,OCAWI,cAAgC,IAAD,EAEA7nC,cAFA,cAEnC8nC,EAFmC,KAEpBC,EAFoB,OAGc/nC,cAHd,cAGnCgoC,EAHmC,KAGbC,EAHa,OAIAjoC,cAJA,cAInCyvB,EAJmC,KAIpBmX,EAJoB,KAe1C,OACE,sBAAQnnC,MAAOD,GAAf,WAEE,sBACEC,MAAOD,GADT,SAEE0M,KAFF,SAGEwjB,QAHF,EAIEC,SAhBAuY,YACJH,EADF,MAmBI,sBACEtoC,MAAOD,GADT,SAEE0M,KAFF,gBAGEwjB,QAHF,EAIED,cAJF,EAKEE,SApBAwY,cACJF,KACArB,EAFF,MAuBI,sBACEnnC,MAAOD,GADT,SAEE0M,KAFF,WAGE+S,UApBJ,IAuBE,sBACExf,MAAOD,GADT,SAEE0M,KAFF,mBAGE+S,UAHF,EAIEyQ,SA3CD,MAkDDlwB,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETE,SAH6B,QAK/B0+B,SAAU,CACRjI,OANJ,KC/CM0I,cAAsBC,MAAyB,0DACrBroC,aADqB,cAC5C0vB,EAD4C,KACnC+X,EADmC,KAG7C9X,cACJ8X,EADF,IAIA,MAAO,CAAE/X,QAAF,EAAWC,SAPpB,IAUa2Y,cAEX,IAAMC,EAAyBH,KACzBI,EAAyBJ,KACzBK,EAAsBL,KACtBM,EAAyBN,KACzBO,EAAwBP,KACxBQ,EAAuBR,KACvBS,EAAyBT,KAE/B,OACE,sBAAQ3oC,MAAOD,GAAf,WAEE,2BACEC,MAAOD,GADT,SAEE+b,OAFF,UAGErP,KAHF,WAFF,IASE,2BACEzM,MAAOD,GADT,SAEE+b,OAFF,UAGErP,KAHF,WATF,IAgBE,2BACEzM,MAAOD,GADT,SAEE+b,OAFF,OAGErP,KAHF,QAhBF,IAuBE,2BACEzM,MAAOD,GADT,SAEE+b,OAFF,UAGErP,KAHF,WAvBF,IA8BE,2BACEzM,MAAOD,GADT,SAEE+b,OAFF,SAGErP,KAHF,UA9BF,IAqCE,2BACEzM,MAAOD,GADT,SAEE+b,OAFF,QAGErP,KAHF,SArCF,IA4CE,wBAAMzM,MAAOD,GAAb,kBACE,2BACEC,MAAOD,GADT,SAEE+b,OAFF,UAGErP,KAHF,WAxDD,OAoED1M,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETE,SAFS,OAGT60B,QAJ6B,GAM/B6J,SAAU,CACRjI,OAP6B,GAS/BU,iBAAkB,CAChBtnB,aADgB,EAEhB4mB,OAFgB,EAGhBvrB,gBAZJ,aCjFa20B,cAAyC,IAAD,EAEX9oC,aAFW,iBAE5CmkC,EAF4C,KAE9BC,EAF8B,KAInD,OACE,sBAAQ3kC,MAAOD,GAAf,WACE,sBACEgN,YADF,YAEEwS,KAFF,EAGEhF,SAHF,EAIE+M,eAVD,MAgBDvnB,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OCZM0e,iBAAU,IAAGjlB,EAAH,cACd,wBACEvf,MAAO,CAACD,GAAD,aAAsBC,EAD/B,YAEE,sBAAMA,MAAOA,EAAb,SAA6Buf,EAF/B,WAGE,sBAAMvf,MAAO,CAACA,EAAD,KAAaD,GAA1B,QACM,IAAMwf,EAAN,UAAuBnc,SAASmc,EAATnc,UAD7B,GAJJ,OAUakmC,cAAqC,IAAD,EAEP/oC,aAFO,iBAExCmkC,EAFwC,KAE1BC,EAF0B,KAI/C,OACE,sBAAQ3kC,MAAOD,GAAf,WACE,sBACEgN,YADF,YAEEwS,KAFF,EAGEhF,SAHF,EAIEqR,UAVD,OAgBD7rB,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAF6B,KAI/B8e,aAAc,CACZhhC,KADY,EAEZyF,eAFY,SAGZD,WAHY,SAIZy7B,YAR6B,GAU/B/pC,MAAO,CACL8R,SADK,GAELC,WAZJ,SClBMkW,GAAc,IAAI,GAAJ,KAA4B,CAAE+hB,KAXrC,CACX3jB,SAAU,CACRC,MAAO,CAAC,KAAK,KAAN,oBADC,MAERC,KAAM,CAAC,SAAS,SAAV,0CAHG,aAKXC,WAAY,CACVF,MAAO,CAAC,MAAM,MAAP,sDADG,OAEVC,KAAM,CAAC,UAAU,WAAX,8EAPV,gBAaakoB,cAAwC,IAAD,EAEVhpC,aAFU,iBAE3CmkC,EAF2C,KAE7BC,EAF6B,KAIlD,OACE,sBAAQ3kC,MAAOD,GAAf,WACE,sBACEgN,YADF,YAEEwS,KAFF,EAGEhF,SAHF,EAIEwI,YAVD,OAgBDhjB,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OC9Ba0jB,cAAkC,IAAD,EAEJjpC,aAFI,iBAErCmkC,EAFqC,KAEvBC,EAFuB,KAM5C,OACE,sBAAQ3kC,MAAOD,GAAf,WACE,sBACEgN,YADF,YAEEwS,KAFF,EAGEhF,SAHF,EAIEoR,OARAA,YAAS,OAAUpM,gBAAzB,IAAgDA,gBAc5Cxf,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OCZM/C,GAAN,OAEa0mB,cAAkC,IAAD,EAEpBlpC,aAFoB,iBAErCgf,EAFqC,KAE/B4kB,EAF+B,KAI5C,OACE,sBAAQnkC,MAAOD,GAAf,WACE,sBACEgN,YADF,YAEEwS,KAFF,EAGEwD,YAHF,GAIExI,SAVD,MAgBDxa,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OCvBa4jB,cAAuC,IAAD,EAEzBnpC,aAFyB,qBAE1Cgf,EAF0C,KAEpC4kB,EAFoC,KAIjD,OACE,sBAAQnkC,MAAOD,GAAf,WAEE,sBACEC,MAAOD,GADT,KAEEm+B,SAFF,wBAGqB3e,EALvB,sBAQE,sBACEA,KADF,EAEEhF,SAfD,MAsBDxa,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAF6B,KAI/BrZ,KAAM,CACJqO,eALJ,KCvBM6uB,cAAwBC,MAAuB,uDAAvBA,KAAuB,EAC3BrpC,aAD2B,cAC5Cgf,EAD4C,KACtC4kB,EADsC,KAEnD,MAAO,CAAE5kB,KAAF,EAAQhF,SAFjB,IAKasvB,cAEX,IAAMC,EAAyBH,KACzBI,EAA0BJ,KAC1BK,EAAyBL,KAE/B,OACE,sBAAQ3pC,MAAOD,GAAf,WAEE,2BACEC,MAAOD,GADT,WAEE2R,KAFF,QAGE3E,YAHF,SAFF,IASE,2BACE/M,MAAOD,GADT,WAEE2R,KAFF,SAGE3E,YAHF,UATF,IAgBE,2BACE/M,MAAOD,GADT,WAEE2R,KAFF,QAGE3E,YAHF,SAvBC,MAkCDhN,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAF6B,KAI/BmkB,WAAY,CACVnvB,eALJ,KCvCM6uB,cAAwBC,MAAuB,uDAAvBA,KAAuB,EAC3BrpC,aAD2B,cAC5Cgf,EAD4C,KACtC4kB,EADsC,KAEnD,MAAO,CACL5kB,KADK,EAELhF,SAJJ,IAQa2vB,cAEX,IAAMC,EAA2BR,KAC3BS,EAA2BT,KAC3BU,EAAwBV,KACxBW,EAA2BX,KAC3BY,EAA0BZ,KAC1Ba,EAAyBb,KAE/B,OACE,sBAAQ3pC,MAAOD,GAAf,WAEE,2BACEC,MAAOD,GADT,WAEE+b,OAFF,UAGE/O,YAHF,WAFF,IASE,2BACE/M,MAAOD,GADT,WAEE+b,OAFF,UAGE/O,YAHF,WATF,IAgBE,2BACE/M,MAAOD,GADT,WAEE+b,OAFF,OAGE/O,YAHF,QAhBF,IAuBE,2BACE/M,MAAOD,GADT,WAEE+b,OAFF,UAGE/O,YAHF,WAvBF,IA8BE,2BACE/M,MAAOD,GADT,WAEE+b,OAFF,SAGE/O,YAHF,UA9BF,IAqCE,2BACE/M,MAAOD,GADT,WAEE+b,OAFF,QAGE/O,YAHF,SA/CC,MA0DDhN,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAF6B,KAI/BmkB,WAAY,CACVhK,OALJ,KC5DMwK,eAAe,OACnB,gCAAiBhsC,KADnB,eAIaisC,cAAoC,IAAD,EAEtBnqC,aAFsB,iBAEvCgf,EAFuC,KAEjC4kB,EAFiC,KAI9C,OACE,sBAAQnkC,MAAOD,GAAf,WACE,sBACEgN,YADF,YAEEwS,KAFF,EAGEhF,SAHF,EAIEvN,KAVD,OAgBDjN,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OC1Ba6kB,cAA4C,IAAD,EAE5BpqC,aAF4B,eAE/C6e,EAF+C,KAExC+mB,EAFwC,KAItD,OACE,sBAAQnmC,MAAOD,GAAf,WACE,sBACEqf,MADF,EAEE7E,SARD,MAcDxa,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,O,SCbM8kB,GAAa,CACjB,CAAEt6B,MADe,aAEjB,CAAEA,MAFe,YAGjB,CAAEA,MAHe,YAIjB,CAAEA,MAJe,YAKjB,CAAEA,MALe,aAMjB,CAAEA,MANJ,SASMm2B,cAAS,OACb,sBAAQoE,MAAR,KACE,sBAAM3M,SAAN,MAFJ,mBAMa4M,cAQX,OACE,uCACE,sBACEzyB,KADF,GAEE+P,OAFF,GAGE7N,SAXAwwB,kBClBFH,GAAa,CACjB,CAAEt6B,MADe,aAEjB,CAAEA,MAFe,YAGjB,CAAEA,MAHe,YAIjB,CAAEA,MAJe,YAKjB,CAAEA,MALe,aAMjB,CAAEA,MANJ,SASMs2B,cAAS,OACb,sBAAoBr2B,YADtB,mBAIay6B,cAQX,OACE,uCACE,sBACE3yB,KADF,GAEEiQ,OAFF,GAGE/N,SAXAwwB,kBCTF/I,eAAa,OACjB,gCAAiBvjC,KADnB,aAIMgoC,cAAS,OACb,sBACEn2B,MADF,WAEEC,YAFF,yBAGEvD,KAJJ,MAQM49B,GAAa,CACjB,CAAEt6B,MADe,aAEjB,CAAEA,MAFe,YAGjB,CAAEA,MAHe,YAIjB,CAAEA,MAJe,YAKjB,CAAEA,MALe,aAMjB,CAAEA,MANJ,SASa26B,cAQX,OACE,uCACE,sBACE5yB,KADF,GAEE+P,OAFF,GAGE7N,SAXAwwB,kBChCKG,cAA0C,OACrD,sBACElrC,MAAOD,GADT,aAEE6Q,WAAY7Q,GAFd,kBAGE8Q,iBAAkB9Q,GAHpB,wBAIEuQ,MAJF,WAKEC,YANG,4BAUDxQ,GAASY,YAAkB,CAC/BwqC,aAAc,CAAEz2B,gBADe,SAE/B02B,kBAAmB,CAAEt+B,MAFU,SAG/Bu+B,wBAAyB,CAAEv+B,MAH7B,UCHMw+B,eAAc,OAClB,gCAAiB7sC,KADnB,aAIa8sC,cAAwC,OACnD,sBACEj7B,MADF,WAEEC,YAFF,yBAGEvD,KAJG,MCHDw+B,eAAa,OACjB,gCAAiB/sC,KADnB,cAIMgtC,eAAe,OACnB,sBAAQzrC,MAAR,EAAsBgN,KADxB,MAIa0+B,cAA0C,OACrD,sBACEp7B,MADF,WAEEC,YAFF,yBAGEC,UAJG,MChBD86B,eAAc,OAClB,wBAAOtrC,MAAP,EAAqByB,OAAQ,CAAC2/B,IADhC,gEAIauK,cAAmD,OAC9D,sBACEr7B,MADF,WAEEC,YAFF,yBAGEvD,KAJG,MCOD49B,GAAa,CACjB,CAAEt6B,MADe,aAEjB,CACEA,MADF,WAEEE,UAVEo7B,YAAoB,OACxB,sBAAQ5rC,MAAO,CAACA,EAAOD,GAAvB,QACE,0BAFJ,UAYE,CAAEuQ,MANe,YAOjB,CAAEA,MAPJ,aAUau7B,cAQX,OACE,uCACE,sBACExzB,KADF,GAEEkC,SAVAwwB,kBAgBFhrC,GAASY,YAAkB,CAC/B0B,UAAW,CACTg8B,QAF6B,IAI/ByN,MAAO,CACLziC,eADK,SAELD,WAFK,SAGL3G,OAHK,GAILD,MAJK,GAKLkjB,kBALK,GAMLrM,aANK,GAOL3E,gBAXJ,aCvCMk2B,GAAa,CACjB,CAAEt6B,MADe,aAEjB,CAAEA,MAFe,YAGjB,CAAEA,MAHe,YAIjB,CAAEA,MAJe,YAKjB,CAAEA,MALe,aAMjB,CAAEA,MANJ,SASay7B,cAQX,OACE,uCACE,sBACE1zB,KADF,GAEEkC,SAVAwwB,kBCSFH,GAAa,CACjB,CAAEt6B,MAAF,QAAkBtD,KAbdg1B,YAAa,OACjB,gCAAiBvjC,KADnB,sBAcE,CAAE6R,MAAF,SAAmBtD,KAVfm1B,YAAW,OACf,gCAAiB1jC,KADnB,oBAWE,CAAE6R,MAAF,eAAyBtD,KAPrBo1B,YAAY,OAChB,gCAAiB3jC,KADnB,sBAUautC,cAQX,OACE,uCACE,sBACE3zB,KADF,GAEEkC,SAVAwwB,kBCrBKkB,cAEX,IAAMC,EAAU3rC,IAAhB,YAcA,OACE,sBACEyM,KAVEsf,YAAa,OACjB,gCAEElmB,IAFF,EAGE3H,KAJJ,WAWIiD,QAfEA,WACJwqC,UADF,mBAJK,oB,UCAMC,cAEX,IAAMD,EAAU3rC,IAAhB,YAeA,OACE,sBACEyM,KAXEsf,YAAa,OACjB,gCAEElmB,IAFF,EAGE3H,KAHF,OAIE2tC,gBAAiB,CAAEvlC,OALvB,SAYInF,QAhBEA,WACJ,mBADF,mBAJK,oBCPD2qC,eAAiB,OACrB,wBACErsC,MADF,EAEEyB,OAAQ,CAAE2/B,IAHd,yEAOakL,eAA6B,OACxC,sBAAQt/B,KAAR,IADK,wBCHMu/B,cAA4B,OACvC,sBACE9tC,KADF,SAEE+D,MAFF,GAGEC,OAHF,GAIE2a,KALG,aCGMovB,cAA0B,OACrC,sBAAM/tC,KAAN,OAAkB+D,MAAlB,GAA6BC,OAA7B,GAAyC2a,KADpC,aCAMqvB,cAAkC,IAAD,EAElBlsC,cAFkB,cAErCmsC,EAFqC,KAE9BC,EAF8B,KAe5C,OACE,sBACE3/B,KATEsf,YAAa,OACjB,gCAEE7tB,KAAMiuC,EAAK,QAHf,oBAUIhrC,QAdEA,WACJirC,GADF,KAJK,SCAMC,cAAiC,IAAD,EAEjBrsC,aAFiB,eAEpCzF,EAFoC,KAE7Bm8B,EAF6B,OAGG12B,cAHH,cAGpCssC,EAHoC,KAGnBC,EAHmB,KAgB3C,OACE,sBACE//B,YADF,WAEEjS,MAFF,EAGE+xC,gBAHF,EAIE3N,aAJF,EAKElyB,KAbEsf,YAAa,OACjB,gCAEE7tB,KAAOouC,EAHX,UAGU,UAWN/L,YAlBEA,WACJgM,GADF,OCZWC,cAAoC,IAAD,EAEpBxsC,aAFoB,eAEvCzF,EAFuC,KAEhCm8B,EAFgC,KAI9C,OACE,sBACEn8B,MADF,EAEEiS,YAFF,kBAGE/M,MAAOD,GAHT,MAIE2N,UAAW3N,GAJb,UAKEszB,WAAYtzB,GALd,WAMEitC,iBAAkBjtC,GANpB,aAOEm/B,aAPF,EAQEhyB,MARF,QASEO,QAdC,aAmBD1N,GAASY,YAAkB,CAC/BssC,MAAO,CAAE5zB,aADsB,IAE/B6zB,UAAW,CAAEpgC,MAFkB,WAG/BqgC,WAAY,CAAErgC,MAHiB,WAI/BsgC,aAAc,CAAEtgC,MAJlB,aCpBaugC,cAAkC,IAAD,EAElB9sC,aAFkB,eAErCzF,EAFqC,KAE9Bm8B,EAF8B,KAI5C,OACE,sBACElqB,YADF,kBAEEjS,MAFF,EAGEokC,aARC,KCIDoO,cAAmBC,MAAsB,uDAAtBA,GAAsB,EACnBhtC,aADmB,cACtCzF,EADsC,KAC/Bm8B,EAD+B,KAE7C,MAAO,CACLn8B,MADK,EAELokC,aAJJ,IAQasO,cAEX,IAAMC,EAAoBH,KACpBI,EAAqBJ,KACrBK,EAAoBL,KAE1B,OACE,0BAEE,2BACEttC,MAAOD,GADT,MAEE2R,KAFF,QAGE3E,YAHF,SAFF,IASE,2BACE/M,MAAOD,GADT,MAEE2R,KAFF,SAGE3E,YAHF,UATF,IAgBE,2BACE/M,MAAOD,GADT,MAEE2R,KAFF,QAGE3E,YAHF,SAvBC,MAkCDhN,GAASY,YAAkB,CAC/BssC,MAAO,CACLhN,OAFJ,KC1Ca2N,cAA6B,IAAD,EAEbrtC,aAFa,eAEhCzF,EAFgC,KAEzBm8B,EAFyB,KAIvC,OACE,sBAAQj3B,MAAOD,GAAf,WAEE,sBACEC,MAAOD,GADT,MAEEjF,MAFF,EAGEokC,aAHF,EAIEnyB,YANJ,WASE,sBACE/M,MAAOD,GADT,MAEEyf,UAFF,EAGEzS,YAjBD,eAwBDhN,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cAF6B,OAI/B2jC,MAAO,CACLrpC,KADK,EAELq8B,OANJ,KCrBMqN,cAAmBC,MAAsB,uDAAtBA,GAAsB,EACnBhtC,aADmB,cACtCzF,EADsC,KAC/Bm8B,EAD+B,KAE7C,MAAO,CACLn8B,MADK,EAELokC,aAJJ,IAQa2O,cAEX,IAAMC,EAAsBR,KACtBS,EAAsBT,KACtBU,EAAmBV,KACnBW,EAAsBX,KACtBY,EAAqBZ,KACrBa,EAAoBb,KACpBc,EAAsBd,KAE5B,OACE,0BAEE,2BACEttC,MAAOD,GADT,MAEE+b,OAFF,UAGE/O,YAHF,WAFF,IASE,2BACE/M,MAAOD,GADT,MAEE+b,OAFF,UAGE/O,YAHF,WATF,IAgBE,2BACE/M,MAAOD,GADT,MAEE+b,OAFF,OAGE/O,YAHF,QAhBF,IAuBE,2BACE/M,MAAOD,GADT,MAEE+b,OAFF,UAGE/O,YAHF,WAvBF,IA8BE,2BACE/M,MAAOD,GADT,MAEE+b,OAFF,SAGE/O,YAHF,UA9BF,IAqCE,2BACE/M,MAAOD,GADT,MAEE+b,OAFF,QAGE/O,YAHF,SArCF,IA4CE,wBAAM/M,MAAOD,GAAb,kBACE,2BACEC,MAAOD,GADT,MAEE+b,OAFF,UAGE/O,YAHF,WAxDD,OAoEDhN,GAASY,YAAkB,CAC/BssC,MAAO,CACLhN,OAF6B,GAI/BU,iBAAkB,CAChBtnB,aADgB,EAEhB4mB,OAFgB,EAGhBvrB,gBAPJ,aCnFa25B,cAAkC,IAAD,EAElB9tC,aAFkB,eAErCzF,EAFqC,KAE9Bm8B,EAF8B,KAGtCqX,EAAaxzC,GAASA,SAA5B,EAEA,OACE,sBACEiS,YADF,kBAEE+O,OAAQwyB,EAAU,UAFpB,SAGE7gC,QAAS6gC,EAAU,GAHrB,mBAIExzC,MAJF,EAKEokC,aAXC,KCMMqP,cAA6C,IAAD,EAE7BhuC,aAF6B,eAEhDzF,EAFgD,KAEzCm8B,EAFyC,KAWvD,OACE,sBACEn8B,MADF,EAEEiS,YAFF,kBAGEC,KAXEsf,YAAa,OACjB,wBACEtsB,MADF,EAEEyB,OAAQ,CAAE2/B,IAHd,iEAYIyL,iBAJF,EAKE3N,aAjBC,KCEMsP,cAA+B,IAAD,EAEfjuC,aAFe,eAElCzF,EAFkC,KAE3Bm8B,EAF2B,OAGK12B,cAHL,cAGlCssC,EAHkC,KAGjBC,EAHiB,KAazC,OACE,sBACEhyC,MADF,EAEEiS,YAFF,WAGEC,KAREsf,YAAa,OACjB,gCAAiB7tB,KAAMouC,EAAe,UADxC,UASIA,gBAJF,EAKE/L,YAdEA,WACJgM,GADF,IAeI5N,aApBC,KCRMuP,cAAgC,IAAD,EAEhBluC,aAFgB,eAEnCzF,EAFmC,KAE5Bm8B,EAF4B,KAI1C,OACE,sBACE/pB,MADF,QAEEH,YAFF,uBAGEjS,MAHF,EAIEokC,aATC,KCIMwP,cAA8B,OACzC,sBAAQ1uC,MAAOD,GAAf,WACE,0BAFG,wCAMDA,GAASY,YAAkB,CAC/B0B,UAAW,CACTg8B,QADS,GAET3iB,YAFS,MAGTF,YAHS,EAITnC,aAJS,EAKTjQ,WALS,SAMTC,eAPJ,YCNaslC,cAAsB,OACjC,sBAAQ3uC,MAAOD,GAAf,WAEE,sBAAQC,MAAOD,GAAf,OAA8B8qC,MAA9B,KACE,0BAHJ,MAME,sBAAQ7qC,MAAOD,GAAf,OAA8B8qC,MAA9B,KACE,0BAPJ,MAUE,sBAAQ7qC,MAAOD,GAAf,OAA8B8qC,MAA9B,KACE,0BAXJ,MAcE,sBAAQ7qC,MAAOD,GAAf,OAA8B8qC,MAA9B,KACE,0BAhBC,QAsBD9qC,GAASY,YAAkB,CAC/B0B,UAAW,CACTuB,KADS,EAET0F,cAH6B,OAK/BslC,OAAQ,CACNhrC,KADM,EAENyF,eAFM,SAGND,WARJ,YCtBaylC,cAA4B,OACvC,sBAAQ7uC,MAAOD,GAAf,WACE,0BAFG,wCAMDA,GAASY,YAAkB,CAC/B0B,UAAW,CACTg8B,QAFJ,MCIMhmB,GAAO,IAAIhV,MAAM,GAAG+Z,KAAK,CAC7B9M,MAD6B,iBAE7BC,YAFF,yBAKau+B,cAEX,IAAMC,cAAsB,OAC1B,sBAAQ/uC,MAAR,GADF,WAIMgvC,cAAiB,OACrB,gCAAiBvwC,KADnB,aAaA,OACE,sBACE4Z,KADF,GAEEhJ,WAZEA,YAAa,IAAGR,EAAH,OAASC,EAAT,eACjB,sBACEwB,MAAUzB,EAAL,WAAmBC,EAD1B,GAEEyB,YAAgB1B,EAAL,iBAAyBC,EAFtC,GAGE9B,KAHF,EAIEwD,UALJ,QCzBI6H,GAAO,IAAIhV,MAAM,GAAG+Z,KAAK,CAC7B9M,MAD6B,iBAE7BC,YAFF,yBAKa0+B,cASX,OACE,sBACEv5B,sBAAuB3V,GADzB,iBAEEsY,KAFF,GAGEhJ,WAXEA,YAAa,IAAGR,EAAH,OAASC,EAAT,eACjB,sBACEwB,MAAUzB,EAAL,WAAmBC,EAD1B,GAEEyB,YAAgB1B,EAAL,iBAAyBC,EAHxC,SAgBI/O,GAASY,YAAkB,CAC/B0P,iBAAkB,CAAEqV,kBADtB,KC1BawpB,cAAgC,OAC3C,sBACElvC,MAAOD,GADT,SAEE6Q,WAAY7Q,GAFd,cAGE8Q,iBAAkB9Q,GAHpB,oBAIEuQ,MAJF,QAKEC,YANG,iBAUDxQ,GAASY,YAAkB,CAC/BwuC,SAAU,CAAE91B,aADmB,GAE/B+1B,cAAe,CAAEtiC,MAFc,WAG/BuiC,oBAAqB,CAAEviC,MAHzB,aCXawiC,cAA8B,OACzC,sBAAUh/B,MADL,WCGMi/B,cAAuC,IAAD,EAEnBhvC,cAFmB,cAE1C0vB,EAF0C,KAEjC+X,EAFiC,KAgBjD,OACE,sBACE13B,MADF,QAEEC,YAFF,cAGEC,UAZEgc,cAAkB,OACtB,sBACExsB,MADF,EAEEiwB,QAFF,EAGEC,SAAU,WAPZ8X,GADF,UCNIwH,eAAiB,OACrB,wBACExvC,MADF,EAEEyB,OAAQ,CAAE2/B,IAHd,8DAOaqO,eAAmC,OAC9C,sBACEn/B,MADF,QAEEC,YAFF,cAGEvD,KAJG,MCADo2B,eAAW,OACf,gCAAiB3kC,KADnB,WAIaixC,cAA2B,OACtC,sBACEp/B,MADF,QAEEC,YAFF,cAGEvD,KAJG,MCTDqL,GAAO,IAAIhV,MAAM,GAAG+Z,KAAK,CAC7B9M,MADF,SAIaq/B,cAMX,OACE,sBACEt3B,KADF,GAEEhJ,WAPEA,YAAa,IAAGR,EAAH,OAASC,EAAT,eACjB,sBAAUwB,MAAUzB,EAAL,WAAmBC,EADpC,SCTIuJ,GAAO,CACX,CAAE/H,MADS,UAEX,CAAEA,MAFS,UAGX,CAAEA,MAAF,SAAmBkP,UAHR,GAIX,CAAElP,MAJJ,WAOas/B,cAAqC,IAAD,EAELrvC,aAFK,iBAExC6Z,EAFwC,KAEzBsnB,EAFyB,KAI/C,OACE,sBACErpB,KADF,GAEE+B,cAFF,EAGEG,SARC,KCNMs1B,cAAmC,IAAD,EAEHtvC,aAFG,iBAEtC6Z,EAFsC,KAEvBsnB,EAFuB,KAIvCrpB,EAAO,CACX,CAAE/H,MAAF,SAAmBM,WAAY7Q,GADpB,eAEX,CAAEuQ,MAFS,UAGX,CAAEA,MAAF,SAAmBM,WAAY7Q,GAHpB,eAIX,CAAEuQ,MAJJ,WAOA,OACE,sBACE+H,KADF,EAEE+B,cAFF,EAGEG,SAfC,KAoBDxa,GAASY,YAAkB,CAC/BmvC,cAAe,CACbhjC,MADa,QAEbF,SAHJ,MCrBMyL,GAAO,CACX,CAAE/H,MADS,UAEX,CAAEA,MAFS,UAGX,CAAEA,MAHS,UAIX,CAAEA,MAJJ,WAOay/B,cAAiC,IAAD,EAEDxvC,aAFC,iBAEpC6Z,EAFoC,KAErBsnB,EAFqB,KAI3C,OACE,sBACErpB,KADF,GAEE+B,cAFF,EAGEG,SARC,KCCD6oB,eAAW,OACf,gCAAiB3kC,KADnB,WAIM4Z,GAAO,CACX,CAAE/H,MAAF,SAAmBtD,KADR,IAEX,CAAEsD,MAAF,SAAmBtD,KAFR,IAGX,CAAEsD,MAAF,SAAmBtD,KAHR,IAIX,CAAEsD,MAAF,SAAmBtD,KAJrB,KAOagjC,cAA+B,IAAD,EAECzvC,aAFD,iBAElC6Z,EAFkC,KAEnBsnB,EAFmB,KAIzC,OACE,sBACErpB,KADF,GAEE+B,cAFF,EAGEG,SARC,KCnBDlC,GAAO,CACX,CAAE/H,MADS,UAEX,CACEA,MADF,SAEEke,SAAU,CACR,CAAEle,MADM,cAER,CAAEA,MANK,gBASX,CAAEA,MATS,UAUX,CAAEA,MAVJ,WAaa2/B,cAAiC,IAAD,EAED1vC,aAFC,iBAEpC6Z,EAFoC,KAErBsnB,EAFqB,KAI3C,OACE,sBACErpB,KADF,GAEE+B,cAFF,EAGEG,SARC,KCbDlC,GAAO,CACX,CAAE/H,MADS,UAEX,CAAEA,MAFS,UAGX,CAAEA,MAHS,UAIX,CAAEA,MAJJ,WAOa4/B,cAAoC,IAAD,EAEJ3vC,aAFI,iBAEvC6Z,EAFuC,KAExBsnB,EAFwB,KAI9C,OACE,sBACEhjC,WADF,YAEE2Z,KAFF,GAGE+B,cAHF,EAIEG,SATC,KCDM41B,cAAkC,IAAD,EAEd5vC,cAFc,cAErC6B,EAFqC,KAE5BguC,EAF4B,KAItCC,aACJD,GADF,IAeA,OACE,sBAAQpwC,MAAOD,GAAf,WACE,sBAAQ2B,QAAR,GADF,gBAIE,sBAAOU,QAAP,GAfF,sBACEyoC,MADF,IAEE7qC,MAAOD,GAFT,gBAGE,0BAHF,qBAIE,sBAAQ2B,QAAR,GALJ,eAuBI3B,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UADS,IAETuY,QAH6B,IAK/BiS,eAAgB,CACdjnC,eADc,SAEdD,WAFc,SAGd5G,MAHc,IAId67B,QATJ,MC/BakS,cAAmC,IAAD,EAEfhwC,cAFe,cAEtC6B,EAFsC,KAE7BguC,EAF6B,KAIvCC,aACJD,GADF,IAYA,OACE,sBAAQpwC,MAAOD,GAAf,WACE,sBAAQ2B,QAAR,GADF,gBAIE,sBACEH,eADF,EAEE0W,cAAelY,GAFjB,SAGEyB,gBAHF,EAIEY,QAJF,GAZF,sBACEyoC,MADF,IAEE7qC,MAAOD,GAFT,gBAGE,0BAJJ,0BAwBIA,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UADS,IAETuY,QAH6B,IAK/BiS,eAAgB,CACdjnC,eADc,SAEdD,WAFc,SAGd5G,MAHc,IAId67B,QAT6B,IAW/B5I,SAAU,CACR/gB,gBAZJ,wBC9BM86B,eAAiB,OACrB,wBACExvC,MADF,EAEEyB,OAAQ,CAAE2/B,IAHd,8DAOM/oB,GAAO,CACX,CAAE/H,MAAF,cAAwBtD,KADb,IAEX,CAAEsD,MAAF,cAAwBtD,KAFb,IAGX,CAAEsD,MAAF,cAAwBtD,KAHb,IAIX,CAAEsD,MAAF,cAAwBtD,KAJ1B,KAOawjC,cAAiD,IAAD,EAErBjwC,cAFqB,cAEpDo9B,EAFoD,KAEvCC,EAFuC,OAGjBr9B,aAHiB,iBAGpD6Z,EAHoD,KAGrCsnB,EAHqC,KAUrD+O,aACJ7S,GADF,IAIA,OACE,sBAAQ59B,MAAOD,GAAf,WACE,sBACEsY,KADF,GAEEjW,QAFF,EAGEgY,cAHF,EAIEG,SAfAm2B,YACJhP,KACA9D,GAFF,IAgBMp8B,gBALF,GAME,sBAAQE,QAAR,GAtBD,kBA8BD3B,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OC3CM6qB,GAAa,CACjB,CAAElkC,KADe,OAEjB,CAAEA,KAFe,aAGjB,CAAEA,KAHe,WAIjB,CAAEA,KAJe,QAKjB,CAAEA,KALe,cAMjB,CAAEA,KANe,YAOjB,CAAEA,KAPe,SAQjB,CAAEA,KARe,eASjB,CAAEA,KATe,aAUjB,CAAEA,KAVe,UAWjB,CAAEA,KAXe,gBAYjB,CAAEA,KAZJ,eAeM4L,GAAO,CACX,CAAE/H,MADS,eAEX,CAAEA,MAFS,eAGX,CAAEA,MAHS,eAIX,CAAEA,MAJJ,gBAOasgC,cAAuC,IAAD,EAEnBrwC,cAFmB,cAE1C6B,EAF0C,KAEjCguC,EAFiC,OAGf7vC,aAAeowC,GAHA,eAG1Cx6B,EAH0C,KAG/B06B,EAH+B,OAIPtwC,aAJO,iBAI1C6Z,EAJ0C,KAI3BsnB,EAJ2B,KAM3C+O,aACJL,GADF,IAIA,OACE,0BAEE,sBACErjC,YADF,mBAEEsL,KAFF,GAGEuZ,eAHF,EAIErX,SANJ,IASE,wBAAMva,MAAOD,GAAb,iBACE,sBACEsY,KADF,GAEEjW,QAFF,EAGE+T,UAAWA,EAHb,KAIEiE,cAJF,EAKEG,SALF,EAME/Y,gBANF,GAOE,sBAAQxB,MAAOD,GAAf,OAA8B2B,QAA9B,GA5BH,mBAsCD3B,GAASY,YAAkB,CAC/BmwC,gBAAiB,CACfznC,eADe,SAEfD,WAFe,SAGf3G,OAJ6B,KAM/BgZ,OAAQ,CACNjZ,MAPJ,OChEM6V,GAAO,CACX,CAAE/H,MADS,eAEX,CAAEA,MAFS,eAGX,CAAEA,MAHS,eAIX,CAAEA,MAJJ,gBAOaygC,cAAyC,IAAD,EAEbxwC,cAFa,cAE5Co9B,EAF4C,KAE/BC,EAF+B,OAGTr9B,aAHS,iBAG5C6Z,EAH4C,KAG7BsnB,EAH6B,KAU7C+O,aACJ7S,GADF,IAIA,OACE,sBAAQ59B,MAAOD,GAAf,WACE,sBACEsY,KADF,GAEEjW,QAFF,EAGEgY,cAHF,EAIEG,SAfAm2B,YACJhP,KACA9D,GAFF,IAgBMp8B,gBALF,GAME,sBAAQE,QAAR,GAtBD,kBA8BD3B,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OCrCMzN,GAAO,CACX,CAAE/H,MADS,eAEX,CAAEA,MAFS,eAGX,CAAEA,MAHS,eAIX,CAAEA,MAJJ,gBAOa0gC,cAA4C,IAAD,EAEhBzwC,cAFgB,cAE/Co9B,EAF+C,KAElCC,EAFkC,OAGZr9B,aAHY,iBAG/C6Z,EAH+C,KAGhCsnB,EAHgC,KAUhD+O,aACJ7S,GADF,IAIA,OACE,sBAAQ59B,MAAOD,GAAf,WACE,sBACEkY,cAAelY,GADjB,SAEEsY,KAFF,GAGEjW,QAHF,EAIEgY,cAJF,EAKEG,SAhBAm2B,YACJhP,KACA9D,GAFF,IAiBMp8B,gBANF,GAOE,sBAAQE,QAAR,GAvBD,kBA+BD3B,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAF6B,KAI/B2P,SAAU,CACR/gB,gBALJ,wBCtCM2D,GAAO,CACX,CAAE/H,MADS,eAEX,CAAEA,MAAF,cAAwBkP,UAFb,GAGX,CAAElP,MAHS,eAIX,CAAEA,MAJJ,gBAOa2gC,cAA+C,IAAD,EAEnB1wC,cAFmB,cAElDo9B,EAFkD,KAErCC,EAFqC,OAGfr9B,aAHe,iBAGlD6Z,EAHkD,KAGnCsnB,EAHmC,KAUnD+O,aACJ7S,GADF,IAIA,OACE,sBAAQ59B,MAAOD,GAAf,WACE,sBACEsY,KADF,GAEEjW,QAFF,EAGEgY,cAHF,EAIEG,SAfAm2B,YACJhP,KACA9D,GAFF,IAgBMp8B,gBALF,GAME,sBAAQE,QAAR,GAtBD,kBA8BD3B,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OC/BMsd,eAAW,OACf,gCAAiB3kC,KADnB,WAIM4Z,GAAO,CACX,CAAE/H,MAAF,cAAwBtD,KADb,IAEX,CAAEsD,MAAF,cAAwBtD,KAFb,IAGX,CAAEsD,MAAF,cAAwBtD,KAHb,IAIX,CAAEsD,MAAF,cAAwBtD,KAJ1B,KAOakkC,cAAuC,IAAD,EAEX3wC,cAFW,cAE1Co9B,EAF0C,KAE7BC,EAF6B,OAGPr9B,aAHO,iBAG1C6Z,EAH0C,KAG3BsnB,EAH2B,KAU3C+O,aACJ7S,GADF,IAIA,OACE,sBAAQ59B,MAAOD,GAAf,WACE,sBACEsY,KADF,GAEEjW,QAFF,EAGEgY,cAHF,EAIEG,SAfAm2B,YACJhP,KACA9D,GAFF,IAgBMp8B,gBALF,GAME,sBAAQE,QAAR,GAtBD,kBA8BD3B,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OC/CMzN,GAAO,CACX,CAAE/H,MADS,eAEX,CAAEA,MAFS,eAGX,CAAEA,MAHS,eAIX,CAAEA,MAJJ,gBAOa6gC,cAA4C,IAAD,EAEhB5wC,cAFgB,cAE/Co9B,EAF+C,KAElCC,EAFkC,OAGZr9B,aAHY,iBAG/C6Z,EAH+C,KAGhCsnB,EAHgC,KAUhD+O,aACJ7S,GADF,IAIA,OACE,sBAAQ59B,MAAOD,GAAf,WACE,sBACErB,WADF,YAEE2Z,KAFF,GAGEjW,QAHF,EAIEgY,cAJF,EAKEG,SAhBAm2B,YACJhP,KACA9D,GAFF,IAiBMp8B,gBANF,GAOE,sBAAQE,QAAR,GAvBD,kBA+BD3B,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OC/BasrB,cAAkC,IAAD,EAEd7wC,cAFc,cAErC6B,EAFqC,KAE5BguC,EAF4B,KAItCiB,aACJjB,GADF,IAIA,OACE,sBACEhuC,QADF,EAEEoS,QAhBJ,sBAAQxU,MAAOD,GAAf,gBACE,0BAFJ,QAkBM2Y,WAHF,EAIElX,gBAJF,GAKE,sBAAQE,QAAR,GAdC,oBAqBD3B,GAASY,YAAkB,CAC/B2wC,eAAgB,CACdjoC,eADc,SAEdD,WAHJ,YCvBMunC,GAAa,CACjB,CAAElkC,KADe,OAEjB,CAAEA,KAFe,aAGjB,CAAEA,KAHe,WAIjB,CAAEA,KAJe,QAKjB,CAAEA,KALe,cAMjB,CAAEA,KANe,YAOjB,CAAEA,KAPe,SAQjB,CAAEA,KARe,eASjB,CAAEA,KATe,aAUjB,CAAEA,KAVe,UAWjB,CAAEA,KAXe,gBAYjB,CAAEA,KAZJ,eAqBa8kC,cAAkC,IAAD,EAEdhxC,cAFc,cAErC6B,EAFqC,KAE5BguC,EAF4B,OAGV7vC,aAAeowC,GAHL,eAGrCx6B,EAHqC,KAG1B06B,EAH0B,KAKtCQ,aACJjB,GADF,IAIA,OACE,0BAEE,sBACErjC,YADF,mBAEEsL,KAFF,GAGEuZ,eAHF,EAIErX,SANJ,IASE,wBAAMva,MAAOD,GAAb,iBACE,sBACEqC,QADF,EAEE+T,UAAWA,EAFb,KAGE3B,QA5BR,sBAAQxU,MAAOD,GAAf,gBACE,0BAFJ,QA8BUyB,gBAJF,GAKE,sBAAQxB,MAAOD,GAAf,OAA8B2B,QAA9B,GAzBH,sBAmCD3B,GAASY,YAAkB,CAC/BmwC,gBAAiB,CACfznC,eADe,SAEfD,WAFe,SAGf3G,OAJ6B,KAM/BgZ,OAAQ,CACNjZ,MAP6B,KAS/B8uC,eAAgB,CACdjoC,eADc,SAEdD,WAFc,SAGdi1B,QAZJ,MCtDamT,cAAoC,IAAD,EAEhBjxC,cAFgB,cAEvC6B,EAFuC,KAE9BguC,EAF8B,KAIxCiB,aACJjB,GADF,IAIA,OACE,sBACEhuC,QADF,EAEEoS,QAhBJ,sBAAQxU,MAAOD,GAAf,gBACE,0BAFJ,QAkBMyB,gBAHF,GAIE,sBAAQE,QAAR,GAbC,oBAoBD3B,GAASY,YAAkB,CAC/B2wC,eAAgB,CACdjoC,eADc,SAEdD,WAFc,SAGdi1B,QAJJ,MCpBaoT,cAAuC,IAAD,EAEnBlxC,cAFmB,cAE1C6B,EAF0C,KAEjCguC,EAFiC,KAI3CiB,aACJjB,GADF,IAIA,OACE,sBACEn4B,cAAelY,GADjB,SAEEqC,QAFF,EAGEoS,QAjBJ,sBAAQxU,MAAOD,GAAf,gBACE,0BAFJ,QAmBMyB,gBAJF,GAKE,sBAAQE,QAAR,GAdC,oBAqBD3B,GAASY,YAAkB,CAC/B2wC,eAAgB,CACdjoC,eADc,SAEdD,WAFc,SAGdi1B,QAJ6B,IAM/B5I,SAAU,CACR/gB,gBAPJ,wBChCag9B,cAAoC,IAAD,EAEhBnxC,cAFgB,cAEvC0vB,EAFuC,KAE9B+X,EAF8B,KAQ9C,OACE,sBACEhoC,MAAOD,GADT,MAEE0M,KAFF,kBAGEiB,UAAW3N,GAHb,UAIEkwB,QAJF,EAKEC,SAVE+X,YACJD,EADF,OAeIjoC,GAASY,YAAkB,CAC/BgxC,MAAO,CACLnvC,MADK,GAELC,OAH6B,IAK/BmvC,UAAW,CAAE9kC,MALf,aCpBa+kC,cAAkC,IAAD,EAEdtxC,cAFc,cAErC0vB,EAFqC,KAE5B+X,EAF4B,KAQ5C,OACE,sBACEv7B,KAAI,YADN,EAEEwjB,QAFF,EAGEC,SARE+X,YACJD,EADF,OCAW8J,cAA6B,IAAD,EAETvxC,cAFS,cAEhC0vB,EAFgC,KAEvB+X,EAFuB,KAQvC,OACE,sBAAQhoC,MAAOD,GAAf,WAEE,sBACEC,MAAOD,GADT,MAEE0M,KAFF,SAGEwjB,QAHF,EAIEC,SAXA+X,YACJD,EADF,MAcI,sBACEhoC,MAAOD,GADT,MAEE0M,KAFF,WAGE+S,UAZJ,IAeE,sBACExf,MAAOD,GADT,MAEE0M,KAFF,mBAGEwjB,SAHF,EAIEzQ,UA5BD,MAmCDzf,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETE,SAH6B,QAK/BmoC,MAAO,CACL1R,OANJ,KChCM8R,cAAmBnJ,MAAyB,0DAClBroC,aADkB,cACzC0vB,EADyC,KAChC+X,EADgC,KAG1CC,cACJD,EADF,IAIA,MAAO,CACL/X,QADK,EAELC,SATJ,IAaa8hB,cAEX,IAAMC,EAAsBF,KACtBG,EAAsBH,KACtBI,EAAmBJ,KACnBK,EAAsBL,KACtBM,EAAqBN,KACrBO,EAAoBP,KACpBQ,EAAsBR,KAE5B,OACE,sBAAQ/xC,MAAOD,GAAf,WAEE,2BACEC,MAAOD,GADT,MAEE+b,OAFF,UAGErP,KAHF,WAFF,IASE,2BACEzM,MAAOD,GADT,MAEE+b,OAFF,UAGErP,KAHF,WATF,IAgBE,2BACEzM,MAAOD,GADT,MAEE+b,OAFF,OAGErP,KAHF,QAhBF,IAuBE,2BACEzM,MAAOD,GADT,MAEE+b,OAFF,UAGErP,KAHF,WAvBF,IA8BE,2BACEzM,MAAOD,GADT,MAEE+b,OAFF,SAGErP,KAHF,UA9BF,IAqCE,2BACEzM,MAAOD,GADT,MAEE+b,OAFF,QAGErP,KAHF,SArCF,IA4CE,wBAAMzM,MAAOD,GAAb,kBACE,2BACEC,MAAOD,GADT,MAEE+b,OAFF,UAGErP,KAHF,WAxDD,OAoED1M,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETE,SAH6B,QAK/BmoC,MAAO,CACL1R,OAN6B,GAQ/BU,iBAAkB,CAChBtnB,aADgB,EAEhB4mB,OAFgB,EAGhB5B,QAHgB,EAIhB3pB,gBAZJ,aClFa89B,cAAuC,IAAD,EAEPjyC,aAFO,cAE1C6Z,EAF0C,KAE3BsnB,EAF2B,KAQjD,OACE,0BAEE,sBAAM1hC,MAAOD,GAAb,KAA0Bm+B,SAA1B,iCAFF,GAME,sBACE9jB,cADF,EAEE8V,SAbA+X,YACJvG,EADF,KAcM,sBAAO1hC,MAAOD,GAAd,MAA4B0M,KAH9B,aAIE,sBAAOzM,MAAOD,GAAd,MAA4B0M,KAJ9B,aAKE,sBAAOzM,MAAOD,GAAd,MAA4B0M,KApB7B,gBA2BM1M,GAASY,YAAkB,CACtC8L,KAAM,CACJqO,eAFoC,GAItC62B,MAAO,CACL72B,eALG,KCvBDzC,GAAO,CACX,CAAE5L,KADS,YAEX,CAAEA,KAFS,YAGX,CAAEA,KAHJ,aAMagmC,cAAkC,IAAD,EAEAlyC,aAFA,iBAErCqxB,EAFqC,KAErB8gB,EAFqB,KAQ5C,OACE,sBAAQ1yC,MAAOD,GAAf,WACE,sBACEsY,KADF,GAEErL,KARAsf,cAAa,OACjB,gCAAiB7tB,KAAM2D,EAAO,mBADhC,yBASMwvB,eAHF,EAIErX,SAdD,MAoBDxa,GAASY,YAAkB,CAC/B0B,UAAW,CACTI,OAFJ,OChCM4V,GAAO,CACX,CAAE5L,KADS,YAEX,CAAEA,KAAF,WAAoB+S,UAFT,GAGX,CAAE/S,KAHJ,aAMakmC,cAAuC,IAAD,EAELpyC,aAFK,iBAE1CqxB,EAF0C,KAE1B8gB,EAF0B,KAIjD,OACE,sBAAQ1yC,MAAOD,GAAf,WACE,sBACEsY,KADF,GAEEuZ,eAFF,EAGErX,SATD,MAeDxa,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OCrBMzN,GAAO,CACX,CAAE5L,KADS,YAEX,CAAEA,KAFS,YAGX,CAAEA,KAHJ,aAMammC,cAAoC,IAAD,EAEFryC,aAAe8X,GAFb,eAEvCuZ,EAFuC,KAEvB8gB,EAFuB,KAI9C,OACE,sBAAQ1yC,MAAOD,GAAf,WACE,sBACEsY,KADF,GAEEuZ,eAFF,EAGErX,SATD,MAeDxa,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OCrBa+sB,cAEX,IAAMx6B,EAAO,CACX,CAAE5L,KADS,YAEX,CAAEA,KAAF,WAAoBiB,UAAW3N,GAFpB,SAGX,CAAE0M,KAHJ,aAF+C,EAQHlM,aARG,iBAQxCqxB,EARwC,KAQxB8gB,EARwB,KAU/C,OACE,sBAAQ1yC,MAAOD,GAAf,WACE,sBACEszB,WAAYtzB,GADd,WAEE+yC,iBAAkB/yC,GAFpB,iBAGEsrB,aAActrB,GAHhB,aAIEsY,KAJF,EAKEuZ,eALF,EAMErX,SAlBD,MAwBDxa,GAASY,YAAkB,CAC/B0B,UAAW,CACTI,OAF6B,KAI/B4wB,WAAY,CACVvmB,MAL6B,QAO/BgmC,iBAAkB,CAChBhmC,MAR6B,QAU/Bue,aAAc,CACZhS,aAX6B,GAa/B05B,QAAS,CACPjmC,MADO,MAEPF,SAfJ,MCxBMyL,GAAO,CACX,CAAE5L,KADS,YAEX,CAAEA,KAFS,YAGX,CAAEA,KAHJ,aAMaumC,cAAyC,IAAD,EAEPzyC,aAAe,CAAC8X,GAAD,GAAUA,GAFlB,gBAE5CuZ,EAF4C,KAE5B8gB,EAF4B,KAInD,OACE,sBAAQ1yC,MAAOD,GAAf,WACE,sBACEsY,KADF,GAEEoZ,aAFF,EAGEG,eAHF,EAIErX,SAVD,MAgBDxa,GAASY,YAAkB,CAC/B0B,UAAW,CACTI,OAFJ,OCtBM4V,GAAO,CACX,CAAE5L,KADS,YAEX,CAAEA,KAFS,YAGX,CAAEA,KAHJ,aAMawmC,cAAmC,IAAD,EAED1yC,aAFC,eAEtCqxB,EAFsC,KAEtB8gB,EAFsB,KAI7C,OACE,sBAAQ1yC,MAAOD,GAAf,WACE,sBACEsY,KADF,GAEEoZ,aAFF,EAGEG,eAHF,EAIErX,SAVD,MAgBDxa,GAASY,YAAkB,CAC/B0B,UAAW,CACTI,OAFJ,OCtBM4V,GAAO,CACX,CAAE5L,KADS,YAEX,CAAEA,KAFS,YAGX,CAAEA,KAHJ,aAMaymC,cAAmC,IAAD,EAED3yC,aAFC,iBAEtCqxB,EAFsC,KAEtB8gB,EAFsB,KAI7C,OACE,sBAAQ1yC,MAAOD,GAAf,WACE,sBACEsY,KADF,GAEEuZ,eAFF,EAGErX,SATD,MAeDxa,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OCrBMqtB,cAAoBC,MAA4B,uDAA5BA,KAA4B,EACR7yC,aADQ,cAC7CqxB,EAD6C,KAC7B8gB,EAD6B,KAEpD,MAAO,CACL9gB,eADK,EAELrX,SAJJ,IAQMlC,GAAO,CACX,CAAE5L,KADS,YAEX,CAAEA,KAFS,YAGX,CAAEA,KAHJ,aAMa4mC,cAEX,IAAMC,EAAqBH,KACrBI,EAAsBJ,KACtBK,EAAqBL,KAE3B,OACE,0BAEE,2BACEnzC,MAAOD,GADT,OAEEsY,KAFF,GAGE3G,KAHF,QAIE3E,YAJF,SAFF,IAUE,2BACE/M,MAAOD,GADT,OAEEsY,KAFF,GAGE3G,KAHF,SAIE3E,YAJF,UAVF,IAkBE,2BACE/M,MAAOD,GADT,OAEEsY,KAFF,GAGE3G,KAHF,QAIE3E,YAJF,SAzBC,MAqCDhN,GAASY,YAAkB,CAC/B8yC,OAAQ,CACNxT,OAFJ,KCnDM5nB,GAAO,CACX,CAAE5L,KADS,YAEX,CAAEA,KAFS,YAGX,CAAEA,KAHS,YAIX,CAAEA,KAJJ,aAOainC,cAA8B,IAAD,EAEInzC,aAFJ,iBAEjCqxB,EAFiC,KAEjB8gB,EAFiB,KAIxC,OACE,sBAAQ1yC,MAAOD,GAAf,WAEE,sBACEC,MAAOD,GADT,OAEEsY,KAFF,GAGEtL,YAHF,SAIE6kB,eAJF,EAKErX,SAPJ,IAUE,sBACEva,MAAOD,GADT,OAEEsY,KAFF,GAGEtL,YAHF,WAIEyS,UAJF,EAKEjF,SApBD,MA2BDxa,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAET7G,OAH6B,KAK/BgxC,OAAQ,CACN7vC,KADM,EAEN8I,iBAPJ,KC/BMymC,cAAoBC,MAA4B,uDAA5BA,KAA4B,EACR7yC,aADQ,cAC7CqxB,EAD6C,KAC7B8gB,EAD6B,KAEpD,MAAO,CACL9gB,eADK,EAELrX,SAJJ,IAQMlC,GAAO,CACX,CAAE5L,KADS,YAEX,CAAEA,KAFS,YAGX,CAAEA,KAHJ,aAMaknC,cAEX,IAAMC,EAAuBT,KACvBU,EAAuBV,KACvBW,EAAoBX,KACpBY,EAAuBZ,KACvBa,EAAsBb,KACtBc,EAAqBd,KACrBe,EAAuBf,KAE7B,OACE,0BAEE,2BACEnzC,MAAOD,GADT,OAEEsY,KAFF,GAGEyD,OAHF,UAIE/O,YAJF,WAFF,IAUE,2BACE/M,MAAOD,GADT,OAEEsY,KAFF,GAGEyD,OAHF,UAIE/O,YAJF,WAVF,IAkBE,2BACE/M,MAAOD,GADT,OAEEsY,KAFF,GAGEyD,OAHF,OAIE/O,YAJF,QAlBF,IA0BE,2BACE/M,MAAOD,GADT,OAEEsY,KAFF,GAGEyD,OAHF,UAIE/O,YAJF,WA1BF,IAkCE,2BACE/M,MAAOD,GADT,OAEEsY,KAFF,GAGEyD,OAHF,SAIE/O,YAJF,UAlCF,IA0CE,2BACE/M,MAAOD,GADT,OAEEsY,KAFF,GAGEyD,OAHF,QAIE/O,YAJF,SA1CF,IAkDE,wBAAM/M,MAAOD,GAAb,kBACE,2BACEC,MAAOD,GADT,OAEEsY,KAFF,GAGEyD,OAHF,UAIE/O,YAJF,WA9DD,OA2EDhN,GAASY,YAAkB,CAC/B8yC,OAAQ,CACNxT,OAF6B,GAI/BU,iBAAkB,CAChBtnB,aADgB,EAEhB4mB,OAFgB,EAGhBvrB,gBAPJ,aC5FM2D,GAAO,CACX,CAAE5L,KADS,YAEX,CAAEA,KAFS,YAGX,CACEA,KADF,WAEEnO,MAAO,CACL,CAAEmO,KADG,gBAEL,CAAEA,KAPR,mBAYa0nC,cAAkC,IAAD,EAEA5zC,aAFA,iBAErCqxB,EAFqC,KAErB8gB,EAFqB,KAI5C,OACE,sBAAQ1yC,MAAOD,GAAf,WACE,sBACEsY,KADF,GAEEuZ,eAFF,EAGErX,SATD,MAeDxa,GAASY,YAAkB,CAC/B0B,UAAW,CACTI,OAFJ,OCvBM08B,GAAO,IAAI97B,MAAM,GAAG+Z,KAAK,CAC7B9M,MADF,mBAIa8jC,cAAoC,IAAD,EAEtB7zC,aAFsB,eAEvC8X,EAFuC,KAEjCwmB,EAFiC,KAI9Ct+B,eAAgB,WACd8zC,WAAWC,EADb/zC,WAIA,IAAM+zC,aACJzV,EADF,KAUM0V,cAAiB,IAAG1lC,EAAH,OAASC,EAAT,eACrB,sBAAUwB,MAAUzB,EAAL,WAAmBC,EADpC,MAWA,OAAOuJ,WANL,sBACEA,KADF,EAEEhJ,WAHJ,IATE,wBAAMrP,MAAOD,GAAb,SACE,qBAFJ,QAoBIA,GAASY,YAAkB,CAC/B6zC,QAAS,CACP5wC,KADO,EAEPyF,eAFO,SAGPD,WAJJ,YC5CaqrC,cAA6B,OACxC,qBADK,OCIMC,cAAuB,OAClC,sBAAQ10C,MAAOD,GAAf,WAEE,sBAAS2R,KAFX,SAIE,sBAASA,KAJX,UAME,sBAASA,KANX,WAQE,sBAASA,KARX,UAUE,sBAASA,KAXN,YAgBD3R,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETD,eAFS,gBAGTD,WAHS,SAITI,SALJ,UCbamrC,cAA0B,OACrC,sBAAQ30C,MAAOD,GAAf,WAEE,sBAAS+b,OAFX,YAIE,sBAASA,OAJX,YAME,sBAASA,OANX,SAQE,sBAASA,OARX,YAUE,sBAASA,OAVX,WAYE,sBAASA,OAZX,UAcE,wBAAM9b,MAAOD,GAAb,kBACE,sBAAS+b,OAhBR,eAsBD/b,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETD,eAFS,gBAGTG,SAJ6B,QAM/Bm3B,iBAAkB,CAChBtnB,aADgB,EAEhBglB,QAFgB,GAGhB3pB,gBATJ,aCdakgC,cAAqC,OAChD,sBACEj6C,QADF,GAEEgB,MAFF,GAGEsI,cAAe,CAAEd,WAAY,CAAE0xC,gBAHjC,MAKE,qBANG,QAWDA,G,yIAKF,OACE,wBAAkB70C,MAAOpB,KAAK8E,MADhC,kB,GAL0BnD,IAAxBs0C,oDAWN,IAAMC,GAA0BhvC,GAAhC,IAEMivC,GAAyB,CAC7B71C,KAAM,CACJ81C,WAAY,CACVxyC,MAAO,CACLyyC,KAFQ,UAIVxyC,OAAQ,CACNwyC,KALQ,UAOVvgC,gBAAiB,CACfugC,KATA,WAYJr4C,YAAa,CACXs4C,QAAS,CACPA,SAdA,IAiBJn4C,cAjBI,GAkBJlC,OAnB2B,IAqB7B+B,YAAa,CACXs4C,QAAS,CACPv6C,QAAS,CACP6H,MADO,GAEPC,OAFO,GAGPiS,gBA1BR,4BCnBaygC,cAAgC,OAC3C,sBACEx6C,QADF,GAEEgB,MAFF,GAGEsI,cAAe,CAAEd,WAAY,CAAE0xC,gBAHjC,MAKE,qBANG,QAWDA,G,mLAIJ9jC,UAAY,WACV,iBAAoB,CAACrK,GAArB,U,EAGFsK,WAAa,WACX,sB,wDAIA,OACE,wBACErP,cADF,EAEE3B,MAAOpB,KAAK8E,MAFd,YAGEqN,UAAWnS,KAHb,UAIEoS,WAAYpS,KALhB,iB,GAb0B2B,IAAxBs0C,oDAwBN,IAAMC,GAA0BhvC,GAAhC,IAEMivC,GAAyB,CAC7B71C,KAAM,CACJ81C,WAAY,CACVxyC,MAAO,CACLyyC,KAFQ,UAIVxyC,OAAQ,CACNwyC,KALQ,UAOVvgC,gBAAiB,CACfugC,KATA,WAYJr4C,YAAa,CACXs4C,QAAS,CACPA,SAdA,IAiBJn4C,cAjBI,GAkBJlC,OAAQ,CACNu6C,OAAQ,CACNF,SADM,EAENG,SAtBuB,KA0B7Bz4C,YAAa,CACXs4C,QAAS,CACPv6C,QAAS,CACP6H,MADO,GAEPC,OAFO,GAGPiS,gBAHO,wBAIPlY,MAAO,CACL44C,OAAQ,CACN1gC,gBAlCZ,6BCnCa4gC,cAAkC,OAC7C,sBACE36C,QADF,GAEEgB,MAFF,GAGEsI,cAAe,CAAEd,WAAY,CAAE0xC,gBAHjC,MAKE,sBAAyB/4B,OANtB,aAWD+4B,G,mLAIJ9jC,UAAY,WACV,iBAAoB,CAACrK,GAArB,U,EAGFsK,WAAa,WACX,sB,wDAIA,OACE,wBACErP,cADF,EAEE3B,MAAOpB,KAAK8E,MAFd,YAGEqN,UAAWnS,KAHb,UAIEoS,WAAYpS,KALhB,iB,GAb0B2B,IAAxBs0C,oDAwBN,IAAMC,GAA0BhvC,GAAhC,IAEMivC,GAAyB,CAC7B71C,KAAM,CACJ81C,WAAY,CACVxyC,MAAO,CACLyyC,KAFQ,UAIVxyC,OAAQ,CACNwyC,KALQ,UAOVvgC,gBAAiB,CACfugC,KATA,WAYJr4C,YAAa,CACXs4C,QAAS,CACPA,SAdA,IAiBJn4C,cAAe,CACb+e,OAAQ,CACNy5B,QAAS,CACPL,SAFI,GAINM,OAAQ,CACNN,SAvBF,KA2BJr6C,OAAQ,CACNu6C,OAAQ,CACNF,SADM,EAENG,SA/BuB,KAmC7Bz4C,YAAa,CACXs4C,QAAS,CACPv6C,QAAS,CACP6H,MADO,GAEPC,OAHK,IAKP1F,cAAe,CACb+e,OAAQ,CACNy5B,QAAS,CACP7gC,gBADO,wBAEPlY,MAAO,CACL44C,OAAQ,CACN1gC,gBALA,0BASN8gC,OAAQ,CACN9gC,gBADM,uBAENlY,MAAO,CACL44C,OAAQ,CACN1gC,gBAvDhB,8BCxDa+gC,cAAmC,IAAD,EAEHl1C,aAFG,cAEtC6Z,EAFsC,KAEvBsnB,EAFuB,KAI7C,OACE,sBACEtnB,cADF,EAEEG,SAFF,GAGE,sBAAKjK,MAHP,UAIE,sBAAKA,MAJP,WAKE,sBAAKA,MAVJ,mBCOD0xB,eAAa,OACjB,gCAAiBvjC,KADnB,qBAIM0jC,eAAW,OACf,gCAAiB1jC,KADnB,mBAIM2jC,eAAY,OAChB,gCAAiB3jC,KADnB,oBAIai3C,cAAgC,IAAD,EAEFn1C,aAFE,cAEnCo1C,EAFmC,KAErBC,EAFqB,OAGIr1C,aAHJ,cAGnCs1C,EAHmC,KAGlBC,EAHkB,KAK1C,OACE,0BAEE,sBACE17B,cADF,EAEEG,SAFF,GAGE,sBAAKvN,KAHP,KAIE,sBAAKA,KAJP,KAKE,sBAAKA,KAPT,MAUE,sBACEoN,cADF,EAEEG,SAFF,GAGE,sBAAKjK,MAAL,QAAmBtD,KAHrB,KAIE,sBAAKsD,MAAL,SAAoBtD,KAJtB,KAKE,sBAAKsD,MAAL,eAA0BtD,KArB3B,QCrBM+oC,cAA2B,OACtC,sBACE/1C,MAAOD,GADT,IAEE6Q,WAAY7Q,GAFd,SAGEuQ,MAJG,WAQDvQ,GAASY,YAAkB,CAC/B84B,IAAK,CAAE/kB,gBADwB,WAE/BotB,SAAU,CAAEh1B,MAFd,aCTakpC,cAAyB,OACpC,sBAAK1lC,MADA,WCKM2lC,cAAsC,IAAD,EAEN11C,aAFM,cAEzC6Z,EAFyC,KAE1BsnB,EAF0B,KAIhD,OACE,sBACE1hC,MAAOD,GADT,QAEE25B,YAAa35B,GAFf,OAGEoa,eAAgBpa,GAHlB,iBAIEqa,cAJF,EAKEG,SALF,GAME,sBAAKjK,MAAL,SACE,0BAPJ,UASE,sBAAKA,MAAL,UACE,0BAfD,aAqBDvQ,GAASY,YAAkB,CAC/Bu1C,QAAS,CAAExhC,gBADoB,WAE/B6kB,OAAQ,CAAE7kB,gBAFqB,WAG/ByhC,iBAAkB,CAAEzhC,gBAHtB,aCtBa0hC,cAAoC,IAAD,EAEJ71C,aAFI,cAEvC6Z,EAFuC,KAExBsnB,EAFwB,KAM9C,OACE,sBACEtnB,cADF,EAEE8e,oBALEA,YAAsB,OAAWpqB,IAAvC,GAMIyL,SAHF,GAIE,sBAAKjK,MAAL,SACE,0BALJ,mBAOE,sBAAKA,MAAL,UACE,0BARJ,oBAUE,sBAAKA,MAAL,gBACE,0BAlBD,aCEM+lC,cAAoC,IAAD,EAEJ91C,aAFI,cAEvC6Z,EAFuC,KAExBsnB,EAFwB,KAI9C,OACE,sBACEtnB,cADF,EAEEG,SAFF,GAGE,sBAAKjK,MAAL,SACE,sBAAQtQ,MAAOD,GAAf,cACE,0BALN,oBAQE,sBAAKuQ,MAAL,UACE,sBAAQtQ,MAAOD,GAAf,cACE,0BAVN,qBAaE,sBAAKuQ,MAAL,gBACE,sBAAQtQ,MAAOD,GAAf,cACE,0BApBH,6BA2BDA,GAASY,YAAkB,CAC/B21C,aAAc,CACZxwB,UAFJ,MCrBMkc,eAAa,OACjB,gCAAiBvjC,KADnB,qBAIM0jC,eAAW,OACf,gCAAiB1jC,KADnB,mBAIM2jC,eAAY,OAChB,gCAAiB3jC,KADnB,oBAIa83C,cAAiC,IAAD,EAEHh2C,aAFG,cAEpCo1C,EAFoC,KAEtBC,EAFsB,OAGGr1C,aAHH,cAGpCs1C,EAHoC,KAGnBC,EAHmB,KAK3C,OACE,0BAEE,sBACE17B,cADF,EAEEG,SAFF,GAGE,sBAAKvN,KAAL,IACE,sBAAQhN,MAAOD,GAAf,cACE,0BALN,oBAQE,sBAAKiN,KAAL,IACE,sBAAQhN,MAAOD,GAAf,cACE,0BAVN,qBAaE,sBAAKiN,KAAL,IACE,sBAAQhN,MAAOD,GAAf,cACE,0BAjBR,4BAsBE,sBACEqa,cADF,EAEEG,SAFF,GAGE,sBAAKjK,MAAL,QAAmBtD,KAAnB,IACE,sBAAQhN,MAAOD,GAAf,cACE,0BALN,oBAQE,sBAAKuQ,MAAL,SAAoBtD,KAApB,IACE,sBAAQhN,MAAOD,GAAf,cACE,0BAVN,qBAaE,sBAAKuQ,MAAL,eAA0BtD,KAA1B,IACE,sBAAQhN,MAAOD,GAAf,cACE,0BA3CL,8BAoDDA,GAASY,YAAkB,CAC/B21C,aAAc,CACZxwB,UAFJ,MC3EMkc,eAAa,OACjB,wBACEhiC,MADF,EAEEyB,OAAQ,CAAE2/B,IAHd,2EAOaoV,cAAoC,OAC/C,sBACElmC,MADF,QAEEtD,KAHG,MCADg1B,eAAa,OACjB,gCAAiBvjC,KADnB,qBAIag4C,cAAsB,OACjC,sBACEnmC,MADF,QAEEtD,KAHG,MCLM0pC,cAA0B,OACrC,0BAEE,sBAAM12C,MAAOD,GAAb,KAA0BrB,WAA1B,WAFF,WAIE,sBAAMsB,MAAOD,GAAb,KAA0BrB,WAA1B,QAJF,QAME,wBAAMsB,MAAOD,GAAb,sBACE,sBAAMC,MAAOD,GAAb,KAA0BrB,WAA1B,eARC,kBAcDqB,GAASY,YAAkB,CAC/B8L,KAAM,CACJwzB,OAF6B,GAI/B0W,qBAAsB,CACpBt9B,aADoB,EAEpB4mB,OAFoB,EAGpBvrB,gBAPJ,aCjBakiC,cAAyB,OACpC,0BAEE,sBAAM52C,MAAOD,GAAb,KAA0Bm+B,SAA1B,MAFF,MAIE,sBAAMl+B,MAAOD,GAAb,KAA0Bm+B,SAA1B,MAJF,MAME,sBAAMl+B,MAAOD,GAAb,KAA0Bm+B,SAA1B,MANF,MAQE,sBAAMl+B,MAAOD,GAAb,KAA0Bm+B,SAA1B,MARF,MAUE,sBAAMl+B,MAAOD,GAAb,KAA0Bm+B,SAA1B,MAVF,MAYE,sBAAMl+B,MAAOD,GAAb,KAA0Bm+B,SAA1B,MAZF,MAcE,sBAAMl+B,MAAOD,GAAb,KAA0Bm+B,SAA1B,MAdF,MAgBE,sBAAMl+B,MAAOD,GAAb,KAA0Bm+B,SAA1B,MAhBF,MAkBE,sBAAMl+B,MAAOD,GAAb,KAA0Bm+B,SAA1B,MAlBF,MAoBE,sBAAMl+B,MAAOD,GAAb,KAA0Bm+B,SAA1B,MApBF,MAsBE,sBAAMl+B,MAAOD,GAAb,KAA0Bm+B,SAA1B,MAtBF,MAwBE,sBAAMl+B,MAAOD,GAAb,KAA0Bm+B,SAA1B,MAxBF,MA0BE,sBAAMl+B,MAAOD,GAAb,KAA0Bm+B,SAA1B,SA3BG,WAgCDn+B,GAASY,YAAkB,CAC/B8L,KAAM,CACJwzB,OAFJ,KCnCa4W,cAA4B,OACvC,sBAAM72C,MAAOD,GAAb,MADK,gBAIDA,GAASY,YAAkB,CAC/B8L,KAAM,CACJK,MADI,UAEJF,SAHJ,MCLakqC,cAA0B,OACrC,0BADK,gBCOMC,cAAuB,OAClC,0BAEE,sBAAM/2C,MAAOD,GAAb,KAA0B+b,OAA1B,WAFF,WAIE,sBAAM9b,MAAOD,GAAb,KAA0B+b,OAA1B,WAJF,WAME,sBAAM9b,MAAOD,GAAb,KAA0B+b,OAA1B,QANF,QAQE,sBAAM9b,MAAOD,GAAb,KAA0B+b,OAA1B,WARF,WAUE,sBAAM9b,MAAOD,GAAb,KAA0B+b,OAA1B,UAVF,UAYE,sBAAM9b,MAAOD,GAAb,KAA0B+b,OAA1B,SAZF,SAcE,wBAAM9b,MAAOD,GAAb,kBACE,sBAAMC,MAAOD,GAAb,KAA0B+b,OAA1B,WAhBC,cAsBD/b,GAASY,YAAkB,CAC/B8L,KAAM,CACJwzB,OAF6B,GAI/BU,iBAAkB,CAChBtnB,aADgB,EAEhB4mB,OAFgB,EAGhBvrB,gBAPJ,a,mkBChCA,EAIO,ICQsB,G,GDRhBsiC,cAAmC,OAC9C,0BAEE,sBAAer7C,MAAf,IACE,sBAAMqE,MAAO,CAAE8a,eAAf,IACE,0BAJN,uBAQE,sBAAenf,MAAf,IACE,sBAAMqE,MAAO,CAAE8a,eAAf,IACE,0BAVN,sBAcE,sBAAenf,MAAK,UAAc,wBAAlC,SACE,sBAAMqE,MAAO,CAAE8a,eAAf,IACE,sBAAMgB,OAAN,WAjBD,gCEAMm7B,cAAqC,IAAD,EAEjB12C,cAFiB,cAExC0vB,EAFwC,KAE/B+X,EAF+B,KAQ/C,OACE,sBACE/X,QADF,EAEExjB,KAFF,kBAGEiB,UAAW3N,GAHb,KAIEmwB,SATE+X,YACJD,EADF,OAcIjoC,GAASY,YAAkB,CAC/B8L,KAAM,CACJK,MADI,UAEJF,SAHJ,MCnBasqC,cAAmC,IAAD,EAEf32C,cAFe,cAEtC0vB,EAFsC,KAE7B+X,EAF6B,KAQ7C,OACE,sBACEv7B,KAAI,YADN,EAEEwjB,QAFF,EAGEC,SARE+X,YACJD,EADF,OCAWmP,cAA8B,IAAD,EAEV52C,cAFU,cAEjC0vB,EAFiC,KAExB+X,EAFwB,KAQxC,OACE,sBAAQhoC,MAAOD,GAAf,WAEE,sBACEC,MAAOD,GADT,OAEE0M,KAFF,SAGEwjB,QAHF,EAIEC,SAXA+X,YACJD,EADF,MAcI,sBACEhoC,MAAOD,GADT,OAEE0M,KAFF,WAGE+S,UAZJ,IAeE,sBACExf,MAAOD,GADT,OAEE0M,KAFF,mBAGEwjB,SAHF,EAIEzQ,UA5BD,MAmCDzf,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETE,SAH6B,QAK/B4tC,OAAQ,CACNnX,OANJ,KChCMoX,cAAoBzO,MAAyB,0DACnBroC,aADmB,cAC1C0vB,EAD0C,KACjC+X,EADiC,KAG3CC,cACJD,EADF,IAIA,MAAO,CACL/X,QADK,EAELC,SATJ,IAaaonB,cAEX,IAAMC,EAAuBF,KACvBG,EAAuBH,KACvBI,EAAoBJ,KACpBK,EAAuBL,KACvBM,EAAsBN,KACtBO,EAAqBP,KACrBQ,EAAuBR,KAE7B,OACE,sBAAQr3C,MAAOD,GAAf,WAEE,2BACEC,MAAOD,GADT,OAEE0M,KAFF,UAGEqP,OAHF,WAFF,IASE,2BACE9b,MAAOD,GADT,OAEE0M,KAFF,UAGEqP,OAHF,WATF,IAgBE,2BACE9b,MAAOD,GADT,OAEE0M,KAFF,OAGEqP,OAHF,QAhBF,IAuBE,2BACE9b,MAAOD,GADT,OAEE0M,KAFF,UAGEqP,OAHF,WAvBF,IA8BE,2BACE9b,MAAOD,GADT,OAEE0M,KAFF,SAGEqP,OAHF,UA9BF,IAqCE,2BACE9b,MAAOD,GADT,OAEE0M,KAFF,QAGEqP,OAHF,SArCF,IA4CE,wBAAM9b,MAAOD,GAAb,kBACE,2BACEC,MAAOD,GADT,OAEE0M,KAFF,UAGEqP,OAHF,WAxDD,OAoED/b,GAASY,YAAkB,CAC/B0B,UAAW,CACTiH,cADS,MAETE,SAH6B,QAK/B4tC,OAAQ,CACNnX,OAN6B,GAQ/BU,iBAAkB,CAChBtnB,aADgB,EAEhB4mB,OAFgB,EAGhBvrB,gBAXJ,aCpFaojC,cAAsC,IAAD,EAElBv3C,cAFkB,cAEzC6B,EAFyC,KAEhCguC,EAFgC,KAI1C2H,aACJ3H,GADF,IAIA,OACE,sBACEhuC,QADF,EAEEqK,KAFF,MAGEiB,UAAW3N,GAHb,YAIEyB,gBAJF,GAKE,sBAAQE,QAAR,GAdC,oBAqBD3B,GAASY,YAAkB,CAC/Bq3C,YAAa,CACXlrC,MADW,QAEXF,SAHJ,MChBM+jC,GAAa,CACjB,CAAElkC,KADe,OAEjB,CAAEA,KAFe,aAGjB,CAAEA,KAHe,WAIjB,CAAEA,KAJe,QAKjB,CAAEA,KALe,cAMjB,CAAEA,KANe,YAOjB,CAAEA,KAPe,SAQjB,CAAEA,KARe,eASjB,CAAEA,KATe,aAUjB,CAAEA,KAVe,UAWjB,CAAEA,KAXe,gBAYjB,CAAEA,KAZJ,eAeawrC,cAAkC,IAAD,EAEd13C,cAFc,cAErC6B,EAFqC,KAE5BguC,EAF4B,OAGV7vC,aAAeowC,GAHL,eAGrCx6B,EAHqC,KAG1B06B,EAH0B,KAKtCkH,aACJ3H,GADF,IAIA,OACE,0BAEE,sBACErjC,YADF,mBAEEsL,KAFF,GAGEuZ,eAHF,EAIErX,SANJ,IASE,wBAAMva,MAAOD,GAAb,iBACE,sBACEqC,QADF,EAEE+T,UAAWA,EAFb,KAGE1J,KAHF,MAIEjL,gBAJF,GAKE,sBAAQxB,MAAOD,GAAf,OAA8B2B,QAA9B,GAzBH,sBAmCD3B,GAASY,YAAkB,CAC/BmwC,gBAAiB,CACfznC,eADe,SAEfD,WAFe,SAGf3G,OAJ6B,KAM/BgZ,OAAQ,CACNjZ,MAPJ,OCxDa01C,cAAoC,IAAD,EAEhB33C,cAFgB,cAEvC6B,EAFuC,KAE9BguC,EAF8B,KAIxC2H,aACJ3H,GADF,IAIA,OACE,sBACEhuC,QADF,EAEEqK,KAFF,MAGEjL,gBAHF,GAIE,sBAAQE,QAAR,GAbC,oBCCMy2C,cAAuC,IAAD,EAEnB53C,cAFmB,cAE1C6B,EAF0C,KAEjCguC,EAFiC,KAI3C2H,aACJ3H,GADF,IAIA,OACE,sBACEn4B,cAAelY,GADjB,SAEEqC,QAFF,EAGEqK,KAHF,MAIEjL,gBAJF,GAKE,sBAAQE,QAAR,GAdC,oBAqBD3B,GAASY,YAAkB,CAC/B80B,SAAU,CACR/gB,gBAFJ,wBCrBM0jC,eAAW,OACf,wBACEp4C,MADF,EAEEyB,OAAQ,CAAE2/B,IAHd,8DAOaiX,cAA+C,IAAD,EAE3B93C,cAF2B,cAElD6B,EAFkD,KAEzCguC,EAFyC,KAInD2H,aACJ3H,GADF,IAIA,OACE,sBACEhuC,QADF,EAEEqK,KAFF,MAGEO,KAHF,GAIExL,gBAJF,GAKE,sBAAQE,QAAR,GAdC,oBCFD02C,eAAW,OACf,gCAAiB35C,KADnB,WAIa65C,cAAiC,IAAD,EAEb/3C,cAFa,cAEpC6B,EAFoC,KAE3BguC,EAF2B,KAIrC2H,aACJ3H,GADF,IAIA,OACE,sBACEhuC,QADF,EAEEqK,KAFF,MAGEO,KAHF,GAIExL,gBAJF,GAKE,sBAAQE,QAAR,GAdC,oBCZD62C,eAAW,OACf,wBACEv4C,MADF,EAEEyB,OAAQ,CAAC2/B,IAHb,oEAOaoX,cAAgD,OAC3D,sBAAqBxrC,KADhB,MCJDyrC,eAAW,OACf,gCAAiBh6C,KADnB,WAIai6C,cAA2C,OACtD,sBACE14C,MAAOD,GADT,OAEEiN,KAHG,MAODjN,GAASY,YAAkB,CAC/Bg4C,OAAQ,CAAEjsC,iBADZ,KCPM6rC,eAAW,OACf,gCAAiB95C,KADnB,iBAIam6C,cAAyC,OACpD,sBAAqB5rC,KADhB,MCHDurC,eAAW,OACf,gCAAiB95C,KADnB,iBAIMg6C,eAAW,OACf,gCAAiBh6C,KADnB,WAIMo6C,eAAW,OACf,gCAAiBp6C,KADnB,oBAIMq6C,eAAa,OACjB,gCAAgC9rC,KADlC,OAIM+rC,eAAa,OACjB,gCAAgC/rC,KADlC,OAIMgsC,eAAa,OACjB,gCAAgChsC,KADlC,OAIaisC,cAEX,IAAMC,eAYN,OACE,sBACE5oC,MADF,oBAEE0rB,YAXF,sBAAYt6B,QADd,IAaIu6B,cAT8B,CAChC,qBADgC,MAEhC,qBAFF,UChCIsc,eAAW,OACf,gCAAiB95C,KADnB,iBAIMq6C,cAAa,OACjB,sBAAqB9rC,KADvB,MAIamsC,cAAkC,OAC7C,0BACE,sBACE7oC,MADF,QAEE2C,UAFF,QAGE+oB,YAAa8c,OAEf,sBACExoC,MADF,SAEE2C,UAFF,SAGE+oB,YAAa8c,SClBbP,eAAW,OACf,gCAAiB95C,KADnB,iBAQa26C,cAAqC,OAChD,sBACEp5C,MAAOD,GADT,cAEEuQ,MAFF,QAGEwrB,SAHF,WAIEE,YARF,sBAAqBhvB,KADvB,KAUI4D,WAAY7Q,GALd,MAMEm8B,cAAen8B,GAPZ,YAWDA,GAASY,YAAkB,CAC/B04C,cAAe,CAAE3kC,gBADc,WAE/BpE,MAAO,CAAExD,MAFsB,WAG/BgvB,SAAU,CAAEhvB,MAHd,aCpBMyrC,eAAW,OACf,gCAAiB95C,KADnB,iBAQa66C,cAAmC,OAC9C,sBACEtd,YALF,sBAAqBhvB,KADvB,KAOIsD,MAHG,uBCVDioC,eAAW,OACf,gCAAiB95C,KADnB,iBAIMo6C,eAAW,OACf,gCAAiBp6C,KADnB,oBAIM25C,eAAW,OACf,gCAAiB35C,KADnB,WAIM+sC,eAAa,OACjB,gCAAiB/sC,KADnB,cAIa86C,cAAuC,IAAD,EAEXh5C,cAFW,cAE1Co9B,EAF0C,KAE7BC,EAF6B,KAI3C4b,EAAW,CACf,CAAElpC,MAAF,QAAkBtD,KADH,IAEf,CAAEsD,MAAF,SAAmBtD,KAFrB,KAKMyjC,aACJ7S,GADF,IAIM6b,cAGJ7b,GAHF,IAuBA,OACE,sBAAQ59B,MAAOD,GAAf,WACE,sBACEuQ,MADF,oBAEE0rB,YAPJ,sBAAqBhvB,KADvB,KASMivB,cArBJ,sBACE75B,QADF,EAEEiW,KAFF,EAGEkC,SAHF,EAIE/Y,gBAJF,GAKE,sBACEwL,KADF,GAEEtL,QARN,SA4BI3B,GAASY,YAAkB,CAC/B0B,UAAW,CACTyjB,UAFJ,OClEa4zB,cACX,IAAM35C,EAASY,GAAf,SAEA,OACE,sBAAQX,MAAOD,EAAf,WACE,sBAAMm+B,SAAN,KAAoBpiB,OAApB,WALC,wCAYDnb,InBPuB,GmBOI,CAC/B0B,UAAW,CACTuB,KADS,EAETyF,eAFS,SAGTD,WAHS,SAITsL,gBALJ,0BnBNS,CACLilC,OAAQ,WACN,IAAMh+C,EAAmB8K,KACzB,OAAO9F,yBAAP,MoBROi5C,cACX,IAAMj+C,EAAQ8K,KAEd,OACE,sBAAQzG,MAAO,CAACD,GAAD,UAAmB,CAAE2U,gBAAiB/Y,EAArD,4BACE,sBAAMuiC,SAAN,KAAoBpiB,OAApB,WALC,wCAYD/b,GAASY,YAAkB,CAC/B0B,UAAW,CACTuB,KADS,EAETyF,eAFS,SAGTD,WAJJ,YCZaywC,cAAwC,IAAD,EAERt5C,aAFQ,cAE3C6Z,EAF2C,KAE5BsnB,EAF4B,KAIlD,OACE,sBACEtnB,cADF,EAEEG,SAFF,GAGE,sBACEswB,MADF,IAEE7qC,MAAOD,GAFT,KAGE,sBAAMm+B,SAAN,MANJ,UAQE,sBACE2M,MADF,IAEE7qC,MAAOD,GAFT,KAGE,sBAAMm+B,SAAN,MAhBD,YAsBDn+B,GAASY,YAAkB,CAC/B84B,IAAK,CACHh3B,OADG,IAEH2G,WAFG,SAGHC,eAJJ,YCtBaywC,cAAsC,IAAD,EAENv5C,aAFM,cAEzC6Z,EAFyC,KAE1BsnB,EAF0B,KAMhD,OACE,sBACEtnB,cADF,EAEE8e,oBALEA,YAAsB,OAAWpqB,IAAvC,GAMIyL,SAHF,GAIE,sBACEswB,MADF,IAEE7qC,MAAOD,GAFT,KAGE,sBAAMm+B,SAAN,MAPJ,UASE,sBACE2M,MADF,IAEE7qC,MAAOD,GAFT,KAGE,sBAAMm+B,SAAN,MAnBD,YAyBDn+B,GAASY,YAAkB,CAC/B84B,IAAK,CACHh3B,OADG,IAEH2G,WAFG,SAGHC,eAJJ,YCzBa0wC,cAAsC,IAAD,EAENx5C,aAFM,cAEzC6Z,EAFyC,KAE1BsnB,EAF0B,KAIhD,OACE,sBACEtnB,cADF,EAEEG,SAFF,GAGE,sBACEswB,MADF,IAEE7qC,MAAOD,GAFT,KAGE,sBAAMm+B,SAAN,MANJ,UAQE,sBACE2M,MADF,IAEE7qC,MAAOD,GAFT,KAGE,sBAAMm+B,SAAN,MAhBD,YAsBDn+B,GAASY,YAAkB,CAC/B84B,IAAK,CACHh3B,OADG,IAEH2G,WAFG,SAGHC,eAJJ,YCba2wC,GC6BAC,SAAa,KAC8F,IAOhHj0C,EAP+G,mMASzF,cAExB,OAAO,GAAP,MAAmBrK,MAAnB,EAA0BkJ,YADNq1C,GAAgBA,EAApC,MAViH,uBAcpF,YAAoE,IAAD,EACzD,EADyD,MACxFh0C,EADwF,eACvEC,EADuE,wBAE1FzC,EAAsB,oBAA5B,GAEA,OACE,+BAEE0C,IAHJ,MAlBiH,wDA2BjH,OACE,kBAAC1F,GAAD,cACG9B,KAFL,0BA3BiH,GAO/F2B,IAP+F,WA6C/G45C,EAAkB55C,gBAVlBgG,SAAkB,KACtB,OAEE,+BAEEL,aAJJ,QAgBF,OALAi0C,cAA8Bp0C,eAAyBA,EAAvDo0C,KAEA3zC,KAAqB2zC,EAArB3zC,GAGO2zC,EDlFoCF,EAVvCE,YAAkB,IAAGt1C,EAAH,cAAgBlJ,EAAhB,eACtB,sBAAQqE,MAAO6E,EAAf,WACE,sBACE7E,MAAO,CAAE8M,MAAOnR,EADlB,0BAEEuiC,SAFF,MAFJ,iEAUyE,SAAAviC,GAAK,MAAK,CACjF0G,UAAW,CACTuB,KADS,EAETyF,eAFS,SAGTD,WAHS,SAITsL,gBAAiB/Y,EALd,2BE2KDy+C,GAAS,CACbC,kBAAmB,kBAAM3c,GAAuB,GADnC,sBAEb4c,uBAAwB,kBAAM5c,GAAuB,GAFxC,2BAGb6c,4BAA6B,kBAAM7c,GAAuB,GAH7C,gCAIb8c,wBAAyB,kBAAM9c,GAAuB,GAJzC,4BAKb+c,iBAAkB,kBAAM/c,GAAuB,GALlC,qBAMbgd,mBAAoB,kBAAMhd,GAAuB,GANpC,uBAObid,mBAAoB,kBAAMjd,GAAuB,GAPpC,uBAQbkd,qBAAsB,kBAAMld,GAAuB,GARtC,yBASbmd,sBAAuB,kBAAMnd,GAAuB,GATvC,0BAUbod,oBAAqB,kBAAMpd,GAAuB,GAVrC,wBAWbqd,mBAAoB,kBAAMrd,GAAuB,GAXpC,uBAYbsd,YAAa,kBAAMtd,GAAuB,GAZ7B,gBAabud,kBAAmB,kBAAMvd,GAAuB,GAbnC,sBAcbwd,WAAY,kBAAMxd,GAAuB,GAd5B,eAebyd,8BAA+B,kBAAMzd,GAAuB,GAf/C,kCAgBb0d,4BAA6B,kBAAM1d,GAAuB,GAhB7C,gCAiBb2d,iCAAkC,kBAAM3d,GAAuB,GAjBlD,qCAkBb4d,+BAAgC,kBAAM5d,GAAuB,GAlBhD,mCAmBb6d,4BAA6B,kBAAM7d,GAAuB,GAnB7C,gCAoBb8d,0BAA2B,kBAAM9d,GAAuB,GApB3C,8BAqBb+d,iCAAkC,kBAAM/d,GAAuB,GArBlD,qCAsBbge,kBAAmB,kBAAMhe,GAAuB,GAtBnC,sBAuBbie,YAAa,kBAAMje,GAAuB,GAvB7B,gBAwBbke,cAAe,kBAAMle,GAAuB,GAxB/B,kBAyBbme,kBAAmB,kBAAMne,GAAuB,GAzBnC,sBA0Bboe,WAAY,kBAAMpe,GAAuB,GA1B5B,eA2Bbqe,aAAc,kBAAMre,GAAuB,GA3B9B,iBA4Bbse,aAAc,kBAAMte,GAAuB,GA5B9B,iBA6Bbue,eAAgB,kBAAMve,GAAuB,GA7BhC,mBA8Bbwe,sBAAuB,kBAAMxe,GAAuB,GA9BvC,0BA+Bbye,yBAA0B,kBAAMze,GAAuB,GA/B1C,6BAgCb0e,mBAAoB,kBAAM1e,GAAuB,GAhCpC,uBAiCb2e,uBAAwB,kBAAM3e,GAAuB,GAjCxC,2BAkCb4e,gBAAiB,kBAAM5e,GAAuB,GAlCjC,oBAmCb6e,kBAAmB,kBAAM7e,GAAuB,GAnCnC,sBAoCb8e,qBAAsB,kBAAM9e,GAAuB,GApCtC,yBAqCb+e,sBAAuB,kBAAM/e,GAAuB,GArCvC,0BAsCbgf,eAAgB,kBAAMhf,GAAuB,GAtChC,mBAuCbif,kBAAmB,kBAAMjf,GAAuB,GAvCnC,sBAwCbkf,qBAAsB,kBAAMlf,GAAuB,GAxCtC,yBAyCbmf,eAAgB,kBAAMnf,GAAuB,GAzChC,mBA0Cbof,eAAgB,kBAAMpf,GAAuB,GA1ChC,mBA2Cbqf,oBAAqB,kBAAMrf,GAAuB,GA3CrC,wBA4Cbsf,uBAAwB,kBAAMtf,GAAuB,GA5CxC,2BA6Cbuf,yBAA0B,kBAAMvf,GAAuB,GA7C1C,6BA8Cbwf,iBAAkB,kBAAMxf,GAAuB,GA9ClC,qBA+Cbyf,gBAAiB,kBAAMzf,GAAuB,GA/CjC,oBAgDb0f,aAAc,kBAAM1f,GAAuB,GAhD9B,iBAiDb2f,wBAAyB,kBAAM3f,GAAuB,GAjDzC,4BAkDb4f,sBAAuB,kBAAM5f,GAAuB,GAlDvC,0BAmDb6f,sBAAuB,kBAAM7f,GAAuB,GAnDvC,0BAoDb8f,oBAAqB,kBAAM9f,GAAuB,GApDrC,wBAqDb+f,eAAgB,kBAAM/f,GAAuB,GArDhC,mBAsDbggB,eAAgB,kBAAMhgB,GAAuB,GAtDhC,mBAuDbigB,wBAAyB,kBAAMjgB,GAAuB,GAvDzC,4BAwDbkgB,oBAAqB,kBAAMlgB,GAAuB,GAxDrC,wBAyDbmgB,uBAAwB,kBAAMngB,GAAuB,GAzDxC,2BA0DbogB,iBAAkB,kBAAMpgB,GAAuB,GA1DlC,qBA2DbqgB,iBAAkB,kBAAMrgB,GAAuB,GA3DlC,qBA4DbsgB,sBAAuB,kBAAMtgB,GAAuB,GA5DvC,0BA6DbugB,eAAgB,kBAAMvgB,GAAuB,GA7DhC,mBA8DbwgB,iBAAkB,kBAAMxgB,GAAuB,GA9DlC,qBA+DbygB,mBAAoB,kBAAMzgB,GAAuB,GA/DpC,uBAgEb0gB,2BAA4B,kBAAM1gB,GAAuB,GAhE5C,+BAiEb2gB,mBAAoB,kBAAM3gB,GAAuB,GAjEpC,uBAkEb4gB,aAAc,kBAAM5gB,GAAuB,GAlE9B,iBAmEb6gB,aAAc,kBAAM7gB,GAAuB,GAnE9B,iBAoEb8gB,gCAAiC,kBAAM9gB,GAAuB,GApEjD,oCAqEb+gB,8BAA+B,kBAAM/gB,GAAuB,GArE/C,kCAsEbghB,gCAAiC,kBAAMhhB,GAAuB,GAtEjD,oCAuEbihB,yCAA0C,kBAAMjhB,GAAuB,GAvE1D,6CAwEbkhB,4BAA6B,kBAAMlhB,GAAuB,GAxE7C,gCAyEbmhB,kBAAmB,kBAAMnhB,GAAuB,GAzEnC,sBA0EbohB,gBAAiB,kBAAMphB,GAAuB,GA1EjC,oBA2EbqhB,cAAe,kBAAMrhB,GAAuB,GA3E/B,kBA4EbshB,sBAAuB,kBAAMthB,GAAuB,GA5EvC,0BA6EbuhB,mBAAoB,kBAAMvhB,GAAuB,GA7EpC,uBA8EbwhB,kBAAmB,kBAAMxhB,GAAuB,GA9EnC,sBA+EbyhB,gBAAiB,kBAAMzhB,GAAuB,GA/EjC,oBAgFb0hB,iBAAkB,kBAAM1hB,GAAuB,GAhFlC,qBAiFb2hB,gBAAiB,kBAAM3hB,GAAuB,GAjFjC,oBAkFb4hB,mBAAoB,kBAAM5hB,GAAuB,GAlFpC,uBAmFb6hB,iBAAkB,kBAAM7hB,GAAuB,GAnFlC,qBAoFb8hB,UAAW,kBAAM9hB,GAAuB,GApF3B,cAqFb+hB,YAAa,kBAAM/hB,GAAuB,GArF7B,gBAsFbgiB,YAAa,kBAAMhiB,GAAuB,GAtF7B,gBAuFbiiB,iBAAkB,kBAAMjiB,GAAuB,GAvFlC,qBAwFbkiB,4BAA6B,kBAAMliB,GAAuB,GAxF7C,gCAyFbmiB,cAAe,kBAAMniB,GAAuB,GAzF/B,kBA0FboiB,eAAgB,kBAAMpiB,GAAuB,GA1FhC,mBA2FbqiB,oBAAqB,kBAAMriB,GAAuB,GA3FrC,wBA4FbsiB,YAAa,kBAAMtiB,GAAuB,GA5F7B,gBA6FbuiB,kBAAmB,kBAAMviB,GAAuB,GA7FnC,sBA8FbwiB,kBAAmB,kBAAMxiB,GAAuB,GA9FnC,sBA+FbyiB,kBAAmB,kBAAMziB,GAAuB,GA/FnC,sBAgGb0iB,sBAAuB,kBAAM1iB,GAAuB,GAhGvC,0BAiGb2iB,oBAAqB,kBAAM3iB,GAAuB,GAjGrC,wBAkGb4iB,sBAAuB,kBAAM5iB,GAAuB,GAlGvC,0BAmGb6iB,yBAA0B,kBAAM7iB,GAAuB,GAnG1C,6BAoGb8iB,iBAAkB,kBAAM9iB,GAAuB,GApGlC,qBAqGb+iB,gBAAiB,kBAAM/iB,GAAuB,GArGjC,oBAsGbgjB,oBAAqB,kBAAMhjB,GAAuB,GAtGrC,wBAuGbijB,kBAAmB,kBAAMjjB,GAAuB,GAvGnC,sBAwGbkjB,gBAAiB,kBAAMljB,GAAuB,GAxGjC,oBAyGbmjB,cAAe,kBAAMnjB,GAAuB,GAzG/B,kBA0GbojB,gBAAiB,kBAAMpjB,GAAuB,GA1GjC,oBA2GbqjB,mBAAoB,kBAAMrjB,GAAuB,GA3GpC,uBA4GbsjB,iBAAkB,kBAAMtjB,GAAuB,GA5GlC,qBA6GbujB,kBAAmB,kBAAMvjB,GAAuB,GA7GnC,sBA8GbwjB,gCAAiC,kBAAMxjB,GAAuB,GA9GjD,oCA+GbyjB,sBAAuB,kBAAMzjB,GAAuB,GA/GvC,0BAgHb0jB,wBAAyB,kBAAM1jB,GAAuB,GAhHzC,4BAiHb2jB,2BAA4B,kBAAM3jB,GAAuB,GAjH5C,+BAkHb4jB,8BAA+B,kBAAM5jB,GAAuB,GAlH/C,kCAmHb6jB,sBAAuB,kBAAM7jB,GAAuB,GAnHvC,0BAoHb8jB,2BAA4B,kBAAM9jB,GAAuB,GApH5C,+BAqHb+jB,iBAAkB,kBAAM/jB,GAAuB,GArHlC,qBAsHbgkB,iBAAkB,kBAAMhkB,GAAuB,GAtHlC,qBAuHbikB,mBAAoB,kBAAMjkB,GAAuB,GAvHpC,uBAwHbkkB,sBAAuB,kBAAMlkB,GAAuB,GAxHvC,0BAyHbmkB,mBAAoB,kBAAMnkB,GAAuB,GAzHpC,uBA0HbokB,iBAAkB,kBAAMpkB,GAAuB,GA1HlC,qBA2HbqkB,YAAa,kBAAMrkB,GAAuB,GA3H7B,gBA4HbskB,YAAa,kBAAMtkB,GAAuB,GA5H7B,gBA6HbukB,sBAAuB,kBAAMvkB,GAAuB,GA7HvC,0BA8HbwkB,iBAAkB,kBAAMxkB,GAAuB,GA9HlC,qBA+HbykB,sBAAuB,kBAAMzkB,GAAuB,GA/HvC,0BAgIb0kB,mBAAoB,kBAAM1kB,GAAuB,GAhIpC,uBAiIb2kB,oBAAqB,kBAAM3kB,GAAuB,GAjIrC,wBAkIb4kB,wBAAyB,kBAAM5kB,GAAuB,GAlIzC,4BAmIb6kB,kBAAmB,kBAAM7kB,GAAuB,GAnInC,sBAoIb8kB,kBAAmB,kBAAM9kB,GAAuB,GApInC,sBAqIb+kB,WAAY,kBAAM/kB,GAAuB,GArI5B,eAsIbglB,aAAc,kBAAMhlB,GAAuB,GAtI9B,iBAuIbilB,aAAc,kBAAMjlB,GAAuB,GAvI9B,iBAwIbklB,iBAAkB,kBAAMllB,GAAuB,GAxIlC,qBAyIbmlB,mBAAoB,kBAAMnlB,GAAuB,GAzIpC,uBA0IbolB,mBAAoB,kBAAMplB,GAAuB,GA1IpC,uBA2IbqlB,aAAc,kBAAMrlB,GAAuB,GA3I9B,iBA4IbslB,gBAAiB,kBAAMtlB,GAAuB,GA5IjC,oBA6IbulB,2BAA4B,kBAAMvlB,GAAuB,GA7I5C,+BA8IbwlB,sBAAuB,kBAAMxlB,GAAuB,GA9IvC,0BA+IbylB,wBAAyB,kBAAMzlB,GAAuB,GA/IzC,4BAgJb0lB,kBAAmB,kBAAM1lB,GAAuB,GAhJnC,sBAiJb2lB,eAAgB,kBAAM3lB,GAAuB,GAjJhC,mBAkJb4lB,iBAAkB,kBAAM5lB,GAAuB,GAlJlC,qBAmJb6lB,eAAgB,kBAAM7lB,GAAuB,GAnJhC,mBAoJb8lB,qBAAsB,kBAAM9lB,GAAuB,GApJtC,yBAqJb+lB,mBAAoB,kBAAM/lB,GAAuB,GArJpC,uBAsJbgmB,mBAAoB,kBAAMhmB,GAAuB,GAtJpC,uBAuJbimB,gBAAiB,kBAAMjmB,GAAuB,GAvJjC,oBAwJbkmB,0BAA2B,kBAAMlmB,GAAuB,GAxJ3C,8BAyJbmmB,YAAa,kBAAMnmB,GAAuB,GAzJ7B,gBA0JbomB,gBAAiB,kBAAMpmB,GAAuB,GA1JjC,oBA2JbqmB,eAAgB,kBAAMrmB,GAAuB,GA3JhC,mBA4JbsmB,kBAAmB,kBAAMtmB,GAAuB,GA5JnC,sBA6JbumB,gBAAiB,kBAAMvmB,GAAuB,GA7JjC,oBA8JbwmB,aAAc,kBAAMxmB,GAAuB,GA9J9B,iBA+JbymB,yBAA0B,kBAAMzmB,GAAuB,GA/J1C,6BAgKb0mB,oBAAqB,kBAAM1mB,GAAuB,GAhKrC,wBAiKb2mB,kBAAmB,kBAAM3mB,GAAuB,GAjKnC,sBAkKb4mB,aAAc,kBAAM5mB,GAAuB,GAlK9B,iBAmKb6mB,aAAc,kBAAM7mB,GAAuB,GAnK9B,iBAoKb8mB,qBAAsB,kBAAM9mB,GAAuB,GApKtC,yBAqKb+mB,iBAAkB,kBAAM/mB,GAAuB,GArKlC,qBAsKbgnB,mBAAoB,kBAAMhnB,GAAuB,GAtKpC,uBAuKbinB,sBAAuB,kBAAMjnB,GAAuB,GAvKvC,0BAwKbknB,8BAA+B,kBAAMlnB,GAAuB,GAxK/C,kCAyKbmnB,gBAAiB,kBAAMnnB,GAAuB,GAzKjC,oBA0KbonB,sCAAuC,kBAAMpnB,GAAuB,GA1KvD,0CA2KbqnB,iCAAkC,kBAAMrnB,GAAuB,GA3KlD,qCA4KbsnB,+BAAgC,kBAAMtnB,GAAuB,GA5KhD,mCA6KbunB,qBAAsB,kBAAMvnB,GAAuB,GA7KtC,yBA8KbwnB,wBAAyB,kBAAMxnB,GAAuB,GA9KzC,4BA+KbynB,2BAA4B,kBAAMznB,GAAuB,GA/K5C,+BAgLb0nB,yBAA0B,kBAAM1nB,GAAuB,GAhL1C,6BAiLb2nB,sBAAuB,kBAAM3nB,GAAuB,GAjLvC,0BAkLb4nB,yBAA0B,kBAAM5nB,GAAuB,GAlL1C,6BAmLb6nB,oBAAqB,kBAAM7nB,GAAuB,GAnLrC,wBAoLb8nB,uBAAwB,kBAAM9nB,GAAuB,GApLxC,2BAqLb+nB,qBAAsB,kBAAM/nB,GAAuB,GArLtC,yBAsLbgoB,qBAAsB,kBAAMhoB,GAAuB,GAtLtC,yBAuLbioB,sBAAuB,kBAAMjoB,GAAuBsc,GAvLtD,2BA0LM4L,GAAWC,aAAqBzL,GAAQ,CAAE0L,WAAhD,SACaC,GAAeC,4BAAiBJ,GAAU,CAAEK,QAAlD,S,0OClXA,IAAMC,GAAoB,CAC/BznD,KAD+B,WAE/Bo2B,MAIO,aAAc,CACnBrxB,IADmB,cAEjB,OAAO2iD,GAFX,OAOF,IAAMA,eAAe,MAAW,CAC9BC,eAAgB,mBAiBlB,SAAsB1iD,GAAQ,IACpBjF,EAAgBiF,EADG,KACb1D,EAAU0D,EADG,QAEiB/C,aAFjB,GAEnB8B,EAFmB,SAEXwK,EAFW,YAEG4Z,EAFH,8BAG3B,OACE,wBACEpoB,KAAM4nD,GADR,GAEE30C,KAFF,EAGE5E,MAHF,EAIE9M,MALJ,IApB2BsmD,C,iWAnB7B,EAmB0C,CAAD,CAAG7nD,KAAH,GADpB,OAIf4nD,IAAqC,oTAA3C,I,6oBCtBA,EAkBA,IAAaE,GAAb,yLAEwB,CACpBvvB,eAAgB,IAAIrvB,KAAJ,MADI,GAEpB6+C,oBAJJ,wEAQQ5nD,KAAK8E,MAAM+iD,UAAY7nD,KAAK8E,MAAM+iD,WAAap4B,EAAnD,UACEzvB,KAAK8nD,qBATX,yCAaoC,IAAD,OAC/B/+C,YAAgB/I,KAAKpC,MAArBmL,eAA2C,CACzCG,QADyC,EAEzCL,SAFyC,IAGzCX,iBAHyC,EAIzCS,OAAQC,QAAUA,KAJpBG,cAKS,kBAAM,EALfA,4BAdJ,6CAuBI/I,KAAK0E,SAAS,CAAEkjD,oBAvBpB,sDA2BI,IAAM1pC,EAA0Cle,KAAKpC,MAAMw6B,eAAe2vB,YAAY,CACpFh5B,WAAY,CAAC,EADuE,GAEpFC,YAAa,CAAC,EAFhB,KAIMjoB,EAAsB,CAC1B,CACEqC,MAAOpJ,KAAKpC,MAAMw6B,eAAe2vB,YAAY,CAC3Ch5B,WAAY,CAAC,EAD8B,GAE3CC,YAAa,CAAC,EAJpB,SASA,OACE,kBAACjmB,GAAA,EAAD,MACE3H,MAAO,CAACD,GAAD,UAAmB,CAAE+c,QAD9B,KAEE,kBAACnV,GAAA,EAAD,OACElG,OAAQ7C,KAAK8E,MADf,MAEE1D,MAAO,CAACD,GAAD,MAAe,CAAE4F,UA7ClC,wCAqDI,OAD+B/G,KADA,yBAEN,KAAUA,KArDvC,iCAAsC2B,IAAtC,WAyDMR,GAASY,YAAkB,CAC/B0B,UAAU,GAAD,GACJ1B,KADI,oBAEPyI,WAFO,SAGPC,eAHO,SAIPqL,gBAL6B,SAO/BkyC,MAAM,GAAD,CACHpkD,WADG,EAEHC,YAFG,GAGA9B,KAHA,oBAIHkmD,WAXJ,cC7CaC,GAAb,YAEE,cAA2B,IAAD,sBACxB,iCADwB,MAKJ,CACpBC,QANwB,mBASF,WAEpB,WAAc,CAAEA,QAAhB,IACAC,KAZsB,sBAgBJ,YACpB1iD,aAjBwB,oBAoBF,WACtB,OAAO,qBAAwB,QArBP,qBAwBN,YAClB,OAAO2iD,KAzBiB,iBA4BL,YACnB,IAAMC,EAAyBC,OAAW,YACxC,OAAOC,mBADT,mBAIA,OAAOC,YAjCiB,oBA8CF,WACtB,OACE,wBACEC,WAAY,EADd,cAEEC,SAAU,EAFZ,cAGEC,QAAS,EAHX,YAIEC,gBApDoB,KAExBT,uBAJJ,uJAuCYU,EAAkBC,EAvC9B,MAuCmBR,EAAWQ,EAvC9B,yBA0CWN,YAAY,CACjBK,GAAS9oD,KAAKgpD,UADG,GAEjBT,GAAUvoD,KAAKipD,WA5CrB,sFA4DI,OACE,kBAAC,IAAD,cACGjpD,KAAKpC,MAAMuqD,OAASnoD,KAAK8E,MAAzB,SAA0C9E,KAD7C,gBAEE,sBACE6nD,SAAU7nD,KAAKpC,MADjB,OAEEoqD,MAAOhoD,KAAK8E,MAjEtB,iBAAuCnD,IAAvC,WCVMk9B,GAAS,CACbqqB,MADa,GAEbC,KAFF,IAKML,GAAQ,CACZ,mBAAoBxqB,EADR,KAEZ,iBAAkBA,EAFpB,MAKMrI,GAAyB,CAAC,GAAhC,IC5BA,IDiCe,WAAO,IAAD,EAEOt0B,aAAyB88B,GAFhC,kBAEZ1hC,EAFY,KAEL2hC,EAFK,KAQb0qB,EAAsD,CAC1DrtD,QAD0D,GAE1DgB,MAAO8hC,GAFmD,GAI1Dx5B,cAJF,IAOMgkD,EAA+C,CACnDtsD,MADmD,EAEnD2hC,SAFmD,EAGnDC,WAdIA,WACJ,OAAO5hC,IAAU0hC,GADnB,OAiBA,OACE,kBAAC,IAAD,cACE,sBAAcxI,MADhB,KAEE,sBAAmB8yB,OAAQ,CAAED,MAA7B,IAAsCQ,OAAQhrB,EAA9C,OACE,sBAAcrI,MADhB,KAEE,uBACE,2BACE,kBAAC,GAAD,UAAuB/5B,MAAvB,GACE,qBA7Bd,a,8x1IEnCA,IAAIqtD,EAAM,CACT,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAASC,EAAeC,GACvB,IAAIvoC,EAAKwoC,EAAsBD,GAC/B,OAAOE,EAAoBzoC,GAE5B,SAASwoC,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEL,EAAKE,GAAM,CACpC,IAAII,EAAI,IAAI91B,MAAM,uBAAyB01B,EAAM,KAEjD,MADAI,EAAEC,KAAO,mBACHD,EAEP,OAAON,EAAIE,GAEZD,EAAeO,KAAO,WACrB,OAAO5tD,OAAO4tD,KAAKR,IAEpBC,EAAeQ,QAAUN,EACzBpuD,EAAOC,QAAUiuD,EACjBA,EAAetoC,GAAK,K,oBCnRpB,IAAIqoC,EAAM,CACT,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAASC,EAAeC,GACvB,IAAIvoC,EAAKwoC,EAAsBD,GAC/B,OAAOE,EAAoBzoC,GAE5B,SAASwoC,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEL,EAAKE,GAAM,CACpC,IAAII,EAAI,IAAI91B,MAAM,uBAAyB01B,EAAM,KAEjD,MADAI,EAAEC,KAAO,mBACHD,EAEP,OAAON,EAAIE,GAEZD,EAAeO,KAAO,WACrB,OAAO5tD,OAAO4tD,KAAKR,IAEpBC,EAAeQ,QAAUN,EACzBpuD,EAAOC,QAAUiuD,EACjBA,EAAetoC,GAAK,K,mBCnRpB5lB,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,8B","file":"static/js/app.1c4a0f6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/splash.4b06b531.png\";","/**\n * Safely retrieves R value of T object with reducer\n *\n * @param value (T | undefined) - unsafe object which should be processed\n * @param reducer ((T) => R) - `value` processing lambda. Called if `value` is not `undefined`\n *\n * @return (R | undefined) - object returned by `reducer` if `value` is not `undefined`, `undefined` otherwise\n **/\nexport function safe<T, R>(value: T | undefined, reducer: (value: T) => R): R | undefined {\n  if (value) {\n    return reducer(value);\n  }\n  return undefined;\n}\n\n/**\n * Maps 2-dim array to 1-dim\n *\n * @param params (T[][]) - 2-dim array\n *\n * @return 1-dim array\n */\nexport function flatten<T>(params: T[][]): T[] {\n  return [].concat(...params);\n}\n\n/**\n * Removes all duplicates from array\n *\n * @param params (T[]) - array with possible duplicate values\n *\n * @return (T[]) - processed array\n */\nexport function noDuplicates<T>(params: T[]): T[] {\n  return [...new Set(params)];\n}\n\n\n/**\n * Removes null and undefined values from array\n *\n * @param params (T[]) - array with possible null values\n *\n * @return (T[]) - processed array\n */\nexport function noNulls<T>(params: T[]): T[] {\n  return params.filter(Boolean);\n}\n\n/**\n * Returns Object with string keys from array type [string, IndexSignatureBase]\n *\n * @param array like [string, IndexSignatureBase]\n *\n * @return object with string keys and IndexSignatureBase values\n */\nexport function toObject(array: [string, any][]): any {\n  return array.reduce((p, c) => {\n    if (p && p.hasOwnProperty(c[0])) {\n      p[c[0]] = { ...p[c[0]], ...c[1] };\n    } else {\n      p[c[0]] = c[1];\n    }\n    return p;\n  }, {});\n}\n","import {\n  ThemeMappingType,\n  ControlMappingType,\n  AppearanceMappingType,\n  MappingType,\n  StatelessMappingType,\n} from '@eva-design/dss';\nimport { safe } from '../common';\n\nexport function getComponentDefaultAppearance(mapping: ThemeMappingType,\n                                              component: string): string | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string => {\n    const { appearances } = value.meta;\n\n    return Object.keys(appearances).find((appearance: string): boolean => {\n      return appearances[appearance].default === true;\n    });\n  });\n}\n\nexport function getComponentDefaultVariants(mapping: ThemeMappingType,\n                                            component: string): string[] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[] => {\n    const { variantGroups } = value.meta;\n\n    return Object.keys(variantGroups).map((group: string): string => {\n      return Object.keys(variantGroups[group]).find((variant: string): boolean => {\n        return variantGroups[group][variant].default === true;\n      });\n    });\n  });\n}\n\nexport function getComponentDefaultState(mapping: ThemeMappingType,\n                                         component: string): string | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string => {\n    const { states } = value.meta;\n\n    return Object.keys(states).find((state: string): boolean => {\n      return states[state].default === true;\n    });\n  });\n}\n\nexport function getComponentVariantGroups(mapping: ThemeMappingType,\n                                          component: string): string[] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[] => {\n    const { variantGroups } = value.meta;\n\n    return Object.keys(variantGroups);\n  });\n}\n\nexport function getComponentVariants(mapping: ThemeMappingType,\n                                     component: string): string[][] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[][] => {\n    const { variantGroups } = value.meta;\n\n    return Object.keys(variantGroups).map((group: string): string[] => {\n      return Object.keys(variantGroups[group]);\n    });\n  });\n}\n\nexport function getComponentStates(mapping: ThemeMappingType,\n                                   component: string): string[] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[] => {\n    const { states } = value.meta;\n\n    return Object.keys(states);\n  });\n}\n\nexport function getStateAppearanceMapping(mapping: ThemeMappingType,\n                                          component: string,\n                                          appearance: string,\n                                          state: string): StatelessMappingType | undefined {\n\n  const appearanceMapping: MappingType = getAppearanceMapping(mapping, component, appearance);\n\n  return safe(appearanceMapping, (value: MappingType): StatelessMappingType => {\n    return getStateMapping(value, state);\n  });\n}\n\nexport function getStatelessAppearanceMapping(mapping: ThemeMappingType,\n                                              component: string,\n                                              appearance: string): StatelessMappingType | undefined {\n\n  const appearanceMapping: MappingType = getAppearanceMapping(mapping, component, appearance);\n\n  return safe(appearanceMapping, (value: MappingType): StatelessMappingType => {\n    const { state, ...params } = value;\n\n    return params as StatelessMappingType;\n  });\n}\n\nexport function getStateVariantMapping(mapping: ThemeMappingType,\n                                       component: string,\n                                       appearance: string,\n                                       variant: string,\n                                       state: string): MappingType | undefined {\n\n  const variantMapping: MappingType = getVariantMapping(mapping, component, appearance, variant);\n\n  return safe(variantMapping, (value: MappingType): MappingType => {\n    return getStateMapping(value, state);\n  });\n}\n\nexport function getStatelessVariantMapping(mapping: ThemeMappingType,\n                                           component: string,\n                                           appearance: string,\n                                           variant: string): StatelessMappingType | undefined {\n\n  const variantMapping: MappingType = getVariantMapping(mapping, component, appearance, variant);\n\n  return safe(variantMapping, (value: MappingType): StatelessMappingType => {\n    const { state, ...params } = value;\n\n    return params as StatelessMappingType;\n  });\n}\n\nexport function getComponentMapping(mapping: ThemeMappingType,\n                                    component: string): ControlMappingType | undefined {\n\n  return mapping[component];\n}\n\nfunction getAppearance(mapping: ThemeMappingType,\n                       component: string,\n                       appearance: string): AppearanceMappingType | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): AppearanceMappingType => {\n    return value.appearances[appearance];\n  });\n}\n\nfunction getAppearanceMapping(mapping: ThemeMappingType,\n                              component: string,\n                              appearance: string): MappingType | undefined {\n\n  const appearanceConfig: AppearanceMappingType = getAppearance(mapping, component, appearance);\n\n  return safe(appearanceConfig, (value: AppearanceMappingType): MappingType => {\n    return value.mapping;\n  });\n}\n\nfunction getVariantMapping(mapping: ThemeMappingType,\n                           component: string,\n                           appearance: string,\n                           variant: string): MappingType | undefined {\n\n  const appearanceConfig: AppearanceMappingType = getAppearance(mapping, component, appearance);\n\n  return safe(appearanceConfig, (value: AppearanceMappingType): MappingType => {\n    return safe(value.variantGroups, (groupValue): MappingType => {\n\n      const groupName = Object.keys(groupValue).find((group: string) => {\n        return groupValue[group][variant] !== undefined;\n      });\n\n      return safe(groupName, (groupNameValue): MappingType => {\n        return groupValue[groupNameValue][variant];\n      });\n    });\n  });\n}\n\nfunction getStateMapping(mapping: MappingType, state: string): StatelessMappingType | undefined {\n\n  return safe(mapping.state, (value): StatelessMappingType => {\n    return value[state];\n  });\n}\n","import {\n  ThemeMappingType,\n  ControlMappingType,\n  ThemedStyleType,\n  MappingType,\n  StrictTheme,\n  StatelessMappingType,\n  ParameterType,\n} from '@eva-design/dss';\nimport {\n  safe,\n  noNulls,\n  noDuplicates,\n} from '../common';\nimport {\n  getComponentDefaultAppearance,\n  getComponentDefaultVariants,\n  getComponentDefaultState,\n  getStatelessAppearanceMapping,\n  getStatelessVariantMapping,\n  getStateAppearanceMapping,\n  getStateVariantMapping,\n} from '../mapping';\n\nexport const SEPARATOR_MAPPING_ENTRY = '.';\n\n/**\n * Creates style object for variant/list of variants(optional) and its state/list of states(optional)\n *\n * Example\n *\n * appearance = 'outline';\n * variants = ['success', 'large'];\n * state = ['active', 'checked'];\n *\n * a = `default` + `outline`                    - acc appearance (apce) mapping\n *\n * v1 = `success` of `default`                  - `success` variant mapping of `default` apce\n * v2 = `success` of `outline`                  - `success` variant mapping of `outline` apce\n * v3 = `large` of `default`                    - `large` variant mapping of `default` apce\n * v4 = `large` of `outline`                    - `large` variant mapping of `outline` apce\n *\n * s1 = `active` of `default`                   - `active` state mapping of `default` apce\n * s2 = `active` of `outline`                   - `active` state mapping of `outline` apce\n * s3 = `active` of `default success`           - `active` state mapping of `success` variant of `default` apce\n * s4 = `active` of `outline success`           - `active` state mapping of `success` variant of `outline` apce\n * s5 = `active` of `default large`             - `active` state mapping of `large` variant of `default` apce\n * s6 = `active` of `outline large`             - `active` state mapping of `large` variant of `outline` apce\n *\n * s7 = `checked` of `default`                  - `checked` state mapping of `default` apce\n * s8 = `checked` of `outline`                  - `checked` state mapping of `outline` apce\n * s9 = `checked` of `default success`          - `checked` state mapping of `success` variant of `default` apce\n * s10 = `checked` of `outline success`         - `checked` state mapping of `success` variant of `outline` apce\n * s11 = `checked` of `default large`           - `checked` state mapping of `large` variant of `default` apce\n * s12 = `checked` of `outline large`           - `checked` state mapping of `large` variant of `outline` apce\n *\n * s13 = `active.checked` of `default`          - `active.checked` state mapping of `default` apce\n * s14 = `active.checked` of `outline`          - `active.checked` state mapping of `outline` apce\n * s15 = `active.checked` of `default success`  - `active.checked` state mapping of `success` variant of `default` apce\n * s16 = `active.checked` of `outline success`  - `active.checked` state mapping of `success` variant of `outline` apce\n * s17 = `active.checked` of `default large`    - `active.checked` state mapping of `large` variant of `default` apce\n * s18 = `active.checked` of `outline large`    - `active.checked` state mapping of `large` variant of `outline` apce\n *\n * res = a + (v1 + v2 + ... + vn) + (s1 + s2 + ... + sn)\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param appearance: string - appearance applied to component\n * @param variants: string[] - variants applied to component. Default is []\n * @param states: string[] - states in which component is. Default is []\n * @param theme: StrictTheme - theme configuration object. Default is {}\n *\n * @return ThemedStyleType - compiled component styles declared in mappings, mapped to theme values\n */\nexport function createStyle(mapping: ThemeMappingType,\n                            component: string,\n                            appearance: string,\n                            variants: string[] = [],\n                            states: string[] = [],\n                            theme: StrictTheme = {}): ThemedStyleType {\n\n  const normalizedAppearance: string[] = normalizeAppearance(mapping, component, appearance);\n  const normalizedVariants: string[] = normalizeVariants(mapping, component, variants);\n  const normalizedStates: string[] = normalizeStates(mapping, component, states, (state: string): number => {\n    return states.indexOf(state);\n  });\n\n  const appearanceMapping: StatelessMappingType = reduce(normalizedAppearance, apce => {\n    return getStatelessAppearanceMapping(mapping, component, apce);\n  });\n\n  const variantMapping: StatelessMappingType = reduce(normalizedVariants, variant => {\n    return reduce(normalizedAppearance, apce => {\n      return getStatelessVariantMapping(mapping, component, apce, variant);\n    });\n  });\n\n  const stateMapping: StatelessMappingType = reduce(normalizedStates, state => {\n    const appearanceStateMapping = reduce(normalizedAppearance, apce => {\n      return getStateAppearanceMapping(mapping, component, apce, state);\n    });\n\n    const variantStateMapping: StatelessMappingType = reduce(normalizedVariants, variant => {\n      return reduce(normalizedAppearance, apce => {\n        return getStateVariantMapping(mapping, component, apce, variant, state);\n      });\n    });\n\n    return { ...appearanceStateMapping, ...variantStateMapping };\n  });\n\n  const strictlessMapping: StatelessMappingType = {\n    ...appearanceMapping,\n    ...variantMapping,\n    ...stateMapping,\n  };\n\n  return withStrictTokens(strictlessMapping, theme);\n}\n\nexport function createAllStyles(mapping: ThemeMappingType,\n                                component: string,\n                                appearance: string,\n                                variants: string[],\n                                states: string[],\n                                theme: StrictTheme): [string, ThemedStyleType][] {\n\n  const stateless = createStyleEntry(mapping,\n    component,\n    appearance,\n    appearance,\n    '',\n    '',\n    theme,\n  );\n\n  const withStates = states.reduce((acc: [string, ThemedStyleType][], current: string) => {\n    const key = appearance.concat(SEPARATOR_MAPPING_ENTRY, current);\n    const next = createStyleEntry(mapping, component, key, appearance, '', current, theme);\n    return [...acc, next];\n  }, []);\n\n  const withVariants = variants.map(variant => {\n    const key = appearance.concat(SEPARATOR_MAPPING_ENTRY, variant);\n    return createStyleEntry(mapping, component, key, appearance, variant, '', theme);\n  });\n\n  const withVariantStates = variants.reduce((acc: [string, ThemedStyleType][], current: string) => {\n    const next = states.map(state => {\n      const key = appearance.concat(SEPARATOR_MAPPING_ENTRY, current, SEPARATOR_MAPPING_ENTRY, state);\n      return createStyleEntry(mapping, component, key, appearance, current, state, theme);\n    });\n    return [...acc, ...next];\n  }, []);\n\n  return [\n    stateless,\n    ...withStates,\n    ...withVariants,\n    ...withVariantStates,\n  ];\n}\n\nexport function getStyle(mapping: ThemeMappingType,\n                         component: string,\n                         appearance: string,\n                         variants: string[],\n                         states: string[]): ThemedStyleType | undefined {\n\n  return safe(mapping, (themeMapping: ThemeMappingType) => {\n    return safe(themeMapping[component], (componentMapping: ControlMappingType) => {\n\n      const query = findStyleKey(Object.keys(componentMapping), [\n        appearance,\n        ...variants,\n        ...states,\n      ]);\n\n      return componentMapping[query];\n    });\n  });\n}\n\n/**\n * Creates normalized to design system array of component appearances\n *\n * Example:\n *\n * '' => ['default']\n * 'bold' => ['default', 'bold']\n * 'default' => ['default']\n * ...\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param appearance: string - appearance applied to component\n *\n * @return string[] - array of merged appearances\n */\nexport function normalizeAppearance(mapping: ThemeMappingType,\n                                    component: string,\n                                    appearance: string): string[] {\n\n  const defaultAppearance: string = getComponentDefaultAppearance(mapping, component);\n\n  return normalize([defaultAppearance, appearance]);\n}\n\n/**\n * Creates normalized to design system array of component variants\n *\n * Example:\n *\n * [''] => ['default0', 'default1']\n * ['success'] => ['default0', 'default1', 'success']\n * ['default0', 'tiny'] => ['default0', 'default1', 'tiny']\n * ...\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param variants: string[] - variants applied to component\n *\n * @return string[] - array of merged variants\n */\nexport function normalizeVariants(mapping: ThemeMappingType,\n                                  component: string,\n                                  variants: string[]): string[] {\n\n  const defaultVariants: string[] = getComponentDefaultVariants(mapping, component);\n\n  return normalize([...defaultVariants, ...variants]);\n}\n\n/**\n * Creates normalized to design system array of component states\n *\n * Example:\n *\n * [''] => ['default']\n * ['active', 'checked'] => [\n *                           'default',\n *                           'active',\n *                           'default.active',\n *                           'checked',\n *                           'default.active.checked'\n *                          ]\n * ...\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param states: string[] - states in which component is\n * @param stateWeight: (state: string) => number - state weight calculation lambda\n * @param separator - state separator. `.` in example\n *\n * @return string[] - array of merged states\n */\nexport function normalizeStates(mapping: ThemeMappingType,\n                                component: string,\n                                states: string[],\n                                stateWeight: (state: string) => number,\n                                separator: string = SEPARATOR_MAPPING_ENTRY): string[] {\n\n  const defaultState: string = getComponentDefaultState(mapping, component);\n\n  const preprocess: string[] = normalize([defaultState, ...states]);\n  if (preprocess.length === 0) {\n    return preprocess;\n  }\n\n  const variations = createStateVariations([...preprocess], separator, []);\n\n  return variations.sort((lhs: string, rhs: string) => {\n    const lhsWeight = getStateVariationWeight(lhs, separator, stateWeight);\n    const rhsWeight = getStateVariationWeight(rhs, separator, stateWeight);\n    return lhsWeight - rhsWeight;\n  });\n}\n\nfunction createStateVariations(states: string[], separator: string, result: string[] = []): string[] {\n  if (states.length === 0) {\n    return result;\n  }\n\n  const next = states.reduce((acc: string[], current: string) => {\n    const nextItem = acc.map(value => value.concat(separator, current));\n    return [...acc, ...nextItem];\n  }, [states.shift()]);\n\n  return createStateVariations(states, separator, [...result, ...next]);\n}\n\nfunction withStrictTokens(mapping: StatelessMappingType, theme: StrictTheme): StatelessMappingType {\n  return Object.keys(mapping).reduce((acc: StatelessMappingType, next: string): StatelessMappingType => {\n    const currentToken: ParameterType = mapping[next];\n    const nextToken: ParameterType = theme[currentToken] || currentToken;\n\n    return { ...acc, [next]: nextToken };\n  }, {});\n}\n\nfunction getStateVariationWeight(state: string,\n                                 separator: string,\n                                 stateWeight: (state: string) => number): number {\n\n  const parts = state.split(separator);\n  return parts.reduce((acc: number, current: string): number => {\n    return acc + stateWeight(current) + parts.length;\n  }, 0);\n}\n\n/**\n * Finds identical keys across `source` keys array\n *\n * Example:\n *\n * source = ['default.error.small.checked', ...]\n * query = ['default', 'small', 'error', 'checked']\n *\n * will return 'default.error.small.checked'\n *\n * @param source (string[]) - array of style keys\n * @param query (string[]) - array of key parts to search\n *\n * @return (string | undefined) - key identical to some of `source` keys if presents\n */\nexport function findStyleKey(source: string[], query: string[]): string | undefined {\n\n  const partialKeys: string[][] = source.map((key: string) => {\n    return key.split(SEPARATOR_MAPPING_ENTRY);\n  });\n\n  const result: string[][] = partialKeys.filter((partial: string[]) => {\n    return compareArrays(query, partial);\n  });\n\n  return safe(result[0], (value: string[]) => {\n    return value.join(SEPARATOR_MAPPING_ENTRY);\n  });\n}\n\nfunction createStyleEntry(mapping: ThemeMappingType,\n                          component: string,\n                          key: string,\n                          appearance: string,\n                          variant: string = '',\n                          state: string = '',\n                          theme: StrictTheme = {}): [string, ThemedStyleType] {\n\n  const value = createStyle(\n    mapping,\n    component,\n    appearance,\n    variant.split(SEPARATOR_MAPPING_ENTRY),\n    state.split(SEPARATOR_MAPPING_ENTRY),\n    theme,\n  );\n\n  return [key, value];\n}\n\nfunction normalize(params: string[]): string[] {\n  return noNulls(noDuplicates(params));\n}\n\nfunction compareArrays(lhs: string[], rhs: string[]): boolean {\n  const isEqualLength = lhs && rhs && lhs.length === rhs.length;\n  if (!isEqualLength) {\n    return false;\n  }\n\n  return lhs.reduce((acc: boolean, next: string): boolean => acc && rhs.includes(next), true);\n}\n\nfunction reduce(items: string[], next: (item: string) => any): any {\n  return items.reduce((acc, current) => ({ ...acc, ...next(current) }), {});\n}\n","import {\n  ThemeMappingType,\n  ControlMappingType,\n} from '@eva-design/dss';\nimport { Processor } from '../processor';\nimport {\n  getComponentVariants,\n  getComponentStates,\n  SEPARATOR_MAPPING_ENTRY,\n} from '../../service';\n\nexport interface MappingMetaType {\n  name: string;\n  appearance: string;\n  variants: string[];\n  states: string[];\n}\n\nexport class MappingProcessor implements Processor<ThemeMappingType, MappingMetaType[]> {\n\n  public process(params: ThemeMappingType): MappingMetaType[] {\n    return Object.keys(params).reduce((acc: MappingMetaType[], component: string) => {\n      return [\n        ...acc,\n        ...this.getComponentMappingMeta(params, component),\n      ];\n    }, []);\n  }\n\n  private getComponentMappingMeta(mapping: ThemeMappingType, component: string): MappingMetaType[] {\n    const componentMapping: ControlMappingType = mapping[component];\n\n    return Object.keys(componentMapping.appearances).map((appearance: string): MappingMetaType => {\n      return {\n        name: component,\n        appearance: appearance,\n        variants: this.getComponentVariants(mapping, component),\n        states: this.getComponentStates(mapping, component),\n      };\n    });\n  }\n\n  private getComponentVariants(mapping: ThemeMappingType, component: string): string[] {\n    const variants: string[][] = getComponentVariants(mapping, component);\n\n    return this.concatComponentVariants([...variants]);\n  }\n\n  private getComponentStates(mapping: ThemeMappingType, component: string): string[] {\n    const states: string[] = getComponentStates(mapping, component);\n\n    return this.concatComponentStates([...states]);\n  }\n\n  private concatComponentVariants(variants: string[][], result: string[] = []): string[] {\n    if (variants.length === 0) {\n      return result;\n    }\n\n    const concat = variants.reduce((acc: string[], current: string[]) => {\n      return [...acc, ...this.concatVariantGroups(acc, current)];\n    }, variants.shift());\n\n    return this.concatComponentVariants(variants, [...result, ...concat]);\n  }\n\n  private concatVariantGroups(lhs: string[], rhs: string[]): string[] {\n    return lhs.reduce((acc: string[], lhsValue: string) => {\n      const concat = rhs.map(rhsValue => {\n        return lhsValue.concat(SEPARATOR_MAPPING_ENTRY, rhsValue);\n      });\n      return [...acc, ...concat];\n    }, []);\n  }\n\n  private concatComponentStates(states: string[], result: string[] = []): string[] {\n    if (states.length === 0) {\n      return result;\n    }\n\n    const concat = states.reduce((acc: string[], current: string) => {\n      const next = acc.map(value => value.concat(SEPARATOR_MAPPING_ENTRY, current));\n      return [...acc, ...next];\n    }, [states.shift()]);\n\n    return this.concatComponentStates(states, [...result, ...concat]);\n  }\n}\n","import {\n  ThemeStyleType,\n  ThemeMappingType,\n  StrictTheme,\n  ThemedStyleType,\n  ControlThemedStyleType,\n} from '@eva-design/dss';\nimport { MappingMetaType } from '../mapping/mappingProcessor';\nimport { Processor } from '../processor';\nimport {\n  createAllStyles,\n  toObject,\n} from '../../service';\n\nexport interface MappingProcessorParamsType {\n  mapping: ThemeMappingType;\n  meta: MappingMetaType[];\n  theme: StrictTheme;\n}\n\ninterface NoMetaThemeStyleType {\n  [key: string]: {\n    [key: string]: ThemedStyleType,\n  };\n}\n\nexport class MetaProcessor implements Processor<MappingProcessorParamsType, ThemeStyleType> {\n\n  public process(params: MappingProcessorParamsType): ThemeStyleType {\n    const { mapping, meta, theme } = params;\n\n    const entries = meta.reduce((acc: ThemeStyleType, controlMeta: MappingMetaType) => {\n      const { name, appearance, variants, states } = controlMeta;\n\n      const nextAppearanceEntries = createAllStyles(mapping, name, appearance, variants, states, theme);\n      const prevAppearanceStyles = acc[name];\n      const nextAppearanceStyles = toObject(nextAppearanceEntries);\n\n      return { ...acc, [name]: { ...prevAppearanceStyles, ...nextAppearanceStyles } };\n    }, {});\n\n    return this.withControlMeta(mapping, entries);\n  }\n\n  private withControlMeta(mapping: ThemeMappingType, style: NoMetaThemeStyleType): ThemeStyleType {\n    return Object.keys(style).reduce((acc: ThemeStyleType, control: string) => {\n      const controlEntry: ControlThemedStyleType = {\n        meta: mapping[control].meta,\n        styles: style[control],\n      };\n\n      return { ...acc, [control]: controlEntry };\n    }, {});\n  }\n}\n","import { Processor } from '../processor';\nimport {\n  MappingProcessor,\n  MappingMetaType,\n} from '../mapping/mappingProcessor';\nimport { MetaProcessor } from '../meta/metaProcessor';\nimport {\n  SchemaType,\n  ThemeStyleType,\n} from '@eva-design/dss';\n\nexport class SchemaProcessor implements Processor<SchemaType, ThemeStyleType> {\n\n  private mappingProcessor: MappingProcessor = new MappingProcessor();\n  private metaProcessor: MetaProcessor = new MetaProcessor();\n\n  public process(params: SchemaType): ThemeStyleType {\n    const { components: themeMapping, strict: strictTheme } = params;\n\n    const meta: MappingMetaType[] = this.mappingProcessor.process(themeMapping);\n\n    return this.metaProcessor.process({\n      mapping: themeMapping,\n      meta: meta,\n      theme: strictTheme,\n    });\n  }\n}\n","import React from 'react';\nimport { ThemeStyleType } from '@eva-design/dss';\n\nconst defaultValue: ThemeStyleType = {};\n\nexport const MappingContext: React.Context<ThemeStyleType> = React.createContext(defaultValue);\n","import React from 'react';\nimport { ThemeStyleType } from '@eva-design/dss';\nimport { MappingContext } from './mappingContext';\n\nexport interface MappingProviderProps {\n  styles: ThemeStyleType;\n  children?: React.ReactNode;\n}\n\nexport class MappingProvider extends React.PureComponent<MappingProviderProps> {\n\n  public render(): React.ReactNode {\n    const { styles, children } = this.props;\n\n    return (\n      <MappingContext.Provider\n        value={styles}>\n        {children}\n      </MappingContext.Provider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ThemeType } from '../style/styleSheet.service';\n\nconst defaultTheme: ThemeType = {};\n\nexport const ThemeContext: React.Context<ThemeType> = React.createContext(defaultTheme);\n","import { StyleSheet as RNStyleSheet } from 'react-native';\n\ntype ThemeValue = string;\n\nexport type ThemeType = Record<string, ThemeValue>;\nexport type StyleType = Record<string, any>;\nexport type Styles<T> = RNStyleSheet.NamedStyles<T>;\n\nexport class StyleSheet {\n\n  static createThemedStyles = <T>(styles: Styles<T>, theme: ThemeType): T => {\n    return Object.keys(styles).reduce((acc: T, key: string): T => {\n      return { ...acc, [key]: StyleSheet.createThemedStyle(styles[key], theme)  };\n    }, {} as T);\n  };\n\n  static createThemedStyle = (style: StyleType, theme: ThemeType): StyleType => {\n    return Object.keys(style).reduce((acc: StyleType, key: string): StyleType => {\n      const value: any = style[key];\n      return { ...acc, [key]: StyleSheet.getThemeValue(value, theme, value) };\n    }, {});\n  };\n\n  static createCompiledTheme = (theme: ThemeType): ThemeType => {\n    return Object.keys(theme).reduce((acc: ThemeType, key: string): ThemeType => {\n      return { ...acc, [key]: StyleSheet.getThemeValue(key, theme, key) };\n    }, {});\n  };\n\n  static getThemeValue = (name: string, theme: ThemeType, fallback?: ThemeValue): ThemeValue | undefined => {\n    if (StyleSheet.isReference(name)) {\n      const themeKey: string = StyleSheet.toThemeKey(name);\n      return StyleSheet.findThemeValue(themeKey, theme) || fallback;\n    }\n\n    return StyleSheet.findThemeValue(name, theme) || fallback;\n  };\n\n  static findThemeValue = (name: string, theme: ThemeType): ThemeValue | undefined => {\n    const value: ThemeValue = theme[name];\n\n    if (StyleSheet.isReference(value)) {\n      const themeKey: string = StyleSheet.toThemeKey(value);\n      return StyleSheet.findThemeValue(themeKey, theme);\n    }\n\n    return value;\n  };\n\n  /**\n   * @returns true if theme value references to another\n   */\n  static isReference = (value: ThemeValue): boolean => {\n    return `${value}`.startsWith('$');\n  };\n\n  /**\n   * Transforms reference key to theme key\n   */\n  static toThemeKey = (value: ThemeValue): string => {\n    return `${value}`.substring(1);\n  };\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ThemeContext } from './themeContext';\nimport {\n  StyleSheet,\n  ThemeType,\n} from '../style/styleSheet.service';\n\nexport interface ThemeProviderProps {\n  theme: ThemeType;\n  children?: React.ReactNode;\n}\n\n/**\n * Since ApplicationProvider is the root component of the application,\n * it provides same theme for all underlying components.\n *\n * ThemeProvider allows modifying this theme so that each component that is the child\n * of ThemeProvider will use modified theme.\n *\n * @overview-example ThemeProviderSimpleUsage\n */\nexport class ThemeProvider extends React.PureComponent<ThemeProviderProps> {\n\n  public render(): React.ReactNode {\n    const { theme, children } = this.props;\n\n    return (\n      <ThemeContext.Provider\n        value={StyleSheet.createCompiledTheme(theme)}>\n        {children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  MappingProvider,\n  MappingProviderProps,\n} from '../mapping/mappingProvider.component';\nimport {\n  ThemeProvider,\n  ThemeProviderProps,\n} from '../theme/themeProvider.component';\n\nexport type StyleProviderProps = MappingProviderProps & ThemeProviderProps;\n\nexport class StyleProvider extends React.PureComponent<StyleProviderProps> {\n\n  public render(): React.ReactNode {\n    const { styles, theme, children } = this.props;\n\n    return (\n      <MappingProvider styles={styles}>\n        <ThemeProvider theme={theme}>\n          {children}\n        </ThemeProvider>\n      </MappingProvider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\n\ntype ChildElement = React.ReactElement;\ntype ChildrenProp = ChildElement | ChildElement[];\n\ninterface ComponentProps {\n  visible: boolean;\n  children: ChildrenProp;\n  allowBackdrop: boolean;\n  onBackdropPress: () => void;\n}\n\nexport type ModalResolverProps = ViewProps & ComponentProps;\n\nexport class ModalResolver extends React.Component<ModalResolverProps> {\n\n  static defaultProps: Partial<ModalResolverProps> = {\n    visible: false,\n  };\n\n  private onBackdropPress = (): void => {\n    const { allowBackdrop, onBackdropPress } = this.props;\n\n    if (allowBackdrop) {\n      onBackdropPress();\n    }\n  };\n\n  private onStartShouldSetResponder = (): boolean => {\n    return true;\n  };\n\n  private onResponderRelease = (): void => {\n    return;\n  };\n\n  private onStartShouldSetResponderCapture = (): boolean => {\n    return false;\n  };\n\n  private renderComponentChild = (source: React.ReactElement): React.ReactElement => {\n    return React.cloneElement(source, {\n      style: [source.props.style, this.props.style],\n    });\n  };\n\n  private renderComponentChildren = (source: React.ReactNode): React.ReactElement[] => {\n    return React.Children.map(source, this.renderComponentChild);\n  };\n\n  private renderWithBackDrop = (component: React.ReactElement<ViewProps>):\n    React.ReactElement<TouchableOpacityProps> => {\n\n    return (\n      <TouchableOpacity\n        style={[styles.container, this.props.style]}\n        onPress={this.onBackdropPress}\n        activeOpacity={1}>\n        {component}\n      </TouchableOpacity>\n    );\n  };\n\n  private renderWithoutBackDrop = (component: React.ReactElement<ViewProps>): React.ReactElement<ViewProps> => {\n    return (\n      <View style={styles.notVisibleWrapper}>\n        <View\n          style={styles.container}\n          pointerEvents='none'/>\n        {component}\n      </View>\n    );\n  };\n\n  private renderComponent = (): React.ReactElement<TouchableOpacityProps | ViewProps> => {\n    const { children, allowBackdrop, ...derivedProps } = this.props;\n    const componentChildren: React.ReactElement[] = this.renderComponentChildren(children);\n\n    const dialog: React.ReactElement<ViewProps> =\n      <View\n        {...derivedProps}\n        style={styles.contentWrapper}\n        onStartShouldSetResponder={this.onStartShouldSetResponder}\n        onResponderRelease={this.onResponderRelease}\n        onStartShouldSetResponderCapture={this.onStartShouldSetResponderCapture}\n        pointerEvents='box-none'>\n        {componentChildren}\n      </View>;\n\n    return allowBackdrop ?\n      this.renderWithBackDrop(dialog) : this.renderWithoutBackDrop(dialog);\n  };\n\n  public render(): React.ReactElement<ViewProps | TouchableOpacityProps> | null {\n    return this.props.visible ? this.renderComponent() : null;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: StyleSheet.absoluteFillObject,\n  notVisibleWrapper: {\n    position: 'absolute',\n    width: 0,\n    height: 0,\n  },\n  contentWrapper: {\n    alignSelf: 'flex-start',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\n/**\n * Singleton service designed to manage modal components.\n *\n * @type ModalServiceType\n *\n * @method {(element: React.ReactElement<ModalPresentingBased>, config: ModalPresentingConfig) => string} show -\n * Shows component in a modal window. Returns its id.\n *\n * @method {(identifier: string) => string} hide - Hides component from a modal window and returns empty string.\n *\n * @method {(identifier: string, children: React.ReactNode) => void} update - Updates component from a modal window.\n *\n * @example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { Layout, Button, Text, ModalService } from '@ui-kitten/components';\n *\n * export const ModalServiceShowcase = () => {\n *\n *   const modalID = '';\n *\n *   const showModal = () => {\n *     const contentElement = this.renderModalContentElement();\n *     this.modalID = ModalService.show(contentElement, { allowBackdrop: true, onBackdropPress: this.hideModal });\n *   };\n *\n *   const hideModal = () => {\n *     ModalService.hide(this.modalID);\n *   };\n *\n *   const renderModalContentElement = () => {\n *     return (\n *       <Layout>\n *         <Text>Hi, I'm modal!</Text>\n *       </Layout>\n *     );\n *   };\n *\n *   return (\n *     <Layout>\n *       <Button onPress={showModal}>SHOW MODAL</Button>\n *       <Button onPress={hideModal}>HIDE MODAL</Button>\n *     </Layout>\n *   );\n * }\n * ```\n */\nclass ModalServiceType {\n\n  panel: ModalPresenting | null = null;\n\n  public mount(panel: ModalPresenting | null): void {\n    this.panel = panel;\n  }\n\n  public unmount(): void {\n    this.panel = null;\n  }\n\n  public show(element: React.ReactElement, config: ModalPresentingConfig): string {\n    if (this.panel) {\n      return this.panel.show(element, config);\n    }\n  }\n\n  public update(identifier: string, children: React.ReactElement): void {\n    if (this.panel) {\n      this.panel.update(identifier, children);\n    }\n  }\n\n  public hide(identifier: string): string {\n    if (this.panel) {\n      return this.panel.hide(identifier);\n    }\n  }\n}\n\nexport interface ModalPresentingConfig {\n  allowBackdrop?: boolean;\n  backdropStyle?: StyleProp<ViewStyle>;\n  onBackdropPress?: () => void;\n}\n\nexport interface ModalPresenting {\n  show(element: React.ReactElement, config: ModalPresentingConfig): string;\n\n  hide(identifier: string): string;\n\n  update(identifier: string, children: React.ReactElement): void;\n}\n\nexport const ModalService = new ModalServiceType();\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  StyleSheet,\n  ViewProps,\n} from 'react-native';\nimport {\n  ModalResolver,\n  ModalResolverProps,\n} from './modalResolver.component';\nimport {\n  ModalService,\n  ModalPresenting,\n  ModalPresentingConfig,\n} from './modal.service';\n\ninterface ModalPanelChild extends ModalPresentingConfig {\n  element: React.ReactElement;\n}\n\nexport interface ModalPanelProps {\n  children: React.ReactNode;\n}\n\ninterface ModalPanelState {\n  components: Map<string, ModalPanelChild>;\n}\n\nexport class ModalPanel extends React.Component<ModalPanelProps, ModalPanelState> implements ModalPresenting {\n\n  public state: ModalPanelState = {\n    components: new Map(),\n  };\n\n  public componentDidMount(): void {\n    ModalService.mount(this);\n  }\n\n  public componentWillUnmount(): void {\n    ModalService.unmount();\n  }\n\n  public hide = (identifier: string): string => {\n    const components: Map<string, ModalPanelChild> = this.state.components;\n    components.delete(identifier);\n    this.setState({ components });\n    return '';\n  };\n\n  public show(element: React.ReactElement, config: ModalPresentingConfig): string {\n    const key: string = this.generateUniqueComponentKey();\n    const components: Map<string, ModalPanelChild> = this.state.components\n      .set(key, { ...config, element });\n\n    this.setState({ components });\n\n    return key;\n  }\n\n  public update(identifier: string, children: React.ReactNode): void {\n    const panelChild: ModalPanelChild = this.state.components.get(identifier);\n\n    if (!panelChild) {\n      return;\n    }\n\n    const childElement: React.ReactElement = panelChild.element;\n\n    panelChild.element = React.cloneElement(childElement, {\n      children: children,\n    });\n\n    const components: Map<string, ModalPanelChild> = this.state.components;\n    components.delete(identifier);\n    components.set(identifier, panelChild);\n    this.setState({ components });\n  }\n\n  private generateUniqueComponentKey = (): string => {\n    return Math.random().toString(36).substring(2);\n  };\n\n  private areThereAnyComponents = (): boolean => {\n    return this.state.components && this.state.components.size !== 0;\n  };\n\n  private renderModal = (config: ModalPanelChild, index: number): React.ReactElement<ModalResolverProps> => {\n    return (\n      <ModalResolver\n        {...config.element.props}\n        style={config.backdropStyle}\n        visible={true}\n        key={index}\n        allowBackdrop={config.allowBackdrop}\n        onBackdropPress={config.onBackdropPress}>\n        {config.element}\n      </ModalResolver>\n    );\n  };\n\n  private renderModals = (): React.ReactElement<ModalResolverProps>[] => {\n    return Array.from(this.state.components.values()).map(this.renderModal);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    return (\n      <View style={styles.container}>\n        {this.props.children}\n        {this.areThereAnyComponents() && this.renderModals()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport merge from 'lodash.merge';\nimport { SchemaProcessor } from '@eva-design/processor';\nimport {\n  CustomSchemaType,\n  SchemaType,\n  ThemeStyleType,\n} from '@eva-design/dss';\nimport { StyleProvider } from '../style/styleProvider.component';\nimport { ThemeProviderProps } from '../theme/themeProvider.component';\nimport { ModalPanel } from '../modal/modalPanel.component';\n\ninterface ComponentProps {\n  mapping: SchemaType;\n  customMapping?: CustomSchemaType;\n}\n\nexport type ApplicationProviderProps = ComponentProps & ThemeProviderProps;\nexport type ApplicationProviderElement = React.ReactElement<ApplicationProviderProps>;\n\ninterface State {\n  styles: ThemeStyleType;\n}\n\n/**\n * `ApplicationProvider` component is designed to be a root of the application.\n *\n * This does basically two things:\n * - Provides styles for basic components;\n * - Renders modal window which is used to be common for all elements presented as modal;\n *\n * @extends React.Component\n *\n * @property {SchemaType} mapping - Determines the mapping for basic components.\n * This is designed to be provided by developers team and can be imported from npm package (e.g. `@eva-design/eva`).\n *\n * @property {CustomSchemaType} customMapping - Determines the customization mapping.\n * This is merged with `mapping` property and designed to be used components customization.\n *\n * @property {ThemeType} theme - Determines the theme for basic components.\n * This is designed to be provided by developers team and can be imported from npm package (e.g. `@eva-design/eva`).\n *\n * @property {ReactNode} children - Determines application root component.\n *\n * @overview-example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { ApplicationProvider, Layout, Text } from '@ui-kitten/components';\n * import { mapping, light as lightTheme } from '@eva-design/eva';\n *\n * export default class App extends React.Component {\n *\n *   render() {\n *     return (\n *       <ApplicationProvider\n *         mapping={mapping}\n *         theme={lightTheme}>\n *         <Layout style={{ flex: 1 }}>\n *           <Text>Welcome to UI Kitten</Text>\n *         </Layout>\n *       </ApplicationProvider>\n *     );\n *   }\n * }\n * ```\n */\nexport class ApplicationProvider extends React.Component<ApplicationProviderProps, State> {\n\n  private schemaProcessor: SchemaProcessor = new SchemaProcessor();\n\n  constructor(props: ApplicationProviderProps) {\n    super(props);\n    const { mapping, customMapping } = this.props;\n\n    const styles: ThemeStyleType = this.createStyles(mapping, customMapping);\n\n    this.state = { styles };\n  }\n\n  private createStyles = (mapping: SchemaType, custom: CustomSchemaType): ThemeStyleType => {\n    const customizedMapping: SchemaType = merge({}, mapping, custom);\n\n    return this.schemaProcessor.process(customizedMapping);\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <StyleProvider\n        theme={this.props.theme}\n        styles={this.state.styles}>\n        <ModalPanel>\n          {this.props.children}\n        </ModalPanel>\n      </StyleProvider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ControlMetaType,\n  ControlThemedStyleType,\n  ThemedStyleType,\n} from '@eva-design/dss';\nimport { StyledComponentProps } from './styled';\nimport {\n  StyleSheet,\n  StyleType,\n  ThemeType,\n} from './styleSheet.service';\nimport { Interaction } from './type';\n\nconst SEPARATOR_MAPPING_ENTRY: string = '.';\n\ninterface StyleInfo {\n  appearance: string;\n  variants: string[];\n  states: string[];\n}\n\nexport class StyleConsumerService {\n\n  private readonly name: string;\n  private readonly meta: ControlMetaType;\n\n  constructor(name: string, style: StyleType) {\n    this.name = name;\n\n    this.meta = this.safe(style[name], (generatedConfig): ControlMetaType => {\n      return generatedConfig.meta;\n    });\n\n    if (!this.meta) {\n      const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n      const message: string = [\n        `\\n${this.name}: unsupported configuration.`,\n        'Using UI Kitten components is only possible with configuring ApplicationProvider.',\n        `📖 Documentation: ${docRoot}/guides/getting-started#manual-installation`,\n        '\\nIn case you have all in place, there might be an incorrect usage of a \"styled\" function.',\n        `📖 Documentation: ${docRoot}/design-system/custom-component-mapping`,\n      ].join('\\n');\n\n      console.error(message);\n    }\n  }\n\n  public createDefaultProps<P extends object>(): StyledComponentProps {\n    const appearance: string = this.getDefaultAppearance();\n    const variants: { [key: string]: string } = this.getDefaultVariants();\n    const states: { [key: string]: boolean } = this.getDefaultStates();\n\n    return { appearance, ...variants, ...states };\n  }\n\n  public withStyledProps<P extends object>(source: P,\n                                           style: StyleType,\n                                           theme: ThemeType,\n                                           interaction: Interaction[]): P & StyledComponentProps {\n\n    const styleInfo: StyleInfo = this.getStyleInfo(source, interaction);\n\n    const generatedMapping: StyleType = this.getGeneratedStyleMapping(style, styleInfo);\n\n    if (!generatedMapping) {\n      const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n      const message: string = [\n        `${this.name}: unsupported configuration.`,\n        `Check one of the following prop values ${JSON.stringify(styleInfo, null, 2)}`,\n        `📖 Documentation: ${docRoot}/components/${this.name.toLowerCase()}/api`,\n      ].join('\\n');\n\n      console.warn(message);\n\n      return this.withStyledProps({ ...source, ...this.createDefaultProps() }, style, theme, interaction);\n    }\n\n    const mapping: StyleType = this.withValidParameters(generatedMapping);\n    const themedStyle: StyleType = StyleSheet.createThemedStyle(mapping, theme);\n\n    return { ...source, theme, themedStyle };\n  }\n\n  private getGeneratedStyleMapping<P extends StyledComponentProps>(style: StyleType, info: StyleInfo): StyleType {\n\n    return this.safe(style[this.name], (componentStyles: ControlThemedStyleType): ThemedStyleType => {\n      const styleKeys: string[] = Object.keys(componentStyles.styles);\n      const query: string = this.findGeneratedQuery(info, styleKeys);\n\n      return componentStyles.styles[query];\n    });\n  }\n\n  private withValidParameters(mapping: StyleType): StyleType {\n    const invalidParameters: string[] = [];\n\n    Object.keys(mapping).forEach((key: string) => {\n      if (!Object.keys(this.meta.parameters).includes(key)) {\n        invalidParameters.push(key);\n        delete mapping[key];\n      }\n    });\n\n    if (invalidParameters.length !== 0) {\n      const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n      const message: string = [\n        `${this.name}: unsupported configuration.`,\n        `Unable to apply ${invalidParameters}`,\n        'There might be an incorrect usage of mapping',\n        `📖 Documentation: ${docRoot}/design-system/custom-component-mapping`,\n      ].join('\\n');\n\n      console.warn(message);\n    }\n\n    return mapping;\n  }\n\n  private getStyleInfo<P extends StyledComponentProps>(props: P, interaction: Interaction[]): StyleInfo {\n    const variantProps: Partial<P> = this.getDerivedVariants(this.meta, props);\n    const stateProps: Partial<P> = this.getDerivedStates(this.meta, props);\n\n    const variants: string[] = Object.keys(variantProps).map((variant: string): string => {\n      return variantProps[variant];\n    });\n\n    const states: string[] = Object.keys(stateProps);\n\n    return {\n      appearance: props.appearance,\n      variants: variants,\n      states: [...states, ...interaction],\n    };\n  }\n\n  private getDefaultAppearance(): string {\n    const matches: string[] = Object.keys(this.meta.appearances).filter((appearance: string): boolean => {\n      return this.meta.appearances[appearance].default === true;\n    });\n\n    return matches[matches.length - 1];\n  }\n\n  private getDefaultVariants(): { [key: string]: any } {\n    return this.transformObject(this.meta.variantGroups, (variants, group: string): string | undefined => {\n      return Object.keys(variants[group]).find((variant: string): boolean => {\n\n        return variants[group][variant].default === true;\n      });\n    });\n  }\n\n  private getDefaultStates(): { [key: string]: any } {\n    return this.transformObject(this.meta.states, (states, state: string): boolean | undefined => {\n      const isDefault: boolean = states[state].default === true;\n\n      return isDefault ? isDefault : undefined;\n    });\n  }\n\n  private getDerivedVariants<P extends StyledComponentProps>(meta: ControlMetaType, props: P): Partial<P> {\n    return this.transformObject(props, (p: P, prop: string): string | undefined => {\n      const isVariant: boolean = Object.keys(meta.variantGroups).includes(prop);\n\n      return isVariant ? p[prop] : undefined;\n    });\n  }\n\n  private getDerivedStates<P extends StyledComponentProps>(meta: ControlMetaType, props: P): Partial<P> {\n    return this.transformObject(props, (p: P, prop: string): boolean => {\n      const isState: boolean = Object.keys(meta.states).includes(prop);\n      const isAssigned: boolean = p[prop] === true;\n\n      return isState && isAssigned;\n    });\n  }\n\n  /**\n   * Iterates throw `value` object keys and fills it values with values provided by `transform` callback\n   * If `transform` returns `undefined`, then appends nothing\n   *\n   * @param value (V extends object) - object to transform\n   * @param transform - object key transformation callback\n   */\n  private transformObject<V extends object>(value: V, transform: (value: V, key: string) => any): Partial<V> {\n    return Object.keys(value).reduce((acc: Partial<V>, key: string): any => {\n      const nextValue: any = transform(value, key);\n\n      return nextValue ? {\n        ...acc,\n        [key]: nextValue,\n      } : acc;\n    }, {});\n  }\n\n  /**\n   * Finds identical keys across `source` keys array\n   *\n   * Example:\n   *\n   * source = ['default.error.small.checked', ...]\n   * info = { appearance: 'default', variants: ['small', 'error'], states: ['checked'] }\n   *\n   * will return ['default', 'error', 'small', 'checked']\n   *\n   * @param info (StyleInfo) - component style info\n   * @param source (string[]) - array of style keys\n   *\n   * @return (string | undefined) - key identical to some of `source` keys if presents\n   */\n  private findGeneratedQuery(info: StyleInfo, source: string[]): string | undefined {\n    const query: string[] = [\n      info.appearance,\n      ...info.variants,\n      ...info.states,\n    ];\n\n    const matches: string[] = source.filter((key: string): boolean => {\n      const keyQuery: string[] = key.split(SEPARATOR_MAPPING_ENTRY);\n\n      return this.compareArrays(query, keyQuery);\n    });\n\n    return matches[0];\n  }\n\n  /**\n   * @param lhs (string[]) - comparable array\n   * @param rhs (string[]) - comparing array\n   *\n   * @return true if all of lhs keys are included in rhs\n   */\n  private compareArrays(lhs: string[], rhs: string[]): boolean {\n    if (lhs.length !== rhs.length) {\n      return false;\n    }\n\n    return lhs.reduce((acc: boolean, current: string): boolean => acc && rhs.includes(current), true);\n  }\n\n  /**\n   * Safely retrieves R value of T object with reducer\n   *\n   * @param value (T | undefined) - unsafe object which should be processed\n   * @param reducer ((T) => R) - `value` processing lambda. Called if `value` is not `undefined`\n   * @param fallback (R) - fallback value to return. Optional\n   *\n   * @return (R | undefined) - object returned by `reducer` if `value` is not `undefined`, `fallback` otherwise\n   **/\n  private safe<T, R>(value: T | undefined, reducer: (value: T) => R, fallback?: R): R | undefined {\n    if (value) {\n      return reducer(value);\n    }\n\n    return fallback;\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ThemeStyleType } from '@eva-design/dss';\nimport { StyleConsumerService } from './styleConsumer.service';\nimport {\n  StyleType,\n  ThemeType,\n} from './styleSheet.service';\nimport { Interaction } from './type';\nimport { MappingContext } from '../mapping/mappingContext';\nimport { ThemeContext } from '../theme/themeContext';\n\ninterface PrivateProps<T> {\n  forwardedRef?: React.Ref<T>;\n}\n\nexport interface StyledComponentProps {\n  appearance?: string;\n  theme?: ThemeType;\n  themedStyle?: StyleType;\n  dispatch?: (interaction: Interaction[]) => void;\n}\n\ninterface State {\n  interaction: Interaction[];\n}\n\nexport type StyledComponentClass<P> = React.ComponentClass<StyledComponentProps & P>;\n\n/**\n * `styled` is a High Order Function which is used to apply style mapping on component.\n *\n * Requires component to have `styledComponentName` string property which defines\n * corresponding component name in mapping. (e.g 'Button' for Button component).\n * Returns component class which can be used as styled component.\n *\n * @property {string} appearance - Determines style appearance of component. Default is provided by mapping.\n *\n * @property {ThemeType} theme - Determines theme used to style component.\n *\n * @property {StyleType} themedStyle - Determines component style for it's current state.\n *\n * @property {(interaction: Interaction[]) => void} dispatch - Determines function\n * for dispatching current state of component. This is designed to be used as style request function.\n * Calls component re-render if style for requested state differ from current.\n *\n * @param Component - Type: {ComponentType}. Determines class or functional component to be styled.\n *\n * @overview-example StyledComponentSimpleUsage\n *\n * @overview-example StyledComponentStates\n *\n * @overview-example StyledComponentVariants\n */\nexport const styled = <P extends object>(Component: React.ComponentType<P>): StyledComponentClass<P> => {\n\n  // @ts-ignore\n  if (!Component.styledComponentName) {\n    console.warn('Styled components should specify corresponding style name.');\n    return null;\n  }\n\n  type WrappingProps = PrivateProps<WrappedElementInstance> & WrappedProps;\n  type WrappedProps = StyledComponentProps & P;\n  type WrappingElement = React.ReactElement<WrappingProps>;\n  type WrappedElement = React.ReactElement<WrappedProps>;\n  type WrappedElementInstance = React.ReactInstance;\n\n  class Wrapper extends React.Component<WrappingProps, State> {\n\n    public state: State = {\n      interaction: [],\n    };\n\n    private init: boolean = false;\n\n    // Yes. This is not static because it is calculated once we got some meta from style context.\n    private defaultProps: StyledComponentProps;\n    private service: StyleConsumerService;\n\n    private onInit = (style: ThemeStyleType, theme: ThemeType): void => {\n      // @ts-ignore\n      this.service = new StyleConsumerService(Component.styledComponentName, style, theme);\n      this.defaultProps = this.service.createDefaultProps();\n\n      this.init = true;\n    };\n\n    private onDispatch = (interaction: Interaction[]): void => {\n      this.setState({ interaction });\n    };\n\n    private withStyledProps = (source: P, style: ThemeStyleType, theme: ThemeType): WrappedProps => {\n      const { interaction } = this.state;\n\n      const props: WrappingProps = { ...this.defaultProps, ...source };\n\n      return this.service.withStyledProps(props, style, theme, interaction);\n    };\n\n    private renderWrappedElement = (style: ThemeStyleType, theme: ThemeType): WrappedElement => {\n      if (!this.init) {\n        this.onInit(style, theme);\n      }\n\n      const { forwardedRef, ...restProps } = this.props;\n      const props: P & StyledComponentProps = this.withStyledProps(restProps as P, style, theme);\n\n      return (\n        <Component\n          {...props}\n          ref={forwardedRef}\n          dispatch={this.onDispatch}\n        />\n      );\n    };\n\n    public render(): React.ReactNode {\n      return (\n        <MappingContext.Consumer>{(style: ThemeStyleType): WrappedElement => (\n          <ThemeContext.Consumer>{(theme: ThemeType): WrappedElement => {\n           return this.renderWrappedElement(style, theme);\n          }}</ThemeContext.Consumer>\n        )}</MappingContext.Consumer>\n      );\n    }\n  }\n\n  const WrappingElement = (props: WrappingProps, ref: React.Ref<WrappedElementInstance>): WrappingElement => {\n    return (\n      // @ts-ignore\n\n      <Wrapper\n        {...props}\n        forwardedRef={ref}\n      />\n    );\n  };\n\n  const ResultComponent = React.forwardRef<WrappedElementInstance, WrappingProps>(WrappingElement);\n\n  ResultComponent.displayName = Component.displayName || Component.name;\n\n  // @ts-ignore\n  hoistNonReactStatics(ResultComponent, Component);\n\n  // @ts-ignore\n  return ResultComponent;\n};\n","export enum Interaction {\n  HOVER = 'hover',\n  ACTIVE = 'active',\n  FOCUSED = 'focused',\n  INDETERMINATE = 'indeterminate',\n  VISIBLE = 'visible',\n}\n\nexport enum State {\n  CHECKED = 'checked',\n  SELECTED = 'selected',\n  DISABLED = 'disabled',\n}\n","import React from 'react';\nimport { ThemeContext } from './themeContext';\nimport { ThemeType } from '../style/styleSheet.service';\n\n/**\n * Takes an actual theme provided by ApplicationProvider or ThemeProvider and returns it to a functional component.\n *\n * @overview-example UseThemeSimpleUsage\n */\nexport const useTheme = (): ThemeType => {\n  return React.useContext(ThemeContext);\n};\n","import { Animated } from 'react-native';\n\nexport const DEFAULT_CONFIG: AnimationConfig = {\n  cycles: 1,\n  useNativeDriver: true,\n};\n\n/**\n * @property {number} cycles - number of animation cycles. -1 for infinite\n */\nexport interface AnimationConfig extends Animated.AnimationConfig {\n  cycles?: number;\n}\n\nexport abstract class Animation<C extends AnimationConfig, R> {\n\n  protected abstract animation: Animated.CompositeAnimation;\n  protected counter: number = 0;\n  protected endCallback: Animated.EndCallback;\n  protected running: boolean = false;\n  protected config: C;\n\n  public abstract toProps(): R;\n\n  constructor(config?: C) {\n    this.config = {\n      ...DEFAULT_CONFIG,\n      ...config,\n    };\n  }\n\n  public start(callback?: Animated.EndCallback) {\n    this.endCallback = callback;\n    this.running = true;\n\n    this.animation.start(this.onAnimationEnd);\n  }\n\n  public stop() {\n    this.running = false;\n\n    this.animation.stop();\n  }\n\n  public release() {\n    this.stop();\n  }\n\n  protected onAnimationEnd = (result: Animated.EndResult) => {\n    this.counter += 1;\n    if (this.counter === this.config.cycles) {\n      this.stop();\n    }\n    if (this.running) {\n      this.start(this.endCallback);\n    }\n    if (!this.running) {\n      this.counter = 0;\n      this.endCallback && this.endCallback(result);\n      this.endCallback = null;\n    }\n  };\n}\n","import {\n  Animated,\n  Easing,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: PulseAnimationConfig = {\n  start: 1.0,\n  end: 1.25,\n  easing: Easing.linear,\n  duration: 500,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface PulseAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  end?: number;\n}\n\nexport class PulseAnimation extends Animation<PulseAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, end, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: end,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: start,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  constructor(config?: PulseAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ scale: this.value }],\n      },\n    };\n  }\n}\n","import {\n  Animated,\n  Easing,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: ShakeAnimationConfig = {\n  start: 0.0,\n  offset: 2.5,\n  easing: Easing.linear,\n  duration: 25,\n  cycles: 8,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface ShakeAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  offset?: number;\n}\n\nexport class ShakeAnimation extends Animation<ShakeAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, offset, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: this.counter % 2 !== 0 ? -offset : offset,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: this.counter % 2 !== 0 ? offset : -offset,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  constructor(config?: ShakeAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ translateX: this.value }],\n      },\n    };\n  }\n}\n","import {\n  Animated,\n  Easing,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: ZoomAnimationConfig = {\n  start: 1.0,\n  end: 0.5,\n  easing: Easing.linear,\n  duration: 500,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface ZoomAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  end?: number;\n}\n\nexport class ZoomAnimation extends Animation<ZoomAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, end, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: end,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: start,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  constructor(config?: ZoomAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ scale: this.value }],\n      },\n    };\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Text as RNText,\n  TextProps as RNTextProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\n\ntype ChildElement = string | TextElement;\n\nexport interface TextProps extends StyledComponentProps, RNTextProps {\n  category?: string;\n  status?: string;\n  children?: ChildElement | ChildElement[];\n}\n\nexport type TextElement = React.ReactElement<TextProps>;\n\n/**\n * Styled `Text` component.\n *\n * @extends React.Component\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default`, `alternative`, `hint`.\n * Default is `default`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n *\n * @property {string} category - Determines the category of the component.\n * Can be `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `s1`, `s2`, `p1`, `p2`, `c1`, `c2`, `label`.\n * Default is `p1`.\n *\n * @property {string | ReactElement<TextProps>} children - Determines text of the component.\n *\n * @property {TextProps} ...TextProps - Any props applied to Text component.\n *\n * @overview-example TextSimpleUsage\n *\n * @overview-example TextAppearances\n *\n * @overview-example TextCategories\n *\n * @overview-example TextStatuses\n *\n * @example TextInlineStyling\n */\nexport class TextComponent extends React.Component<TextProps> {\n\n  static styledComponentName: string = 'Text';\n\n  public render(): React.ReactElement<RNTextProps> {\n    const { themedStyle, style, ...derivedProps } = this.props;\n\n    return (\n      <RNText\n        {...derivedProps}\n        style={[themedStyle, style]}\n      />\n    );\n  }\n}\n\nexport const Text = styled<TextProps>(TextComponent);\n","import { StyleType } from '@kitten/theme';\n\nexport interface Props {\n  [key: string]: any;\n}\n\nexport interface RestProps {\n  rest?: Partial<Props>;\n}\n\nexport type AllOfProps = Partial<Props>;\n\nexport type AllWithRestProps = Partial<Props> & RestProps;\n\n/**\n * Retrieves all props included in `from` array\n *\n * @param source (Props) - source object\n * @param from (string[]) - array of keys needed to retrieve from `source`\n *\n * @return (Partial<Props>) - object with keys contained in `from` array\n */\nexport function all(source: Props | undefined, from: string[]): AllOfProps {\n  if (!source) {\n    return {};\n  }\n\n  return from.reduce((acc: Partial<AllOfProps>, prop: string): Partial<AllOfProps> => {\n    return { ...acc, [prop]: source[prop] };\n  }, {});\n}\n\n/**\n * Retrieves all props included in `from` array, rest props includes in under the `rest` key\n */\nexport function allWithRest(source: Props | undefined, from: string[]): AllWithRestProps {\n  if (!source) {\n    return { rest: {} };\n  }\n\n  return Object.keys(source).reduce((acc: Partial<AllWithRestProps>, prop: string): Partial<AllWithRestProps> => {\n    const { rest, ...allOf } = acc;\n\n    if (from.includes(prop)) {\n      return { ...allOf, [prop]: source[prop], rest };\n    }\n\n    return { ...allOf, rest: { ...rest, [prop]: source[prop] } };\n  }, {});\n}\n\n/**\n * Returns all styles with prefix\n *\n * @param {StyleType} source - Eva Styles\n * @param {string} key - prefix\n *\n * @return {StyleType} - all styles with prefix\n */\nexport function allWithPrefix(source: StyleType, key: string): StyleType {\n  return Object.keys(source)\n    .filter((styleName: string) => styleName.includes(key))\n    .reduce((obj: StyleType, styleKey: string) => {\n      return {\n        ...obj,\n        [styleKey]: source[styleKey],\n      };\n    }, {});\n}\n","const FLEX_PREFIX: string = 'flex';\nconst FLEX_ROW_PREFIX: string = 'row';\nconst FLEX_WRAP_PREFIX: string = 'wrap';\nconst FLEX_START_PREFIX: string = 'start';\nconst FLEX_END_PREFIX: string = 'end';\nconst FLEX_REVERSE_PREFIX: string = 'reverse';\n\n/**\n * Works with FlexBox style properties that starts with `flex` and ends with `-start` or `-end`\n *\n * E.g justifyContent: flex-start\n */\nconst FlexStartEndMapper: I18nLayoutFlexMapper<string> = {\n  toI18n(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(FLEX_END_PREFIX);\n\n    if (isReverse) {\n      return `${FLEX_PREFIX}-${FLEX_START_PREFIX}`;\n    }\n\n    return `${FLEX_PREFIX}-${FLEX_END_PREFIX}`;\n  },\n};\n\n/**\n * Works with FlexBox style properties that starts with `row` and optionally ends with `-reverse`\n *\n * E.g flexDirection: row-reverse\n */\nconst FlexRowMapper: I18nLayoutFlexMapper<string> = {\n  toI18n(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_ROW_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(FLEX_REVERSE_PREFIX);\n\n    if (isReverse) {\n      return FLEX_ROW_PREFIX;\n    }\n\n    return `${FLEX_ROW_PREFIX}-${FLEX_REVERSE_PREFIX}`;\n  },\n};\n\n/**\n * Works with FlexBox style properties that starts with `wrap` and optionally ends with `-reverse`\n *\n * E.g flexWrap: wrap-reverse\n */\nconst FlexWrapMapper: I18nLayoutFlexMapper<string> = {\n  toI18n(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_WRAP_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(`-${FLEX_REVERSE_PREFIX}`);\n\n    if (isReverse) {\n      return FLEX_WRAP_PREFIX;\n    }\n\n    return `${FLEX_WRAP_PREFIX}-${FLEX_REVERSE_PREFIX}`;\n  },\n};\n\n/**\n * Matches FlexBox style properties that can affect on Layout depending on LTR/RTL mode corresponding Mappers\n */\nexport const I18nLayoutFlexMap: { [key: string]: I18nLayoutFlexMapper<any> } = {\n  alignContent: FlexStartEndMapper,\n  alignItems: FlexStartEndMapper,\n  alignSelf: FlexStartEndMapper,\n  justifyContent: FlexStartEndMapper,\n  flexDirection: FlexRowMapper,\n  flexWrap: FlexWrapMapper,\n};\n\ninterface I18nLayoutFlexMapper<T> {\n  toI18n(value: T, rtl: boolean): T;\n}\n","import {\n  I18nManager,\n  ViewStyle,\n} from 'react-native';\nimport { I18nLayoutFlexMap } from './i18nLayoutFlexMap';\nimport { I18nLayoutServiceType } from './type';\n\nclass NativeI18nLayoutService implements I18nLayoutServiceType {\n\n  public isRTL(): boolean {\n    return I18nManager.isRTL;\n  }\n\n  public select<T>(ltr: T, rtl): T {\n    return this.isRTL() ? rtl : ltr;\n  }\n\n  /**\n   * Iterates through I18nLayoutFlexMap and reverses style values if needed.\n   *\n   * @param {ViewStyle} source - style to convert\n   * @param {boolean} rtl - is layout currently in RTL mode (Needed for tests, because unable to mock this)\n   *\n   * @returns {ViewStyle} - style reversed to fit i18n\n   */\n  public toI18nStyle(source: ViewStyle, rtl: boolean = this.isRTL()): ViewStyle {\n    const i18nStyle: ViewStyle = Object.keys(I18nLayoutFlexMap).reduce((style: ViewStyle, prop: string): ViewStyle => {\n      const currentStyleValue = source[prop];\n      if (currentStyleValue) {\n        const i18nStyleValue = I18nLayoutFlexMap[prop].toI18n(currentStyleValue, rtl);\n        return { ...style, [prop]: i18nStyleValue };\n      }\n\n      return style;\n    }, {});\n\n    return { ...source, ...i18nStyle };\n  }\n}\n\nexport const I18nLayoutService = new NativeI18nLayoutService();\n","export const isValidString = (source: string | null): boolean => {\n  if (source && source.length > 0) {\n    return true;\n  }\n  return false;\n};\n","export interface WebEventResponderCallbacks {\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n}\n\nexport class WebEventResponderInstance {\n  readonly eventHandlers: WebEventResponderCallbacks;\n\n  constructor(props: WebEventResponderCallbacks) {\n    this.eventHandlers = props;\n  }\n}\n\nclass WebEventResponderStatic {\n  static create(config: WebEventResponderCallbacks): WebEventResponderInstance {\n    return new WebEventResponderInstance({\n      onMouseEnter: () => {\n        config.onMouseEnter && config.onMouseEnter();\n      },\n      onMouseLeave: () => {\n        config.onMouseLeave && config.onMouseLeave();\n      },\n      onFocus: () => {\n        config.onFocus && config.onFocus();\n      },\n      onBlur: () => {\n        config.onBlur && config.onBlur();\n      },\n    });\n  }\n}\n\nexport const WebEventResponder = WebEventResponderStatic;\n","export const TextStyleProps: string[] = [\n\n  // TextStyle\n\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'lineHeight',\n  'textAlign',\n  'textAlign',\n  'textDecorationLine',\n  'textDecorationStyle',\n  'textDecorationColor',\n  'textShadowColor',\n  'textShadowColor',\n  'textShadowOffset',\n  'textShadowRadius',\n\n  // TextStyleIOS\n\n  'textTransform',\n  'writingDirection',\n\n  // TextStyleAndroid\n\n  'textAlignVertical',\n  'includeFontPadding',\n];\n\nexport const FlexStyleProps: string[] = [\n  'alignContent',\n  'alignItems',\n  'alignSelf',\n  'aspectRatio',\n  'borderBottomWidth',\n  'borderEndWidth',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderStartWidth',\n  'borderTopWidth',\n  'borderWidth',\n  'bottom',\n  'display',\n  'end',\n  'flex',\n  'flexBasis',\n  'flexDirection',\n  'flexGrow',\n  'flexShrink',\n  'flexWrap',\n  'height',\n  'justifyContent',\n  'left',\n  'margin',\n  'marginBottom',\n  'marginEnd',\n  'marginHorizontal',\n  'marginLeft',\n  'marginRight',\n  'marginStart',\n  'marginTop',\n  'marginVertical',\n  'maxHeight',\n  'maxWidth',\n  'minHeight',\n  'minWidth',\n  'overflow',\n  'padding',\n  'paddingBottom',\n  'paddingEnd',\n  'paddingHorizontal',\n  'paddingLeft',\n  'paddingRight',\n  'paddingStart',\n  'paddingTop',\n  'paddingVertical',\n  'position',\n  'right',\n  'start',\n  'top',\n  'width',\n  'zIndex',\n\n  // ios\n\n  'direction',\n];\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageStyle,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextInput,\n  TextInputProps,\n  TextStyle,\n  TouchableWithoutFeedback,\n  TouchableWithoutFeedbackProps,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { IconElement } from '../icon/icon.component';\nimport {\n  allWithRest,\n  isValidString,\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\nimport {\n  FlexStyleProps,\n  InputFocusEvent,\n} from '../support/typings';\n\ntype IconProp = (style: StyleType) => IconElement;\n\nexport interface InputProps extends StyledComponentProps, TextInputProps {\n  status?: string;\n  size?: string;\n  disabled?: boolean;\n  label?: string;\n  caption?: string;\n  captionIcon?: IconProp;\n  icon?: IconProp;\n  textStyle?: StyleProp<TextStyle>;\n  labelStyle?: StyleProp<TextStyle>;\n  captionTextStyle?: StyleProp<TextStyle>;\n  onIconPress?: (event: GestureResponderEvent) => void;\n}\n\nexport type InputElement = React.ReactElement<InputProps>;\n\n/**\n * Styled `Input` component.\n *\n * @extends React.Component\n *\n * @method {() => void} focus - Requests focus for the given input or view. The exact behavior triggered\n * will depend on the platform and type of view.\n *\n * @method {() => void} blur - Removes focus from an input or view. This is the opposite of `focus()`.\n *\n * @method {() => boolean} isFocused - Returns if the input is currently focused.\n *\n * @method {() => void} clear - Removes all text from the input.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `small`, `medium` or `large`.\n * Default is `medium`.\n *\n * @property {string} placeholder - Determines placeholder of the component.\n *\n * @property {string} label - Determines text rendered at the top of the component.\n *\n * @property {string} caption - Determines caption text rendered at the bottom of the component.\n *\n * @property {(style: StyleType) => ReactElement} icon - Determines icon of the component.\n *\n * @property {(style: StyleType) => ReactElement} captionIcon - Determines caption icon.\n *\n * @property {StyleProp<TextStyle>} labelStyle - Customizes label style.\n *\n * @property {StyleProp<TextStyle>} captionStyle - Customizes caption style.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {TextInputProps} ...TextInputProps - Any props applied to TextInput component.\n *\n * @overview-example InputSimpleUsage\n *\n * @overview-example InputStates\n *\n * @overview-example InputStatus\n *\n * @overview-example InputSize\n *\n * @overview-example InputWithIcon\n *\n * @overview-example InputWithLabel\n *\n * @overview-example InputWithCaption\n *\n * @example InputInlineStyling\n *\n * @example InputWithExternalSourceIcon\n */\nexport class InputComponent extends React.Component<InputProps> implements WebEventResponderCallbacks {\n\n  static styledComponentName: string = 'Input';\n\n  private textInputRef: React.RefObject<TextInput> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public focus = (): void => {\n    this.textInputRef.current.focus();\n  };\n\n  public blur = (): void => {\n    this.textInputRef.current.blur();\n  };\n\n  public isFocused = (): boolean => {\n    return this.textInputRef.current.isFocused();\n  };\n\n  public clear = (): void => {\n    this.textInputRef.current.clear();\n  };\n\n  // WebEventResponderCallbacks\n\n  public onMouseEnter = (): void => {\n    this.props.dispatch([Interaction.HOVER]);\n  };\n\n  public onMouseLeave = (): void => {\n    this.props.dispatch([]);\n  };\n\n  private onTextFieldFocus = (event: InputFocusEvent): void => {\n    this.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  };\n\n  private onTextFieldBlur = (event: InputFocusEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  };\n\n  private onIconPress = (event: GestureResponderEvent): void => {\n    if (this.props.onIconPress) {\n      this.props.onIconPress(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const flatStyles: ViewStyle = StyleSheet.flatten(this.props.style);\n    const { rest: inputContainerStyle, ...containerStyle } = allWithRest(flatStyles, FlexStyleProps);\n\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      placeholderColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      labelColor,\n      labelFontSize,\n      labelLineHeight,\n      labelMarginBottom,\n      labelFontWeight,\n      captionMarginTop,\n      captionColor,\n      captionFontSize,\n      captionLineHeight,\n      captionFontWeight,\n      captionIconWidth,\n      captionIconHeight,\n      captionIconMarginRight,\n      captionIconTintColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerStyle,\n      inputContainer: {\n        ...containerParameters,\n        ...inputContainerStyle,\n      },\n      captionContainer: {\n        marginTop: captionMarginTop,\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        // FIXME: RN issue (https://github.com/facebook/react-native/issues/7823)\n        // lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      placeholder: {\n        color: placeholderColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      label: {\n        color: labelColor,\n        fontSize: labelFontSize,\n        lineHeight: labelLineHeight,\n        marginBottom: labelMarginBottom,\n        fontWeight: labelFontWeight,\n      },\n      captionIcon: {\n        width: captionIconWidth,\n        height: captionIconHeight,\n        tintColor: captionIconTintColor,\n        marginRight: captionIconMarginRight,\n      },\n      captionLabel: {\n        fontSize: captionFontSize,\n        fontWeight: captionFontWeight,\n        lineHeight: captionLineHeight,\n        color: captionColor,\n      },\n    };\n  };\n\n  private renderIconTouchableElement = (style: StyleType): React.ReactElement<TouchableWithoutFeedbackProps> => {\n    const iconElement: IconElement = this.renderIconElement(style);\n\n    return (\n      <TouchableWithoutFeedback onPress={this.onIconPress}>\n        {iconElement}\n      </TouchableWithoutFeedback>\n    );\n  };\n\n  private renderIconElement = (style: StyleType): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 0,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderLabelElement = (style: TextStyle): TextElement => {\n    return (\n      <Text\n        key={1}\n        style={[style, styles.label, this.props.labelStyle]}>\n        {this.props.label}\n      </Text>\n    );\n  };\n\n  private renderCaptionElement = (style: TextStyle): TextElement => {\n    return (\n      <Text\n        key={2}\n        style={[style, styles.captionLabel, this.props.captionTextStyle]}>\n        {this.props.caption}\n      </Text>\n    );\n  };\n\n  private renderCaptionIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.captionIcon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 3,\n      style: [style, styles.captionIcon, iconElement.props.style],\n    });\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon, label, captionIcon, caption } = this.props;\n\n    return [\n      icon && this.renderIconTouchableElement(style.icon),\n      isValidString(label) && this.renderLabelElement(style.label),\n      isValidString(caption) && this.renderCaptionElement(style.captionLabel),\n      captionIcon && this.renderCaptionIconElement(style.captionIcon),\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, textStyle, ...restProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const [\n      iconElement,\n      labelElement,\n      captionElement,\n      captionIconElement,\n    ] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <View style={[componentStyle.container, styles.container]}>\n        {labelElement}\n        <View\n          style={[componentStyle.inputContainer, styles.inputContainer]}>\n          <TextInput\n            ref={this.textInputRef}\n            {...restProps}\n            {...this.webEventResponder.eventHandlers}\n            style={[componentStyle.text, styles.text, webStyles.text, textStyle]}\n            placeholderTextColor={componentStyle.placeholder.color}\n            editable={!restProps.disabled}\n            onFocus={this.onTextFieldFocus}\n            onBlur={this.onTextFieldBlur}\n          />\n          {iconElement}\n        </View>\n        <View style={[componentStyle.captionContainer, styles.captionContainer]}>\n          {captionIconElement}\n          {captionElement}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n  },\n  captionContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  text: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: 'auto',\n  },\n  placeholder: {},\n  icon: {},\n  label: {\n    textAlign: 'left',\n  },\n  captionIcon: {},\n  captionLabel: {\n    textAlign: 'left',\n  },\n});\n\nconst webStyles = Platform.OS === 'web' && StyleSheet.create({\n  text: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n\nexport const Input = styled<InputProps>(InputComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  FlatList,\n  FlatListProps,\n  ListRenderItemInfo,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { ListItemProps } from './listItem.component';\n\n// this is basically needed to avoid generics in required props\ntype ItemType = any;\ntype ListItemElement = React.ReactElement;\ntype RenderItemProp = (info: ListRenderItemInfo<ItemType>, style: StyleType) => ListItemElement;\n\ninterface ComponentProps {\n  renderItem: RenderItemProp;\n}\n\nexport type ListProps = StyledComponentProps & FlatListProps<ItemType> & ComponentProps;\nexport type ListElement = React.ReactElement<ListProps>;\n\nexport interface BaseScrollParams {\n  animated?: boolean;\n}\n\nexport interface ViewScrollParams {\n  viewOffset?: number;\n  viewPosition?: number;\n}\n\nexport interface ScrollToIndexParams extends BaseScrollParams, ViewScrollParams {\n  index: number;\n}\n\nexport interface ScrollToOffsetParams extends BaseScrollParams {\n  offset: number;\n}\n\n/**\n * `List` component is a performant interface for rendering simple, flat lists. Extends `FlatList`. Renders list of\n * `ListItem` components or custom content.\n *\n * @extends React.Component\n *\n * @property {(info: ListRenderItemInfo<ItemT>, style: StyleType) => ReactElement} renderItem - Takes an\n * item from data and renders it into the list.\n *\n * @property {FlatListProps} ...FlatListProps - Any props applied to FlatList component.\n *\n * @overview-example ListSimpleUsage\n *\n * @overview-example ListCompositeItem\n *\n * @example ListInlineStyling\n * ```\n */\nexport class ListComponent extends React.Component<ListProps> {\n\n  static styledComponentName: string = 'List';\n\n  private listRef: React.RefObject<FlatList<ItemType>> = React.createRef();\n\n  public scrollToEnd = (params?: BaseScrollParams): void => {\n    this.listRef.current.scrollToEnd(params);\n  };\n\n  public scrollToIndex = (params: ScrollToIndexParams): void => {\n    this.listRef.current.scrollToIndex(params);\n  };\n\n  public scrollToOffset(params: ScrollToOffsetParams): void {\n    this.listRef.current.scrollToOffset(params);\n  }\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    return {\n      container: source,\n      item: {},\n    };\n  };\n\n  private getItemStyle = (source: StyleType, index: number): ViewStyle => {\n    const { item } = source;\n\n    return item;\n  };\n\n  private keyExtractor = (item: ItemType, index: number): string => {\n    return index.toString();\n  };\n\n  private renderItem = (info: ListRenderItemInfo<ItemType>): ListItemElement => {\n    const itemStyle: StyleType = this.getItemStyle(this.props.themedStyle, info.index);\n    const itemElement: React.ReactElement<ListItemProps> = this.props.renderItem(info, itemStyle);\n\n    return React.cloneElement(itemElement, {\n      style: [itemStyle, styles.item, itemElement.props.style],\n      index: info.index,\n    });\n  };\n\n  public render(): React.ReactElement<FlatListProps<ItemType>> {\n    const { style, themedStyle, ...derivedProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    return (\n      <FlatList\n        keyExtractor={this.keyExtractor}\n        {...derivedProps}\n        ref={this.listRef}\n        style={[componentStyle.container, styles.container, style]}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  item: {},\n});\n\nexport const List = styled<ListProps>(ListComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageStyle,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { IconElement } from '../icon/icon.component';\nimport { TouchableIndexedProps } from '../support/typings';\nimport { isValidString } from '../support/services';\n\ntype IconProp = (style: StyleType, index: number) => IconElement;\ntype AccessoryProp = (style: StyleType, index: number) => React.ReactElement;\n\ninterface ListDerivedProps {\n  index?: number;\n}\n\ninterface TemplateBaseProps {\n  icon?: IconProp;\n  accessory?: AccessoryProp;\n}\n\ninterface TemplateTitleProps extends TemplateBaseProps {\n  title: string;\n  description?: string;\n  titleStyle?: StyleProp<TextStyle>;\n}\n\ninterface TemplateDescriptionProps extends TemplateBaseProps {\n  title?: string;\n  description: string;\n  descriptionStyle?: StyleProp<TextStyle>;\n}\n\ninterface CustomContentProps {\n  children?: React.ReactNode;\n}\n\ntype ComponentProps = (TemplateTitleProps | TemplateDescriptionProps | CustomContentProps) & ListDerivedProps;\n\nexport type ListItemProps = StyledComponentProps & TouchableIndexedProps & ComponentProps;\nexport type ListItemElement = React.ReactElement<ListItemProps>;\n\n/**\n * `ListItem` is a support component for `List`.\n * The key feature of wrapping custom list items into `ListItem` component is that it automatically\n * picks background color fitting to current theme and responds to touches with feedback.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the ListItem.\n *\n * @property {string} description - Determines the description of the ListItem's title.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {StyleProp<TextStyle>} descriptionStyle - Customizes description style.\n *\n * @property {ReactNode} children - Determines React Children of the component.\n *\n * @property {(style: StyleType, index: number) => ReactElement} accessory - Determines the accessory of the\n * component.\n *\n * @property {(style: ImageStyle, index: number) => ReactElement} icon - Determines the icon of the\n * component.\n *\n * @property {(index: number, event: GestureResponderEvent) => ReactElement<ImageProps>} onPress - Emits when\n * component is pressed.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example ListItemSimpleUsage\n *\n * @overview-example ListItemWithIcon\n *\n * @overview-example ListItemWithAccessory\n *\n * @example ListItemWithExternalIcon\n *\n * @example ListItemInlineStyling\n */\nexport class ListItemComponent extends React.Component<ListItemProps> {\n\n  static styledComponentName: string = 'ListItem';\n\n  private onPress = (event: GestureResponderEvent): void => {\n    if (this.props.onPress) {\n      this.props.onPress(this.props.index, event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(this.props.index, event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(this.props.index, event);\n    }\n  };\n\n  private onLongPress = (event: GestureResponderEvent): void => {\n    if (this.props.onLongPress) {\n      this.props.onLongPress(this.props.index, event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      titleMarginHorizontal,\n      titleFontFamily,\n      titleFontSize,\n      titleLineHeight,\n      titleFontWeight,\n      titleColor,\n      descriptionFontFamily,\n      descriptionFontSize,\n      descriptionFontWeight,\n      descriptionLineHeight,\n      descriptionColor,\n      descriptionMarginHorizontal,\n      accessoryMarginHorizontal,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      contentContainer: {},\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      title: {\n        marginHorizontal: titleMarginHorizontal,\n        fontFamily: titleFontFamily,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight,\n        fontWeight: titleFontWeight,\n        color: titleColor,\n      },\n      description: {\n        color: descriptionColor,\n        fontFamily: descriptionFontFamily,\n        fontSize: descriptionFontSize,\n        fontWeight: descriptionFontWeight,\n        lineHeight: descriptionLineHeight,\n        marginHorizontal: descriptionMarginHorizontal,\n      },\n      accessory: {\n        marginHorizontal: accessoryMarginHorizontal,\n      },\n    };\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    // @ts-ignore: will be not executed if `icon` prop is provided\n    const { index, icon } = this.props;\n\n    const iconElement: IconElement = icon(style, index);\n\n    return React.cloneElement(iconElement, {\n      key: 0,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderContentElement = (style: StyleType): React.ReactElement<ViewProps> => {\n    const { contentContainer, ...contentStyles } = style;\n    const [titleElement, descriptionElement] = this.renderContentElementChildren(contentStyles);\n\n    return (\n      <View\n        key={1}\n        style={[contentContainer, styles.contentContainer]}>\n        {titleElement}\n        {descriptionElement}\n      </View>\n    );\n  };\n\n  private renderTitleElement = (style: StyleType): TextElement => {\n    // @ts-ignore: will be not executed if `title` property is provided\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text\n        key={2}\n        style={[style, styles.title, titleStyle]}>\n        {title}\n      </Text>\n    );\n  };\n\n  private renderDescriptionElement = (style: StyleType): TextElement => {\n    // @ts-ignore: will be not executed if `description` property is provided\n    const { description, descriptionStyle } = this.props;\n\n    return (\n      <Text\n        key={3}\n        style={[style, styles.description, descriptionStyle]}>\n        {description}\n      </Text>\n    );\n  };\n\n  private renderAccessoryElement = (style: StyleType): React.ReactElement => {\n    // @ts-ignore: will be not executed if `accessory` property is provided\n    const { index, accessory } = this.props;\n\n    const accessoryElement: React.ReactElement = accessory(style, index);\n\n    return React.cloneElement(accessoryElement, {\n      key: 4,\n      style: [style, styles.accessory, accessoryElement.props.style],\n    });\n  };\n\n  private renderContentElementChildren = (style: StyleType): React.ReactNodeArray => {\n    // @ts-ignore: will be not executed if any of properties below is provided\n    const { title, description } = this.props;\n\n    return [\n      isValidString(title) && this.renderTitleElement(style.title),\n      isValidString(description) && this.renderDescriptionElement(style.description),\n    ];\n  };\n\n  private renderTemplateChildren = (style: StyleType): React.ReactNodeArray => {\n    // @ts-ignore: following props could not be provided\n    const { icon, title, description, accessory } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      (title || description) && this.renderContentElement(style),\n      accessory && this.renderAccessoryElement(style.accessory),\n    ];\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNode => {\n    const { children } = this.props;\n\n    return children ? children : this.renderTemplateChildren(style);\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, ...derivedProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    const componentChildren: React.ReactNode = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...derivedProps}\n        style={[container, styles.container, webStyles.container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n        onLongPress={this.onLongPress}>\n        {componentChildren}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  icon: {},\n  title: {\n    textAlign: 'left',\n  },\n  description: {\n    textAlign: 'left',\n  },\n  accessory: {},\n});\n\nconst webStyles = Platform.OS === 'web' && StyleSheet.create({\n  container: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n\nexport const ListItem = styled<ListItemProps>(ListItemComponent);\n","import {\n  Dimensions,\n  ScaledSize,\n} from 'react-native';\n\nexport class Point {\n\n  constructor(readonly x: number,\n              readonly y: number) {\n  }\n\n  public equals(other: Point): boolean {\n    return this.x === other.x && this.y === other.y;\n  }\n\n  static zero(): Point {\n    return new Point(0, 0);\n  }\n}\n\nexport class Size {\n\n  constructor(readonly width: number,\n              readonly height: number) {\n\n  }\n\n  public equals(other: Size): boolean {\n    return this.width === other.width && this.height === other.height;\n  }\n\n  static zero(): Size {\n    return new Size(0, 0);\n  }\n}\n\nexport class Frame {\n\n  readonly origin: Point;\n  readonly size: Size;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    this.origin = new Point(x, y);\n    this.size = new Size(width, height);\n  }\n\n  public equals(other: Frame): boolean {\n    return this.origin.equals(other.origin) && this.size.equals(other.size);\n  }\n\n  /**\n   * Creates new frame aligned to left of other\n   */\n  public leftOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x - this.size.width,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to top of other\n   */\n  public topOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y - this.size.height,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to right of other\n   */\n  public rightOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x + other.size.width,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to bottom of other\n   */\n  public bottomOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y + other.size.height,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame centered horizontally to other\n   */\n  public centerHorizontalOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x + (other.size.width - this.size.width) / 2,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame centered vertically to other\n   */\n  public centerVerticalOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y + (other.size.height - this.size.height) / 2,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  static zero(): Frame {\n    return new Frame(0, 0, 0, 0);\n  }\n\n  static window(): Frame {\n    const window: ScaledSize = Dimensions.get('window');\n    return new Frame(0, 0, window.width, window.height);\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  FlexStyle,\n  StyleProp,\n  StyleSheet,\n} from 'react-native';\nimport { Frame } from '../measure/type';\nimport { I18nLayoutService } from '../support/services';\n\nexport interface Offset {\n  rawValue: string;\n\n  apply(frame: Frame, value: number): Frame;\n}\n\nexport class Offsets {\n\n  static MARGIN: Offset = new class implements Offset {\n    rawValue: string = 'margin';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(value, value, value, value);\n    }\n  };\n\n  static MARGIN_HORIZONTAL: Offset = new class implements Offset {\n    rawValue: string = 'marginHorizontal';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(value, frame.origin.y, value, frame.size.height);\n    }\n  };\n\n  static MARGIN_VERTICAL: Offset = new class implements Offset {\n    rawValue: string = 'marginVertical';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(frame.origin.x, value, frame.size.width, value);\n    }\n  };\n\n  static MARGIN_LEFT: Offset = new class implements Offset {\n    rawValue: string = 'marginLeft';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(value, frame.origin.y, frame.size.width, frame.size.height);\n    }\n  };\n\n  static MARGIN_TOP: Offset = new class implements Offset {\n    rawValue: string = 'marginTop';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(frame.origin.x, value, frame.size.width, frame.size.height);\n    }\n  };\n\n  static MARGIN_RIGHT: Offset = new class implements Offset {\n    rawValue: string = 'marginRight';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(frame.origin.x, frame.origin.y, value, frame.size.height);\n    }\n  };\n\n  static MARGIN_BOTTOM: Offset = new class implements Offset {\n    rawValue: string = 'marginBottom';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(frame.origin.x, frame.origin.y, frame.size.width, value);\n    }\n  };\n\n  static find(source: StyleProp<FlexStyle>): Frame {\n    const offsetKeys: string[] = [\n      Offsets.MARGIN.rawValue,\n      Offsets.MARGIN_HORIZONTAL.rawValue,\n      Offsets.MARGIN_VERTICAL.rawValue,\n      Offsets.MARGIN_LEFT.rawValue,\n      Offsets.MARGIN_TOP.rawValue,\n      Offsets.MARGIN_RIGHT.rawValue,\n      Offsets.MARGIN_BOTTOM.rawValue,\n    ];\n\n    const flatStyle: FlexStyle = StyleSheet.flatten(source) || {};\n\n    return Object.keys(flatStyle)\n                 .filter((key: string): boolean => offsetKeys.includes(key))\n                 .reduce((acc: Frame, key: string): Frame => {\n\n      const value: number = flatStyle[key];\n      const offsetValue: Offset | undefined = Offsets.parse(key);\n\n      return offsetValue ? offsetValue.apply(acc, value) : acc;\n    }, Frame.zero());\n  }\n\n  static parse(value: string | Offset, fallback?: Offset): Offset | undefined {\n    return Offsets.typeOf(value) ? value : Offsets.parseString(value, fallback);\n  }\n\n  private static parseString(rawValue: string, fallback?: Offset): Offset | undefined {\n    switch (rawValue) {\n      case Offsets.MARGIN.rawValue:\n        return Offsets.MARGIN;\n      case Offsets.MARGIN_HORIZONTAL.rawValue:\n        return Offsets.MARGIN_HORIZONTAL;\n      case Offsets.MARGIN_VERTICAL.rawValue:\n        return Offsets.MARGIN_VERTICAL;\n      case Offsets.MARGIN_LEFT.rawValue:\n        return Offsets.MARGIN_LEFT;\n      case Offsets.MARGIN_TOP.rawValue:\n        return Offsets.MARGIN_TOP;\n      case Offsets.MARGIN_RIGHT.rawValue:\n        return Offsets.MARGIN_RIGHT;\n      case Offsets.MARGIN_BOTTOM.rawValue:\n        return Offsets.MARGIN_BOTTOM;\n      default:\n        return fallback;\n    }\n  }\n\n  private static typeOf(value: any): value is Offset {\n    const { rawValue } = (<Offset>value);\n\n    return rawValue !== undefined;\n  }\n}\n\nexport class PlacementOptions {\n  constructor(readonly source: Frame = Frame.zero(),\n              readonly other: Frame = Frame.zero(),\n              readonly bounds: Frame = Frame.zero(),\n              readonly offsets: Frame = Frame.zero()) {\n  }\n}\n\nexport interface PopoverPlacement {\n  rawValue: string;\n\n  frame(options: PlacementOptions): Frame;\n\n  flex(): FlexPlacement;\n\n  parent(): PopoverPlacement;\n\n  reverse(): PopoverPlacement;\n\n  family(): PopoverPlacement[];\n\n  fits(frame: Frame, other: Frame): boolean;\n}\n\nexport class PopoverPlacements {\n\n  static LEFT: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue: string = 'left';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.leftOf(options.other).centerVerticalOf(options.other);\n\n      const x: number = I18nLayoutService.select(\n        origin.x + options.offsets.origin.x,\n        options.bounds.size.width - size.width - (origin.x + options.offsets.size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.LEFT,\n        PopoverPlacements.LEFT_START,\n        PopoverPlacements.LEFT_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsStart(frame, other) && fitsTop(frame, other) && fitsBottom(frame, other);\n    }\n  };\n\n  static LEFT_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue: string = 'left start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y - (options.other.size.height - size.height) / 2 + options.offsets.origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static LEFT_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'left end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y + (options.other.size.height - size.height) / 2 - options.offsets.size.height,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static TOP: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.topOf(options.other).centerHorizontalOf(options.other);\n\n\n      const x: number = I18nLayoutService.select(\n        origin.x,\n        options.bounds.size.width - (origin.x + size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y + options.offsets.origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.TOP,\n        PopoverPlacements.TOP_START,\n        PopoverPlacements.TOP_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsTop(frame, other) && fitsLeft(frame, other) && fitsRight(frame, other);\n    }\n  };\n\n  static TOP_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x - (options.other.size.width - size.width) / 2 + options.offsets.origin.x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static TOP_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x + (options.other.size.width - size.width) / 2 - options.offsets.size.width,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static RIGHT: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.rightOf(options.other).centerVerticalOf(options.other);\n\n      const x: number = I18nLayoutService.select(\n        origin.x - options.offsets.size.width,\n        options.bounds.size.width - size.width - (origin.x - options.offsets.size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.RIGHT,\n        PopoverPlacements.RIGHT_START,\n        PopoverPlacements.RIGHT_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsEnd(frame, other) && fitsTop(frame, other) && fitsBottom(frame, other);\n    }\n  };\n\n  static RIGHT_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y - (options.other.size.height - size.height) / 2 + options.offsets.origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static RIGHT_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y + (options.other.size.height - size.height) / 2 - options.offsets.size.height,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static BOTTOM: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.bottomOf(options.other).centerHorizontalOf(options.other);\n\n      const x: number = I18nLayoutService.select(\n        origin.x,\n        options.bounds.size.width - (origin.x + size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y - options.offsets.size.height,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.BOTTOM,\n        PopoverPlacements.BOTTOM_START,\n        PopoverPlacements.BOTTOM_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsBottom(frame, other) && fitsLeft(frame, other) && fitsRight(frame, other);\n    }\n  };\n\n  static BOTTOM_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x - (options.other.size.width - size.width) / 2 + options.offsets.origin.x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static BOTTOM_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x + (options.other.size.width - size.width) / 2 - options.offsets.size.width,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static parse(value: string | PopoverPlacement, fallback?: PopoverPlacement): PopoverPlacement | undefined {\n    return PopoverPlacements.typeOf(value) ? value : PopoverPlacements.parseString(value, fallback);\n  }\n\n  private static parseString(rawValue: string, fallback?: PopoverPlacement): PopoverPlacement | undefined {\n    switch (rawValue) {\n      case PopoverPlacements.LEFT.rawValue:\n        return PopoverPlacements.LEFT;\n      case PopoverPlacements.TOP.rawValue:\n        return PopoverPlacements.TOP;\n      case PopoverPlacements.RIGHT.rawValue:\n        return PopoverPlacements.RIGHT;\n      case PopoverPlacements.BOTTOM.rawValue:\n        return PopoverPlacements.BOTTOM;\n      case PopoverPlacements.LEFT_START.rawValue:\n        return PopoverPlacements.LEFT_START;\n      case PopoverPlacements.LEFT_END.rawValue:\n        return PopoverPlacements.LEFT_END;\n      case PopoverPlacements.TOP_START.rawValue:\n        return PopoverPlacements.TOP_START;\n      case PopoverPlacements.TOP_END.rawValue:\n        return PopoverPlacements.TOP_END;\n      case PopoverPlacements.RIGHT_START.rawValue:\n        return PopoverPlacements.RIGHT_START;\n      case PopoverPlacements.RIGHT_END.rawValue:\n        return PopoverPlacements.RIGHT_END;\n      case PopoverPlacements.BOTTOM_START.rawValue:\n        return PopoverPlacements.BOTTOM_START;\n      case PopoverPlacements.BOTTOM_END.rawValue:\n        return PopoverPlacements.BOTTOM_END;\n      default:\n        return fallback;\n    }\n  }\n\n  private static typeOf(value: any): value is PopoverPlacement {\n    const { rawValue } = (<PopoverPlacement>value);\n\n    return rawValue !== undefined;\n  }\n}\n\nexport interface FlexPlacement {\n  direction: 'column' | 'row' | 'column-reverse' | 'row-reverse';\n  alignment: 'flex-start' | 'flex-end' | 'center';\n}\n\nconst fitsStart = (frame: Frame, other: Frame): boolean => {\n  return I18nLayoutService.select(fitsLeft, fitsRight)(frame, other);\n};\n\nconst fitsEnd = (frame: Frame, other: Frame): boolean => {\n  return I18nLayoutService.select(fitsRight, fitsLeft)(frame, other);\n};\n\nconst fitsLeft = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.x >= other.origin.x;\n};\n\nconst fitsRight = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.x + frame.size.width <= other.size.width;\n};\n\nconst fitsTop = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.y >= other.origin.y;\n};\n\nconst fitsBottom = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.y + frame.size.height <= other.size.height;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  TransformsStyle,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\nimport { I18nLayoutService } from '../support/services';\n\ntype AnimatedViewStyle = ViewStyle | any;\n\nexport interface PopoverViewProps extends ViewProps, StyledComponentProps {\n  contentContainerStyle?: StyleProp<AnimatedViewStyle>;\n  placement?: PopoverPlacement | string;\n  indicator?: (style: StyleType) => React.ReactElement;\n  children: React.ReactElement;\n}\n\nexport type PopoverViewElement = React.ReactElement<PopoverViewProps>;\n\nconst INDICATOR_OFFSET: number = 8;\nconst INDICATOR_WIDTH: number = 6;\n\nclass PopoverViewComponent extends React.Component<PopoverViewProps> {\n\n  static styledComponentName: string = 'Popover';\n\n  private get placement(): PopoverPlacement {\n    return PopoverPlacements.parse(this.props.placement);\n  }\n\n  private getComponentStyle = (source: StyleType) => {\n    const { indicatorWidth, indicatorHeight, indicatorBackgroundColor, ...containerParameters } = source;\n\n    return {\n      content: containerParameters,\n      indicator: {\n        width: indicatorWidth,\n        height: indicatorHeight,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private getDirectionStyle = () => {\n    const { direction, alignment } = this.placement.flex();\n\n    const isVertical: boolean = direction.startsWith('column');\n    const isStart: boolean = alignment.endsWith('start');\n    const isEnd: boolean = alignment.endsWith('end');\n    const isReverse: boolean = direction.endsWith('reverse');\n\n    // Rotate indicator by 90 deg if we have `row` direction (left/right placement)\n    // Rotate it again by 180 if we have `row-reverse` (bottom/right placement)\n    const indicatorRotate: number = isVertical ? 180 : 90;\n    const indicatorReverseRotate: number = isReverse ? 0 : 180;\n\n    // Translate container by half of `indicatorWidth`. Exactly half (because it has a square shape)\n    // Reverse if needed\n\n    // @ts-ignore: indicatorWidth type is always number\n    let containerTranslate: number = (this.props.indicator && !isVertical) ? INDICATOR_WIDTH / 2 : 0;\n    containerTranslate = isReverse ? containerTranslate : -containerTranslate;\n\n    // Translate indicator by passed `indicatorOffset`\n    // Reverse if needed\n\n    let indicatorTranslate: number = isVertical ? -INDICATOR_OFFSET : INDICATOR_OFFSET;\n    indicatorTranslate = isReverse ? -indicatorTranslate : indicatorTranslate;\n    const i18nVerticalIndicatorTranslate = I18nLayoutService.select(indicatorTranslate, -indicatorTranslate);\n    indicatorTranslate = isVertical ? i18nVerticalIndicatorTranslate : indicatorTranslate;\n\n    const contentTransforms: TransformsStyle = {\n      transform: [\n        { translateX: containerTranslate },\n      ],\n    };\n\n    const indicatorTransforms: TransformsStyle = {\n      transform: [\n        { rotate: `${indicatorRotate}deg` },\n        { rotate: `${indicatorReverseRotate}deg` },\n        // Translate indicator \"to start\" if we have `-start` alignment\n        // Or translate it \"to end\" if we have `-end` alignment\n        { translateX: isStart ? -indicatorTranslate : 0 },\n        { translateX: isEnd ? indicatorTranslate : 0 },\n      ],\n    };\n\n    return {\n      container: {\n        flexDirection: direction,\n        alignItems: alignment,\n      },\n      content: contentTransforms,\n      indicator: indicatorTransforms,\n    };\n  };\n\n  private renderIndicatorElement = (style: StyleType, directionStyle: StyleType): React.ReactElement => {\n    const indicatorElement: React.ReactElement = this.props.indicator(style);\n\n    return React.cloneElement(indicatorElement, {\n      style: [style, directionStyle, indicatorElement.props.style],\n    });\n  };\n\n  private renderComponentChildren = (style: StyleType, directionStyle: StyleType): React.ReactNodeArray => {\n    return [\n      this.props.indicator && this.renderIndicatorElement(style.indicator, directionStyle.indicator),\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, contentContainerStyle, themedStyle, onLayout, ...props } = this.props;\n    const { content, ...componentStyle } = this.getComponentStyle(themedStyle);\n\n    const directionStyle = this.getDirectionStyle();\n    const [indicatorElement]: React.ReactNodeArray = this.renderComponentChildren(componentStyle, directionStyle);\n\n    return (\n      <View\n        style={[directionStyle.container, contentContainerStyle]}\n        onLayout={onLayout}>\n        {indicatorElement}\n        <View\n          {...props}\n          style={[content, directionStyle.content, style]}\n        />\n      </View>\n    );\n  }\n}\n\nexport const PopoverView = styled<PopoverViewProps>(PopoverViewComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  PlacementOptions,\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\nimport { Frame } from '../measure/type';\n\nconst PLACEMENT_FAMILIES: string[] = [\n  PopoverPlacements.BOTTOM.rawValue,\n  PopoverPlacements.TOP.rawValue,\n  PopoverPlacements.LEFT.rawValue,\n  PopoverPlacements.RIGHT.rawValue,\n];\n\nexport class PopoverPlacementService {\n\n  public find(preferredValue: PopoverPlacement, options: PlacementOptions): PopoverPlacement {\n    const placement: PopoverPlacement = this.findRecursive(preferredValue, PLACEMENT_FAMILIES, options);\n\n    return placement || preferredValue;\n  }\n\n  private findRecursive(placement: PopoverPlacement, families: string[], options: PlacementOptions): PopoverPlacement {\n    const oneOfCurrentFamily: PopoverPlacement = this.findFromFamily(placement, options);\n\n    if (oneOfCurrentFamily) {\n      return oneOfCurrentFamily;\n    }\n\n    const oneOfReversedFamily: PopoverPlacement = this.findFromFamily(placement.reverse(), options);\n\n    if (oneOfReversedFamily) {\n      return oneOfReversedFamily;\n    }\n\n    delete families[families.indexOf(placement.parent().rawValue)];\n    delete families[families.indexOf(placement.reverse().parent().rawValue)];\n\n    const firstTruthy: string = families.filter(Boolean)[0];\n\n    if (firstTruthy) {\n      const nextPlacement: PopoverPlacement = PopoverPlacements.parse(firstTruthy);\n\n      return this.findRecursive(nextPlacement, families, options);\n    }\n\n    return null;\n  }\n\n  private findFromFamily(placement: PopoverPlacement, options: PlacementOptions): PopoverPlacement {\n    const preferredFrame: Frame = placement.frame(options);\n\n    if (placement.fits(preferredFrame, options.bounds)) {\n      return placement;\n    }\n\n    return placement.family().find((familyValue: PopoverPlacement): boolean => {\n      const familyFrame = familyValue.frame(options);\n\n      return familyValue.fits(familyFrame, options.bounds);\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  findNodeHandle,\n  UIManager,\n} from 'react-native';\nimport { Frame } from './type';\n\nexport interface MeasureElementProps<P = any> {\n  force?: boolean;\n  onMeasure: (frame: Frame) => void;\n  children: React.ReactElement<P>;\n}\n\nexport type MeasuringElement<P = any> = React.ReactElement;\n\n/**\n * Measures child element size and it's screen position asynchronously.\n * Returns measure result in `onMeasure` callback.\n *\n * Usage:\n *\n * ```tsx\n * const onMeasure = (frame: Frame): void => {\n *   const { x, y } = frame.origin;\n *   const { width, height } = frame.size;\n *   ...\n * };\n *\n * <MeasureElement onMeasure={onMeasure}>\n *   <ElementToMeasure />\n * </MeasureElement>\n * ```\n *\n * By default, it measures each time onLayout is called,\n * but `force` property may be used to measure any time it's needed.\n * DON'T USE THIS FLAG IF THE COMPONENT RENDERS FIRST TIME OR YOU KNOW `onLayout` WILL BE CALLED.\n */\nexport const MeasureElement = (props: MeasureElementProps): MeasuringElement => {\n\n  const ref: React.RefObject<any> = React.useRef();\n\n  const bindToWindow = (frame: Frame, window: Frame): Frame => {\n    if (frame.origin.x < window.size.width) {\n      return frame;\n    }\n\n    const boundFrame: Frame = new Frame(\n      frame.origin.x - window.size.width,\n      frame.origin.y,\n      frame.size.width,\n      frame.size.height,\n    );\n\n    return bindToWindow(boundFrame, window);\n  };\n\n  const onUIManagerMeasure = (x: number, y: number, w: number, h: number): void => {\n    const frame: Frame = bindToWindow(new Frame(x, y, w, h), Frame.window());\n    props.onMeasure(frame);\n  };\n\n  const measureSelf = (): void => {\n    const node: number = findNodeHandle(ref.current);\n    UIManager.measureInWindow(node, onUIManagerMeasure);\n  };\n\n  if (props.force) {\n    measureSelf();\n  }\n\n  return React.cloneElement(props.children, { ref, onLayout: measureSelf });\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  ViewProps,\n} from 'react-native';\nimport { ModalService } from '@kitten/theme';\nimport {\n  PopoverView,\n  PopoverViewElement,\n  PopoverViewProps,\n} from './popoverView.component';\nimport { PopoverPlacementService } from './placement.service';\nimport {\n  PlacementOptions,\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\nimport {\n  MeasureElement,\n  MeasuringElement,\n} from '../measure/measure.component';\nimport { ModalProps } from '../modal/modal.component';\nimport {\n  Frame,\n  Point,\n} from '../measure/type';\n\nexport interface PopoverProps extends PopoverViewProps, ModalProps {\n  content: React.ReactElement;\n  children: React.ReactElement;\n  fullWidth?: boolean;\n}\n\nexport type PopoverElement = React.ReactElement<PopoverProps>;\n\ninterface State {\n  childFrame: Frame;\n  contentFrame: Frame;\n  forceMeasure: boolean;\n}\n\nconst POINT_OUTSCREEN: Point = new Point(-999, -999);\n\n/**\n * Displays content in a Modal positioned relative to child component.\n * Supports automatic positioning.\n *\n * @extends React.Component\n *\n * @property {boolean} visible - Determines whether popover is visible or not.\n *\n * @property {ReactElement} content - Determines the content of the popover.\n *\n * @property {ReactElement} children - Determines the element \"above\" which popover will be shown.\n *\n * @property {string | PopoverPlacement} placement - Determines the actualPlacement of the popover.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Default is `bottom`.\n * Tip: use one of predefined placements instead of strings, e.g `PopoverPlacements.TOP`\n *\n * @property {boolean} fullWidth - Determines whether content element should have same width as child element.\n *\n * @property {boolean} allowBackdrop - Determines whether user can tap on back-drop.\n * Default is `false`.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Determines the style of backdrop.\n *\n * @property {() => void} onBackdropPress - Determines component's behavior when the user is\n * tapping on back-drop.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example PopoverSimpleUsage\n *\n * @overview-example PopoverPlacement\n *\n * @overview-example PopoverStyledBackdrop\n */\nexport class Popover extends React.Component<PopoverProps, State> {\n\n  static defaultProps: Partial<PopoverProps> = {\n    allowBackdrop: true,\n    placement: PopoverPlacements.BOTTOM,\n  };\n\n  public state: State = {\n    childFrame: Frame.zero(),\n    contentFrame: Frame.zero(),\n    forceMeasure: false,\n  };\n\n  private modalId: string;\n  private contentPosition: Point = POINT_OUTSCREEN;\n  private placementService: PopoverPlacementService = new PopoverPlacementService();\n\n  private actualPlacement: PopoverPlacement = this.preferredPlacement;\n\n  private get preferredPlacement(): PopoverPlacement {\n    return PopoverPlacements.parse(this.props.placement);\n  }\n\n  private get contentFlexPosition() {\n    const { x: left, y: top } = this.contentPosition;\n    return { left, top };\n  }\n\n  private get backdropConfig() {\n    const { allowBackdrop, onBackdropPress, backdropStyle } = this.props;\n    return { allowBackdrop, onBackdropPress, backdropStyle };\n  }\n\n  public componentDidUpdate(prevProps: PopoverProps): void {\n    if (!this.modalId && this.props.visible && !this.state.forceMeasure) {\n      this.setState({ forceMeasure: true });\n      return;\n    }\n\n    if (this.modalId && !this.props.visible) {\n      this.contentPosition = POINT_OUTSCREEN;\n      this.modalId = ModalService.hide(this.modalId);\n    }\n  }\n\n  private onChildMeasure = (childFrame: Frame): void => {\n    this.state.childFrame = childFrame;\n\n    if (!this.modalId && this.props.visible) {\n      this.modalId = ModalService.show(this.renderMeasuringPopoverElement(), this.backdropConfig);\n      return;\n    }\n\n    if (this.modalId && this.props.visible) {\n      ModalService.update(this.modalId, this.renderPopoverElement());\n    }\n  };\n\n  private onContentMeasure = (contentFrame: Frame): void => {\n    this.state.contentFrame = contentFrame;\n\n    const placementOptions: PlacementOptions = this.findPlacementOptions(contentFrame, this.state.childFrame);\n    this.actualPlacement = this.placementService.find(this.preferredPlacement, placementOptions);\n\n    const displayFrame: Frame = this.actualPlacement.frame(placementOptions);\n    this.contentPosition = displayFrame.origin;\n\n    ModalService.update(this.modalId, this.renderPopoverElement());\n  };\n\n  private findPlacementOptions = (contentFrame: Frame, childFrame: Frame): PlacementOptions => {\n    const width: number = this.props.fullWidth ? childFrame.size.width : contentFrame.size.width;\n    const frame: Frame = new Frame(contentFrame.origin.x, contentFrame.origin.y, width, contentFrame.size.height);\n\n    return new PlacementOptions(frame, childFrame, Frame.window(), Frame.zero());\n  };\n\n  private renderContentElement = (): React.ReactElement => {\n    const contentElement: React.ReactElement = this.props.content;\n    const fullWidthStyle = { width: this.state.childFrame.size.width };\n\n    return React.cloneElement(contentElement, {\n      style: [this.props.fullWidth && fullWidthStyle, contentElement.props.style],\n    });\n  };\n\n  private renderPopoverElement = (): PopoverViewElement => {\n    const { contentContainerStyle, ...props } = this.props;\n\n    return (\n      <PopoverView\n        {...props}\n        contentContainerStyle={[contentContainerStyle, styles.popoverView, this.contentFlexPosition]}\n        placement={this.actualPlacement.reverse()}>\n        {this.renderContentElement()}\n      </PopoverView>\n    );\n  };\n\n  private renderMeasuringPopoverElement = (): MeasuringElement => {\n    return (\n      <MeasureElement onMeasure={this.onContentMeasure}>\n        {this.renderPopoverElement()}\n      </MeasureElement>\n    );\n  };\n\n  public render(): React.ReactElement {\n    return (\n      <MeasureElement\n        force={this.state.forceMeasure}\n        onMeasure={this.onChildMeasure}>\n        {this.props.children}\n      </MeasureElement>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  popoverView: {\n    position: 'absolute',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ListRenderItemInfo,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Input,\n  InputElement,\n  InputProps,\n} from '../input/input.component';\nimport {\n  List,\n  ListElement,\n  ListProps,\n} from '../list/list.component';\nimport {\n  ListItem,\n  ListItemElement,\n} from '../list/listItem.component';\nimport {\n  Popover,\n  PopoverElement,\n} from '../popover/popover.component';\nimport { InputFocusEvent } from '../support/typings';\n\nexport interface AutocompleteOption {\n  title: string;\n}\n\nexport interface AutocompleteProps<O extends Option = Option> extends InputProps {\n  data?: O[];\n  placeholderData?: O[];\n  onSelect?: (option: O) => void;\n  renderItem?: (info: ListRenderItemInfo<O>) => React.ReactElement;\n}\n\nexport type AutocompleteElement<O extends Option = Option> = React.ReactElement<AutocompleteProps<O>>;\n\ntype Option = AutocompleteOption;\n\ninterface State {\n  optionsVisible: boolean;\n}\n\n/**\n * Autocomplete is a normal text input enhanced by a panel of suggested options.\n *\n * @extends React.Component\n *\n * @property {AutocompleteOption[]} data - Options displayed in component.\n * Each option can be any type, but should contain `title` property.\n *\n * @property {AutocompleteOption[]} placeholderData - Options displayed in component\n * when data is nullable of empty.\n *\n * @property {(option: AutocompleteOption) => void} onSelect - Emits when option is pressed.\n *\n * @property {(info: ListRenderItemInfo<AutocompleteOption>) => ReactElement} renderItem - Takes an\n * item from data and renders it into the list. If not provided, ListItem is rendered.\n *\n * @property {InputProps} ...InputProps - Any props applied to Input component.\n *\n * @overview-example AutocompleteSimpleUsage\n *\n * @overview-example AutocompleteStates\n *\n * @overview-example AutocompleteStatus\n *\n * @overview-example AutocompleteSize\n *\n * @overview-example AutocompleteWithIcon\n *\n * @overview-example AutocompleteWithLabel\n *\n * @example AutocompleteAsync\n */\nexport class Autocomplete<O extends Option = Option> extends React.Component<AutocompleteProps<O>, State> {\n\n  public state: State = {\n    optionsVisible: false,\n  };\n\n  private get data(): O[] {\n    const hasData: boolean = this.props.data && this.props.data.length > 0;\n    return hasData && this.props.data || this.props.placeholderData;\n  }\n\n  private onInputFocus = (e: InputFocusEvent): void => {\n    this.setState({ optionsVisible: true });\n\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n  };\n\n  private onBackdropPress = (): void => {\n    this.setState({ optionsVisible: false });\n  };\n\n  private onOptionPress = (index: number): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(this.props.data[index]);\n      this.setState({ optionsVisible: false });\n    }\n  };\n\n  private renderOptionElement = (info: ListRenderItemInfo<O>): ListItemElement => {\n    return (\n      <ListItem\n        title={info.item.title}\n        onPress={this.onOptionPress}\n      />\n    );\n  };\n\n  private renderCustomOptionElement = (info: ListRenderItemInfo<O>): React.ReactElement => {\n    return (\n      <ListItem onPress={this.onOptionPress}>\n        {this.props.renderItem(info)}\n      </ListItem>\n    );\n  };\n\n  private renderOptionListElement(props: Partial<ListProps>): ListElement {\n    return (\n      <List\n        style={styles.optionList}\n        {...props}\n        data={this.data}\n        bounces={false}\n        renderItem={props.renderItem && this.renderCustomOptionElement || this.renderOptionElement}\n      />\n    );\n  }\n\n  private renderInputElement = (props: Partial<InputProps>): InputElement => {\n    return (\n      <Input\n        {...props}\n        onFocus={this.onInputFocus}\n      />\n    );\n  };\n\n  private renderComponentChildren = (props: AutocompleteProps): React.ReactElement[] => {\n    const { data, renderItem, placeholderData, ...inputProps } = props;\n    return [\n      this.renderInputElement(inputProps),\n      this.renderOptionListElement({ data, renderItem }),\n    ];\n  };\n\n  public render(): PopoverElement {\n    const [inputElement, listElement]: React.ReactElement[] = this.renderComponentChildren(this.props);\n\n    return (\n      <Popover\n        style={styles.popover}\n        visible={this.state.optionsVisible}\n        fullWidth={true}\n        content={listElement}\n        onBackdropPress={this.onBackdropPress}>\n        {inputElement}\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  popover: {\n    maxHeight: 192,\n    overflow: 'hidden',\n  },\n  optionList: {\n    flexGrow: 0,\n    overflow: 'hidden',\n  },\n});\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Image,\n  ImageProps,\n  ImageStyle,\n  StyleSheet,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\n\nexport interface AvatarProps extends StyledComponentProps, ImageProps {\n  shape?: string;\n  size?: string;\n}\n\nexport type AvatarElement = React.ReactElement<AvatarProps>;\n\n/**\n * `Avatar` is a styled `Image` component.\n *\n * @extends React.Component\n *\n * @property {string} shape - Determines the shape of the component.\n * Can be `round`, `rounded` or `square`.\n * Default is `round`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Default is `medium`.\n *\n * @property {ImageProps} ...ImageProps - Any props applied to Image component.\n *\n * @overview-example AvatarSimpleUsage\n *\n * @overview-example AvatarSize\n *\n * @overview-example AvatarShape\n *\n * @example AvatarRemoteImages\n *\n * @example AvatarInlineStyling\n */\nexport class AvatarComponent extends React.Component<AvatarProps> {\n\n  static styledComponentName: string = 'Avatar';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { roundCoefficient, ...containerParameters } = source;\n\n    // @ts-ignore: avoid checking `containerParameters`\n    const baseStyle: ImageStyle = StyleSheet.flatten([\n      containerParameters,\n      this.props.style,\n    ]);\n\n    // @ts-ignore: rhs operator is restricted to be number\n    const borderRadius: number = roundCoefficient * baseStyle.height;\n\n    return {\n      borderRadius,\n      ...baseStyle,\n    };\n  };\n\n  public render(): React.ReactElement<ImageProps> {\n    const { themedStyle, ...restProps } = this.props;\n    const componentStyle: ImageStyle = this.getComponentStyle(themedStyle);\n\n    return (\n      <Image\n        {...restProps}\n        style={componentStyle}\n      />\n    );\n  }\n}\n\nexport const Avatar = styled<AvatarProps>(AvatarComponent);\n","import React from 'react';\nimport {\n  Animated,\n  Easing,\n  LayoutChangeEvent,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { I18nLayoutService } from '../services';\n\ninterface ComponentProps {\n  positions: number;\n  selectedPosition?: number;\n  animationDuration?: number;\n}\n\nexport type TabIndicatorProps = ViewProps & ComponentProps;\nexport type TabIndicatorElement = React.ReactElement<TabIndicatorProps>;\n\nexport class TabIndicator extends React.Component<TabIndicatorProps> {\n\n  static defaultProps: Partial<TabIndicatorProps> = {\n    selectedPosition: 0,\n    animationDuration: 200,\n  };\n\n  private indicatorWidth: number;\n  private contentOffset: Animated.Value = new Animated.Value(0);\n\n  public componentDidMount() {\n    this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n  }\n\n  public shouldComponentUpdate(nextProps: TabIndicatorProps): boolean {\n    return this.props.selectedPosition !== nextProps.selectedPosition;\n  }\n\n  public componentDidUpdate() {\n    const { selectedPosition: index } = this.props;\n\n    this.scrollToIndex({ index, animated: true });\n  }\n\n  public componentWillUnmount() {\n    this.contentOffset.removeAllListeners();\n  }\n\n  /**\n   * scrolls indicator to passed index\n   *\n   * @param params (object) - {\n   *  index: number,\n   *  animated: boolean | undefined\n   * }\n   */\n  public scrollToIndex(params: { index: number, animated?: boolean }) {\n    const { index, ...rest } = params;\n    const offset: number = this.indicatorWidth * index;\n\n    this.scrollToOffset({ offset, ...rest });\n  }\n\n  /**\n   * scrolls indicator to passed offset\n   *\n   * @param params (object) - {\n   *  offset: number,\n   *  animated: boolean | undefined\n   * }\n   */\n  public scrollToOffset(params: { offset: number, animated?: boolean }) {\n    this.createOffsetAnimation(params).start(this.onContentOffsetAnimationStateEnd);\n  }\n\n  private onContentOffsetAnimationStateChanged = (state: { value: number }) => {\n    // no-op\n  };\n\n  private onContentOffsetAnimationStateEnd = (result: { finished: boolean }) => {\n    // no-op\n  };\n\n  private createOffsetAnimation = (params: { offset: number, animated?: boolean }): Animated.CompositeAnimation => {\n    const animationDuration: number = params.animated ? this.props.animationDuration : 0;\n\n    return Animated.timing(this.contentOffset, {\n      toValue: I18nLayoutService.select(params.offset, -params.offset),\n      duration: animationDuration,\n      easing: Easing.linear,\n    });\n  };\n\n  private onLayout = (event: LayoutChangeEvent) => {\n    this.indicatorWidth = event.nativeEvent.layout.width;\n\n    this.scrollToOffset({\n      offset: this.indicatorWidth * this.props.selectedPosition,\n      animated: false,\n    });\n  };\n\n  private getComponentStyle = (): ViewStyle => {\n    const widthPercent: number = 100 / this.props.positions;\n\n    return {\n      width: `${widthPercent}%`,\n\n      // @ts-ignore: RN has no types for `Animated` styles\n      transform: [{ translateX: this.contentOffset }],\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, ...restProps } = this.props;\n    const componentStyle: ViewStyle = this.getComponentStyle();\n\n    return (\n      <Animated.View\n        {...restProps}\n        onLayout={this.onLayout}\n        style={[style, componentStyle]}\n      />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { BottomNavigationTabElement } from './bottomNavigationTab.component';\nimport {\n  TabIndicator,\n  TabIndicatorElement,\n} from '../support/components/tabIndicator.component';\n\ntype ChildrenProp = BottomNavigationTabElement | BottomNavigationTabElement[];\n\nexport interface BottomNavigationProps extends StyledComponentProps, ViewProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  onSelect?: (index: number) => void;\n}\n\nexport type BottomNavigationElement = React.ReactElement<BottomNavigationProps>;\n\n/**\n * `BottomNavigation` component is designed to be a Bottom Tab Bar.\n * Can be used for navigation.\n *\n * @extends React.Component\n *\n * @property {number} selectedIndex - Determines index of the selected tab.\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default` or `noIndicator`.\n *\n * @property {ReactElement<TabProps> | ReactElement<TabProps>[]} children - Determines tabs of the Bottom Navigation.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines styles of the indicator.\n *\n * @property {(index: number) => void} onSelect - Triggered on select value.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example BottomNavigationSimpleUsage\n *\n * @overview-example Using with React Navigation\n *\n * ```\n * import React from 'react';\n * import { createAppContainer, SafeAreaView } from 'react-navigation';\n * import { createBottomTabNavigator } from 'react-navigation-tabs';\n * import { BottomNavigation, BottomNavigationTab, Layout, Text } from '@ui-kitten/components';\n *\n * // React Navigation also requires installing additional dependencies:\n * //\n * // npm i react-navigation react-navigation-tabs react-native-reanimated react-native-gesture-handler\n * //\n * // Then install it for ios:\n * //\n * // cd ios && pod install\n *\n * const UsersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>USERS</Text>\n *   </Layout>\n * );\n *\n * const OrdersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>ORDERS</Text>\n *   </Layout>\n * );\n *\n * const TabBarComponent = ({ navigation }) => {\n *\n *   const onSelect = (index) => {\n *     const selectedTabRoute = navigation.state.routes[index];\n *     navigation.navigate(selectedTabRoute.routeName);\n *   };\n *\n *   return (\n *     <SafeAreaView>\n *       <BottomNavigation selectedIndex={navigation.state.index} onSelect={onSelect}>\n *         <BottomNavigationTab title='USERS'/>\n *         <BottomNavigationTab title='ORDERS'/>\n *       </BottomNavigation>\n *     </SafeAreaView>\n *   );\n * };\n *\n * const TabNavigator = createBottomTabNavigator({\n *   Users: UsersScreen,\n *   Orders: OrdersScreen,\n * }, {\n *   tabBarComponent: TabBarComponent,\n * });\n *\n * export const AppNavigator = createAppContainer(TabNavigator);\n * ```\n *\n * @example BottomNavigationWithoutIndicator\n *\n * @overview-example BottomNavigationWithIcons\n *\n * @example BottomNavigationInlineStyling\n */\nexport class BottomNavigationComponent extends React.Component<BottomNavigationProps> {\n\n  static styledComponentName: string = 'BottomNavigation';\n\n  static defaultProps: Partial<BottomNavigationProps> = {\n    selectedIndex: 0,\n  };\n\n  private onTabSelect = (index: number): void => {\n    if (this.props.onSelect && this.props.selectedIndex !== index) {\n      this.props.onSelect(index);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { indicatorHeight, indicatorBackgroundColor, ...containerParameters } = source;\n\n    return {\n      container: containerParameters,\n      item: {},\n      indicator: {\n        height: indicatorHeight,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private renderIndicatorElement = (positions: number, style: ViewStyle): TabIndicatorElement => {\n    const { indicatorStyle, selectedIndex } = this.props;\n\n    return (\n      <TabIndicator\n        key={0}\n        style={[style, styles.indicator, indicatorStyle]}\n        selectedPosition={selectedIndex}\n        positions={positions}\n      />\n    );\n  };\n\n  private renderTabElement = (element: BottomNavigationTabElement, index: number): BottomNavigationTabElement => {\n    return React.cloneElement(element, {\n      key: index,\n      style: [styles.item, element.props.style],\n      selected: index === this.props.selectedIndex,\n      onSelect: () => this.onTabSelect(index),\n    });\n  };\n\n  private renderTabElements = (source: ChildrenProp): BottomNavigationTabElement[] => {\n    return React.Children.map(source, this.renderTabElement);\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const tabElements: BottomNavigationTabElement[] = this.renderTabElements(this.props.children);\n\n    const hasIndicator: boolean = style.indicator.height > 0;\n\n    return [\n      hasIndicator && this.renderIndicatorElement(tabElements.length, style.indicator),\n      ...tabElements,\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, ...derivedProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    const [indicatorElement, ...tabElements] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <View\n        {...derivedProps}\n        style={[container, styles.container, style]}>\n        {indicatorElement}\n        {tabElements}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  item: {\n    flex: 1,\n  },\n  indicator: {\n    position: 'absolute',\n  },\n});\n\nexport const BottomNavigation = styled<BottomNavigationProps>(BottomNavigationComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageStyle,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { IconElement } from '../icon/icon.component';\nimport {\n  isValidString,\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\ntype IconProp = (style: ImageStyle) => IconElement;\n\nexport interface BottomNavigationTabProps extends StyledComponentProps, TouchableOpacityProps {\n  title?: string;\n  titleStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  selected?: boolean;\n  onSelect?: (selected: boolean) => void;\n}\n\nexport type BottomNavigationTabElement = React.ReactElement<BottomNavigationTabProps>;\n\n/**\n * `BottomNavigationTab` component is a part of the `BottomNavigation` component.\n * `BottomNavigation` tabs should be wrapped in BottomNavigation to provide usable component.\n * See usage examples at `BottomNavigation` component documentation.\n *\n * @extends React.Component\n *\n * @property {boolean} selected - Determines whether component is selected.\n *\n * @property {string} title - Determines the title of the tab.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {(style: ImageStyle) => ReactElement} icon - Determines the icon of the tab.\n *\n * @property {(selected: boolean) => void} onSelect - Triggered on select value.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example BottomNavigationTabSimpleUsage\n *\n * @overview-example BottomNavigationTabWithIcon\n *\n * @example BottomNavigationTabInlineStyling\n */\nexport class BottomNavigationTabComponent extends React.Component<BottomNavigationTabProps>\n  implements WebEventResponderCallbacks {\n\n  static styledComponentName: string = 'BottomNavigationTab';\n\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  // WebEventResponderCallbacks\n\n  public onMouseEnter = (): void => {\n    this.props.dispatch([Interaction.HOVER]);\n  };\n\n  public onMouseLeave = (): void => {\n    this.props.dispatch([]);\n  };\n\n  private onPress = (): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(!this.props.selected);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      iconWidth,\n      iconHeight,\n      iconMarginVertical,\n      iconTintColor,\n      textMarginVertical,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      text: {\n        marginVertical: textMarginVertical,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginVertical: iconMarginVertical,\n        tintColor: iconTintColor,\n      },\n    };\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 1,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderTitleElement = (style: TextStyle): TextElement => {\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text\n        key={2}\n        style={[style, styles.text, titleStyle]}>\n        {title}\n      </Text>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon, title } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      isValidString(title) && this.renderTitleElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { style, themedStyle, ...restProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n    const [iconElement, titleElement] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        style={[container, styles.container, webStyles.container, style]}\n        onPress={this.onPress}>\n        {iconElement}\n        {titleElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {},\n  icon: {},\n});\n\nconst webStyles = Platform.OS === 'web' && StyleSheet.create({\n  container: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n\nexport const BottomNavigationTab = styled<BottomNavigationTabProps>(BottomNavigationTabComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageStyle,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { IconElement } from '../icon/icon.component';\nimport {\n  isValidString,\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\ntype IconProp = (style: ImageStyle) => IconElement;\n\nexport interface ButtonProps extends StyledComponentProps, TouchableOpacityProps {\n  textStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  status?: string;\n  size?: string;\n  children?: string;\n}\n\nexport type ButtonElement = React.ReactElement<ButtonProps>;\n\n/**\n * Styled `Button` component.\n *\n * @extends React.Component\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `filled`, `outline` or `ghost`.\n * Default is `filled`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `primary`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Default is `medium`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} children - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(style: ImageStyle) => ReactElement} icon - Determines icon of the component.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example ButtonSimpleUsage\n *\n * @overview-example ButtonStates\n *\n * @overview-example ButtonAppearances\n *\n * @overview-example ButtonStatus\n *\n * @overview-example ButtonSize\n *\n * @overview-example ButtonOutline\n *\n * @overview-example ButtonGhost\n *\n * @overview-example ButtonWithIcon\n */\nexport class ButtonComponent extends React.Component<ButtonProps> implements WebEventResponderCallbacks {\n\n  static styledComponentName: string = 'Button';\n\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  // WebEventResponderCallbacks\n\n  public onMouseEnter = (): void => {\n    this.props.dispatch([Interaction.HOVER]);\n  };\n\n  public onMouseLeave = (): void => {\n    this.props.dispatch([]);\n  };\n\n  public onFocus = (): void => {\n    this.props.dispatch([Interaction.FOCUSED]);\n  };\n\n  public onBlur = (): void => {\n    this.props.dispatch([]);\n  };\n\n  private onPress = (event: GestureResponderEvent): void => {\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textColor,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textMarginHorizontal,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      iconMarginHorizontal,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      text: {\n        color: textColor,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        marginHorizontal: textMarginHorizontal,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        tintColor: iconTintColor,\n        marginHorizontal: iconMarginHorizontal,\n      },\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    return (\n      <Text\n        key={1}\n        style={[style, styles.text, this.props.textStyle]}>\n        {this.props.children}\n      </Text>\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 2,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon, children } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      isValidString(children) && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, ...containerProps } = this.props;\n    const { container, ...childStyles } = this.getComponentStyle(themedStyle);\n    const [iconElement, textElement] = this.renderComponentChildren(childStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...containerProps}\n        {...this.webEventResponder.eventHandlers}\n        style={[container, styles.container, webStyles.container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        {iconElement}\n        {textElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {},\n  icon: {},\n});\n\nconst webStyles = Platform.OS === 'web' && StyleSheet.create({\n  container: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n\nexport const Button = styled<ButtonProps>(ButtonComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { ButtonElement } from '../button/button.component';\n\ntype ChildrenProp = ButtonElement | ButtonElement[];\n\nexport interface ButtonGroupProps extends StyledComponentProps, ViewProps {\n  size?: string;\n  status?: string;\n  children: ChildrenProp;\n}\n\nexport type ButtonGroupElement = React.ReactElement<ButtonGroupProps>;\n\n/**\n * Renders a group of `Buttons`.\n *\n * @extends React.Component\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `filled` or `outline`.\n * Default is `filled`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `primary`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Default is `medium`.\n *\n * @property {{ReactElement<ButtonProps> | ReactElement<ButtonProps>[]} children - Determines buttons in group.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example ButtonGroupSimpleUsage\n *\n * @overview-example ButtonGroupAppearance\n *\n * @overview-example ButtonGroupStatus\n *\n * @overview-example ButtonGroupSize\n *\n * @overview-example ButtonGroupOutline\n *\n * @overview-example ButtonGroupWithIcons\n *\n * @example ButtonGroupInlineStyling\n */\nclass ButtonGroupComponent extends React.Component<ButtonGroupProps> {\n\n  static styledComponentName: string = 'ButtonGroup';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { dividerBackgroundColor, dividerWidth, ...containerParameters } = source;\n\n    return {\n      container: {\n        ...containerParameters,\n        borderWidth: containerParameters.borderWidth + 0.25,\n      },\n      button: {\n        borderWidth: dividerWidth,\n        borderColor: dividerBackgroundColor,\n      },\n    };\n  };\n\n  private isFirstElement = (index: number): boolean => {\n    return index === 0;\n  };\n\n  private isLastElement = (index: number): boolean => {\n    return index === React.Children.count(this.props.children) - 1;\n  };\n\n  private renderButtonElement = (element: ButtonElement, index: number, style: StyleType): ButtonElement => {\n    const { appearance, size, status } = this.props;\n    const { borderRadius }: ViewStyle = style.container;\n    const { borderWidth, borderColor }: ViewStyle = style.button;\n\n    const shapeStyle: ViewStyle = !this.isLastElement(index) && {\n      borderEndWidth: borderWidth,\n      borderEndColor: borderColor,\n    };\n\n    const startShapeStyle: ViewStyle = this.isFirstElement(index) && {\n      borderTopStartRadius: borderRadius,\n      borderBottomStartRadius: borderRadius,\n    };\n\n    const endShapeStyle: ViewStyle = this.isLastElement(index) && {\n      borderTopEndRadius: borderRadius,\n      borderBottomEndRadius: borderRadius,\n    };\n\n    return React.cloneElement(element, {\n      key: index,\n      appearance: appearance,\n      size: size,\n      status: status,\n      style: [element.props.style, styles.button, shapeStyle, startShapeStyle, endShapeStyle],\n    });\n  };\n\n  private renderButtonElements = (source: ChildrenProp, style: StyleType): ButtonElement[] => {\n    return React.Children.map(source, (element: ButtonElement, index: number): ButtonElement => {\n      return this.renderButtonElement(element, index, style);\n    });\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, children, ...derivedProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const buttonElements: ButtonElement[] = this.renderButtonElements(children, componentStyle);\n\n    return (\n      <View\n        {...derivedProps}\n        style={[componentStyle.container, styles.container, style]}>\n        {buttonElements}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n  button: {\n    borderRadius: 0,\n    borderWidth: 0,\n  },\n});\n\nexport const ButtonGroup = styled<ButtonGroupProps>(ButtonGroupComponent);\n","import React from 'react';\nimport {\n  G,\n  Path,\n  Rect,\n  Svg,\n  SvgProps,\n} from 'react-native-svg';\n\nexport type ChevronDownProps = SvgProps;\nexport type ChevronDownElement = React.ReactElement<ChevronDownProps>;\n\nexport class ChevronDown extends React.Component<SvgProps> {\n\n  public render(): React.ReactElement<SvgProps> {\n    return (\n      <Svg {...this.props} viewBox='0 0 24 24'>\n        <G data-name='Layer 2'>\n          <G data-name='chevron-down'>\n            <Rect width='24' height='24' opacity='0'/>\n            <Path\n              d='M12 15.5a1 1 0 0 1-.71-.29l-4-4a1 1 0 1 1 1.42-1.42L12 13.1l3.3-3.18a1 1 0 1 1 1.38 1.44l-4 3.86a1 1 0 0 1-.68.28z'/>\n          </G>\n        </G>\n      </Svg>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  G,\n  Path,\n  Rect,\n  Svg,\n  SvgProps,\n} from 'react-native-svg';\n\nexport type ChevronLeftProps = SvgProps;\nexport type ChevronLeftElement = React.ReactElement<ChevronLeftProps>;\n\nexport class ChevronLeft extends React.Component<SvgProps> {\n\n  public render(): React.ReactElement<SvgProps> {\n    return (\n      <Svg {...this.props} viewBox='0 0 24 24'>\n        <G data-name='Layer 2'>\n          <G data-name='chevron-left'>\n            <Rect\n              width='24'\n              height='24'\n              transform='rotate(90 12 12)'\n              opacity='0'\n            />\n            <Path\n              d='M13.36 17a1 1 0 0 1-.72-.31l-3.86-4a1 1 0 0 1 0-1.4l4-4a1 1 0 1 1 1.42 1.42L10.9 12l3.18 3.3a1 1 0 0 1 0 1.41 1 1 0 0 1-.72.29z'/>\n          </G>\n        </G>\n      </Svg>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  G,\n  Path,\n  Rect,\n  Svg,\n  SvgProps,\n} from 'react-native-svg';\n\nexport type ChevronRightProps = SvgProps;\nexport type ChevronRightElement = React.ReactElement<ChevronRightProps>;\n\nexport class ChevronRight extends React.Component<SvgProps> {\n\n  public render(): React.ReactElement<SvgProps> {\n    return (\n      <Svg {...this.props} viewBox='0 0 24 24'>\n        <G data-name='Layer 2'>\n          <G data-name='chevron-right'>\n            <Rect\n              width='24'\n              height='24'\n              transform='rotate(-90 12 12)'\n              opacity='0'\n            />\n            <Path\n              d='M10.5 17a1 1 0 0 1-.71-.29 1 1 0 0 1 0-1.42L13.1 12 9.92 8.69a1 1 0 0 1 0-1.41 1 1 0 0 1 1.42 0l3.86 4a1 1 0 0 1 0 1.4l-4 4a1 1 0 0 1-.7.32z'/>\n          </G>\n        </G>\n      </Svg>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { SvgProps } from 'react-native-svg';\nimport { Button } from '../../button/button.component';\nimport {\n  ChevronDown,\n  ChevronDownElement,\n  ChevronDownProps,\n} from '../../support/components/chevronDown.component';\nimport {\n  ChevronLeft,\n  ChevronLeftElement,\n  ChevronLeftProps,\n} from '../../support/components/chevronLeft.component';\nimport {\n  ChevronRight,\n  ChevronRightElement,\n  ChevronRightProps,\n} from '../../support/components/chevronRight.component';\nimport { I18nLayoutService } from '../../support/services';\n\nexport interface CalendarHeaderProps extends ViewProps {\n  title: string;\n  titleStyle?: StyleProp<TextStyle>;\n  iconStyle?: ImageStyle;\n  lateralNavigationAllowed: boolean;\n  onTitlePress?: () => void;\n  onNavigationLeftPress?: () => void;\n  onNavigationRightPress?: () => void;\n}\n\nexport type CalendarHeaderElement = React.ReactElement<CalendarHeaderProps>;\n\nexport class CalendarHeader extends React.Component<CalendarHeaderProps> {\n\n  private renderTitleIcon = (): ChevronDownElement => {\n    const { tintColor, ...svgProps } = this.props.iconStyle;\n\n    return (\n      <ChevronDown\n        style={styles.headerButtonIcon}\n        fill={tintColor}\n        {...svgProps as ChevronDownProps}\n      />\n    );\n  };\n\n  private renderLeftIcon = (): ChevronLeftElement => {\n    const { tintColor, ...svgProps } = this.props.iconStyle;\n    const IconComponent: React.ComponentType<SvgProps> = I18nLayoutService.select(ChevronLeft, ChevronRight);\n\n    return (\n      <IconComponent\n        style={styles.lateralIcon}\n        fill={tintColor}\n        {...svgProps as ChevronLeftProps}\n      />\n    );\n  };\n\n  private renderRightIcon = (): ChevronRightElement => {\n    const { tintColor, ...svgProps } = this.props.iconStyle;\n    const IconComponent: React.ComponentType<SvgProps> = I18nLayoutService.select(ChevronRight, ChevronLeft);\n\n    return (\n      <IconComponent\n        style={styles.lateralIcon}\n        fill={tintColor}\n        {...svgProps as ChevronRightProps}\n      />\n    );\n  };\n\n  private renderLateralNavigationControls = (): React.ReactElement<ViewProps> => {\n    return (\n      <View style={styles.subContainer}>\n        <Button\n          style={styles.headerButton}\n          appearance='ghost'\n          // @ts-ignore\n          icon={this.renderLeftIcon}\n          onPress={this.props.onNavigationLeftPress}\n        />\n        <Button\n          style={styles.headerButton}\n          appearance='ghost'\n          // @ts-ignore\n          icon={this.renderRightIcon}\n          onPress={this.props.onNavigationRightPress}\n        />\n      </View>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, titleStyle, onTitlePress, title, lateralNavigationAllowed, ...restProps } = this.props;\n\n    return (\n      <View style={[styles.container, style]} {...restProps}>\n        <Button\n          style={styles.headerButton}\n          appearance='ghost'\n          textStyle={[titleStyle, styles.headerButtonText]}\n          // @ts-ignore\n          icon={this.renderTitleIcon}\n          onPress={onTitlePress}>\n          {title}\n        </Button>\n        {lateralNavigationAllowed && this.renderLateralNavigationControls()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  headerButton: {\n    flexDirection: 'row-reverse',\n  },\n  headerButtonText: {\n    marginHorizontal: 0,\n  },\n  headerButtonIcon: {\n    marginHorizontal: 0,\n  },\n  lateralIcon: {\n    marginHorizontal: 0,\n  },\n  subContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\n\nexport interface CalendarMonthHeaderProps extends ViewProps {\n  data: string[];\n  children: (data: string, index: number) => React.ReactElement;\n}\n\nexport type CalendarMonthHeaderElement = React.ReactElement<CalendarMonthHeaderProps>;\n\nexport class CalendarMonthHeader extends React.Component<CalendarMonthHeaderProps> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, data, children, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, style]}>\n        {data.map(children)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { CalendarPickerCellElement } from './calendarPickerCell.component';\nimport { CalendarDateInfo } from '../../type';\n\nexport interface CalendarPickerRowProps<D> extends ViewProps {\n  data: CalendarDateInfo<D>[];\n  children: (item: CalendarDateInfo<D>, index: number) => CalendarPickerCellElement<D>;\n}\n\nexport type CalendarPickerRowElement<D> = React.ReactElement<CalendarPickerRowProps<D>>;\n\nexport class CalendarPickerRow<D> extends React.Component<CalendarPickerRowProps<D>> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, data, children, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, style]}>\n        {data.map(children)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { CalendarDateInfo } from '../../type';\n\ntype ChildrenProp<D> = (date: CalendarDateInfo<D>, style: StyleType) => React.ReactElement;\n\nexport interface CalendarPickerCellProps<D> extends StyledComponentProps, TouchableOpacityProps {\n  date: CalendarDateInfo<D>;\n  selected?: boolean;\n  bounding?: boolean;\n  today?: boolean;\n  range?: boolean;\n  firstRangeItem?: boolean;\n  lastRangeItem?: boolean;\n  onSelect?: (date: CalendarDateInfo<D>) => void;\n  children: ChildrenProp<D>;\n  shouldComponentUpdate?: (props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>) => boolean;\n}\n\nexport type CalendarPickerCellElement<D> = React.ReactElement<CalendarPickerCellProps<D>>;\n\nclass CalendarPickerCellComponent<D> extends React.Component<CalendarPickerCellProps<D>> {\n\n  static styledComponentName: string = 'CalendarCell';\n\n  public shouldComponentUpdate(nextProps: CalendarPickerCellProps<D>): boolean {\n    if (nextProps.shouldComponentUpdate) {\n      return nextProps.shouldComponentUpdate(this.props, nextProps);\n    }\n    return true;\n  }\n\n  private onPress = (): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(this.props.date);\n    }\n  };\n\n  private getContainerBorderRadius = (borderRadius: number): StyleType => {\n    const { firstRangeItem, lastRangeItem } = this.props;\n\n    if (firstRangeItem) {\n      return {\n        borderBottomLeftRadius: borderRadius,\n        borderBottomRightRadius: 0,\n        borderTopLeftRadius: borderRadius,\n        borderTopRightRadius: 0,\n      };\n    }\n    if (lastRangeItem) {\n      return {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: borderRadius,\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: borderRadius,\n      };\n    }\n\n    return {};\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      contentBorderWidth,\n      contentBorderRadius,\n      contentBorderColor,\n      contentBackgroundColor,\n      contentTextFontSize,\n      contentTextLineHeight,\n      contentTextFontWeight,\n      contentTextColor,\n      contentTextFontFamily,\n      borderRadius,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: {\n        ...containerParameters,\n        ...this.getContainerBorderRadius(borderRadius),\n      },\n      contentContainer: {\n        borderWidth: contentBorderWidth,\n        borderRadius: contentBorderRadius,\n        borderColor: contentBorderColor,\n        backgroundColor: contentBackgroundColor,\n      },\n      contentText: {\n        fontSize: contentTextFontSize,\n        fontWeight: contentTextFontWeight,\n        lineHeight: contentTextLineHeight,\n        color: contentTextColor,\n        fontFamily: contentTextFontFamily,\n      },\n    };\n  };\n\n  private renderContentElement = (source: ChildrenProp<D>, style: StyleType): React.ReactElement => {\n    return source && source(this.props.date, {\n      container: style.contentContainer,\n      text: style.contentText,\n    });\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { style, themedStyle, date, bounding, children, ...restProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        onPress={this.onPress}\n        {...restProps}\n        style={[container, styles.container, style]}>\n        {this.renderContentElement(children, componentStyles)}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nexport const CalendarPickerCell = styled(CalendarPickerCellComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\ntype DaysArray = [string, string, string, string, string, string, string];\ntype MonthsArray = [string, string, string, string, string, string, string, string, string, string, string, string];\n\nexport enum TranslationWidth {\n  SHORT = 'short',\n  LONG = 'long',\n}\n\nexport interface I18nDayNames {\n  [TranslationWidth.SHORT]: DaysArray;\n  [TranslationWidth.LONG]: DaysArray;\n}\n\nexport interface I18nMonthNames {\n  [TranslationWidth.SHORT]?: MonthsArray;\n  [TranslationWidth.LONG]?: MonthsArray;\n}\n\nexport interface I18nConfig {\n  dayNames: I18nDayNames;\n  monthNames: I18nMonthNames;\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleProp,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport {\n  CalendarPickerRow,\n  CalendarPickerRowElement,\n} from './calendarPickerRow.component';\nimport {\n  CalendarPickerCell,\n  CalendarPickerCellElement,\n  CalendarPickerCellProps,\n} from './calendarPickerCell.component';\nimport { CalendarDateInfo } from '../../type';\n\nexport interface CalendarPickerProps<D> extends ViewProps {\n  data: CalendarDateInfo<D>[][];\n  isItemSelected: (item: CalendarDateInfo<D>) => boolean;\n  isItemDisabled: (item: CalendarDateInfo<D>) => boolean;\n  isItemToday: (item: CalendarDateInfo<D>) => boolean;\n  onSelect?: (item: CalendarDateInfo<D>) => void;\n  children: (item: CalendarDateInfo<D>, style: StyleType) => React.ReactElement;\n  shouldItemUpdate?: (props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>) => boolean;\n  rowStyle?: StyleProp<ViewProps>;\n}\n\nexport type CalendarPickerElement<D> = React.ReactElement<CalendarPickerProps<D>>;\n\nexport class CalendarPicker<D> extends React.Component<CalendarPickerProps<D>> {\n\n  private get rangedArray(): CalendarDateInfo<D>[] {\n    const { data } = this.props;\n\n    return [].concat(...data).filter((item: CalendarDateInfo<D>) => {\n      return item.range;\n    });\n  }\n\n  private isFirstRangeItem = (item: CalendarDateInfo<D>, range: CalendarDateInfo<D>[]): boolean => {\n    return range.indexOf(item) === 0;\n  };\n\n  private isLastRangeItem = (item: CalendarDateInfo<D>, range: CalendarDateInfo<D>[]): boolean => {\n    return range.indexOf(item) === range.length - 1;\n  };\n\n  private renderCellElement = (item: CalendarDateInfo<D>, index: number): CalendarPickerCellElement<D> => {\n    const isFirstRangeItem: boolean = this.isFirstRangeItem(item, this.rangedArray);\n    const isLastRangeItem: boolean = this.isLastRangeItem(item, this.rangedArray);\n\n    return (\n      <CalendarPickerCell\n        key={index}\n        date={item}\n        selected={this.props.isItemSelected(item)}\n        disabled={this.props.isItemDisabled(item)}\n        bounding={item.bounding}\n        today={this.props.isItemToday(item)}\n        range={item.range}\n        firstRangeItem={isFirstRangeItem}\n        lastRangeItem={isLastRangeItem}\n        onSelect={this.props.onSelect}\n        shouldComponentUpdate={this.props.shouldItemUpdate}>\n        {this.props.children}\n      </CalendarPickerCell>\n    );\n  };\n\n  private renderRowElement = (item: CalendarDateInfo<D>[], index: number): CalendarPickerRowElement<D> => {\n    return (\n      <CalendarPickerRow\n        key={index}\n        style={this.props.rowStyle}\n        data={item}>\n        {this.renderCellElement}\n      </CalendarPickerRow>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { data, children, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}>\n        {data.map(this.renderRowElement)}\n      </View>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Text } from '../../text/text.component';\n\nexport interface CalendarDateContentProps extends ViewProps {\n  textStyle?: StyleProp<TextStyle>;\n  children: string;\n}\n\nexport type CalendarDateContentElement = React.ReactElement<CalendarDateContentProps>;\n\nexport class CalendarDateContent extends React.Component<CalendarDateContentProps> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, textStyle, children, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, style]}>\n        <Text style={textStyle}>{children}</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nexport interface CalendarDateOptions {\n  bounding: boolean;\n  holiday: boolean;\n  range?: boolean;\n}\n\nexport interface CalendarRange<D> {\n  startDate?: D;\n  endDate?: D;\n}\n\nexport interface CalendarDateInfo<D> extends CalendarDateOptions {\n  date: D;\n}\n\nconst VIEW_MODE_DATE: CalendarViewMode = {\n  id: 'DATE',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_YEAR;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n};\n\nconst VIEW_MODE_MONTH: CalendarViewMode = {\n  id: 'MONTH',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n};\n\nconst VIEW_MODE_YEAR: CalendarViewMode = {\n  id: 'YEAR',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_MONTH;\n  },\n};\n\nexport interface CalendarViewMode {\n  id: string;\n  navigationNext: () => CalendarViewMode;\n  pickNext: () => CalendarViewMode;\n}\n\ninterface CalendarViewModes {\n  DATE: CalendarViewMode;\n  MONTH: CalendarViewMode;\n  YEAR: CalendarViewMode;\n}\n\nexport const CalendarViewModes: CalendarViewModes = {\n  DATE: VIEW_MODE_DATE,\n  MONTH: VIEW_MODE_MONTH,\n  YEAR: VIEW_MODE_YEAR,\n};\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { TranslationWidth } from '../i18n/type';\n\nexport abstract class DateService<D> {\n  static DAYS_IN_WEEK: number = 7;\n  static MONTHS_IN_YEAR: number = 12;\n\n  protected locale: string;\n\n  public setLocale(locale: any) {\n    this.locale = locale;\n  }\n\n  public compareDatesSafe(date1: D, date2: D): number {\n    if (date1 && date2) {\n      return this.compareDates(date1, date2);\n    } else if (!date1 && !date2) {\n      return 0;\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date.\n   * */\n  public isBetween(date: D, start: D, end: D): boolean {\n    return this.compareDates(date, start) > 0 && this.compareDates(date, end) < 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date.\n   * */\n  public isBetweenSafe(date: D, start: D, end: D): boolean {\n    return date && start && end && this.compareDates(date, start) > 0 && this.compareDates(date, end) < 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date including bounds.\n   * */\n  public isBetweenIncluding(date: D, start: D, end: D): boolean {\n    return this.compareDates(date, start) >= 0 && this.compareDates(date, end) <= 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date including bounds.\n   * */\n  public isBetweenIncludingSafe(date: D, start: D, end: D): boolean {\n    return date && start && end && this.isBetweenIncluding(date, start, end);\n  }\n\n  /**\n   * Checks is two dates have the same day.\n   * */\n  public isSameDaySafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameDay(date1, date2);\n  }\n\n  /**\n   * Checks is two dates have the same month.\n   * */\n  public isSameMonthSafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameMonth(date1, date2);\n  }\n\n  /**\n   * Checks is two dates have the same year.\n   * */\n  public isSameYearSafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameYear(date1, date2);\n  }\n\n  /**\n   * Returns true if date string is valid date string according to the provided format.\n   * */\n  public abstract isValidDateString(date: string, format: string): boolean;\n\n  /**\n   * Returns today date.\n   * */\n  public abstract today(): D;\n\n  /**\n   * Gets the date of the month component of the given date.\n   */\n  public abstract getDate(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * */\n  public abstract getMonth(date: D): number;\n\n  /**\n   * Gets the year component of the given date.\n   * */\n  public abstract getYear(date: D): number;\n\n  /**\n   * Returns day of the week of the given date.\n   */\n  public abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Returns first day of the week, it can be 1 if week starts from monday\n   * and 0 if from sunday and so on.\n   * */\n  public abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Returns localized month name by date and style.\n   * */\n  public abstract getMonthName(date: D, style?: TranslationWidth): string;\n\n  /**\n   * Returns localized month name by month index and style.\n   * */\n  public abstract getMonthNameByIndex(month: number, style?: TranslationWidth): string;\n\n  /**\n   * Returns localized days names.\n   * */\n  public abstract getDayOfWeekNames(style?: TranslationWidth): string[];\n\n  /**\n   * Parses the date string according to the passed format.\n   * */\n  public abstract parse(date: string, format: string): D;\n\n  /**\n   * Transforms the date to the string according to the passed format.\n   * */\n  public abstract format(date: D, format: string): string;\n\n  /**\n   * Creates new date from year, month and date.\n   * */\n  public abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Checks is two dates have the same year.\n   * */\n  public abstract isSameYear(date1: D, date2: D): boolean;\n\n  /**\n   * Checks is two dates have the same month.\n   * */\n  public abstract isSameMonth(date1: D, date2: D): boolean;\n\n  /**\n   * Checks is two dates have the same day.\n   * */\n  public abstract isSameDay(date1: D, date2: D): boolean;\n\n  /**\n   * Compares two dates.\n   * Returns 0 if dates are the same.\n   * Returns 1 if the first date is greater than the second.\n   * Returns -1 if the second date is greater than the first.\n   * */\n  public abstract compareDates(date1: D, date2: D): number;\n\n  /**\n   * Clones passed date.\n   * */\n  public abstract clone(date: D): D;\n\n  /**\n   * Creates the same date but with day equals to 1.\n   * */\n  public abstract getMonthStart(date: D): D;\n\n  /**\n   * Creates the same date but with day equals to the last day in this month.\n   * */\n  public abstract getMonthEnd(date: D): D;\n\n  /**\n   * Creates the same date but with month equals to 0 and day equals to 1.\n   * */\n  public abstract getYearStart(date: D): D;\n\n  /**\n   * Creates the same date but with month equals to 11 and day equals to 31.\n   * */\n  public abstract getYearEnd(date: D): D;\n\n  /**\n   * Returns number of days in the date.\n   * */\n  public abstract getNumberOfDaysInMonth(date: D): number;\n\n  /**\n   * Returns date with added number of days.\n   * */\n  public abstract addDay(date: D, days: number): D;\n\n  /**\n   * Returns date with added number of months.\n   * */\n  public abstract addMonth(date: D, months: number): D;\n\n  /**\n   * Returns date with added number of years.\n   * */\n  public abstract addYear(date: D, years: number): D;\n\n  public abstract getId(): string;\n}\n","import { I18nConfig } from './type';\n\nexport const EN: I18nConfig = {\n  dayNames: {\n    short: [\n      'Su',\n      'Mo',\n      'Tu',\n      'We',\n      'Th',\n      'Fr',\n      'Sa',\n    ],\n    long: [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ],\n  },\n  monthNames: {\n    short: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ],\n    long: [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ],\n  },\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport fecha from 'fecha';\nimport { DateService } from './date.service';\nimport {\n  I18nConfig,\n  TranslationWidth,\n} from '../i18n/type';\nimport { EN } from '../i18n/en';\n\nexport const LOCALE_DEFAULT = 'en';\n\nexport interface NativeDateServiceOptions {\n  // 0 for Sunday, 1 for Monday, etc\n  startDayOfWeek?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  i18n?: I18nConfig;\n}\n\nconst DEFAULT_OPTIONS: NativeDateServiceOptions = {\n  startDayOfWeek: 0,\n};\n\n/**\n * The `NativeDateService` is basic implementation of `DateService` using\n * native js date objects.\n */\nexport class NativeDateService extends DateService<Date> {\n\n  protected options: NativeDateServiceOptions;\n\n  constructor(locale: string = LOCALE_DEFAULT, options?: NativeDateServiceOptions) {\n    super();\n    this.options = { ...DEFAULT_OPTIONS, ...options };\n    super.setLocale(this.options.i18n ? locale : LOCALE_DEFAULT);\n    this.setFechaLocaleData(this.options.i18n || EN);\n  }\n\n  public setLocale(locale: string) {\n    console.warn('Runtime locale is not supported');\n  }\n\n  public isValidDateString(date: string, format: string): boolean {\n    return !isNaN(this.parse(date, format).getTime());\n  }\n\n  public today(): Date {\n    return new Date();\n  }\n\n  public getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  public getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  public getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  public getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  /**\n   * returns first day of the week, it can be 1 if week starts from monday\n   * and 0 if from sunday and so on.\n   * */\n  public getFirstDayOfWeek(): number {\n    return this.options.startDayOfWeek;\n  }\n\n  public getMonthName(date: Date, style: TranslationWidth = TranslationWidth.SHORT): string {\n    const index: number = date.getMonth();\n\n    return this.getMonthNameByIndex(index, style);\n  }\n\n  public getMonthNameByIndex(index: number, style: TranslationWidth = TranslationWidth.SHORT): string {\n    return this.getFechaMonthNames(style)[index];\n  }\n\n  public getDayOfWeekNames(style: TranslationWidth = TranslationWidth.SHORT): string[] {\n    const dayNames: string[] = this.getFechaDayNames(style);\n\n    // avoid mutation of source array\n    return this.shiftDayOfWeekNames([...dayNames], this.options.startDayOfWeek);\n  }\n\n  public format(date: Date, format: string): string {\n    return fecha.format(date, format);\n  }\n\n  /**\n   * We haven't got capability to parse date using formatting without third party libraries.\n   * */\n  public parse(date: string, format: string): Date {\n    return new Date(Date.parse(date));\n  }\n\n  public addDay(date: Date, num: number): Date {\n    return this.createDate(date.getFullYear(), date.getMonth(), date.getDate() + num);\n  }\n\n  public addMonth(date: Date, num: number): Date {\n    const month: Date = this.createDate(date.getFullYear(), date.getMonth() + num, 1);\n\n    // In case of date has more days than calculated month js Date will change that month to the next one\n    // because of the date overflow.\n    month.setDate(Math.min(date.getDate(), this.getMonthEnd(month).getDate()));\n\n    return month;\n  }\n\n  public addYear(date: Date, num: number): Date {\n    return this.createDate(date.getFullYear() + num, date.getMonth(), date.getDate());\n  }\n\n  public clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  public compareDates(date1: Date, date2: Date): number {\n    return date1.getTime() - date2.getTime();\n  }\n\n  public compareDatesSafe(date1: Date, date2: Date): number {\n    if (this.compareDates(date1, date2) < 0) {\n      return -1;\n    } else if (this.compareDates(date1, date2) > 0) {\n      return 1;\n    } else if (this.compareDates(date1, date2) === 0) {\n      return 0;\n    }\n  }\n\n  public createDate(year: number, month: number, date: number): Date {\n    const result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(result.getFullYear() - 1900);\n    }\n\n    return result;\n  }\n\n  public getMonthEnd(date: Date): Date {\n    return this.createDate(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  public getMonthStart(date: Date): Date {\n    return this.createDate(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  public getNumberOfDaysInMonth(date: Date): number {\n    return this.getMonthEnd(date).getDate();\n  }\n\n  public getYearEnd(date: Date): Date {\n    return this.createDate(date.getFullYear(), 11, 31);\n  }\n\n  public getYearStart(date: Date): Date {\n    return this.createDate(date.getFullYear(), 0, 1);\n  }\n\n  public isSameDay(date1: Date, date2: Date): boolean {\n    return this.isSameMonth(date1, date2) && date1.getDate() === date2.getDate();\n  }\n\n  public isSameMonth(date1: Date, date2: Date): boolean {\n    return this.isSameYear(date1, date2) && date1.getMonth() === date2.getMonth();\n  }\n\n  public isSameYear(date1: Date, date2: Date): boolean {\n    return date1.getFullYear() === date2.getFullYear();\n  }\n\n  public getId(): string {\n    return 'native';\n  }\n\n  protected shiftDayOfWeekNames<T>(value: T[], offset: number): T[] {\n    return value.splice(offset).concat(value);\n  }\n\n  private getFechaDayNames(style: TranslationWidth): string[] {\n    switch (style) {\n      case TranslationWidth.SHORT:\n        return fecha.i18n.dayNamesShort;\n      case TranslationWidth.LONG:\n        return fecha.i18n.dayNames;\n    }\n  }\n\n  private getFechaMonthNames(style: TranslationWidth): string[] {\n    switch (style) {\n      case TranslationWidth.SHORT:\n        return fecha.i18n.monthNamesShort;\n      case TranslationWidth.LONG:\n        return fecha.i18n.monthNames;\n    }\n  }\n\n  private setFechaLocaleData(config: I18nConfig) {\n    fecha.i18n.dayNames = config.dayNames[TranslationWidth.LONG];\n    fecha.i18n.dayNamesShort = config.dayNames[TranslationWidth.SHORT];\n    fecha.i18n.monthNames = config.monthNames[TranslationWidth.LONG];\n    fecha.i18n.monthNamesShort = config.monthNames[TranslationWidth.SHORT];\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nexport const batch = <T>(target: T[], batchSize: number, offset: number = 0): T[][] => {\n  return target.reduce((res, item, index): T[] => {\n    const chunkIndex = Math.floor((index + offset) / batchSize);\n    if (!res[chunkIndex]) {\n      res[chunkIndex] = [];\n    }\n    res[chunkIndex].push(item);\n\n    return res;\n  }, []);\n};\n\n/**\n * returns array with numbers from zero to bound.\n * */\nexport const range = <T>(bound: number, producer: (number) => T = i => i) => {\n  const arr: T[] = [];\n\n  for (let i = 0; i < bound; i++) {\n    arr.push(producer(i));\n  }\n\n  return arr;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { DateService } from './date.service';\nimport {\n  batch,\n  range,\n} from './helpers';\nimport {\n  CalendarDateInfo,\n  CalendarDateOptions,\n  CalendarRange,\n} from '../type';\n\nconst DEFAULT_DATE_OPTIONS: CalendarDateOptions = {\n  bounding: false,\n  holiday: false,\n  range: false,\n};\n\nexport type DateRange<D> = CalendarDateInfo<D>[];\nexport type DateBatch<D> = DateRange<D>[];\n\nexport class CalendarDataService<D> {\n\n  constructor(protected dateService: DateService<D>) {\n  }\n\n  public createDayPickerData = (date: D, dateRange?: CalendarRange<D>): DateBatch<D> => {\n    const weeks: DateBatch<D> = this.createDates(date, DEFAULT_DATE_OPTIONS, dateRange);\n\n    return this.withBoundingMonths(weeks, date);\n  };\n\n  public createMonthPickerData = (date: D, rows: number, columns: number): DateBatch<D> => {\n    const yearStart: D = this.dateService.getYearStart(date);\n    const monthRange: DateRange<D> = range(rows * columns, (index: number): CalendarDateInfo<D> => {\n      const monthDate: D = this.dateService.addMonth(yearStart, index);\n      return { date: monthDate, ...DEFAULT_DATE_OPTIONS };\n    });\n\n    return batch(monthRange, rows);\n  };\n\n  public createYearPickerData = (date: D, rows: number, columns: number): DateBatch<D> => {\n    const yearStart: D = this.dateService.getYearStart(date);\n    const yearRange: DateRange<D> = range(rows * columns, (index: number): CalendarDateInfo<D> => {\n      const yearDate: D = this.dateService.addYear(yearStart, index);\n      return { date: yearDate, ...DEFAULT_DATE_OPTIONS };\n    });\n\n    return batch(yearRange, rows);\n  };\n\n  public createDayPickerPagerData = (startDate: D, endDate: D): DateRange<D> => {\n    const numberOfDayPickers: number = this.getNumberOfMonths(startDate, endDate) + 1;\n\n    return range(numberOfDayPickers, (index: number): CalendarDateInfo<D> => {\n      const monthDate: D = this.dateService.addMonth(startDate, index);\n      return { date: monthDate, ...DEFAULT_DATE_OPTIONS };\n    });\n  };\n\n  public createYearPickerPagerData = (startDate: D, endDate: D, rows: number, columns: number): DateRange<D> => {\n    const numberOfYears: number = this.getNumberOfYears(startDate, endDate) + 1;\n    const numberOfYearPickers: number = Math.max(Math.ceil(numberOfYears / (rows * columns)), 1);\n\n    return range(numberOfYearPickers, (index: number): CalendarDateInfo<D> => {\n      const yearDate: D = this.dateService.addYear(startDate, index * rows * columns);\n      return { date: yearDate, ...DEFAULT_DATE_OPTIONS };\n    });\n  };\n\n  public getNumberOfMonths = (lhs: D, rhs: D): number => {\n    const numberOfYears: number = this.getNumberOfYears(lhs, rhs);\n    const numberOfMonths: number = this.dateService.getMonth(rhs) - this.dateService.getMonth(lhs);\n\n    return numberOfMonths + numberOfYears * DateService.MONTHS_IN_YEAR;\n  };\n\n  public getNumberOfYears = (lhs: D, rhs: D): number => {\n    return this.dateService.getYear(rhs) - this.dateService.getYear(lhs);\n  };\n\n  private createDates(activeMonth: D, options: CalendarDateOptions, dateRange?: CalendarRange<D>): DateBatch<D> {\n    let days: DateRange<D> = this.createDateRangeForMonth(activeMonth, options);\n\n    if (dateRange) {\n      days = this.withRangedDates(days, dateRange);\n    }\n\n    const startOfWeekDayDiff: number = this.getStartOfWeekDayDiff(activeMonth);\n\n    return batch(days, DateService.DAYS_IN_WEEK, startOfWeekDayDiff);\n  }\n\n  private withRangedDates(days: DateRange<D>, calendarRange: CalendarRange<D>): DateRange<D> {\n    if (calendarRange.startDate && !calendarRange.endDate) {\n      return this.withRangedStartDates(days, calendarRange.startDate);\n    }\n\n    if (calendarRange.startDate && calendarRange.endDate) {\n      return this.withRangedStartEndDates(days, calendarRange.startDate, calendarRange.endDate);\n    }\n\n    return days;\n  }\n\n  private withRangedStartDates(days: DateRange<D>, startDate): DateRange<D> {\n    return days.map((day: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n      const isSameStartDate: boolean = this.dateService.compareDatesSafe(day.date, startDate) === 0;\n      return isSameStartDate ? { ...day, range: true } : day;\n    });\n  }\n\n  private withRangedStartEndDates(days: DateRange<D>, startDate: D, endDate: D): DateRange<D> {\n    return days.map((day: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n      const isSameStartDate: boolean = this.dateService.compareDatesSafe(day.date, startDate) === 0;\n      const isSameEndDate: boolean = this.dateService.compareDatesSafe(day.date, endDate) === 0;\n\n      if (isSameStartDate || isSameEndDate) {\n        return { ...day, range: true };\n      } else {\n        const isInRange: boolean = this.dateService.isBetween(day.date, startDate, endDate);\n        return { ...day, range: isInRange };\n      }\n    });\n  }\n\n  private withBoundingMonths(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    let withBoundingMonths: DateBatch<D> = weeks;\n\n    if (this.isShouldAddPrevBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addPrevBoundingMonth(withBoundingMonths, activeMonth);\n    }\n\n    if (this.isShouldAddNextBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addNextBoundingMonth(withBoundingMonths, activeMonth);\n    }\n\n    return withBoundingMonths;\n  }\n\n  private addPrevBoundingMonth(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    const firstWeek: DateRange<D> = weeks.shift();\n    const numberOfBoundingDates: number = DateService.DAYS_IN_WEEK - firstWeek.length;\n    firstWeek.unshift(...this.createPrevBoundingDays(activeMonth, numberOfBoundingDates));\n\n    return [firstWeek, ...weeks];\n  }\n\n  private addNextBoundingMonth(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    const lastWeek: DateRange<D> = weeks.pop();\n    const numberOfBoundingDates: number = DateService.DAYS_IN_WEEK - lastWeek.length;\n    lastWeek.push(...this.createNextBoundingDays(activeMonth, numberOfBoundingDates));\n\n    return [...weeks, lastWeek];\n  }\n\n  private createPrevBoundingDays(activeMonth: D, numberOfBoundingDates: number): DateRange<D> {\n    const month: D = this.dateService.addMonth(activeMonth, -1);\n    const daysInMonth: number = this.dateService.getNumberOfDaysInMonth(month);\n\n    return this.createDateRangeForMonth(month, DEFAULT_DATE_OPTIONS)\n      .slice(daysInMonth - numberOfBoundingDates)\n      .map((date: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n        return { ...date, bounding: true };\n      });\n  }\n\n  private createNextBoundingDays(activeMonth: D, numberOfBoundingDates: number): DateRange<D> {\n    const month: D = this.dateService.addMonth(activeMonth, 1);\n\n    return this.createDateRangeForMonth(month, DEFAULT_DATE_OPTIONS)\n      .slice(0, numberOfBoundingDates)\n      .map((date: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n        return { ...date, bounding: true };\n      });\n  }\n\n  private getStartOfWeekDayDiff(date: D): number {\n    const startOfMonth: D = this.dateService.getMonthStart(date);\n\n    return this.getWeekStartDiff(startOfMonth);\n  }\n\n  private getWeekStartDiff(date: D): number {\n    return (\n      DateService.DAYS_IN_WEEK\n      - this.dateService.getFirstDayOfWeek()\n      + this.dateService.getDayOfWeek(date)\n    ) % DateService.DAYS_IN_WEEK;\n  }\n\n  private isShouldAddPrevBoundingMonth(weeks: DateBatch<D>): boolean {\n    return weeks[0].length < DateService.DAYS_IN_WEEK;\n  }\n\n  private isShouldAddNextBoundingMonth(weeks: DateBatch<D>): boolean {\n    return weeks[weeks.length - 1].length < DateService.DAYS_IN_WEEK;\n  }\n\n  private createDateRangeForMonth(monthDate: D, options: CalendarDateOptions): DateRange<D> {\n    const daysInMonth: number = this.dateService.getNumberOfDaysInMonth(monthDate);\n\n    return range(daysInMonth, (i: number): CalendarDateInfo<D> => {\n      const year: number = this.dateService.getYear(monthDate);\n      const month: number = this.dateService.getMonth(monthDate);\n      const date: D = this.dateService.createDate(year, month, i + 1);\n\n      return { date, ...options };\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\n\nexport type DividerProps = StyledComponentProps & ViewProps;\nexport type DividerElement = React.ReactElement<DividerProps>;\n\n/**\n * Styled `Divider` component. Behaves like React Native `View`.\n * The key feature of using `Divider` instead of `View` is that\n * it automatically picks color fitting to current theme.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n */\nclass DividerComponent extends React.Component<DividerProps> {\n\n  static styledComponentName: string = 'Divider';\n\n  public render(): DividerElement {\n    const { style, themedStyle, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[themedStyle, style]}\n      />\n    );\n  }\n}\n\nexport const Divider = styled<DividerProps>(DividerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport {\n  CalendarHeader,\n  CalendarHeaderElement,\n} from './components/calendarHeader.component';\nimport { CalendarMonthHeader } from './components/calendarMonthHeader.component';\nimport {\n  CalendarPicker,\n  CalendarPickerElement,\n} from './components/picker/calendarPicker.component';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport {\n  CalendarDateContent,\n  CalendarDateContentElement,\n} from './components/calendarDateContent.component';\nimport {\n  CalendarDateInfo,\n  CalendarViewMode,\n  CalendarViewModes,\n} from './type';\nimport { DateService } from './service/date.service';\nimport { NativeDateService } from './service/nativeDate.service';\nimport {\n  CalendarDataService,\n  DateBatch,\n} from './service/calendarData.service';\nimport { Divider } from '../divider/divider.component';\n\nexport interface BaseCalendarProps<D = Date> extends ViewProps {\n  min?: D;\n  max?: D;\n  dateService?: DateService<D>;\n  boundingMonth?: boolean;\n  startView?: CalendarViewMode;\n  title?: (date: D, viewMode: CalendarViewMode) => string;\n  filter?: (date: D) => boolean;\n  renderFooter?: () => React.ReactElement;\n  renderDay?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement;\n  renderMonth?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement;\n  renderYear?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement;\n  themedStyle?: StyleType;\n}\n\nexport type BaseCalendarElement<D> = React.ReactElement<BaseCalendarProps<D>>;\n\ninterface State<D> {\n  viewMode: CalendarViewMode;\n  visibleDate: D;\n}\n\nconst PICKER_ROWS: number = 4;\nconst PICKER_COLUMNS: number = 3;\nconst VIEWS_IN_PICKER: number = PICKER_ROWS * PICKER_COLUMNS;\n\nconst FORMAT_DAY: string = 'D';\nconst FORMAT_MONTH: string = 'MMM';\nconst FORMAT_YEAR: string = 'YYYY';\nconst FORMAT_HEADER_DATE: string = 'MMMM YYYY';\nconst FORMAT_HEADER_MONTH: string = 'YYYY';\nconst FORMAT_HEADER_YEAR: string = 'YYYY';\n\nexport abstract class BaseCalendarComponent<P, D = Date> extends React.Component<BaseCalendarProps<D> & P, State<D>> {\n\n  static defaultProps: Partial<BaseCalendarProps> = {\n    dateService: new NativeDateService(),\n    boundingMonth: true,\n    startView: CalendarViewModes.DATE,\n  };\n\n  public state: State<D> = {\n    viewMode: this.props.startView,\n    visibleDate: this.dateService.getMonthStart(this.selectedDate()),\n  };\n\n  protected abstract createDates(date: D): DateBatch<D>;\n\n  protected abstract selectedDate(): D;\n\n  protected abstract onDateSelect(item: D): void;\n\n  protected abstract isDateSelected(date: D): boolean;\n\n  protected abstract shouldUpdateDate(props: CalendarPickerCellProps<D>,\n                                      nextProps: CalendarPickerCellProps<D>): boolean;\n\n  protected dataService: CalendarDataService<D> = new CalendarDataService(this.dateService);\n\n  protected get dateService(): DateService<D> {\n    return this.props.dateService;\n  }\n\n  private get min(): D {\n    return this.props.min || this.dateService.getYearStart(this.dateService.today());\n  }\n\n  private get max(): D {\n    return this.props.max || this.dateService.getYearEnd(this.dateService.today());\n  }\n\n  public scrollToToday = (): void => {\n    this.setState({\n      viewMode: CalendarViewModes.DATE,\n      visibleDate: this.dateService.today(),\n    });\n  };\n\n  private onDaySelect = ({ date }: CalendarDateInfo<D>): void => {\n    this.onDateSelect(date);\n  };\n\n  private onMonthSelect = ({ date }: CalendarDateInfo<D>): void => {\n    const nextVisibleDate: D = this.dateService.createDate(\n      this.dateService.getYear(this.state.visibleDate),\n      this.dateService.getMonth(date),\n      this.dateService.getDate(this.state.visibleDate),\n    );\n\n    this.setState({\n      viewMode: this.state.viewMode.pickNext(),\n      visibleDate: nextVisibleDate,\n    });\n  };\n\n  private onYearSelect = ({ date }: CalendarDateInfo<D>): void => {\n    const nextVisibleDate: D = this.dateService.createDate(\n      this.dateService.getYear(date),\n      this.dateService.getMonth(this.state.visibleDate),\n      this.dateService.getDate(this.state.visibleDate),\n    );\n\n    this.setState({\n      viewMode: this.state.viewMode.pickNext(),\n      visibleDate: nextVisibleDate,\n    });\n  };\n\n  private onPickerNavigationPress = (): void => {\n    this.setState({\n      viewMode: this.state.viewMode.navigationNext(),\n    });\n  };\n\n  private onHeaderNavigationLeftPress = (): void => {\n    this.setState({\n      visibleDate: this.createViewModeVisibleDate(-1),\n    });\n  };\n\n  private onHeaderNavigationRightPress = (): void => {\n    this.setState({\n      visibleDate: this.createViewModeVisibleDate(1),\n    });\n  };\n\n  public getCalendarStyle = (source: StyleType): StyleType => {\n    return {\n      container: {\n        width: source.width,\n        paddingVertical: source.paddingVertical,\n        borderColor: source.borderColor,\n        borderWidth: source.borderWidth,\n        borderRadius: source.borderRadius,\n      },\n      headerContainer: {\n        paddingHorizontal: source.headerPaddingHorizontal,\n        paddingVertical: source.headerPaddingVertical,\n      },\n      title: {\n        fontSize: source.titleFontSize,\n        fontWeight: source.titleFontWeight,\n        lineHeight: source.titleLineHeight,\n        color: source.titleColor,\n        fontFamily: source.titleFontFamily,\n      },\n      icon: {\n        width: source.iconWidth,\n        height: source.iconHeight,\n        tintColor: source.iconTintColor,\n      },\n      divider: {\n        marginVertical: source.dividerMarginVertical,\n      },\n      daysHeaderContainer: {\n        marginHorizontal: source.rowMarginHorizontal,\n      },\n      row: {\n        minHeight: source.rowMinHeight,\n        marginHorizontal: source.rowMarginHorizontal,\n      },\n    };\n  };\n\n  private getWeekdayStyle = (source: StyleType): StyleType => {\n    return {\n      fontSize: source.weekdayTextFontSize,\n      fontWeight: source.weekdayTextFontWeight,\n      lineHeight: source.weekdayTextLineHeight,\n      color: source.weekdayTextColor,\n      fontFamily: source.weekdayTextFontFamily,\n    };\n  };\n\n  private isDaySelected = ({ date }: CalendarDateInfo<D>): boolean => {\n    return this.isDateSelected(date);\n  };\n\n  private isMonthSelected = ({ date }: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameMonthSafe(date, this.selectedDate());\n  };\n\n  private isYearSelected = ({ date }: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameYearSafe(date, this.selectedDate());\n  };\n\n  public isDayDisabled = ({ date }: CalendarDateInfo<D>): boolean => {\n    const minDayStart: D = this.dateService.createDate(\n      this.dateService.getYear(this.min),\n      this.dateService.getMonth(this.min),\n      this.dateService.getDate(this.min),\n    );\n\n    const maxDayStart: D = this.dateService.createDate(\n      this.dateService.getYear(this.max),\n      this.dateService.getMonth(this.max),\n      this.dateService.getDate(this.max),\n    );\n\n    const fitsFilter: boolean = this.props.filter && !this.props.filter(date) || false;\n\n    return !this.dateService.isBetweenIncludingSafe(date, minDayStart, maxDayStart) || fitsFilter;\n  };\n\n  private isMonthDisabled = ({ date }: CalendarDateInfo<D>): boolean => {\n    const minMonthStart: D = this.dateService.getMonthStart(this.min);\n    const maxMonthStart: D = this.dateService.getMonthStart(this.max);\n\n    return !this.dateService.isBetweenIncludingSafe(date, minMonthStart, maxMonthStart);\n  };\n\n  private isYearDisabled = ({ date }: CalendarDateInfo<D>): boolean => {\n    const minYearStart: D = this.dateService.getYearStart(this.min);\n    const maxYearStart: D = this.dateService.getYearEnd(this.max);\n\n    return !this.dateService.isBetweenIncludingSafe(date, minYearStart, maxYearStart);\n  };\n\n  public isDayToday = ({ date }: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameDaySafe(date, this.dateService.today());\n  };\n\n  private isMonthToday = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameMonthSafe(date.date, this.dateService.today());\n  };\n\n  private isYearToday = ({ date }: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameYearSafe(date, this.dateService.today());\n  };\n\n  private isHeaderNavigationAllowed = (): boolean => {\n    return this.state.viewMode.id !== CalendarViewModes.MONTH.id;\n  };\n\n  private createViewModeVisibleDate = (page: number): D => {\n    switch (this.state.viewMode.id) {\n      case CalendarViewModes.DATE.id: {\n        return this.dateService.addMonth(this.state.visibleDate, page);\n      }\n      case CalendarViewModes.MONTH.id: {\n        return this.dateService.addYear(this.state.visibleDate, page);\n      }\n      case CalendarViewModes.YEAR.id: {\n        return this.dateService.addYear(this.state.visibleDate, VIEWS_IN_PICKER * page);\n      }\n    }\n  };\n\n  private createViewModeHeaderTitle = (date: D, viewMode: CalendarViewMode): string => {\n    switch (viewMode.id) {\n      case CalendarViewModes.DATE.id: {\n        return this.dateService.format(date, FORMAT_HEADER_DATE);\n      }\n      case CalendarViewModes.MONTH.id: {\n        return this.dateService.format(date, FORMAT_HEADER_MONTH);\n      }\n      case CalendarViewModes.YEAR.id: {\n        const minDateFormat: string = this.dateService.format(this.min, FORMAT_HEADER_YEAR);\n        const maxDateFormat: string = this.dateService.format(this.max, FORMAT_HEADER_YEAR);\n\n        return `${minDateFormat} - ${maxDateFormat}`;\n      }\n    }\n  };\n\n  private renderDayIfNeeded = (item: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    const shouldRender: boolean = !item.bounding || this.props.boundingMonth;\n\n    if (shouldRender) {\n      const renderSelector = this.props.renderDay || this.renderDayElement;\n      return renderSelector(item, style);\n    }\n\n    return null;\n  };\n\n  private renderWeekdayElement = (weekday: string, index: number): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        key={index}\n        textStyle={this.getWeekdayStyle(this.props.themedStyle)}>\n        {weekday}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderDayElement = ({ date }: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={style.container}\n        textStyle={style.text}>\n        {this.dateService.format(date, FORMAT_DAY)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderMonthElement = ({ date }: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={style.container}\n        textStyle={style.text}>\n        {this.dateService.format(date, FORMAT_MONTH)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderYearElement = ({ date }: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={style.container}\n        textStyle={style.text}>\n        {this.dateService.format(date, FORMAT_YEAR)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderDayPickerElement = (date: D, style: StyleType): React.ReactFragment => {\n    return (\n      <React.Fragment>\n        <CalendarMonthHeader\n          style={style.daysHeaderContainer}\n          data={this.dateService.getDayOfWeekNames()}>\n          {this.renderWeekdayElement}\n        </CalendarMonthHeader>\n        <Divider style={style.divider}/>\n        <CalendarPicker\n          rowStyle={style.row}\n          data={this.createDates(date)}\n          onSelect={this.onDaySelect}\n          isItemSelected={this.isDaySelected}\n          isItemDisabled={this.isDayDisabled}\n          isItemToday={this.isDayToday}\n          shouldItemUpdate={this.shouldUpdateDate}>\n          {this.renderDayIfNeeded}\n        </CalendarPicker>\n      </React.Fragment>\n    );\n  };\n\n  private renderMonthPickerElement = (date: D, style: StyleType): CalendarPickerElement<D> => {\n    return (\n      <CalendarPicker\n        rowStyle={style.row}\n        data={this.dataService.createMonthPickerData(date, PICKER_ROWS, PICKER_COLUMNS)}\n        onSelect={this.onMonthSelect}\n        isItemSelected={this.isMonthSelected}\n        isItemDisabled={this.isMonthDisabled}\n        isItemToday={this.isMonthToday}>\n        {this.props.renderMonth || this.renderMonthElement}\n      </CalendarPicker>\n    );\n  };\n\n  private renderYearPickerElement = (date: D, style: StyleType): CalendarPickerElement<D> => {\n    return (\n      <CalendarPicker\n        rowStyle={style.row}\n        data={this.dataService.createYearPickerData(date, PICKER_ROWS, PICKER_COLUMNS)}\n        onSelect={this.onYearSelect}\n        isItemSelected={this.isYearSelected}\n        isItemDisabled={this.isYearDisabled}\n        isItemToday={this.isYearToday}>\n        {this.props.renderYear || this.renderYearElement}\n      </CalendarPicker>\n    );\n  };\n\n  private renderPickerElement = (date: D, style: StyleType): React.ReactNode => {\n    switch (this.state.viewMode.id) {\n      case CalendarViewModes.DATE.id:\n        return this.renderDayPickerElement(date, style);\n      case CalendarViewModes.MONTH.id:\n        return this.renderMonthPickerElement(date, style);\n      case CalendarViewModes.YEAR.id:\n        return this.renderYearPickerElement(date, style);\n    }\n  };\n\n  private renderFooterElement = (style: StyleType): React.ReactElement => {\n    if (this.props.renderFooter) {\n      return this.props.renderFooter();\n    }\n    return null;\n  };\n\n  private renderHeaderElement = (style: StyleType): CalendarHeaderElement => {\n    const titleSelector = this.props.title || this.createViewModeHeaderTitle;\n\n    return (\n      <CalendarHeader\n        style={style.headerContainer}\n        title={titleSelector(this.state.visibleDate, this.state.viewMode)}\n        titleStyle={style.title}\n        iconStyle={style.icon}\n        lateralNavigationAllowed={this.isHeaderNavigationAllowed()}\n        onTitlePress={this.onPickerNavigationPress}\n        onNavigationLeftPress={this.onHeaderNavigationLeftPress}\n        onNavigationRightPress={this.onHeaderNavigationRightPress}\n      />\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, themedStyle, ...restProps } = this.props;\n    const { container, ...componentStyle } = this.getCalendarStyle(themedStyle);\n\n    return (\n      <View\n        {...restProps}\n        style={[container, style]}>\n        {this.renderHeaderElement(componentStyle)}\n        {this.renderPickerElement(this.state.visibleDate, componentStyle)}\n        {this.renderFooterElement(componentStyle)}\n      </View>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport {\n  BaseCalendarComponent,\n  BaseCalendarProps,\n} from './baseCalendar.component';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport { DateBatch } from './service/calendarData.service';\n\nexport interface CalendarProps<D = Date> extends StyledComponentProps, BaseCalendarProps<D> {\n  date?: D;\n  onSelect: (date: D) => void;\n}\n\nexport type CalendarElement<D = Date> = React.ReactElement<CalendarProps<D>>;\n\n/**\n * Styled `Calendar` component.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {D} date - Date which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => boolean} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement} renderYear - Should return the content of year cell.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example CalendarSimpleUsage\n *\n * @overview-example CalendarBoundingMonth\n *\n * @overview-example CalendarFilter\n *\n * @overview-example CalendarBounds\n *\n * @overview-example CalendarStartDayOfWeek\n *\n * @overview-example CalendarCustomLocale\n *\n * @example CalendarMoment\n *\n * @example CalendarCustomDay\n */\nexport class CalendarComponent<D = Date> extends BaseCalendarComponent<CalendarProps<D>, D> {\n\n  static styledComponentName: string = 'Calendar';\n\n  constructor(props: CalendarProps<D>) {\n    super(props);\n\n    this.createDates = this.createDates.bind(this);\n    this.selectedDate = this.selectedDate.bind(this);\n    this.onDateSelect = this.onDateSelect.bind(this);\n    this.isDateSelected = this.isDateSelected.bind(this);\n    this.shouldUpdateDate = this.shouldUpdateDate.bind(this);\n  }\n\n  // BaseCalendarComponent\n\n  protected createDates(date: D): DateBatch<D> {\n    return this.dataService.createDayPickerData(date);\n  }\n\n  protected selectedDate(): D {\n    return this.props.date || this.dateService.today();\n  }\n\n  protected onDateSelect(date: D): void {\n    if (this.props.onSelect) {\n      this.props.onSelect(date);\n    }\n  }\n\n  protected isDateSelected(date: D): boolean {\n    return this.dateService.isSameDaySafe(date, this.selectedDate());\n  }\n\n  protected shouldUpdateDate(props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>): boolean {\n    const dateChanged: boolean = this.dateService.compareDatesSafe(props.date.date, nextProps.date.date) !== 0;\n\n    if (dateChanged) {\n      return true;\n    }\n\n    const selectionChanged: boolean = props.selected !== nextProps.selected;\n    const disablingChanged: boolean = props.disabled !== nextProps.disabled;\n\n    const value: boolean = selectionChanged || disablingChanged;\n\n    if (value) {\n      return true;\n    }\n\n    return props.theme !== nextProps.theme;\n  }\n}\n\nexport const Calendar = styled<CalendarProps>(CalendarComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  StyleProp,\n  TextStyle,\n  ViewStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Divider,\n  DividerElement,\n} from '../divider/divider.component';\nimport { CardHeaderElement } from './cardHeader.component';\nimport { allWithPrefix } from '../support/services';\n\ninterface HeaderStyles {\n  style: StyleProp<ViewStyle>;\n  accent: StyleProp<ViewStyle>;\n  title: StyleProp<TextStyle>;\n  description: StyleProp<TextStyle>;\n}\n\ntype HeaderProp = React.ReactElement | CardHeaderElement;\ntype FooterProp = React.ReactElement;\nexport type CardFooterElement = FooterProp;\n\nexport interface CardProps extends StyledComponentProps, TouchableOpacityProps {\n  appearance?: string;\n  status?: string;\n  children: React.ReactNode;\n  header?: () => HeaderProp;\n  footer?: () => FooterProp;\n}\n\nexport type CardElement = React.ReactElement<CardProps>;\n\n/**\n * Styled `Card` component is a basic content container component.\n *\n * @extends React.Component\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `filled` or `outline`.\n * Default is `outline`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {ReactNode} children - Determines text of the component.\n *\n * @property {() => ReactElement | ReactElement<CardHeaderProps>} header - Determines header of the component.\n *\n * @property {() => ReactElement} footer - Determines footer of the component.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example CardSimpleUsage\n *\n * @overview-example CardWithHeaderAndFooter\n *\n * @overview-example CardCustomHeader\n *\n * @overview-example CardStatuses\n */\nclass CardComponent extends React.Component<CardProps> {\n\n  static styledComponentName: string = 'Card';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      backgroundColor,\n      borderRadius,\n      borderWidth,\n      borderColor,\n    } = source;\n\n    const headerStyles: StyleType = allWithPrefix(source, 'header');\n    const bodyStyles: StyleType = allWithPrefix(source, 'body');\n    const footerStyles: StyleType = allWithPrefix(source, 'footer');\n    const accentStyles: StyleType = allWithPrefix(source, 'accent');\n    const titleStyles: StyleType = allWithPrefix(source, 'title');\n    const descriptionStyles: StyleType = allWithPrefix(source, 'description');\n\n    return {\n      container: {\n        backgroundColor: backgroundColor,\n        borderRadius: borderRadius,\n        borderWidth: borderWidth,\n        borderColor: borderColor,\n      },\n      header: {\n        paddingVertical: headerStyles.headerPaddingVertical,\n        paddingHorizontal: headerStyles.headerPaddingHorizontal,\n      },\n      body: {\n        paddingVertical: bodyStyles.bodyPaddingVertical,\n        paddingHorizontal: bodyStyles.bodyPaddingHorizontal,\n      },\n      footer: {\n        paddingVertical: footerStyles.footerPaddingVertical,\n        paddingHorizontal: footerStyles.footerPaddingHorizontal,\n      },\n      title: {\n        fontFamily: titleStyles.titleFontFamily,\n        fontSize: titleStyles.titleFontSize,\n        fontWeight: titleStyles.titleFontWeight,\n        lineHeight: titleStyles.titleLineHeight,\n        color: titleStyles.titleColor,\n        marginHorizontal: titleStyles.titleMarginHorizontal,\n      },\n      description: {\n        fontFamily: descriptionStyles.titleFontFamily,\n        fontSize: descriptionStyles.titleFontSize,\n        fontWeight: descriptionStyles.titleFontWeight,\n        lineHeight: descriptionStyles.titleLineHeight,\n        color: descriptionStyles.descriptionColor,\n        marginHorizontal: descriptionStyles.descriptionMarginHorizontal,\n      },\n      accent: {\n        backgroundColor: accentStyles.accentBackgroundColor,\n        height: accentStyles.accentHeight,\n      },\n    };\n  };\n\n  private renderDivider = (): DividerElement => {\n    return (\n      <Divider/>\n    );\n  };\n\n  private renderHeader = (headerStyles: HeaderStyles): HeaderProp => {\n    const header: HeaderProp = this.props.header();\n\n    return React.cloneElement(header, {\n      headerStyle: [styles.header, headerStyles.style, header.props.style],\n      accentStyle: headerStyles.accent,\n      titleStyle: headerStyles.title,\n      descriptionStyle: headerStyles.description,\n    });\n  };\n\n  private renderFooter = (style: StyleType): FooterProp => {\n    const footer: FooterProp = this.props.footer();\n\n    return React.cloneElement(footer, {\n      style: [style, styles.footer, footer.props.style],\n    });\n  };\n\n  private renderBody = (style: StyleType): React.ReactNode => {\n    return (\n      <View style={[styles.body, style]}>\n        {this.props.children}\n      </View>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { header, footer } = this.props;\n\n    const headerStyles: HeaderStyles = {\n      style: style.header,\n      accent: style.accent,\n      title: style.title,\n      description: style.description,\n    };\n\n    return [\n      header && this.renderHeader(headerStyles),\n      this.renderBody(style.body),\n      footer && this.renderFooter(style.footer),\n    ];\n  };\n\n  public render(): CardElement {\n    const { themedStyle, style, children, ...restProps } = this.props;\n    const { container, ...childrenStyles } = this.getComponentStyle(themedStyle);\n    const [header, body, footer] = this.renderComponentChildren(childrenStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...restProps}\n        style={[container, styles.container, style]}>\n        {header}\n        {header && this.renderDivider()}\n        {body}\n        {footer && this.renderDivider()}\n        {footer}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    justifyContent: 'space-between',\n  },\n  header: {\n    backgroundColor: 'transparent',\n  },\n  body: {\n    backgroundColor: 'transparent',\n  },\n  footer: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport const Card = styled<CardProps>(CardComponent);\n","import React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\nimport { ListItem } from '../list/listItem.component';\n\ninterface ComponentProps {\n  title: string;\n  description?: string;\n  titleStyle?: StyleProp<TextStyle>;\n  descriptionStyle?: StyleProp<TextStyle>;\n  headerStyle?: StyleProp<ViewStyle>;\n  accentStyle?: StyleProp<ViewStyle>;\n}\n\nexport type CardHeaderProps = ViewProps & ComponentProps;\nexport type CardHeaderElement = React.ReactElement<CardHeaderProps>;\n\n/**\n * Styled `CardHeader` component can be used like `header` in the `Card` component.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the ListItem.\n *\n * @property {string} description - Determines the description of the ListItem's title.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {StyleProp<TextStyle>} descriptionStyle - Customizes description style.\n *\n * @property {StyleProp<ViewStyle>} accentStyle - Determines style of the stripe element.\n *\n * @property {StyleProp<ViewStyle>} headerStyle - Determines style of the header container element.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n */\n\nexport class CardHeader extends React.Component<CardHeaderProps> {\n\n  public render(): React.ReactFragment {\n    const { accentStyle, style, headerStyle, ...restProps } = this.props;\n\n    return (\n      <React.Fragment>\n        <View style={accentStyle}/>\n        <ListItem\n          style={[style, headerStyle]}\n          {...restProps}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import { DateService } from './date.service';\nimport { CalendarRange } from '../type';\n\nexport class RangeDateService<D> {\n\n  private dateService: DateService<D>;\n\n  constructor(dateService: DateService<D>) {\n    this.dateService = dateService;\n  }\n\n  public createRange(range: CalendarRange<D>, date: D): CalendarRange<D> {\n    switch (true) {\n      case (!range.startDate && !range.endDate):\n        return { startDate: date, endDate: null };\n      case (range.startDate && !range.endDate):\n        return this.createRangeForStart(range, date);\n      case (range.startDate !== null && range.endDate !== null):\n        return this.createRangeForStartEnd(date);\n      default:\n        return range;\n    }\n  }\n\n  private createRangeForStart(range: CalendarRange<D>, date: D): CalendarRange<D> {\n    if (this.dateService.compareDatesSafe(date, range.startDate) === 1) {\n      return { startDate: range.startDate, endDate: date };\n    } else if (this.dateService.compareDatesSafe(date, range.startDate) === -1) {\n      return { startDate: date, endDate: range.startDate };\n    } else {\n      return range;\n    }\n  }\n\n  private createRangeForStartEnd(date: D): CalendarRange<D> {\n    return { startDate: date, endDate: null};\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport {\n  BaseCalendarComponent,\n  BaseCalendarProps,\n} from './baseCalendar.component';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport { DateBatch } from './service/calendarData.service';\nimport { RangeDateService } from './service/rangeDate.service';\nimport { CalendarRange } from './type';\n\nexport interface RangeCalendarProps<D = Date> extends StyledComponentProps, BaseCalendarProps<D> {\n  range: CalendarRange<D>;\n  onSelect: (range: CalendarRange<D>) => void;\n}\n\nexport type RangeCalendarElement<D = Date> = React.ReactElement<RangeCalendarProps<D>>;\n\n/**\n * Styled `RangeCalendar` component.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {CalendarRange<D>} range - Range which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => boolean} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement} renderYear - Should return the content of year cell.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example RangeCalendarSimpleUsage\n */\nexport class RangeCalendarComponent<D = Date> extends BaseCalendarComponent<RangeCalendarProps<D>, D> {\n\n  static styledComponentName: string = 'Calendar';\n\n  private rangeDateService: RangeDateService<D> = new RangeDateService(this.dateService);\n\n  constructor(props: RangeCalendarProps<D>) {\n    super(props);\n\n    this.createDates = this.createDates.bind(this);\n    this.selectedDate = this.selectedDate.bind(this);\n    this.onDateSelect = this.onDateSelect.bind(this);\n    this.isDateSelected = this.isDateSelected.bind(this);\n    this.shouldUpdateDate = this.shouldUpdateDate.bind(this);\n  }\n\n  // BaseCalendarComponent\n\n  protected createDates(date: D): DateBatch<D> {\n    return this.dataService.createDayPickerData(date, this.props.range);\n  }\n\n  protected selectedDate(): D {\n    return this.dateService.today();\n  }\n\n  protected onDateSelect(date: D): void {\n    if (this.props.onSelect) {\n      const range: CalendarRange<D> = this.rangeDateService.createRange(this.props.range, date);\n      this.props.onSelect(range);\n    }\n  }\n\n  protected isDateSelected(date: D): boolean {\n    return false;\n  }\n\n  protected shouldUpdateDate(props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>): boolean {\n    const dateChanged: boolean = this.dateService.compareDatesSafe(props.date.date, nextProps.date.date) !== 0;\n\n    if (dateChanged) {\n      return true;\n    }\n\n    const selectionChanged: boolean = props.selected !== nextProps.selected;\n    const disablingChanged: boolean = props.disabled !== nextProps.disabled;\n    const rangeChanged: boolean = props.range !== nextProps.range;\n    const rangeStartPlaceChanged: boolean = props.firstRangeItem !== nextProps.firstRangeItem;\n    const rangeEndPlaceChanged: boolean = props.lastRangeItem !== nextProps.lastRangeItem;\n\n    const shouldUpdate: boolean =\n      selectionChanged\n      || disablingChanged\n      || rangeChanged\n      || rangeStartPlaceChanged\n      || rangeEndPlaceChanged;\n\n    if (shouldUpdate) {\n      return true;\n    }\n\n    return props.theme !== nextProps.theme;\n  }\n}\n\nexport const RangeCalendar = styled<RangeCalendarProps>(RangeCalendarComponent);\n","import React from 'react';\nimport {\n  G,\n  Path,\n  Rect,\n  Svg,\n  SvgProps,\n} from 'react-native-svg';\n\nexport type CheckMarkProps = SvgProps;\nexport type CheckMarkElement = React.ReactElement<CheckMarkProps>;\n\nexport class CheckMark extends React.Component<SvgProps> {\n\n  public render(): React.ReactElement<SvgProps> {\n    return (\n      <Svg {...this.props} viewBox='0 0 24 24'>\n        <G data-name='Layer 2'>\n          <G data-name='checkmark'>\n            <Rect width='24' height='24' opacity='0'/>\n            <Path\n              d='M9.86 18a1 1 0 0 1-.73-.32l-4.86-5.17a1 1 0 1 1 1.46-1.37l4.12 4.39 8.41-9.2a1 1 0 1 1 1.48 1.34l-9.14 10a1 1 0 0 1-.73.33z'/>\n          </G>\n        </G>\n      </Svg>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  G,\n  Path,\n  Rect,\n  Svg,\n  SvgProps,\n} from 'react-native-svg';\n\nexport type MinusProps = SvgProps;\nexport type MinusElement = React.ReactElement<MinusProps>;\n\nexport class Minus extends React.Component<SvgProps> {\n\n  public render(): React.ReactElement<SvgProps> {\n    return (\n      <Svg {...this.props} viewBox='0 0 24 24'>\n        <G data-name='Layer 2'>\n          <G data-name='minus'>\n            <Rect\n              width='24'\n              height='24'\n              transform='rotate(180 12 12)'\n              opacity='0'\n            />\n            <Path d='M19 13H5a1 1 0 0 1 0-2h14a1 1 0 0 1 0 2z'/>\n          </G>\n        </G>\n      </Svg>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { SvgProps } from 'react-native-svg';\nimport {\n  GestureResponderEvent,\n  Insets,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport {\n  CheckMark,\n  CheckMarkProps,\n  CheckMarkElement,\n} from '../support/components/checkmark.component';\nimport {\n  Minus,\n  MinusElement,\n  MinusProps,\n} from '../support/components/minus.component';\nimport {\n  isValidString,\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport interface CheckBoxProps extends StyledComponentProps, TouchableOpacityProps {\n  textStyle?: StyleProp<TextStyle>;\n  text?: string;\n  checked?: boolean;\n  indeterminate?: boolean;\n  status?: string;\n  onChange?: (checked: boolean, indeterminate: boolean) => void;\n}\n\nexport type CheckBoxElement = React.ReactElement<CheckBoxProps>;\n\ntype IconElement = CheckMarkElement | MinusElement;\n\n/**\n * Styled `CheckBox` component.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Determines whether component is checked.`\n * Default is `false`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {string} text - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(checked: boolean) => void} onChange - Fires on checkbox value change.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example CheckboxSimpleUsage\n *\n * @overview-example CheckboxStates\n *\n * @overview-example CheckboxIndeterminate\n *\n * @overview-example CheckboxStatus\n *\n * @example CheckboxInlineStyling\n */\nclass CheckBoxComponent extends React.Component<CheckBoxProps> implements WebEventResponderCallbacks {\n\n  static styledComponentName: string = 'CheckBox';\n\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  // WebEventResponderCallbacks\n\n  public onMouseEnter = (): void => {\n    this.props.dispatch([Interaction.HOVER]);\n  };\n\n  public onMouseLeave = (): void => {\n    this.props.dispatch([]);\n  };\n\n  public onFocus = (): void => {\n    this.props.dispatch([Interaction.FOCUSED]);\n  };\n\n  public onBlur = (): void => {\n    this.props.dispatch([]);\n  };\n\n  private onPress = (): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked, false);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconBorderRadius,\n      iconTintColor,\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: {},\n      highlightContainer: {},\n      selectContainer: containerParameters,\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        fill: iconTintColor,\n        stroke: iconTintColor,\n        strokeWidth: 3,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n    };\n  };\n\n  private createHitSlopInsets = (style: StyleProp<ViewStyle>): Insets => {\n    const { width } = StyleSheet.flatten(style);\n\n    // @ts-ignore: `width` is restricted to be a number\n    const value: number = 40 - width;\n\n    return {\n      left: value,\n      top: value,\n      right: value,\n      bottom: value,\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    const { text, textStyle } = this.props;\n\n    return (\n      <Text style={[style, styles.text, textStyle]}>{text}</Text>\n    );\n  };\n\n  private renderIconElement = (style: SvgProps): IconElement => {\n    const Icon: React.ComponentType<MinusProps | CheckMarkProps> = this.props.indeterminate ? Minus : CheckMark;\n    return (\n      <Icon {...style} />\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { text } = this.props;\n\n    return [\n      this.renderIconElement(style.icon),\n      isValidString(text) && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, disabled, text, ...derivedProps } = this.props;\n\n    const {\n      container,\n      highlightContainer,\n      highlight,\n      selectContainer,\n      ...componentStyle\n    } = this.getComponentStyle(themedStyle);\n\n    const selectContainerStyle: StyleProp<ViewStyle> = [selectContainer, styles.selectContainer];\n    const hitSlopInsets: Insets = this.createHitSlopInsets(selectContainerStyle);\n\n    const [iconElement, textElement] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...derivedProps}\n        {...this.webEventResponder.eventHandlers}\n        style={[container, styles.container, webStyles.container, style]}\n        disabled={disabled}\n        hitSlop={hitSlopInsets}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <View style={[highlightContainer, styles.highlightContainer]}>\n          <View style={[highlight, styles.highlight]}/>\n          <View style={selectContainerStyle}>\n            {iconElement}\n          </View>\n        </View>\n        {textElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  highlightContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  highlight: {\n    position: 'absolute',\n  },\n  icon: {},\n  text: {},\n});\n\nconst webStyles = Platform.OS === 'web' && StyleSheet.create({\n  container: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n\nexport const CheckBox = styled<CheckBoxProps>(CheckBoxComponent);\n","import React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { Popover } from '../popover/popover.component';\nimport { BaseCalendarProps } from '../calendar/baseCalendar.component';\nimport { NativeDateService } from '../calendar/service/nativeDate.service';\nimport { CalendarElement } from '../calendar/calendar.component';\nimport { RangeCalendarElement } from '../calendar/rangeCalendar.component';\nimport { PopoverPlacements } from '../popover/type';\n\nexport interface BaseDatepickerProps<D = Date> extends StyledComponentProps,\n  TouchableOpacityProps,\n  BaseCalendarProps<D> {\n\n  controlStyle?: StyleProp<ViewStyle>;\n  icon?: (style: ImageStyle) => React.ReactElement<ImageProps>;\n  status?: string;\n  size?: string;\n  placeholder?: string;\n}\n\ninterface State {\n  visible: boolean;\n}\n\ntype DatepickerChildren<D = Date> = [CalendarElement<D>, React.ReactElement];\n\nconst FULL_DATE_FORMAT_STRING: string = 'DD/MM/YYYY';\n\nexport abstract class BaseDatepickerComponent<P, D = Date> extends React.Component<BaseDatepickerProps<D> & P, State> {\n\n  static defaultProps: Partial<BaseDatepickerProps> = {\n    dateService: new NativeDateService(),\n    placeholder: 'dd/mm/yyyy',\n  };\n\n  public state: State = {\n    visible: false,\n  };\n\n  protected abstract getComponentTitle(): string;\n\n  protected abstract renderCalendar(): CalendarElement<D> | RangeCalendarElement<D>;\n\n  protected formatDateToString(date: D): string {\n    return this.props.dateService.format(date, FULL_DATE_FORMAT_STRING);\n  }\n\n  private getComponentStyle = (style: StyleType): StyleType => {\n    const {\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textFontFamily,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      popoverWidth,\n      ...containerStyles\n    } = style;\n\n    return {\n      control: containerStyles,\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        tintColor: iconTintColor,\n      },\n      text: {\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n        fontFamily: textFontFamily,\n      },\n      popover: {\n        width: popoverWidth,\n      },\n    };\n  };\n\n  private onPress = (event: GestureResponderEvent): void => {\n    this.setVisibility();\n\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private setVisibility = (): void => {\n    const visible: boolean = !this.state.visible;\n    this.setState({ visible }, this.dispatchActive);\n  };\n\n  private dispatchActive = (): void => {\n    if (this.state.visible) {\n      this.props.dispatch([Interaction.ACTIVE]);\n    } else {\n      this.props.dispatch([]);\n    }\n  };\n\n  private renderIconElement = (style: StyleType): React.ReactElement<ImageProps> => {\n    const iconElement: React.ReactElement<ImageProps> = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      style: [style, iconElement.props.style],\n    });\n  };\n\n  private renderTextElement = (style: StyleType): TextElement => {\n    return (\n      <Text\n        style={style}\n        numberOfLines={1}\n        ellipsizeMode='tail'>\n        {this.getComponentTitle()}\n      </Text>\n    );\n  };\n\n  private renderControlChildren = (style: StyleType): React.ReactNodeArray => {\n    return [\n      this.props.icon && this.renderIconElement(style.icon),\n      this.renderTextElement(style.text),\n    ];\n  };\n\n  private renderControlElement = (style: StyleType): React.ReactElement<TouchableOpacityProps> => {\n    const { themedStyle, controlStyle, ...restProps } = this.props;\n    const [iconElement, textElement] = this.renderControlChildren(style);\n\n    return (\n      <TouchableOpacity\n        {...restProps}\n        activeOpacity={1.0}\n        style={[styles.control, style.control, controlStyle]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        {textElement}\n        {iconElement}\n      </TouchableOpacity>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): DatepickerChildren<D> => {\n    return [\n      this.renderCalendar(),\n      this.renderControlElement(style),\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style } = this.props;\n    const { popover, ...componentStyle }: StyleType = this.getComponentStyle(themedStyle);\n\n    const [calendarElement, controlElement] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <View style={style}>\n        <Popover\n          style={[popover, styles.popover]}\n          placement={PopoverPlacements.BOTTOM_START}\n          visible={this.state.visible}\n          content={calendarElement}\n          onBackdropPress={this.setVisibility}>\n          {controlElement}\n        </Popover>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  control: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  popover: {\n    borderWidth: 0,\n  },\n});\n\n","import React from 'react';\nimport { styled } from '@kitten/theme';\nimport {\n  BaseDatepickerComponent,\n  BaseDatepickerProps,\n} from './baseDatepicker.component';\nimport {\n  Calendar,\n  CalendarElement,\n  CalendarProps,\n} from '../calendar/calendar.component';\n\nexport type DatepickerProps<D = Date> = BaseDatepickerProps<D> & CalendarProps<D>;\nexport type DatepickerElement<D = Date> = React.ReactElement<DatepickerProps<D>>;\n\n/**\n * Styled `Datepicker` component.\n * Renders `Calendar` component in the `Popover`.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {(style: ImageStyle) => ReactElement} icon - Determines the icon of the component.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `small`, `medium` or `large`.\n * Default is `medium`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false.\n *\n * @property {string} placeholder - Determines placeholder of the component.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {D} date - Date which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => boolean} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement} renderYear - Should return the content of year cell.\n *\n * @property {() => ReactElement} renderFooter - Should return the footer.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example DatepickerSimpleUsage\n *\n * @overview-example DatepickerWithIcon\n *\n * @overview-example DatepickerBoundingMonth\n *\n * @overview-example DatepickerFilter\n *\n * @overview-example DatepickerStatus\n *\n * @overview-example DatepickerSize\n *\n * @example DatepickerCustomDay\n *\n * @example DatepickerCustomLocale\n *\n * @example DatepickerMoment\n */\n\nexport class DatepickerComponent<D = Date> extends BaseDatepickerComponent<DatepickerProps<D>, D> {\n\n  static styledComponentName: string = 'Datepicker';\n\n  private get calendarProps(): CalendarProps<D> {\n    return {\n      min: this.props.min,\n      max: this.props.max,\n      date: this.props.date,\n      dateService: this.props.dateService,\n      boundingMonth: this.props.boundingMonth,\n      startView: this.props.startView,\n      filter: this.props.filter,\n      title: this.props.title,\n      onSelect: this.props.onSelect,\n      renderDay: this.props.renderDay,\n      renderYear: this.props.renderYear,\n      renderFooter: this.props.renderFooter,\n    };\n  }\n\n  // BaseDatepickerComponent\n\n  protected getComponentTitle(): string {\n    if (this.props.date) {\n      return this.formatDateToString(this.props.date);\n    } else {\n      return this.props.placeholder;\n    }\n  }\n\n  protected renderCalendar(): CalendarElement<D> {\n    return (\n      // @ts-ignore\n      <Calendar {...this.calendarProps} />\n    );\n  }\n}\n\nexport const Datepicker = styled<DatepickerProps>(DatepickerComponent);\n","import React from 'react';\nimport { styled } from '@kitten/theme';\nimport {\n  BaseDatepickerComponent,\n  BaseDatepickerProps,\n} from './baseDatepicker.component';\nimport {\n  RangeCalendarProps,\n  RangeCalendarElement,\n  RangeCalendar,\n} from '../calendar/rangeCalendar.component';\n\nexport type RangeDatepickerProps<D = Date> = BaseDatepickerProps<D> & RangeCalendarProps<D>;\nexport type RangeDatepickerElement<D = Date> = React.ReactElement<RangeDatepickerProps<D>>;\n\n/**\n * Styled `RangeDatepicker` component.\n * Renders `RangeCalendar` component in the `Popover`.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {(style: ImageStyle) => ReactElement} icon - Determines the icon of the component.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `small`, `medium` or `large`.\n * Default is `medium`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false.\n *\n * @property {string} placeholder - Determines placeholder of the component.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {D} date - Date which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => boolean} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement} renderYear - Should return the content of year cell.\n *\n * @property {() => ReactElement} renderFooter - Should return the footer.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example RangeDatepickerSimpleUsage\n */\nexport class RangeDatepickerComponent<D = Date> extends BaseDatepickerComponent<RangeDatepickerProps<D>, D> {\n\n  static styledComponentName: string = 'Datepicker';\n\n  private get calendarProps(): RangeCalendarProps<D> {\n    return {\n      min: this.props.min,\n      max: this.props.max,\n      range: this.props.range,\n      dateService: this.props.dateService,\n      boundingMonth: this.props.boundingMonth,\n      startView: this.props.startView,\n      filter: this.props.filter,\n      title: this.props.title,\n      onSelect: this.props.onSelect,\n      renderDay: this.props.renderDay,\n      renderYear: this.props.renderYear,\n      renderFooter: this.props.renderFooter,\n    };\n  }\n\n  // BaseDatepickerComponent\n\n  protected getComponentTitle(): string {\n    const { startDate, endDate } = this.props.range;\n\n    if (startDate || endDate) {\n      const start: string = startDate ? this.formatDateToString(startDate) : '';\n      const end: string = endDate ? this.formatDateToString(endDate) : '';\n\n      return `${start} - ${end}`;\n    } else {\n      return this.props.placeholder;\n    }\n  }\n\n  protected renderCalendar(): RangeCalendarElement<D> {\n    return (\n      // @ts-ignore\n      <RangeCalendar {...this.calendarProps} />\n    );\n  }\n}\n\nexport const RangeDatepicker = styled<RangeDatepickerProps>(RangeDatepickerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { IconElement } from '../icon/icon.component';\nimport { TouchableIndexedProps } from '../support/typings/type';\nimport {\n  allWithPrefix,\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport interface MenuItemType {\n  title: string;\n  disabled?: boolean;\n  subItems?: MenuItemType[];\n  titleStyle?: StyleProp<TextStyle>;\n  menuIndex?: number;\n  icon?: (style: StyleType) => IconElement;\n  accessory?: (style: StyleType) => React.ReactElement;\n}\n\nexport interface MenuItemProps extends StyledComponentProps, TouchableIndexedProps, MenuItemType {\n  selected?: boolean;\n}\n\nexport type MenuItemElement = React.ReactElement<MenuItemProps>;\n\n/**\n * `MenuItem` is a support component for `Menu`.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the ListItem.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {(style: StyleType) => ReactElement} accessory - Determines the accessory of the component.\n *\n * @property {(style: ImageStyle) => ReactElement} icon - Determines the icon of the component.\n *\n * @property {MenuItemType[]} subItems - Determines the sub-items of the MenuItem.\n *\n * @property {(index: number, event: GestureResponderEvent) => void} onPress - Emits when component is pressed.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n */\nclass MenuItemComponent extends React.Component<MenuItemProps> implements WebEventResponderCallbacks {\n\n  static styledComponentName: string = 'MenuItem';\n\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.props.dispatch([Interaction.HOVER]);\n  };\n\n  public onMouseLeave = (): void => {\n    this.props.dispatch([]);\n  };\n\n  public onFocus = (): void => {\n    this.props.dispatch([Interaction.FOCUSED]);\n  };\n\n  public onBlur = (): void => {\n    this.props.dispatch([]);\n  };\n\n  private onPress = (event: GestureResponderEvent): void => {\n    if (this.props.onPress) {\n      this.props.onPress(this.props.menuIndex, event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(this.props.menuIndex, event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(this.props.menuIndex, event);\n    }\n  };\n\n  private onLongPress = (event: GestureResponderEvent): void => {\n    if (this.props.onLongPress) {\n      this.props.onLongPress(this.props.menuIndex, event);\n    }\n  };\n\n  private getComponentStyles = (style: StyleType): StyleType => {\n    const { paddingHorizontal, paddingVertical, backgroundColor } = style;\n\n    const titleStyles: StyleType = allWithPrefix(style, 'title');\n    const indicatorStyles: StyleType = allWithPrefix(style, 'indicator');\n    const iconStyles: StyleType = allWithPrefix(style, 'icon');\n\n    return {\n      container: {\n        paddingHorizontal: paddingHorizontal,\n        paddingVertical: paddingVertical,\n        backgroundColor: backgroundColor,\n      },\n      title: {\n        marginHorizontal: titleStyles.titleMarginHorizontal,\n        fontFamily: titleStyles.titleFontFamily,\n        fontSize: titleStyles.titleFontSize,\n        fontWeight: titleStyles.titleFontWeight,\n        lineHeight: titleStyles.titleLineHeight,\n        color: titleStyles.titleColor,\n      },\n      indicator: {\n        width: indicatorStyles.indicatorWidth,\n        backgroundColor: indicatorStyles.indicatorBackgroundColor,\n      },\n      icon: {\n        width: iconStyles.iconWidth,\n        height: iconStyles.iconHeight,\n        marginHorizontal: iconStyles.iconMarginHorizontal,\n        tintColor: iconStyles.iconTintColor,\n      },\n    };\n  };\n\n  private renderIcon = (style: StyleType): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      style: [style, iconElement.props.style],\n    });\n  };\n\n  private renderTitle = (style: StyleType): TextElement => {\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text style={[style, titleStyle]}>{title}</Text>\n    );\n  };\n\n  private renderAccessory = (style: StyleType): IconElement => {\n    return this.props.accessory(style);\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { title, icon, accessory } = this.props;\n\n    return [\n      icon && this.renderIcon(style.icon),\n      title && this.renderTitle(style.title),\n      accessory && this.renderAccessory(style.icon),\n    ];\n  };\n\n  public render(): React.ReactNode {\n    const { themedStyle, style, ...restProps } = this.props;\n    const { container, indicator, ...restStyles } = this.getComponentStyles(themedStyle);\n    const [iconElement, textElement, accessoryElement] = this.renderComponentChildren(restStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        style={[styles.container, container, webStyles.container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n        onLongPress={this.onLongPress}>\n        <View style={[styles.indicator, indicator]}/>\n        <View style={styles.subContainer}>\n          {iconElement}\n          {textElement}\n        </View>\n        {accessoryElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  subContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  indicator: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 2,\n  },\n});\n\nconst webStyles = Platform.OS === 'web' && StyleSheet.create({\n  container: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n\nexport const MenuItem = styled<MenuItemProps>(MenuItemComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { SvgProps } from 'react-native-svg';\nimport {\n  Animated,\n  GestureResponderEvent,\n  ImageProps,\n  StyleSheet,\n  TouchableOpacityProps,\n  View,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  MenuItem,\n  MenuItemElement,\n  MenuItemType,\n} from './menuItem.component';\nimport {\n  MeasureElement,\n  MeasuringElement,\n} from '../measure/measure.component';\nimport { Frame } from '../measure/type';\nimport { ChevronDown } from '../support/components/chevronDown.component';\nimport { DividerElement } from '../divider/divider.component';\n\ninterface ComponentProps {\n  item: MenuItemType;\n  selectedIndex: number;\n  divider?: DividerElement;\n  onSelect?: (index: number, event?: GestureResponderEvent) => void;\n}\n\ninterface ComponentState {\n  subItemsVisible: boolean;\n  subItemsHeight: number;\n}\n\nexport type SubMenuProps = ComponentProps & StyledComponentProps & TouchableOpacityProps;\nexport type SubMenuElement = React.ReactElement<SubMenuProps>;\ntype OnPressHandler = (index: number, event?: GestureResponderEvent) => void;\ntype IconElement = React.ReactElement<ImageProps>;\n\nconst MAIN_ITEM_KEY: string = 'Main Item';\nconst DIVIDER_ELEMENT_KEY: string = 'Divider';\n\nclass SubMenuComponent extends React.Component<SubMenuProps, ComponentState> {\n\n  static styledComponentName: string = 'SubMenu';\n\n  public state: ComponentState = {\n    subItemsVisible: false,\n    subItemsHeight: 0,\n  };\n\n  private subItemsAnimation: Animated.Value = new Animated.Value(0);\n  private iconAnimation: Animated.Value = new Animated.Value(0);\n\n  public componentDidUpdate(prevProps: SubMenuProps, prevState: ComponentState): void {\n    if (prevState.subItemsVisible !== this.state.subItemsVisible) {\n      if (this.state.subItemsVisible) {\n        this.subItemsExpandAnimate(this.state.subItemsHeight);\n        this.animateIcon(-180);\n      } else {\n        this.subItemsExpandAnimate(0);\n        this.animateIcon(0);\n      }\n    }\n  }\n\n  private subItemsExpandAnimate = (toValue: number): void => {\n    Animated.spring(this.subItemsAnimation, {\n      toValue: toValue,\n    }).start();\n  };\n\n  private animateIcon = (toValue: number): void => {\n    Animated.timing(this.iconAnimation, {\n      toValue: toValue,\n      duration: 200,\n    }).start();\n  };\n\n  private onMainItemPress = (): void => {\n    const subItemsVisible: boolean = !this.state.subItemsVisible;\n\n    this.setState({ subItemsVisible });\n  };\n\n  private onSubItemPress = (index: number, event: GestureResponderEvent): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(index, event);\n    }\n  };\n\n  private getComponentStyles = (style: StyleType): StyleType => {\n    return {\n      subContainer: {\n        paddingHorizontal: style.subItemsPaddingHorizontal,\n      },\n    };\n  };\n\n  private onSubMenuMeasure = (frame: Frame): void => {\n    this.setState({ subItemsHeight: frame.size.height });\n  };\n\n  private getIsSelected = (item: MenuItemType): boolean => {\n    const { selectedIndex } = this.props;\n\n    return selectedIndex === item.menuIndex;\n  };\n\n  private isMainItemDividerExist = (): boolean => {\n    const { divider } = this.props;\n    const { subItemsVisible } = this.state;\n\n    return subItemsVisible && divider !== null;\n  };\n\n  private isSubItemDividerExist = (item: MenuItemType, index: number): boolean => {\n    const { divider } = this.props;\n\n    return (index !== item.subItems.length - 1) && (divider !== null);\n  };\n\n  private renderDivider = (): DividerElement => {\n    const { divider } = this.props;\n\n    return divider && React.cloneElement(divider, {\n      key: DIVIDER_ELEMENT_KEY,\n    });\n  };\n\n  private renderMainItemAccessory = (style: SvgProps): IconElement => {\n    const rotateInterpolate = this.iconAnimation.interpolate({\n      inputRange: [-180, 0],\n      outputRange: ['-180deg', '0deg'],\n    });\n    const animatedStyle: StyleType = { transform: [{ rotate: rotateInterpolate }] };\n\n    return (\n      <Animated.View style={animatedStyle}>\n        <ChevronDown {...style}/>\n      </Animated.View>\n    );\n  };\n\n  private renderMenuItem = (item: MenuItemType,\n                            isMainItem: boolean,\n                            index: number | string): MenuItemElement => {\n\n    const onPressHandler: OnPressHandler = isMainItem ? this.onMainItemPress : this.onSubItemPress;\n    const mainMenuItemAccessory = isMainItem ? this.renderMainItemAccessory : null;\n\n    return (\n      <MenuItem\n        {...item}\n        key={index}\n        accessory={mainMenuItemAccessory}\n        onPress={onPressHandler}\n      />\n    );\n  };\n\n  private renderSubItemsInvisible = (subItems: React.ReactNode): MeasuringElement => {\n    return (\n      <MeasureElement onMeasure={this.onSubMenuMeasure}>\n        <View\n          pointerEvents='none'\n          style={styles.invisibleMenu}>\n          {subItems}\n        </View>\n      </MeasureElement>\n    );\n  };\n\n  private renderSubItems = (): React.ReactFragment => {\n    const { item, themedStyle, divider } = this.props;\n\n    return item.subItems.map((sub: MenuItemType, index: number) => {\n      const { subContainer } = this.getComponentStyles(themedStyle);\n      const isSelected: boolean = this.getIsSelected(sub);\n\n      const element: MenuItemElement = React.cloneElement(this.renderMenuItem(sub, false, index), {\n        style: subContainer,\n        selected: isSelected,\n      });\n      const dividerElement: DividerElement = this.isSubItemDividerExist(item, index) ?\n        this.renderDivider() : null;\n\n      return (\n        <React.Fragment key={index}>\n          {element}\n          {dividerElement}\n        </React.Fragment>\n      );\n    });\n  };\n\n  private renderComponentChildren = (): React.ReactNodeArray => {\n    const { item } = this.props;\n\n    return [\n      this.renderMenuItem(item, true, MAIN_ITEM_KEY),\n      this.renderSubItems(),\n      this.isMainItemDividerExist() ? this.renderDivider() : null,\n    ];\n  };\n\n  public render(): React.ReactFragment {\n    const { subItemsVisible } = this.state;\n    const [mainItem, subItems, divider] = this.renderComponentChildren();\n    const invisibleSubs: React.ReactElement = this.renderSubItemsInvisible(subItems);\n\n    const animatedStyle: StyleType = { height: this.subItemsAnimation };\n\n    return (\n      <React.Fragment>\n        {mainItem}\n        {divider}\n        <Animated.View style={animatedStyle}>\n          {subItemsVisible && subItems}\n        </Animated.View>\n        {invisibleSubs}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  invisibleMenu: {\n    opacity: 0,\n    position: 'absolute',\n  },\n});\n\nexport const SubMenu = styled<SubMenuProps>(SubMenuComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { MenuItemType } from './menuItem.component';\n\n/**\n * Support service for the menu component. Can be expanded.\n */\n\nexport class MenuService {\n\n  /**\n   * Makes custom indexes for the MenuItems array for proper handling group items.\n   *\n   * @param {ReadonlyArray<MenuItemType>} data\n   * @returns {MenuItemType[]} pack by name\n   */\n  public setIndexes(data: ReadonlyArray<MenuItemType>): MenuItemType[] {\n    let tempIndex: number = 0;\n    return data.map((item: MenuItemType) => {\n      if (!item.subItems || item.subItems.length === 0) {\n        item.menuIndex = tempIndex;\n        tempIndex = tempIndex + 1;\n      } else {\n        item.subItems = item.subItems.map((sub: MenuItemType) => {\n          sub.menuIndex = tempIndex;\n          tempIndex = tempIndex + 1;\n          return sub;\n        });\n      }\n      return item;\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ListRenderItemInfo,\n  GestureResponderEvent,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport {\n  List,\n  ListProps,\n} from '../list/list.component';\nimport {\n  Divider,\n  DividerElement,\n} from '../divider/divider.component';\nimport {\n  MenuItem,\n  MenuItemType,\n  MenuItemElement,\n  MenuItemProps,\n} from './menuItem.component';\nimport { SubMenu } from './subMenu.component';\nimport { MenuService } from './menu.service';\n\nexport interface MenuProps extends StyledComponentProps, Omit<ListProps, 'renderItem'> {\n  selectedIndex?: number;\n  onSelect: (index: number, event?: GestureResponderEvent) => void;\n}\n\nexport type MenuElement = React.ReactElement<MenuProps>;\n\n/**\n * `Menu` renders vertical list of `MenuItems`.\n *\n * @extends React.Component\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default` or `noDivider`.\n * Default is `default`.\n *\n * @property {MenuItemType[]} data - Determines menu items.\n *\n * @property {number} selectedIndex - The index of selected item.\n *\n * @property {(index: number, event?: GestureResponderEvent) => void} onSelect - Fires when\n * selected item is changed.\n *\n * @property {Omit<ListProps, 'renderItem'>} ...ListProps - Any props applied to List component, excluding `renderItem`.\n *\n * @overview-example MenuSimpleUsage\n *\n * @overview-example MenuWithSubMenu\n *\n * @overview-example MenuWithIcons\n *\n * @overview-example MenuDisabledOptions\n *\n * @overview-example MenuWithoutDivider\n *\n * @example MenuInlineStyling\n */\nclass MenuComponent extends React.Component<MenuProps> {\n\n  static styledComponentName: string = 'Menu';\n\n  private service: MenuService = new MenuService();\n\n  private onSelect = (selectedIndex: number, event: GestureResponderEvent): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(selectedIndex, event);\n    }\n  };\n\n  private isDividerAbsent = (): boolean => {\n    const { appearance } = this.props;\n\n    return appearance !== 'noDivider';\n  };\n\n  private areThereSubItems = (item: MenuItemProps): boolean => {\n    return item.subItems && item.subItems.length !== 0;\n  };\n\n  private getIsSelected = (item: MenuItemType): boolean => {\n    const { selectedIndex } = this.props;\n\n    return selectedIndex === item.menuIndex;\n  };\n\n  private renderMenuItem = (info: ListRenderItemInfo<MenuItemProps>): MenuItemElement => {\n    const { selectedIndex } = this.props;\n    const isSelected: boolean = this.getIsSelected(info.item);\n\n    return this.areThereSubItems(info.item) ? (\n      <SubMenu\n        item={info.item}\n        selectedIndex={selectedIndex}\n        divider={this.renderDivider()}\n        onSelect={this.onSelect}\n      />\n    ) : (\n      <MenuItem\n        {...info.item}\n        selected={isSelected}\n        onPress={this.onSelect}\n      />\n    );\n  };\n\n  private renderDivider = (): DividerElement => {\n    return this.isDividerAbsent() && (\n      <Divider/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    const { appearance, data, ...restProps } = this.props;\n    const items: MenuItemType[] = this.service.setIndexes(data);\n\n    return (\n      <List\n        ItemSeparatorComponent={this.renderDivider}\n        renderItem={this.renderMenuItem}\n        data={items}\n        {...restProps}\n      />\n    );\n  }\n}\n\nexport const Menu = styled<MenuProps>(MenuComponent);\n","import React from 'react';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport {\n  Menu,\n  MenuElement,\n  MenuProps,\n} from '../menu/menu.component';\nimport { MenuItemType } from '../menu/menuItem.component';\n\nexport type DrawerHeaderElement = React.ReactElement;\nexport type DrawerFooterElement = React.ReactElement;\n\nexport interface DrawerProps extends StyledComponentProps, MenuProps {\n  header?: () => DrawerHeaderElement;\n  footer?: () => DrawerFooterElement;\n}\n\nexport type DrawerElement = React.ReactElement<DrawerProps>;\n\n/**\n * Styled `Navigation Drawer` component. The principle of rendering a `Drawer` is the same as a rendering a List.\n *\n * @extends React.Component\n *\n * @property {MenuItemType[]} data - Determines the items displayed in drawer menu.\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default` or `noDivider`.\n * Default is `default`.\n *\n * @property {() => ReactElement} header - Determines the function to render a header. Optional.\n *\n * @property {() => ReactElement} footer - Determines the function to render a footer. Optional.\n *\n * @property {(index: number, event: GestureResponderEvent) => void} onSelect - Determines the function to handle\n * menu item press.\n *\n * @property {MenuProps} ...MenuProps - Any props applied to Menu component.\n *\n * @overview-example DrawerSimpleUsage\n *\n * @overview-example Using with React Navigation\n *\n * ```\n * import React from 'react';\n * import { createAppContainer, SafeAreaView } from 'react-navigation';\n * import { createDrawerNavigator } from 'react-navigation-drawer';\n * import { Drawer, Layout, Text } from '@ui-kitten/components';\n *\n * // React Navigation also requires installing additional dependencies:\n * //\n * // npm i react-navigation react-navigation-drawer react-native-reanimated react-native-gesture-handler\n * //\n * // Then, install it for ios:\n * //\n * // cd ./ios && pod install\n *\n * const HomeScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>HOME</Text>\n *   </Layout>\n * );\n *\n * const SettingsScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>SETTINGS</Text>\n *   </Layout>\n * );\n *\n * const DrawerComponent = ({ navigation }) => {\n *\n *   const onSelect = (index) => {\n *     const { [index]: selectedTabRoute } = navigation.state.routes;\n *     navigation.navigate(selectedTabRoute.routeName);\n *   };\n *\n *   return (\n *     <SafeAreaView>\n *       <Drawer data={[{ title: 'Home' }, { title: 'Settings' }]} onSelect={onSelect} />\n *     </SafeAreaView>\n *   );\n * };\n *\n * const DrawerNavigator = createDrawerNavigator({\n *   Home: HomeScreen,\n *   Settings: SettingsScreen,\n * }, {\n *   contentComponent: DrawerComponent,\n * });\n *\n * export const AppNavigator = createAppContainer(DrawerNavigator);\n * ```\n *\n * @overview-example DrawerWithIcons\n *\n * @overview-example DrawerHeader\n *\n * @overview-example DrawerFooter\n *\n * @example DrawerCustomHeader\n *\n * @example DrawerNotificationBadgeItem\n */\nclass DrawerComponent extends React.Component<DrawerProps> {\n\n  static styledComponentName: string = 'Drawer';\n\n  private renderHeader = (): DrawerHeaderElement => {\n    return this.props.header();\n  };\n\n  private renderFooter = (): DrawerFooterElement => {\n    return this.props.footer();\n  };\n\n  private renderMenu = (): MenuElement => {\n    const { style, header, footer, themedStyle, ...restProps } = this.props;\n\n    return (\n      <Menu\n        style={themedStyle}\n        showsVerticalScrollIndicator={false}\n        bounces={false}\n        {...restProps}\n      />\n    );\n  };\n\n  private renderComponentChildren = (): React.ReactNodeArray => {\n    const { header, footer } = this.props;\n\n    return [\n      header && this.renderHeader(),\n      this.renderMenu(),\n      footer && this.renderFooter(),\n    ];\n  };\n\n  public render(): React.ReactFragment {\n    const [header, menu, footer] = this.renderComponentChildren();\n\n    return (\n      <React.Fragment>\n        {header}\n        {menu}\n        {footer}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const Drawer = styled<DrawerProps>(DrawerComponent);\n","import React from 'react';\nimport {\n  ListItem,\n  ListItemProps,\n} from '../list/listItem.component';\n\nexport type DrawerHeaderFooterProps = Partial<ListItemProps>;\nexport type DrawerHeaderFooterElement = React.ReactElement<DrawerHeaderFooterProps>;\n\n/**\n * `DrawerHeaderFooter` is a support component for `Drawer`.\n * Designed to be used as Header or Footer of `Drawer`.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the DrawerHeaderFooter.\n *\n * @property {string} description - Determines the description of the DrawerHeaderFooter's title.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {StyleProp<TextStyle>} descriptionStyle - Customizes description style.\n *\n * @property {ReactNode} children - Determines React Children of the component.\n *\n * @property {(style: StyleType, index: number) => ReactElement} accessory - Determines the accessory of the\n * component.\n *\n * @property {(style: ImageStyle, index: number) => ReactElement} icon - Determines the icon of the\n * component.\n *\n * @property {(index: number, event: GestureResponderEvent) => ReactElement<ImageProps>} onPress - Emits when\n * component is pressed.\n *\n * @property {ListItemProps} ...ListItemProps - Any props applied to ListItem component.\n *\n * @overview-example DrawerHeaderFooterSimpleUsage\n *\n * @overview-example DrawerHeaderFooterWithAccessory\n *\n * @example DrawerHeaderFooterWithExternalSourceIcon\n *\n * @example DrawerHeaderFooterInlineStyling\n */\nexport class DrawerHeaderFooter extends React.Component<DrawerHeaderFooterProps> {\n\n  public render(): DrawerHeaderFooterElement {\n    return (\n      <ListItem {...this.props} />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  Platform,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextProps,\n} from '../text/text.component';\nimport { CheckBox } from '../checkbox/checkbox.component';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\nimport { TouchableTypeReturningProps } from '../support/typings';\n\ntype TextElement = React.ReactElement<TextProps>;\ntype ItemElement = React.ReactElement<TouchableOpacityProps>;\n\nexport interface SelectOptionType {\n  text: string;\n  textStyle?: TextStyle;\n  disabled?: boolean;\n  items?: SelectOptionType[];\n}\n\nexport interface ComponentProps {\n  item: SelectOptionType;\n  selected?: boolean;\n  indeterminate?: boolean;\n  multi?: boolean;\n}\n\nexport type SelectOptionProps = ComponentProps & StyledComponentProps & TouchableTypeReturningProps<SelectOptionType>;\nexport type SelectOptionElement = React.ReactElement<SelectOptionProps>;\n\nclass SelectOptionComponent extends React.Component<SelectOptionProps> implements WebEventResponderCallbacks {\n\n  static styledComponentName: string = 'SelectOption';\n\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.props.dispatch([Interaction.HOVER]);\n  };\n\n  public onMouseLeave = (): void => {\n    this.props.dispatch([]);\n  };\n\n  private onPress = (event: GestureResponderEvent): void => {\n    if (this.props.onPress) {\n      this.props.onPress(this.props.item, event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(this.props.item, event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(this.props.item, event);\n    }\n  };\n\n  private onLongPress = (event: GestureResponderEvent): void => {\n    if (this.props.onLongPress) {\n      this.props.onLongPress(this.props.item, event);\n    }\n  };\n\n  private onMultiSelectItemPress = (value: boolean): void => {\n    this.onPress(null);\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textColor,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textMarginHorizontal,\n      ...containerStyles\n    } = source;\n\n    return {\n      container: containerStyles,\n      text: {\n        color: textColor,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        marginHorizontal: textMarginHorizontal,\n      },\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    return (\n      <Text style={[style, styles.text, this.props.item.textStyle]}>\n        {this.props.item.text}\n      </Text>\n    );\n  };\n\n  private renderDefaultItem = (): ItemElement => {\n    const { themedStyle, style, item, ...restProps } = this.props;\n    const { container, text } = this.getComponentStyle(themedStyle);\n    const textElement: TextElement = this.renderTextElement(text);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        style={[styles.container, container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n        onLongPress={this.onLongPress}>\n        {textElement}\n      </TouchableOpacity>\n    );\n  };\n\n  private renderMultiSelectItem = (): ItemElement => {\n    const { style, themedStyle, selected, disabled, indeterminate, item, ...restProps } = this.props;\n    const { container, text } = this.getComponentStyle(themedStyle);\n\n    return (\n      <View\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        style={[styles.container, container, webStyles.container, style]}>\n        <CheckBox\n          text={item.text}\n          textStyle={[text, item.textStyle, styles.multiSelectText]}\n          disabled={disabled}\n          checked={selected}\n          indeterminate={indeterminate}\n          onChange={this.onMultiSelectItemPress}\n        />\n      </View>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return this.props.multi ? this.renderMultiSelectItem() : this.renderDefaultItem();\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {},\n  text: {},\n  multiSelectText: {\n    width: '100%',\n  },\n});\n\nconst webStyles = Platform.OS === 'web' && StyleSheet.create({\n  container: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n\nexport const SelectOption = styled<SelectOptionProps>(SelectOptionComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ListRenderItemInfo,\n  View,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  SelectOption,\n  SelectOptionElement,\n  SelectOptionProps,\n  SelectOptionType,\n} from './selectOption.component';\nimport { SelectOption as SelectOptionProp } from './select.component';\nimport { SelectionStrategy } from './selection.strategy';\n\ninterface ComponentProps {\n  multi?: boolean;\n  strategy: SelectionStrategy<SelectOptionProp>;\n  renderItem?: (item: ListRenderItemInfo<SelectOptionType>) => React.ReactElement;\n}\n\ninterface MainItemStatus {\n  selected: boolean;\n  indeterminate: boolean;\n}\n\nexport type SelectGroupOptionProps = ComponentProps & Partial<SelectOptionProps> & StyledComponentProps;\nexport type SelectGroupOptionElement = React.ReactElement<SelectGroupOptionProps>;\n\nclass SelectGroupOptionComponent extends React.Component<SelectGroupOptionProps> {\n\n  static styledComponentName: string = 'SelectGroupOption';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      itemPaddingHorizontal,\n      ...containerStyles\n    } = source;\n\n    return {\n      container: containerStyles,\n      item: {\n        paddingHorizontal: itemPaddingHorizontal,\n      },\n    };\n  };\n\n  private getMainItemStatus = (subItemsSelectedStatusArray: boolean[]): MainItemStatus => {\n    const someSelected: boolean = subItemsSelectedStatusArray\n      .some((item: boolean) => item === true);\n    const everySelected: boolean = subItemsSelectedStatusArray\n      .every((item: boolean) => item === true);\n\n    switch (true) {\n      case (someSelected && !everySelected):\n        return { selected: true, indeterminate: true };\n      case  !someSelected:\n        return { selected: false, indeterminate: false };\n      case everySelected:\n        return { selected: true, indeterminate: false };\n    }\n  };\n\n  private renderSubItem = (option: SelectOptionType, index: number): SelectOptionElement => {\n    const { item, renderItem, strategy, ...restProps } = this.props;\n    const returningOption: ListRenderItemInfo<SelectOptionType> = {\n      item: option,\n      index: index,\n      separators: null,\n    };\n    const selected: boolean = strategy.isSelected(option);\n\n    return renderItem ? renderItem(returningOption) : (\n      <SelectOption\n        {...restProps}\n        selected={selected}\n        item={option}\n      />\n    );\n  };\n\n  private renderSubItemsElements = (): SelectOptionElement[] => {\n    const { item, themedStyle } = this.props;\n    const { item: itemStyle } = this.getComponentStyle(themedStyle);\n\n    return item.items\n      .map((option: SelectOptionType, index: number) => {\n        const element: SelectOptionElement = this.renderSubItem(option, index);\n\n        return React.cloneElement(element, {\n          ...option,\n          style: [element.props.style, itemStyle],\n          key: index,\n        });\n      });\n  };\n\n  private renderMultiSelectMainElement = (subItemsElements: SelectOptionElement[]): SelectOptionElement => {\n    const { item, ...restProps } = this.props;\n    const subItemsSelectedStatusArray: boolean[] = subItemsElements\n      .map((subItem: SelectOptionElement) => subItem.props.selected);\n    const itemStatus: MainItemStatus = this.getMainItemStatus(subItemsSelectedStatusArray);\n\n    return (\n      <SelectOption\n        {...restProps}\n        {...itemStatus}\n        item={item}\n      />\n    );\n  };\n\n  private renderDefaultMainElement = (): SelectOptionElement => {\n    return (\n      <SelectOption\n        item={this.props.item}\n        disabled={true}\n      />\n    );\n  };\n\n  private renderMainElement = (subItemsElements: SelectOptionElement[]): SelectOptionElement => {\n    return this.props.multi ? this.renderMultiSelectMainElement(subItemsElements) : this.renderDefaultMainElement();\n  };\n\n  public render(): SelectGroupOptionElement {\n    const { themedStyle } = this.props;\n    const { container } = this.getComponentStyle(themedStyle);\n    const subItemsElements: SelectOptionElement[] = this.renderSubItemsElements();\n    const mainElement: SelectOptionElement = this.renderMainElement(subItemsElements);\n\n    return (\n      <View style={container}>\n        {mainElement}\n        {subItemsElements}\n      </View>\n    );\n  }\n}\n\nexport const SelectGroupOption = styled<SelectGroupOptionProps>(SelectGroupOptionComponent);\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ListRenderItemInfo,\n  GestureResponderEvent,\n} from 'react-native';\nimport {\n  List,\n  ListProps,\n} from '../list/list.component';\nimport {\n  SelectOption,\n  SelectOptionType,\n  SelectOptionElement,\n} from './selectOption.component';\nimport {\n  SelectGroupOption,\n  SelectGroupOptionElement,\n} from './selectGroupOption.component';\nimport { SelectOption as SelectOptionProp } from './select.component';\nimport { SelectionStrategy } from './selection.strategy';\n\nexport interface ComponentProps {\n  data: SelectOptionType[];\n  multiSelect?: boolean;\n  strategy: SelectionStrategy<SelectOptionProp>;\n  onSelect: (option: SelectOptionType, event?: GestureResponderEvent) => void;\n}\n\nexport type SelectOptionsListProps = Partial<ListProps> & ComponentProps;\nexport type SelectOptionsListElement = React.ReactElement<SelectOptionsListProps>;\n\nexport class SelectOptionsList extends React.Component<SelectOptionsListProps> {\n\n  private onSelect = (option: SelectOptionType, event?: GestureResponderEvent): void => {\n    this.props.onSelect(option, event);\n  };\n\n  private hasItems = (item: SelectOptionType): boolean => {\n    return item.items && item.items.length !== 0;\n  };\n\n  private renderGroupItem = (info: ListRenderItemInfo<SelectOptionType>): SelectGroupOptionElement => {\n    const { renderItem, multiSelect, strategy } = this.props;\n\n    return (\n      <SelectGroupOption\n        {...info}\n        strategy={strategy}\n        multi={multiSelect}\n        renderItem={renderItem}\n        onPress={this.onSelect}\n      />\n    );\n  };\n\n  private renderSingleItem = (info: ListRenderItemInfo<SelectOptionType>): SelectOptionElement => {\n    return (\n      <SelectOption\n        {...info}\n        disabled={info.item.disabled}\n        selected={this.props.strategy.isSelected(info.item)}\n        multi={this.props.multiSelect}\n        onPress={this.onSelect}\n      />\n    );\n  };\n\n  private renderItem = (info: ListRenderItemInfo<SelectOptionType>): SelectOptionElement | SelectGroupOptionElement => {\n    return this.hasItems(info.item) ? this.renderGroupItem(info) : this.renderSingleItem(info);\n  };\n\n  public render(): SelectOptionsListElement {\n    return (\n      <List\n        {...this.props}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import { SelectOptionType } from './selectOption.component';\nimport { KeyExtractorType } from './select.component';\n\nexport abstract class SelectionStrategy<S> {\n\n  public selectedOption: S;\n  protected keyExtractor: KeyExtractorType;\n\n  protected constructor(options: S, data: SelectOptionType[], keyExtractor?: KeyExtractorType) {\n\n    this.selectedOption = options;\n    this.keyExtractor = keyExtractor;\n    this.verifyData(data);\n  }\n\n  public abstract isSelected(item: SelectOptionType): boolean;\n\n  public abstract select(option: SelectOptionType, callback?: () => void): S;\n\n  public abstract getPlaceholder(placeholder: string): string;\n\n  protected abstract verifyData(data: SelectOptionType[]): void;\n\n  protected compareOptions(option1: SelectOptionType, option2: SelectOptionType): boolean {\n    if (!this.keyExtractor) {\n      return option1 === option2;\n    } else {\n      return (option1 && option2) && this.keyExtractor(option1) === this.keyExtractor(option2);\n    }\n  }\n\n  protected hasOptionSubItems(option: SelectOptionType): boolean {\n    return option.items && option.items.length !== 0;\n  }\n\n  protected processData(data: SelectOptionType[]): string[] {\n    return data\n      .reduce((acc: string[], current: SelectOptionType) => {\n        if (this.hasOptionSubItems(current)) {\n          const subTexts: string[] = current.items.map((item: SelectOptionType) => {\n            return item.text;\n          });\n          return acc.concat(subTexts);\n        } else {\n          acc.push(current.text);\n          return acc;\n        }\n      }, []);\n  }\n}\n\nexport class MultiSelectStrategy extends SelectionStrategy<SelectOptionType[]> {\n\n  constructor(options: SelectOptionType | SelectOptionType[] = [],\n              data: SelectOptionType[],\n              keyExtractor?: KeyExtractorType) {\n\n    if (Array.isArray(options)) {\n      super(options, data, keyExtractor);\n    }\n  }\n\n  public select(option: SelectOptionType, callback?: () => void): SelectOptionType[] {\n    const subOptionsExist: boolean = this.hasOptionSubItems(option);\n\n    if (subOptionsExist) {\n      this.selectOptionWithSubOptions(option);\n    } else {\n      this.selectDefaultOption(option);\n    }\n\n    return this.selectedOption;\n  }\n\n  private selectDefaultOption(option: SelectOptionType): void {\n    const optionAlreadyExist: boolean = this.selectedOption\n      .some((item: SelectOptionType) => {\n        return this.compareOptions(item, option);\n      });\n    if (optionAlreadyExist) {\n      this.removeOption(option);\n    } else {\n      this.selectedOption.push(option);\n    }\n  }\n\n  private selectOptionWithSubOptions(option: SelectOptionType): void {\n    const subOptionsAlreadyExist: boolean = this.selectedOption\n      .some((item: SelectOptionType) => {\n        return option.items\n          .some((subItem: SelectOptionType) => {\n            return subItem === item;\n          });\n      });\n\n    if (subOptionsAlreadyExist) {\n      option.items.forEach((subItem: SelectOptionType) => this.removeOption(subItem));\n    } else {\n      const enabledItems: SelectOptionType[] = option.items\n        .filter((item: SelectOptionType) => {\n          return !item.disabled;\n        });\n      this.selectedOption = this.selectedOption.concat(enabledItems);\n    }\n  }\n\n  public getPlaceholder(placeholder: string): string {\n    if (this.isSelectedOptionExist()) {\n      return this.selectedOption\n        .map((item: SelectOptionType) => {\n          return item && item.text;\n        })\n        .join(', ');\n    } else {\n      return placeholder;\n    }\n  }\n\n  public isSelected(item: SelectOptionType): boolean {\n    return this.selectedOption\n      .some((option: SelectOptionType) => {\n        return this.compareOptions(item, option);\n      });\n  }\n\n  private isSelectedOptionExist(): boolean {\n    return this.selectedOption && this.selectedOption.length !== 0;\n  }\n\n  private removeOption(option: SelectOptionType): void {\n    const index: number = this.selectedOption\n      .findIndex((item: SelectOptionType) => {\n        return this.compareOptions(item, option);\n      });\n    if (index !== -1) {\n      this.selectedOption.splice(index, 1);\n    }\n  }\n\n  protected verifyData(data: SelectOptionType[]): void {\n    const selectedItemsAreCorrect: boolean = this.processData(data).some((item: string) => {\n      return this.selectedOption.some((selected: SelectOptionType) => {\n        return selected.text === item;\n      });\n    });\n\n    if (!selectedItemsAreCorrect && this.selectedOption.length !== 0) {\n      const message: string = `Some Option doesn't exist in the data array or you ` +\n        'set Main group option selected.';\n      throw Error(message);\n    }\n  }\n}\n\nexport class SingleSelectStrategy extends SelectionStrategy<SelectOptionType> {\n\n  constructor(options: SelectOptionType | SelectOptionType[],\n              data: SelectOptionType[],\n              keyExtractor?: KeyExtractorType) {\n\n    if (!Array.isArray(options)) {\n      super(options, data, keyExtractor);\n    }\n  }\n\n  public select(option: SelectOptionType, callback?: () => void): SelectOptionType {\n    this.selectedOption = option;\n\n    if (callback) {\n      callback();\n    }\n\n    return this.selectedOption;\n  }\n\n  public getPlaceholder(placeholder: string): string {\n    if (this.selectedOption) {\n      return this.selectedOption.text;\n    } else {\n      return placeholder;\n    }\n  }\n\n  public isSelected(item: SelectOptionType): boolean {\n    if (this.hasOptionSubItems(item)) {\n      return item.items.some((option: SelectOptionType) => {\n        return this.isSelected(option);\n      });\n    } else {\n      return this.compareOptions(item, this.selectedOption);\n    }\n  }\n\n  protected verifyData(data: SelectOptionType[]): void {\n    const selectedItemsAreCorrect: boolean = this.processData(data).some((item: string) => {\n      if (this.selectedOption) {\n        return item === this.selectedOption.text;\n      }\n    });\n\n    if (!selectedItemsAreCorrect && this.selectedOption) {\n      const message: string = `Option \\\"${this.selectedOption.text}\\\" doesn't exist in the data array!`;\n      throw Error(message);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  ImageStyle,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  SelectOptionsList,\n  SelectOptionsListElement,\n} from './selectOptionsList.component';\nimport {\n  SelectOption,\n  SelectOptionType,\n} from './selectOption.component';\nimport {\n  MultiSelectStrategy,\n  SelectionStrategy,\n  SingleSelectStrategy,\n} from './selection.strategy';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { IconElement } from '../icon/icon.component';\nimport { Popover } from '../popover/popover.component';\nimport {\n  allWithPrefix,\n  isValidString,\n  WebEventResponder,\n  WebEventResponderInstance,\n} from '../support/services';\nimport {\n  ChevronDown,\n  ChevronDownElement,\n  ChevronDownProps,\n} from '../support/components/chevronDown.component';\n\ntype ControlElement = React.ReactElement<TouchableOpacityProps>;\ntype IconProp = (style: ImageStyle, visible: boolean) => IconElement;\ntype SelectChildren = [SelectOptionsListElement, TextElement, ControlElement];\n\nexport type SelectOption = SelectOptionType[] | SelectOptionType;\nexport type KeyExtractorType = (item: SelectOptionType) => string;\n\nexport interface SelectProps extends StyledComponentProps, TouchableOpacityProps {\n  data: SelectOptionType[];\n  multiSelect?: boolean;\n  selectedOption?: SelectOption;\n  textStyle?: StyleProp<TextStyle>;\n  placeholder?: string;\n  placeholderStyle?: StyleProp<TextStyle>;\n  label?: string;\n  labelStyle?: StyleProp<TextStyle>;\n  controlStyle?: StyleProp<ViewStyle>;\n  icon?: IconProp;\n  onSelect: (option: SelectOption, event?: GestureResponderEvent) => void;\n  status?: string;\n  size?: string;\n  keyExtractor?: KeyExtractorType;\n}\n\nexport type SelectElement = React.ReactElement<SelectProps>;\n\ninterface State {\n  visible: boolean;\n}\n\n/**\n * Styled `Select` component. By default, the MultiSelect compares the items by reference.\n * To specify a field from the data object which will be used for the comparison,\n * implement the `keyExtractor` property.\n *\n * @extends React.Component\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `small`, `medium` or `large`.\n * Default is `medium`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false.\n *\n * @property {boolean} multiSelect - Determines `multi-select` behavior of the Select component.\n *\n * @property {SelectOption} selectedOption - Determines selected option of the Select.\n * Can be `SelectOptionType` or `SelectOptionType[]` It depends on `multiSelect` property.\n *\n * @property {SelectOptionType[]} data - Determines items of the Select component.\n *\n * @property {(option: SelectOption, event?: GestureResponderEvent) => void} onSelect - Fires on option selection.\n * Returns selected option/options.\n *\n * @property {StyleProp<TextStyle>} label - Determines the `label` of the component.\n *\n * @property {StyleProp<TextStyle>} placeholder - Determines the `placeholder` of the component.\n * By default is `Select Option`.\n *\n * @property {StyleProp<TextStyle>} labelStyle - Determines the style of the `label`.\n *\n * @property {StyleProp<TextStyle>} placeholderStyle - Determines the style of the `placeholder`.\n *\n * @property {StyleProp<TextStyle>} textStyle - Determines the style of the selected option/options text.\n *\n * @property {StyleProp<ViewStyle>} controlStyle - Determines the style of `control`.\n *\n * @property {(style: StyleType) => ReactElement} icon - Determines icon of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {KeyExtractorType} keyExtractor - Used to extract a unique key for a given item;\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example SelectSimpleUsage\n *\n * @overview-example SelectStates\n *\n * @overview-example SelectStatus\n *\n * @overview-example SelectSize\n *\n * @overview-example SelectMultiSelect\n *\n * @overview-example SelectWithGroups\n *\n * @overview-example SelectDisabledOptions\n *\n * @example SelectInitialValue\n *\n * @example SelectMultiInitialValue\n *\n * @example SelectCustomIcon\n *\n * @example SelectInlineStyling\n */\nclass SelectComponent extends React.Component<SelectProps, State> {\n\n  static styledComponentName: string = 'Select';\n  static defaultProps: Partial<SelectProps> = {\n    placeholder: 'Select Option',\n    multiSelect: false,\n  };\n\n  public state: State = {\n    visible: false,\n  };\n\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  private selectionStrategy: SelectionStrategy<SelectOption>;\n  private iconAnimation: Animated.Value = new Animated.Value(0);\n\n  constructor(props: SelectProps) {\n    super(props);\n    const { multiSelect, selectedOption, keyExtractor, data } = this.props;\n\n    this.selectionStrategy = multiSelect ?\n      new MultiSelectStrategy(selectedOption, data, keyExtractor) :\n      new SingleSelectStrategy(selectedOption, data, keyExtractor);\n  }\n\n  public onMouseEnter = (): void => {\n    if (!this.state.visible) {\n      this.props.dispatch([Interaction.HOVER]);\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    if (!this.state.visible) {\n      this.props.dispatch([]);\n    }\n  };\n\n  public onFocus = (): void => {\n    this.props.dispatch([Interaction.FOCUSED]);\n  };\n\n  public onBlur = (): void => {\n    this.props.dispatch([]);\n  };\n\n  private onPress = (event: GestureResponderEvent): void => {\n    this.setVisibility();\n\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private onSelect = (option: SelectOptionType, event: GestureResponderEvent): void => {\n    if (this.props.onSelect) {\n      const selection: SelectOption = this.selectionStrategy.select(option, this.setVisibility);\n      this.props.onSelect(selection, event);\n      // FIXME: looks like a bug in selection strategy\n      this.forceUpdate();\n    }\n  };\n\n  private setVisibility = (): void => {\n    const visible: boolean = !this.state.visible;\n    this.setState({ visible }, this.handleVisibleChange);\n  };\n\n  private handleVisibleChange = (): void => {\n    this.dispatchActive();\n    this.startIconAnimation();\n  };\n\n  private dispatchActive = (): void => {\n    const interactions: Interaction[] = this.state.visible ? [Interaction.ACTIVE] : [];\n    this.props.dispatch(interactions);\n  };\n\n  private startIconAnimation = (): void => {\n    const deg: number = this.state.visible ? -180 : 0;\n    this.animateIcon(deg);\n  };\n\n  private animateIcon = (toValue: number): void => {\n    Animated.timing(this.iconAnimation, {\n      toValue: toValue,\n      duration: 200,\n    }).start();\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      backgroundColor,\n      borderColor,\n      borderWidth,\n      minHeight,\n      paddingHorizontal,\n      paddingVertical,\n      borderRadius,\n    } = source;\n\n    const iconStyles: StyleType = allWithPrefix(source, 'icon');\n    const textStyles: StyleType = allWithPrefix(source, 'text');\n    const placeholderStyles: StyleType = allWithPrefix(source, 'placeholder');\n    const popoverStyles: StyleType = allWithPrefix(source, 'popover');\n    const labelStyle: StyleType = allWithPrefix(source, 'label');\n\n    return {\n      control: {\n        backgroundColor: backgroundColor,\n        borderColor: borderColor,\n        borderWidth: borderWidth,\n        minHeight: minHeight,\n        paddingHorizontal: paddingHorizontal,\n        paddingVertical: paddingVertical,\n        borderRadius: borderRadius,\n      },\n      icon: {\n        height: iconStyles.iconHeight,\n        width: iconStyles.iconWidth,\n        marginHorizontal: iconStyles.iconMarginHorizontal,\n        tintColor: iconStyles.iconTintColor,\n      },\n      text: {\n        marginHorizontal: textStyles.textMarginHorizontal,\n        color: textStyles.textColor,\n        fontSize: textStyles.textFontSize,\n        fontWeight: textStyles.textFontWeight,\n        lineHeight: textStyles.textLineHeight,\n        fontFamily: textStyles.textFontFamily,\n      },\n      placeholder: {\n        marginHorizontal: placeholderStyles.placeholderMarginHorizontal,\n        color: placeholderStyles.placeholderColor,\n        fontSize: placeholderStyles.placeholderFontSize,\n        fontWeight: placeholderStyles.placeholderFontWeight,\n        lineHeight: placeholderStyles.placeholderLineHeight,\n        fontFamily: placeholderStyles.placeholderFontFamily,\n      },\n      popover: {\n        maxHeight: popoverStyles.popoverMaxHeight,\n        borderRadius: popoverStyles.popoverBorderRadius,\n        borderColor: popoverStyles.popoverBorderColor,\n        borderWidth: popoverStyles.popoverBorderWidth,\n      },\n      label: {\n        marginBottom: labelStyle.labelMarginBottom,\n        color: labelStyle.labelColor,\n        fontSize: labelStyle.labelFontSize,\n        fontWeight: labelStyle.labelFontWeight,\n        lineHeight: labelStyle.labelLineHeight,\n        fontFamily: labelStyle.labelFontFamily,\n      },\n    };\n  };\n\n  private renderLabelElement = (style: TextStyle): TextElement => {\n    return (\n      <Text style={[style, this.props.labelStyle]}>\n        {this.props.label}\n      </Text>\n    );\n  };\n\n  private renderDefaultIconElement = (style: ImageStyle): ChevronDownElement => {\n    const rotateInterpolate = this.iconAnimation.interpolate({\n      inputRange: [-180, 0],\n      outputRange: ['-180deg', '0deg'],\n    });\n\n    const animatedStyle: StyleType = { transform: [{ rotate: rotateInterpolate }] };\n    const { tintColor, ...svgStyle } = style;\n\n    return (\n      <Animated.View style={animatedStyle}>\n        <ChevronDown fill={tintColor} {...svgStyle as ChevronDownProps}/>\n      </Animated.View>\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement = this.props.icon(style, this.state.visible);\n\n    return React.cloneElement(iconElement, {\n      style: [style, iconElement.props.style],\n    });\n  };\n\n  private renderTextElement = (valueStyle: TextStyle, placeholderStyle: TextStyle): TextElement => {\n    const { placeholder, textStyle } = this.props;\n    const value: string = this.selectionStrategy.getPlaceholder(placeholder);\n    const style: TextStyle = placeholder === value ? placeholderStyle : valueStyle;\n\n    return (\n      <Text\n        style={[style, styles.text, textStyle]}\n        numberOfLines={1}\n        ellipsizeMode='tail'>\n        {value}\n      </Text>\n    );\n  };\n\n  private renderOptionsListElement = (style: StyleType): SelectOptionsListElement => {\n    const { appearance, selectedOption, ...restProps } = this.props;\n\n    return (\n      <SelectOptionsList\n        showsVerticalScrollIndicator={false}\n        {...restProps}\n        key={0}\n        style={styles.optionsList}\n        bounces={false}\n        strategy={this.selectionStrategy}\n        onSelect={this.onSelect}\n      />\n    );\n  };\n\n  private renderControlChildren = (style: StyleType): React.ReactNodeArray => {\n    const iconElement: IconElement = this.props.icon && this.renderIconElement(style.icon);\n\n    return [\n      iconElement || this.renderDefaultIconElement(style.icon),\n      this.renderTextElement(style.text, style.placeholder),\n    ];\n  };\n\n  private renderControlElement = (style: StyleType): ControlElement => {\n    const { themedStyle, controlStyle, ...restProps } = this.props;\n    const [iconElement, textElement] = this.renderControlChildren(style);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        style={[styles.control, style.control, webStyles.control, controlStyle]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        {textElement}\n        {iconElement}\n      </TouchableOpacity>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): SelectChildren => {\n    return [\n      this.renderOptionsListElement(style.optionsList),\n      isValidString(this.props.label) && this.renderLabelElement(style.label),\n      this.renderControlElement(style),\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style } = this.props;\n    const { popover, ...componentStyle }: StyleType = this.getComponentStyle(themedStyle);\n\n    const [optionsListElement, labelElement, controlElement] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <View style={style}>\n        {labelElement}\n        <Popover\n          style={[popover, styles.popover]}\n          fullWidth={true}\n          visible={this.state.visible}\n          content={optionsListElement}\n          onBackdropPress={this.setVisibility}>\n          {controlElement}\n        </Popover>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  control: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  text: {\n    flex: 1,\n  },\n  optionsList: {\n    flexGrow: 0,\n  },\n  popover: {\n    overflow: 'hidden',\n  },\n});\n\nconst webStyles = Platform.OS === 'web' && StyleSheet.create({\n  control: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n\nexport const Select = styled<SelectProps>(SelectComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport {\n  IconPack,\n  IconProvider,\n} from './type';\n\nfunction throwPackNotFoundError(name: string) {\n  const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n  const message: string = [\n    `\\nIcon: Icon Pack '${name}' is not registered`,\n    'Using UI Kitten components is only possible with configuring ApplicationProvider.',\n    `📖 Documentation: ${docRoot}/guides/setting-up-icons`,\n  ].join('\\n');\n\n  throw Error(message);\n}\n\nfunction throwIconNotFoundError(name: string, pack: string) {\n  const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n  const message: string = [\n    `\\nIcon: '${name}' icon is not registered in pack '${pack}'.`,\n    'Check icon name or consider switching icon pack.',\n    `📖 Documentation: ${docRoot}/guides/setting-up-icons`,\n  ].join('\\n');\n\n  throw Error(message);\n}\n\nexport interface RegisteredIcon<T> {\n  name: string;\n  pack: string;\n  icon: IconProvider<T>;\n}\n\ntype IconProps = any;\n\n/**\n * This service allows to register multiple icon packs to use them later within\n * `<Icon/>` component.\n */\nclass RegistryService {\n\n  protected packs: Map<string, IconPack<IconProps>> = new Map();\n  protected defaultPack: string;\n\n  /**\n   * Registers multiple icon packs and sets the first one as default if there is no default packs\n   *\n   * @param {IconPack[]} packs - array of icon packs\n   */\n  public register<T>(...packs: IconPack<T>[]) {\n    packs.forEach((pack: IconPack<IconProps>) => {\n      this.registerIconPack(pack);\n    });\n  }\n\n  /**\n   * Sets pack as default\n   *\n   * @param {string} name\n   * @throws {Error} if pack is nor registered\n   */\n  public setDefaultIconPack(name: string) {\n    if (!this.packs.has(name)) {\n      throwPackNotFoundError(name);\n    }\n\n    this.defaultPack = name;\n  }\n\n  /**\n   * @param {string} name\n   * @returns {IconPack} pack by name\n   */\n  public getIconPack<T>(name: string): IconPack<T> {\n    return this.packs.get(name);\n  }\n\n  /**\n   * @param {string} name - icon name\n   * @param {string} pack - pack name\n   * @throws {Error} if requested icon pack is not registered\n   * @returns {RegisteredIcon} - registered icon of a requested/default pack\n   */\n  public getIcon<T>(name: string, pack?: string): RegisteredIcon<T> {\n    const iconsPack: IconPack<T> = pack ? this.getPackOrThrow(pack) : this.getDefaultPack();\n\n    return {\n      name,\n      pack: iconsPack.name,\n      icon: this.getIconFromPack(name, iconsPack),\n    };\n  }\n\n  /**\n   * Registers single icon pack\n   *\n   * @param {IconPack} pack - icon pack to register\n   */\n  protected registerIconPack<T>(pack: IconPack<T>) {\n    this.packs.set(pack.name, pack);\n  }\n\n  protected getPackOrThrow<T>(name: string): IconPack<T> {\n    const pack: IconPack<IconProps> = this.packs.get(name);\n\n    if (!pack) {\n      throwPackNotFoundError(name);\n    }\n\n    return pack;\n  }\n\n  protected getDefaultPack<T>(): IconPack<T> {\n    return this.getIconPack(this.defaultPack);\n  }\n\n  protected getIconFromPack<T>(name: string, pack: IconPack<T>, shouldThrow = true): IconProvider<T> {\n    if (shouldThrow && !pack.icons[name]) {\n      throwIconNotFoundError(name, pack.name);\n    }\n\n    return pack.icons[name];\n  }\n}\n\nexport const IconRegistryService = new RegistryService();\n","import React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  getIconAnimation,\n  IconAnimation,\n  IconAnimationRegistry,\n} from './iconAnimation';\nimport {\n  IconRegistryService,\n  RegisteredIcon,\n} from './service/iconRegistry.service';\nimport { AnimationConfig } from '../animation';\n\n// This is basically needed to avoid generics in required props\n// In general, could be SVGProps if using @ui-kitten/eva-icons or ImageProps if using Image.\ntype WrappedElementProps = any;\n\nexport type IconProps<T = WrappedElementProps> = T & {\n  name: string;\n  pack?: string;\n  animation?: keyof IconAnimationRegistry;\n  animationConfig?: AnimationConfig;\n};\n\nexport type IconElement<T = WrappedElementProps> = React.ReactElement<IconProps<T>>;\n\n/**\n * `Icon` component with animation support. Allows to render any ReactElement registered for a specific name.\n * Starting from UI Kitten 4.2, there is `@ui-kitten/eva-icons` module\n * that renders any icon from eva-icons package in `svg` format.\n * It allows easily use icons in any component that has `icon` prop\n *\n * @extends React.Component\n *\n * @method {(callback?: Animated.EndCallback) => void} startAnimation - Toggle animation to start.\n *\n * @method {() => void} stopAnimation - Toggle animation to stop.\n *\n * @property {string} name - Name of registered icon.\n *\n * @property {string} pack - Name of icon pack that is able to provide an icon for specified name.\n *\n * @property {string} animation - Animation name. Available `zoom`, `pulse` and `shake`. Default is `zoom`.\n *\n * @property {AnimationConfig} animationConfig - Determines animation config. Extends `Animated.AnimationConfig`.\n *\n * @overview-example IconSimpleUsage\n *\n * @overview-example IconWithinButton\n *\n * @overview-example IconWithinInput\n *\n * @overview-example IconExternalSource\n *\n * @overview-example IconAnimation\n *\n * @example IconAnimationInfinite\n *\n * @example IconInlineStyling\n */\nexport class Icon<T> extends React.Component<IconProps<T>> {\n\n  static defaultProps: Partial<IconProps> = {\n    animation: 'zoom',\n  };\n\n  private readonly animation: IconAnimation;\n\n  constructor(props: IconProps<T>) {\n    super(props);\n    this.animation = getIconAnimation(props.animation, props.animationConfig);\n  }\n\n  public componentWillUnmount(): void {\n    this.animation.release();\n  }\n\n  public startAnimation = (callback?: Animated.EndCallback): void => {\n    this.animation.start(callback);\n  };\n\n  public stopAnimation = (): void => {\n    this.animation.stop();\n  };\n\n  private getComponentStyle = (): StyleProp<ViewStyle> => {\n    return this.animation.toProps();\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { name, pack, ...restProps } = this.props;\n    const registeredIcon: RegisteredIcon<T> = IconRegistryService.getIcon(name, pack);\n\n    return (\n      <Animated.View {...this.getComponentStyle()}>\n        {registeredIcon.icon.toReactElement(restProps as T)}\n      </Animated.View>\n    );\n  }\n}\n","import { ViewStyle } from 'react-native';\nimport {\n  Animation,\n  PulseAnimation,\n  ShakeAnimation,\n  ZoomAnimation,\n  AnimationConfig,\n} from '../animation';\n\nexport type IconAnimation = Animation<any, ViewStyle>;\n\nexport interface IconAnimationRegistry {\n  zoom: IconAnimation;\n  pulse: IconAnimation;\n  shake: IconAnimation;\n}\n\nexport function getIconAnimation(animation?: keyof IconAnimationRegistry, config?: AnimationConfig): IconAnimation {\n  switch (animation) {\n    case 'zoom':\n      return new ZoomAnimation(config);\n    case 'pulse':\n      return new PulseAnimation(config);\n    case 'shake':\n      return new ShakeAnimation(config);\n  }\n}\n","import React from 'react';\nimport { IconRegistryService } from './service/iconRegistry.service';\nimport { IconPack } from './service/type';\n\ntype IconsProp = IconPack<any> | IconPack<any>[];\n\nexport interface IconRegistryProps {\n  icons: IconsProp;\n  defaultIcons?: string;\n}\n\nexport type IconRegistryElement = React.ReactElement<IconRegistryProps>;\n\n/**\n * Icon Registry component. Registers one or more icon packs for later usage in `<Icon/>` component.\n * Renders nothing, but should be added as a child of an Application Root.\n *\n * @extends React.Component\n *\n * @property {IconPack<any> | IconPack<any>[]} icons - Icon packs to register.\n * @property {string} defaultIcons - Name of an icon pack that is used by default.\n *\n * @overview-example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { mapping, light as lightTheme } from '@eva-design/eva';\n * import { ApplicationProvider, IconRegistry, Layout, Text } from '@ui-kitten/components';\n * import { EvaIconsPack } from '@ui-kitten/eva-icons'; // <-- Make sure it is installed. npm i @ui-kitten/eva-icons\n *\n * export default class App extends React.Component {\n *   render() {\n *     return (\n *       <React.Fragment>\n *         <IconRegistry icons={EvaIconsPack}/>\n *         <ApplicationProvider mapping={mapping} theme={lightTheme}>\n *           <Layout style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n *             <Text>Welcome to UI Kitten</Text>\n *           </Layout>\n *         </ApplicationProvider>\n *       <React.Fragment>\n *     );\n *   }\n * }\n * ```\n */\nexport class IconRegistry extends React.Component<IconRegistryProps> {\n\n  static defaultProps: Partial<IconRegistryProps> = {\n    icons: [],\n  };\n\n  private findDefaultIconPack = (packs: IconPack<any>[], name: string): IconPack<any> => {\n    const requestedPackIndex: number = packs.findIndex((pack: IconPack<any>): boolean => {\n      return pack.name === name;\n    });\n\n    return packs[Math.max(0, requestedPackIndex)];\n  };\n\n  private registerIcons = (source: IconsProp, defaultPack: string): void => {\n    const packs: IconPack<any>[] = Array.isArray(source) ? source : [source];\n    const defaultIconPack: IconPack<any> = this.findDefaultIconPack(packs, defaultPack);\n\n    IconRegistryService.register(...packs);\n    IconRegistryService.setDefaultIconPack(defaultIconPack.name);\n  };\n\n  public render(): React.ReactNode {\n    const { icons, defaultIcons } = this.props;\n    this.registerIcons(icons, defaultIcons);\n\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\n\nexport interface LayoutProps extends StyledComponentProps, ViewProps {\n  level?: string;\n  children?: React.ReactNode;\n}\n\nexport type LayoutElement = React.ReactElement<LayoutProps>;\n\n/**\n * `Layout` container component. Behaves like React Native `View`.\n * The key feature of using `Layout` instead of `View` is that\n * it automatically picks background color fitting to current theme.\n *\n * @extends React.Component\n *\n * @property {string} level - Determines background color level of component.\n * Can be `'1'`, `'2'`, `'3'` or `'4'`.\n * Default is `'1'`.\n *\n * @property {ReactElement | ReactElement[]} children - Determines the children of the component.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example LayoutSimpleUsage\n *\n * @overview-example LayoutLevel\n *\n * @example LayoutInlineStyling\n */\nexport class LayoutComponent extends React.Component<LayoutProps> {\n\n  static styledComponentName: string = 'Layout';\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, themedStyle, ...derivedProps } = this.props;\n\n    return (\n      <View\n        {...derivedProps}\n        style={[themedStyle, style]}\n      />\n    );\n  }\n}\n\nexport const Layout = styled<LayoutProps>(LayoutComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleSheet,\n  ViewStyle,\n  StyleProp,\n} from 'react-native';\nimport {\n  ModalService,\n  StyleType,\n  ModalPresentingConfig,\n} from '@kitten/theme';\nimport {\n  MeasureElement,\n  MeasuringElement,\n} from '../measure/measure.component';\nimport {\n  Frame,\n  Size,\n} from '../measure/type';\n\nconst window: Frame = Frame.window();\nexport const baseModalTestId: string = '@modal/base';\n\ntype ChildElement = React.ReactElement;\ntype ChildrenProp = ChildElement | ChildElement[];\n\nexport interface ModalProps extends ViewProps, ModalPresentingConfig {\n  visible?: boolean;\n  children: ChildrenProp;\n}\n\nexport type ModalElement = React.ReactElement<ModalProps>;\n\n/**\n * `Modal` component is a wrapper than presents content above an enclosing view.\n *\n * @extends React.Component\n *\n * @property {boolean} visible - Determines whether component is visible. By default is false.\n *\n * @property {ReactElement | ReactElement[]} children - Determines component's children.\n *\n * @property {boolean} allowBackdrop - Determines whether user can tap on back-drop.\n * Default is `false`.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Determines the style of backdrop.\n *\n * @property {() => void} onBackdropPress - Determines component's behavior when the user is\n * tapping on back-drop.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example ModalSimpleUsage\n *\n * @overview-example ModalWithBackdrop\n */\nexport class Modal extends React.Component<ModalProps> {\n\n  static defaultProps: Partial<ModalProps> = {\n    onBackdropPress: () => null,\n  };\n\n  private contentSize: Size = Size.zero();\n  private id: string = '';\n\n  public componentDidUpdate(prevProps: ModalProps): void {\n    if (prevProps.visible !== this.props.visible) {\n      this.handleVisibility(this.props);\n    } else if (prevProps.visible && this.props.visible) {\n      const element: React.ReactElement = this.renderModal();\n      ModalService.update(this.id, element.props.children);\n    }\n  }\n\n  private handleVisibility = (props: ModalProps): void => {\n    const { allowBackdrop, onBackdropPress } = this.props;\n\n    if (props.visible) {\n      const element: React.ReactElement = this.renderModal();\n      this.id = ModalService.show(element, { allowBackdrop, onBackdropPress });\n    } else {\n      this.id = ModalService.hide(this.id);\n    }\n  };\n\n  private getAbsoluteRelatedStyle = (): StyleType => {\n    const windowFrame: Frame = Frame.window();\n\n    return {\n      top: (windowFrame.size.height - this.contentSize.height) / 2,\n      left: (windowFrame.size.width - this.contentSize.width) / 2,\n    };\n  };\n\n  private onMeasure = (frame: Frame): void => {\n    this.contentSize = frame.size;\n  };\n\n  private renderBaseModal = (): React.ReactElement<ViewProps> => {\n    const { style, children, ...restProps } = this.props;\n    const absoluteRelatedStyle: StyleType = this.getAbsoluteRelatedStyle();\n\n    return (\n      <View\n        {...restProps}\n        testID={baseModalTestId}\n        style={[styles.container, absoluteRelatedStyle, style]}>\n        {children}\n      </View>\n    );\n  };\n\n  private renderModal = (): React.ReactElement => {\n    const { backdropStyle } = this.props;\n    const modal: React.ReactElement<ViewProps> = this.renderBaseModal();\n\n    return backdropStyle ? (\n      <React.Fragment>\n        <View\n          pointerEvents='box-none'\n          style={[styles.backdrop, backdropStyle]}/>\n        {modal}\n      </React.Fragment>\n    ) : modal;\n  };\n\n  private renderMeasureNode = (): MeasuringElement => {\n    const modal: React.ReactElement = this.renderBaseModal();\n    const measureStyledModal: React.ReactElement = React.cloneElement(modal, {\n      style: [modal.props.style, styles.hiddenModal],\n      pointerEvents: 'none',\n    });\n\n    return (\n      <MeasureElement onMeasure={this.onMeasure}>\n        {measureStyledModal}\n      </MeasureElement>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return this.renderMeasureNode();\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n  },\n  backdrop: {\n    position: 'absolute',\n    width: window.size.width,\n    height: window.size.height,\n  },\n  hiddenModal: {\n    opacity: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Menu,\n  MenuElement,\n  MenuProps,\n} from '../menu/menu.component';\nimport { MenuItemType } from '../menu/menuItem.component';\nimport {\n  Popover,\n  PopoverElement,\n  PopoverProps,\n} from '../popover/popover.component';\nimport { Override } from '../support/typings';\n\ntype PopoverContentProps = Omit<PopoverProps, 'content'>;\nexport type OverflowMenuItemType = Omit<MenuItemType, 'subItems'>;\n\ninterface ComponentProps extends PopoverContentProps {\n  children: React.ReactElement;\n}\n\ntype MenuBasedProps = Override<MenuProps, { data: OverflowMenuItemType[] }>;\n\nexport type OverflowMenuProps = & StyledComponentProps & ComponentProps & MenuBasedProps;\nexport type OverflowMenuElement = React.ReactElement<OverflowMenuProps>;\n\n/**\n * OverflowMenu renders vertical list of menu items in a modal.\n *\n * @extends React.Component\n *\n * @property {boolean} visible - Determines whether popover is visible or not.\n *\n * @property {OverflowMenuItemType[]} data - Determines menu items.\n *\n * @property {ReactElement} children - Determines the element \"above\" which popover will be shown.\n *\n * @property {number} selectedIndex - Determines the index of currently selected item.\n *\n * @property {(index: number, event: GestureResponderEvent) => void} onSelect - Fires when selected item is changed.\n *\n * @property {string | PopoverPlacement} placement - Determines the actualPlacement of the popover.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Default is `bottom`.\n * Tip: use one of predefined placements instead of strings, e.g `PopoverPlacements.TOP`\n *\n * @property {boolean} fullWidth - Determines whether content element should have same width as child element.\n *\n * @property {boolean} allowBackdrop - Determines whether user can tap on back-drop.\n * Default is `false`.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Determines the style of backdrop.\n *\n * @property {() => void} onBackdropPress - Determines component's behavior when the user is\n * tapping on back-drop.\n *\n * @overview-example OverflowMenuSimpleUsage\n *\n * @overview-example OverflowMenuPlacement\n *\n * @overview-example OverflowMenuWithIcons\n *\n * @overview-example OverflowMenuStyledBackdrop\n *\n * @overview-example OverflowMenuWithDisabledItems\n *\n * @example OverflowMenuWithoutDivider\n *\n * @example OverflowMenuExternalSourceIcons\n */\nclass OverflowMenuComponent extends React.Component<OverflowMenuProps> {\n\n  static styledComponentName: string = 'OverflowMenu';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { indicatorBackgroundColor, ...containerParameters } = source;\n\n    return {\n      container: containerParameters,\n      indicator: {\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private renderPopoverContentElement = (): MenuElement => {\n    const { themedStyle, indicatorStyle, children, data, style, ...restProps } = this.props;\n\n    return (\n      <Menu\n        {...restProps}\n        style={styles.menu}\n        data={data}\n        initialNumToRender={data.length}\n        showsVerticalScrollIndicator={false}\n        bounces={false}\n      />\n    );\n  };\n\n  public render(): PopoverElement {\n    const { style, themedStyle, indicatorStyle, children, appearance, ...restProps } = this.props;\n    const { container, indicator } = this.getComponentStyle(themedStyle);\n\n    const contentElement: MenuElement = this.renderPopoverContentElement();\n\n    return (\n      <Popover\n        {...restProps}\n        style={[container, style]}\n        content={contentElement}>\n        {children}\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  menu: {\n    flexGrow: 0,\n  },\n});\n\nexport const OverflowMenu = styled<OverflowMenuProps>(OverflowMenuComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  Insets,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport {\n  isValidString,\n  WebEventResponder,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport interface RadioProps extends StyledComponentProps, TouchableOpacityProps {\n  textStyle?: StyleProp<TextStyle>;\n  text?: string;\n  checked?: boolean;\n  status?: string;\n  onChange?: (selected: boolean) => void;\n}\n\nexport type RadioElement = React.ReactElement<RadioProps>;\n\n/**\n * Styled `Radio` component.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Determines whether component is checked.\n * Default is `false`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {string} text - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(selected: boolean) => void} onChange - Triggered on onChange value.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example RadioSimpleUsage\n *\n * @overview-example RadioStates\n *\n * @overview-example RadioStatus\n *\n * @example RadioInlineStyling\n */\nexport class RadioComponent extends React.Component<RadioProps> {\n\n  static styledComponentName: string = 'Radio';\n\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.props.dispatch([Interaction.HOVER]);\n  };\n\n  public onMouseLeave = (): void => {\n    this.props.dispatch([]);\n  };\n\n  public onFocus = (): void => {\n    this.props.dispatch([Interaction.FOCUSED]);\n  };\n\n  public onBlur = (): void => {\n    this.props.dispatch([]);\n  };\n\n  private onPress = (): void => {\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconBorderRadius,\n      iconTintColor,\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: {},\n      highlightContainer: {},\n      selectContainer: containerParameters,\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        borderRadius: iconBorderRadius,\n        backgroundColor: iconTintColor,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n    };\n  };\n\n  private createHitSlopInsets = (style: StyleProp<ViewStyle>): Insets => {\n    const flatStyle: ViewStyle = StyleSheet.flatten(style);\n\n    // @ts-ignore `width` is restricted to be a number\n    const value: number = 40 - flatStyle.width;\n\n    return {\n      left: value,\n      top: value,\n      right: value,\n      bottom: value,\n    };\n  };\n\n  private renderTextElement = (style: StyleType): TextElement => {\n    const { text, textStyle } = this.props;\n\n    return (\n      <Text\n        key={0}\n        style={[style, styles.text, textStyle]}>\n        {text}\n      </Text>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { text } = this.props;\n\n    return [\n      isValidString(text) && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { style, themedStyle, disabled, ...derivedProps } = this.props;\n\n    const {\n      container,\n      highlightContainer,\n      selectContainer,\n      icon,\n      highlight,\n      ...componentStyles\n    } = this.getComponentStyle(themedStyle);\n\n    const selectContainerStyle: StyleProp<ViewStyle> = [selectContainer, styles.selectContainer];\n    const hitSlopInsets: Insets = this.createHitSlopInsets(selectContainerStyle);\n\n    const [textElement] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...derivedProps}\n        {...this.webEventResponder.eventHandlers}\n        style={[container, styles.container, webStyles.container, style]}\n        disabled={disabled}\n        hitSlop={hitSlopInsets}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <View style={[highlightContainer, styles.highlightContainer]}>\n          <View style={[highlight, styles.highlight]}/>\n          <View style={selectContainerStyle}>\n            <View style={[icon, styles.icon]}/>\n          </View>\n        </View>\n        {textElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  highlightContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  icon: {},\n  highlight: {\n    position: 'absolute',\n  },\n  text: {},\n});\n\nconst webStyles = Platform.OS === 'web' && StyleSheet.create({\n  container: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n\n\nexport const Radio = styled<RadioProps>(RadioComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { RadioElement } from '../radio/radio.component';\n\ntype ChildrenProp = RadioElement | RadioElement[];\n\nexport interface RadioGroupProps extends StyledComponentProps, ViewProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  onChange?: (index: number) => void;\n}\n\nexport type RadioGroupElement = React.ReactElement<RadioGroupProps>;\n\n/**\n * Renders a group of `Radio` buttons.\n *\n * @extends React.Component\n *\n * @property {ReactElement<RadioProps> | ReactElement<RadioProps>[]} children - Determines radio buttons in group.\n *\n * @property {number} selectedIndex - Determines the index of selected button\n *\n * @property {(index: number) => void} onChange - Fires when selected radio is changed.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example RadioGroupSimpleUsage\n */\nclass RadioGroupComponent extends React.Component<RadioGroupProps> {\n\n  static styledComponentName: string = 'RadioGroup';\n\n  static defaultProps: Partial<RadioGroupProps> = {\n    selectedIndex: -1,\n  };\n\n  private onRadioChange = (index: number): void => {\n    if (this.props.onChange) {\n      this.props.onChange(index);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { itemMarginVertical, ...containerParameters } = source;\n\n    return {\n      container: containerParameters,\n      item: {\n        marginVertical: itemMarginVertical,\n      },\n    };\n  };\n\n  private renderRadioElements = (source: RadioElement | RadioElement[], style: StyleType): RadioElement[] => {\n    return React.Children.map(source, (element: RadioElement, index: number): RadioElement => {\n      return React.cloneElement(element, {\n        key: index,\n        style: [style, element.props.style],\n        checked: this.props.selectedIndex === index,\n        onChange: () => this.onRadioChange(index),\n      });\n    });\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, children, ...derivedProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const radioElements: RadioElement[] = this.renderRadioElements(children, componentStyle.item);\n\n    return (\n      <View\n        {...derivedProps}\n        style={[componentStyle.container, styles.container, style]}>\n        {radioElements}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n\nexport const RadioGroup = styled<RadioGroupProps>(RadioGroupComponent);\n","import {\n  Animated,\n  Easing,\n  EasingFunction,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from '../animation/animation';\n\nconst PI: number = 180;\nconst PI2: number = 360;\nconst OFFSET_MIN: number = PI / 12;\nconst OFFSET_MAX: number = PI / 6;\n\nconst BaseBezierEasing: EasingFunction = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n\nconst StartArcEasing: EasingFunction = (progress: number): number => {\n  return -PI + OFFSET_MIN + (PI - OFFSET_MAX) * BaseBezierEasing(progress);\n};\n\nconst EndArcEasing: EasingFunction = (progress: number): number => {\n  return PI2 - OFFSET_MIN + (-PI + OFFSET_MAX) * BaseBezierEasing(progress);\n};\n\nconst DEFAULT_CONFIG: SpinnerAnimationConfig = {\n  duration: 2400,\n  easing: Easing.linear,\n  cycles: -1,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface SpinnerAnimationStyle {\n  container: ViewStyle;\n  start: ViewStyle;\n  end: ViewStyle;\n}\n\nexport type SpinnerAnimationConfig = AnimationConfig & TimingAnimationConfig;\n\n/**\n * Animates a Spinner in a Material Design way.\n *\n * Thanks these guys for open sourcing the algorithm: https://github.com/n4kz/react-native-indicators\n */\nexport class SpinnerAnimation extends Animation<SpinnerAnimationConfig, SpinnerAnimationStyle> {\n\n  private animationValue: Animated.Value;\n  private animationFrames: number[];\n  private arcSize: number;\n\n  protected get animation(): Animated.CompositeAnimation {\n    return Animated.timing(this.animationValue, { toValue: 1.0, ...this.config });\n  }\n\n  constructor(arcSize: number, config?: SpinnerAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.arcSize = arcSize;\n    this.animationValue = new Animated.Value(0);\n    this.animationFrames = this.createFrameRange(this.config.duration);\n  }\n\n  public start(callback?: Animated.EndCallback) {\n    // reset animation value before the next animation cycle\n    this.animationValue.setValue(0);\n    super.start(callback);\n  }\n\n  public stop() {\n    super.stop();\n    this.animationValue.setValue(0);\n  }\n\n  /**\n   * @returns {SpinnerAnimationStyle} - an object that contains container, start and end arcs transform styles.\n   */\n  public toProps(): SpinnerAnimationStyle {\n    const containerInterpolation: Animated.AnimatedInterpolation = this.createContainerInterpolation();\n    const startArcInterpolation: Animated.AnimatedInterpolation = this.createArcInterpolation(StartArcEasing);\n    const endArcInterpolation: Animated.AnimatedInterpolation = this.createArcInterpolation(EndArcEasing);\n\n    return {\n      container: this.toStyleTransformProp(containerInterpolation),\n      start: this.toStyleTransformProp(startArcInterpolation),\n      end: this.toStyleTransformProp(endArcInterpolation, {\n        transform: [{ translateY: -this.arcSize / 2 }],\n      }),\n    };\n  }\n\n  /**\n   * @param {number} duration - animation duration.\n   * @returns an array of frames fitted into animation.\n   */\n  private createFrameRange = (duration: number): number[] => {\n    const numberOfFrames: number = 60 * duration / 1000;\n\n    return new Array(numberOfFrames).fill(0);\n  };\n\n  private createContainerInterpolation = (): Animated.AnimatedInterpolation => {\n    return this.animationValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [\n        this.toDegValue(OFFSET_MAX + OFFSET_MIN),\n        this.toDegValue((2 * PI2 + OFFSET_MAX + OFFSET_MIN)),\n      ],\n    });\n  };\n\n  private createArcInterpolation = (easing: EasingFunction): Animated.AnimatedInterpolation => {\n    return this.animationValue.interpolate({\n      inputRange: this.createArcInterpolationInputRange(),\n      outputRange: this.createArcInterpolationOutputRange(easing),\n    });\n  };\n\n  /**\n   * Maps the animation frames into initial animation values specific for each frame.\n   *\n   * @returns a container interpolation input range in a numeric format.\n   */\n  private createArcInterpolationInputRange = (): number[] => {\n    return this.animationFrames.map((item: number, frame: number): number => {\n      return frame / (this.animationFrames.length - 1);\n    });\n  };\n\n  /**\n   * Maps the animation frames into a final animation values specific for each frame.\n   *\n   * @param {(progress: number) => number} easing - Easing function specific for the arc.\n   * @returns an arc interpolation end values eased with an `easing` function in a StyleSheet degree format.\n   */\n  private createArcInterpolationOutputRange = (easing: EasingFunction): string[] => {\n    return this.animationFrames.map((item: number, frame: number): string => {\n      const progress: number = 2 * frame / (this.animationFrames.length - 1);\n      const boundedProgress: number = Math.min(2.0 - progress, progress);\n\n      return this.toDegValue(easing(boundedProgress));\n    });\n  };\n\n  /**\n   * @param {Animated.AnimatedInterpolation} rotate - animated rotation animationValue.\n   * @param {ViewStyle} source - initial StyleSheet object.\n   * @returns a final StyleSheet object with a `rotate` animation value.\n   */\n  private toStyleTransformProp = (rotate: Animated.AnimatedInterpolation, source: ViewStyle = {}): ViewStyle => {\n    const transform = [...(source.transform || []), { rotate }];\n\n    // @ts-ignore: AnimatedInterpolation does not fit RotateTransform type declaration\n    return { ...source, transform };\n  };\n\n  /**\n   * @param {number} source - degrees in a numeric format.\n   * @returns degrees in a StyleSheet format.\n   */\n  private toDegValue = (source: number): string => {\n    return `${source}deg`;\n  };\n}\n","import React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  SpinnerAnimation,\n  SpinnerAnimationStyle,\n} from './animation';\nimport { Size } from '../measure/type';\n\ninterface ArcElementStyle {\n  container: ViewStyle;\n  arc: ViewStyle;\n  overflow?: ViewStyle;\n}\n\nexport interface SpinnerProps extends StyledComponentProps, ViewProps {\n  animating?: boolean;\n  size?: string;\n  status?: string;\n}\n\nexport type SpinnerElement = React.ReactElement<SpinnerProps>;\n\n/**\n * Styled `Spinner` component. Designed to be used as `ActivityIndicator` component\n *\n * @extends React.Component\n *\n * @property {boolean} animating - Determines whether component is animating. Default is `true`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `primary`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Default is `medium`.\n *\n * @overview-example SpinnerSimpleUsage\n *\n * @overview-example SpinnerSizes\n *\n * @overview-example SpinnerStatuses\n *\n * @example SpinnerDataLoading\n */\nexport class SpinnerComponent extends React.PureComponent<SpinnerProps> {\n\n  static styledComponentName: string = 'Spinner';\n\n  static defaultProps: Partial<SpinnerProps> = {\n    animating: true,\n  };\n\n  private animation: SpinnerAnimation = new SpinnerAnimation(this.containerSize.height);\n\n  private get containerSize(): Size {\n    const { width, height } = StyleSheet.flatten([this.props.themedStyle, this.props.style]);\n    // @ts-ignore: width and height are restricted to be a number\n    return new Size(width, height);\n  }\n\n  public componentDidMount(): void {\n    if (this.props.animating) {\n      this.startAnimation();\n    }\n  }\n\n  public componentDidUpdate(prevProps: SpinnerProps): void {\n    const animatingChanged: boolean = this.props.animating !== prevProps.animating;\n\n    if (animatingChanged && this.props.animating) {\n      this.startAnimation();\n    }\n\n    if (animatingChanged && !this.props.animating) {\n      this.stopAnimation();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.animation.release();\n  }\n\n  private startAnimation = (): void => {\n    this.animation.start();\n  };\n\n  private stopAnimation = (): void => {\n    this.animation.stop();\n  };\n\n  private getComponentStyle = (source: SpinnerAnimationStyle): StyleType => {\n    const start: ArcElementStyle = {\n      container: source.container,\n      arc: source.start,\n    };\n\n    const end: ArcElementStyle = {\n      container: source.container,\n      arc: source.end,\n      overflow: { top: this.containerSize.height / 2 },\n    };\n\n    return { start, end };\n  };\n\n  private renderArcElement = (style: ArcElementStyle, size: Size): React.ReactElement<ViewProps> => {\n    const arcSize: Size = new Size(size.width, size.height / 2);\n\n    return (\n      <Animated.View style={[style.container, styles.absolute, size]}>\n        <View style={[styles.noOverflow, style.overflow, arcSize]}>\n          <Animated.View style={[style.arc, size]}>\n            <View style={[styles.noOverflow, arcSize]}>\n              <View style={[this.props.themedStyle, this.props.style]}/>\n            </View>\n          </Animated.View>\n        </View>\n      </Animated.View>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const containerSize: Size = this.containerSize;\n    const { start, end } = this.getComponentStyle(this.animation.toProps());\n\n    return (\n      <View style={containerSize}>\n        {this.renderArcElement(start, containerSize)}\n        {this.renderArcElement(end, containerSize)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  absolute: StyleSheet.absoluteFillObject,\n  noOverflow: {\n    overflow: 'hidden',\n  },\n});\n\nexport const Spinner = styled<SpinnerProps>(SpinnerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { TabElement } from './tab.component';\nimport { TabIndicator } from '../support/components/tabIndicator.component';\n\ntype ChildrenProp = TabElement | TabElement[];\n\nexport interface TabBarProps extends StyledComponentProps, ViewProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  onSelect?: (index: number) => void;\n}\n\nexport type TabBarElement = React.ReactElement<TabBarProps>;\n\n/**\n * The `TabBar` component that manages `Tab` components.\n *\n * @extends React.Component\n *\n * @property {number} selectedIndex - Determines current tab index.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of selected tab indicator.\n *\n * @property {(index: number) => void} onSelect - Fires on tab select with corresponding index.\n *\n * @property {ReactElement<TabProps> | ReactElement<TabProps>[]} children - Determines tabs.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example TabBarSimpleUsage\n *\n * @overview-example TabBarWithIcon\n *\n * @overview-example Using with React Navigation\n *\n * ```\n * import React from 'react';\n * import { createAppContainer, SafeAreaView } from 'react-navigation';\n * import { createMaterialTopTabNavigator } from 'react-navigation-tabs';\n * import { TabBar, Tab, Layout, Text } from '@ui-kitten/components';\n *\n * // React Navigation also requires installing additional dependencies:\n * //\n * // npm i react-navigation react-navigation-tabs react-native-reanimated react-native-gesture-handler\n * //\n * // Then install it for ios:\n * //\n * // cd ios && pod install\n *\n * const UsersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>USERS</Text>\n *   </Layout>\n * );\n *\n * const OrdersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>ORDERS</Text>\n *   </Layout>\n * );\n *\n * const TabBarComponent = ({ navigation }) => {\n *\n *   const onSelect = (index) => {\n *     const selectedTabRoute = navigation.state.routes[index];\n *     navigation.navigate(selectedTabRoute.routeName);\n *   };\n *\n *   return (\n *     <SafeAreaView>\n *       <TabBar selectedIndex={navigation.state.index} onSelect={onSelect}>\n *         <Tab title='USERS'/>\n *         <Tab title='ORDERS'/>\n *       </TabBar>\n *     </SafeAreaView>\n *   );\n * };\n *\n * const TabNavigator = createMaterialTopTabNavigator({\n *   Users: UsersScreen,\n *   Orders: OrdersScreen,\n * }, {\n *   tabBarComponent: TabBarComponent,\n * });\n *\n * export const AppNavigator = createAppContainer(TabNavigator);\n * ```\n */\nexport class TabBarComponent extends React.Component<TabBarProps> {\n\n  static styledComponentName: string = 'TabBar';\n\n  static defaultProps: Partial<TabBarProps> = {\n    selectedIndex: 0,\n  };\n\n  private tabIndicatorRef: React.RefObject<TabIndicator> = React.createRef();\n\n  public scrollToIndex(params: { index: number, animated?: boolean }): void {\n    const { current: tabIndicator } = this.tabIndicatorRef;\n\n    tabIndicator.scrollToIndex(params);\n  }\n\n  public scrollToOffset(params: { offset: number, animated?: boolean }): void {\n    const { current: tabIndicator } = this.tabIndicatorRef;\n\n    tabIndicator.scrollToOffset(params);\n  }\n\n  private onTabSelect = (index: number): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(index);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      indicatorHeight,\n      indicatorBorderRadius,\n      indicatorBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      item: {},\n      indicator: {\n        height: indicatorHeight,\n        borderRadius: indicatorBorderRadius,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private isTabSelected = (index: number): boolean => {\n    return index === this.props.selectedIndex;\n  };\n\n  private renderTabElement = (element: TabElement, index: number): TabElement => {\n    return React.cloneElement(element, {\n      key: index,\n      style: [styles.item, element.props.style],\n      selected: this.isTabSelected(index),\n      onSelect: () => this.onTabSelect(index),\n    });\n  };\n\n  private renderTabElements = (source: ChildrenProp): TabElement[] => {\n    return React.Children.map(source, this.renderTabElement);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, indicatorStyle, selectedIndex, children, ...derivedProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const tabElements: TabElement[] = this.renderTabElements(children);\n\n    return (\n      <View>\n        <View\n          {...derivedProps}\n          style={[componentStyle.container, styles.container, style]}>\n          {tabElements}\n        </View>\n        <TabIndicator\n          ref={this.tabIndicatorRef}\n          style={[componentStyle.indicator, styles.indicator, indicatorStyle]}\n          selectedPosition={selectedIndex}\n          positions={tabElements.length}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  item: {\n    flex: 1,\n  },\n  indicator: {},\n});\n\nexport const TabBar = styled<TabBarProps>(TabBarComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  PanResponder,\n  PanResponderCallbacks,\n  PanResponderGestureState,\n  PanResponderInstance,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { I18nLayoutService } from '../support/services';\n\ntype ChildElement = React.ReactElement;\ntype ChildrenProp = ChildElement | ChildElement[];\n\nexport interface ViewPagerProps extends ViewProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  shouldLoadComponent?: (index: number) => boolean;\n  onOffsetChange?: (offset: number) => void;\n  onSelect?: (index: number) => void;\n}\n\nexport type ViewPagerElement = React.ReactElement<ViewPagerProps>;\n\n/**\n * `ViewPager` allows flipping through the \"pages\".\n *\n * @extends React.Component\n *\n * @property {ReactElement | ReactElement[]} children - Determines children of the component.\n *\n * @property {number} selectedIndex - Determines the index of selected \"page\".\n *\n * @property {(index: number) => boolean} shouldLoadComponent - Determines loading behavior particular page and can be\n * used for lazy loading.\n *\n * @property {(offset: number) => void} onOffsetChange - Fires on scroll event with current scroll offset.\n *\n * @property {(index: number) => void} onSelect - Fires on \"page\" select with corresponding index.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example ViewPagerSimpleUsage\n *\n * @overview-example ViewPagerLazyLoading\n *\n * @example ViewPagerInlineStyling\n */\nexport class ViewPager extends React.Component<ViewPagerProps> implements PanResponderCallbacks {\n\n  static defaultProps: Partial<ViewPagerProps> = {\n    selectedIndex: 0,\n    shouldLoadComponent: (): boolean => true,\n  };\n\n  private containerRef: React.RefObject<View> = React.createRef();\n  private contentWidth: number = 0;\n  private contentOffsetValue: number = 0;\n  private contentOffset: Animated.Value = new Animated.Value(this.contentOffsetValue);\n  private panResponder: PanResponderInstance = PanResponder.create(this);\n\n  public componentDidMount(): void {\n    this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n  }\n\n  public componentDidUpdate(prevProps: ViewPagerProps): void {\n    if (prevProps.selectedIndex !== this.props.selectedIndex) {\n      const index: number = this.props.selectedIndex;\n      this.scrollToIndex({ index, animated: true });\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.contentOffset.removeAllListeners();\n  }\n\n  public onMoveShouldSetPanResponder = (event: GestureResponderEvent, state: PanResponderGestureState): boolean => {\n    const isHorizontalMove: boolean = Math.abs(state.dx) > 0 && Math.abs(state.dx) > Math.abs(state.dy);\n\n    if (isHorizontalMove) {\n      const i18nOffset: number = I18nLayoutService.select(state.dx, -state.dx);\n      const nextSelectedIndex: number = this.props.selectedIndex - Math.sign(i18nOffset);\n\n      return nextSelectedIndex >= 0 && nextSelectedIndex < this.getChildCount();\n    }\n\n    return false;\n  };\n\n  public onPanResponderMove = (event: GestureResponderEvent, state: PanResponderGestureState): void => {\n    const i18nOffset: number = I18nLayoutService.select(this.contentWidth, -this.contentWidth);\n    const selectedPageOffset: number = this.props.selectedIndex * i18nOffset;\n\n    this.contentOffset.setValue(state.dx - selectedPageOffset);\n  };\n\n  public onPanResponderRelease = (event: GestureResponderEvent, state: PanResponderGestureState) => {\n    if (Math.abs(state.vx) >= 0.5 || Math.abs(state.dx) >= 0.5 * this.contentWidth) {\n      const i18nOffset: number = I18nLayoutService.select(state.dx, -state.dx);\n      const index: number = i18nOffset > 0 ? this.props.selectedIndex - 1 : this.props.selectedIndex + 1;\n      this.scrollToIndex({ index, animated: true });\n    } else {\n      const index: number = this.props.selectedIndex;\n      this.scrollToIndex({ index, animated: true });\n    }\n  };\n\n  public scrollToIndex(params: { index: number, animated?: boolean }): void {\n    const { index, ...rest } = params;\n    const childCount = this.getChildCount() - 1;\n    const offset: number = this.contentWidth * (index < 0 ? 0 : index > childCount ? childCount : index);\n\n    this.scrollToOffset({ offset, ...rest });\n  }\n\n  public scrollToOffset = (params: { offset: number, animated?: boolean }): void => {\n    this.createOffsetAnimation(params).start(this.onContentOffsetAnimationStateEnd);\n  };\n\n  private onLayout = (event: LayoutChangeEvent): void => {\n    this.contentWidth = event.nativeEvent.layout.width / this.getChildCount();\n\n    this.scrollToIndex({\n      index: this.props.selectedIndex,\n    });\n  };\n\n  private onContentOffsetAnimationStateChanged = (state: { value: number }): void => {\n    this.contentOffsetValue = I18nLayoutService.select(-state.value, state.value);\n\n    if (this.props.onOffsetChange) {\n      this.props.onOffsetChange(this.contentOffsetValue);\n    }\n  };\n\n  private onContentOffsetAnimationStateEnd = (result: { finished: boolean }): void => {\n    const selectedIndex: number = this.contentOffsetValue / this.contentWidth;\n\n    if (selectedIndex !== this.props.selectedIndex && this.props.onSelect) {\n      this.props.onSelect(Math.round(selectedIndex));\n    }\n  };\n\n  private createOffsetAnimation = (params: { offset: number, animated?: boolean }): Animated.CompositeAnimation => {\n    const animationDuration: number = params.animated ? 300 : 0;\n\n    return Animated.timing(this.contentOffset, {\n      toValue: I18nLayoutService.select(-params.offset, params.offset),\n      easing: Easing.linear,\n      duration: animationDuration,\n    });\n  };\n\n  private renderComponentChild = (source: ChildElement, index: number): ChildElement => {\n    const contentView: ChildElement | null = this.props.shouldLoadComponent(index) ? source : null;\n\n    return (\n      <View style={styles.contentContainer}>\n        {contentView}\n      </View>\n    );\n  };\n\n  private renderComponentChildren = (source: ChildrenProp): ChildElement[] => {\n    return React.Children.map(source, this.renderComponentChild);\n  };\n\n  private getChildCount = (): number => {\n    return React.Children.count(this.props.children);\n  };\n\n  private getContainerStyle = (): ViewStyle => {\n    return {\n      width: `${100 * this.getChildCount()}%`,\n\n      // @ts-ignore: RN has no types for `Animated` styles\n      transform: [{ translateX: this.contentOffset }],\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, children, ...restProps } = this.props;\n\n    return (\n      <Animated.View\n        {...restProps}\n        ref={this.containerRef}\n        style={[styles.container, style, this.getContainerStyle()]}\n        onLayout={this.onLayout}\n        {...this.panResponder.panHandlers}>\n        {this.renderComponentChildren(children)}\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  contentContainer: {\n    flex: 1,\n    width: '100%',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { TabElement } from './tab.component';\nimport { TabBar } from './tabBar.component';\nimport { ViewPager } from '../viewPager/viewPager.component';\n\ntype TabContentElement = React.ReactElement;\ntype ChildrenProp = TabElement | TabElement[];\n\nclass TabViewChildElement {\n  tab: TabElement;\n  content: TabContentElement;\n}\n\nclass TabViewChildren {\n  tabs: TabElement[] = [];\n  content: TabContentElement[] = [];\n}\n\nexport interface TabViewProps extends ViewProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  tabBarStyle?: StyleProp<ViewStyle>;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  shouldLoadComponent?: (index: number) => boolean;\n  onOffsetChange?: (offset: number) => void;\n  onSelect?: (index: number) => void;\n}\n\nexport type TabViewElement = React.ReactElement<TabViewProps>;\n\n/**\n * `TabView` is a dynamic tabset component. Allows flipping through the tab \"pages\".\n *\n * @extends React.Component\n **\n * @property {number} selectedIndex - Determines current tab index.\n *\n * @property {StyleProp<ViewStyle>} tabBarStyle - Determines style TabBar component.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of selected tab indicator.\n *\n * @property {(index: number) => void} onSelect - Fires on \"page\" select with corresponding index.\n *\n * @property {ReactElement<TabProps> | ReactElement<TabProps>[]} children - Determines children of the component.\n *\n * @property {(index: number) => boolean} shouldLoadComponent - Determines loading behavior particular page and can be\n * used for lazy loading.\n *\n * @property {(offset: number) => void} onOffsetChange - Fires on scroll event with current scroll offset.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example TabViewSimpleUsage\n *\n * @overview-example TabViewWithIcon\n *\n * @overview-example TabViewLazyLoading\n *\n * @example TabViewInlineStyling\n */\nexport class TabView extends React.Component<TabViewProps> {\n\n  static defaultProps: Partial<TabViewProps> = {\n    selectedIndex: 0,\n  };\n\n  private viewPagerRef: React.RefObject<ViewPager> = React.createRef();\n  private tabBarRef: React.RefObject<any> = React.createRef();\n\n  private onBarSelect = (index: number): void => {\n    const { current: viewPager } = this.viewPagerRef;\n\n    viewPager.scrollToIndex({ index, animated: true });\n  };\n\n  private onPagerOffsetChange = (offset: number): void => {\n    const { current: tabBar } = this.tabBarRef;\n    const tabCount: number = React.Children.count(tabBar.props.children);\n\n    tabBar.scrollToOffset({ offset: offset / tabCount });\n  };\n\n  private onPagerSelect = (selectedIndex: number): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(selectedIndex);\n    }\n  };\n\n  private renderComponentChild = (element: TabElement, index: number): TabViewChildElement => {\n    return {\n      tab: React.cloneElement(element, { key: index }),\n      content: element.props.children,\n    };\n  };\n\n  private renderComponentChildren = (source: ChildrenProp): TabViewChildren => {\n    return React.Children.toArray(source).reduce((acc: TabViewChildren, element: TabElement, index: number) => {\n      const { tab, content } = this.renderComponentChild(element, index);\n      return {\n        tabs: [...acc.tabs, tab],\n        content: [...acc.content, content],\n      };\n    }, new TabViewChildren());\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, selectedIndex, children, tabBarStyle, indicatorStyle, ...derivedProps } = this.props;\n\n    const { tabs, content } = this.renderComponentChildren(children);\n\n    return (\n      <View\n        style={[styles.container, style]}\n        {...derivedProps}>\n        <TabBar\n          style={tabBarStyle}\n          ref={this.tabBarRef}\n          selectedIndex={selectedIndex}\n          indicatorStyle={indicatorStyle}\n          onSelect={this.onBarSelect}>\n          {tabs}\n        </TabBar>\n        <ViewPager\n          ref={this.viewPagerRef}\n          {...derivedProps}\n          style={[styles.container, style]}\n          selectedIndex={selectedIndex}\n          shouldLoadComponent={this.props.shouldLoadComponent}\n          onOffsetChange={this.onPagerOffsetChange}\n          onSelect={this.onPagerSelect}>\n          {content}\n        </ViewPager>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  ImageStyle,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { IconElement } from '../icon/icon.component';\nimport {\n  isValidString,\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\ntype IconProp = (style: ImageStyle) => IconElement;\ntype ContentElement = React.ReactElement;\n\nexport interface TabProps extends StyledComponentProps, TouchableOpacityProps {\n  title?: string;\n  titleStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  selected?: boolean;\n  onSelect?: (selected: boolean) => void;\n  children?: ContentElement;\n}\n\nexport type TabElement = React.ReactElement<TabProps>;\n\n/**\n * `Tab` component is a part of `TabBar` or `TabView` component.\n * `TabView` Tabs should be wrapped in `TabBar` or `TabView` to provide usable component.\n * See usage examples at `TabView` component documentation.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the component.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Determines style of the title.\n *\n * @property {ReactElement} children - Determines content of the tab.\n *\n * @property {(style: StyleType) => ReactElement} icon - Determines icon of the component.\n *\n * @property {boolean} selected - Determines tab selection state.\n *\n * @property {(selected: boolean) => void} onSelect = Fires on onSelect event.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example TabSimpleUsage\n *\n * @overview-example TabWithIcon\n *\n * @example TabWithExternalSourceIcon\n *\n * @example TabInlineStyling\n */\nexport class TabComponent extends React.Component<TabProps> implements WebEventResponderCallbacks {\n\n  static styledComponentName: string = 'Tab';\n\n  static defaultProps: Partial<TabProps> = {\n    selected: false,\n  };\n\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.props.dispatch([Interaction.HOVER]);\n  };\n\n  public onMouseLeave = (): void => {\n    this.props.dispatch([]);\n  };\n\n  private onPress = (): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(!this.props.selected);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textMarginVertical,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconMarginVertical,\n      iconTintColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginVertical: iconMarginVertical,\n        tintColor: iconTintColor,\n      },\n      title: {\n        marginVertical: textMarginVertical,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n    };\n  };\n\n  private renderTitleElement = (style: TextStyle): TextElement => {\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text\n        key={1}\n        style={[style, styles.title, titleStyle]}>\n        {title}\n      </Text>\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: React.ReactElement<ImageProps> = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 2,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { title, icon } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      isValidString(title) && this.renderTitleElement(style.title),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, ...derivedProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    const [iconElement, titleElement] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...derivedProps}\n        {...this.webEventResponder.eventHandlers}\n        style={[container, styles.container, webStyles.container, style]}\n        onPress={this.onPress}>\n        {iconElement}\n        {titleElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  icon: {},\n  title: {},\n});\n\nconst webStyles = Platform.OS === 'web' && StyleSheet.create({\n  container: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n\nexport const Tab = styled<TabProps>(TabComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  PanResponder,\n  PanResponderCallbacks,\n  PanResponderGestureState,\n  PanResponderInstance,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { CheckMark } from '../support/components/checkmark.component';\nimport {\n  I18nLayoutService,\n  WebEventResponder,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport interface ToggleProps extends StyledComponentProps, TouchableOpacityProps {\n  checked?: boolean;\n  disabled?: boolean;\n  status?: string;\n  size?: string;\n  text?: string;\n  textStyle?: StyleProp<TextStyle>;\n  onChange?: (checked: boolean) => void;\n}\n\nexport type ToggleElement = React.ReactElement<ToggleProps>;\n\n/**\n * Styled `Toggle` component.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Determines whether component is checked.\n * Default is `false`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {string} text - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(checked: boolean) => void} onChange - Fires when selection state is changed.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example ToggleSimpleUsage\n *\n * @overview-example ToggleStates\n *\n * @overview-example ToggleStatus\n *\n * @example ToggleInlineStyling\n */\nexport class ToggleComponent extends React.Component<ToggleProps> implements PanResponderCallbacks {\n\n  static styledComponentName: string = 'Toggle';\n\n  private panResponder: PanResponderInstance;\n  private thumbWidthAnimation: Animated.Value;\n  private thumbTranslateAnimation: Animated.Value;\n  private ellipseScaleAnimation: Animated.Value;\n  private thumbTranslateAnimationActive: boolean;\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  constructor(props: ToggleProps) {\n    super(props);\n\n    const { checked, themedStyle } = props;\n\n    this.thumbWidthAnimation = new Animated.Value(themedStyle.thumbWidth);\n    this.thumbTranslateAnimation = new Animated.Value(0);\n    this.ellipseScaleAnimation = new Animated.Value(checked ? 0.01 : 1.0);\n    this.thumbTranslateAnimationActive = false;\n\n    this.panResponder = PanResponder.create(this);\n  }\n\n  public onMouseEnter = (): void => {\n    if (!this.props.disabled) {\n      this.props.dispatch([Interaction.HOVER]);\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    if (!this.props.disabled) {\n      this.props.dispatch([]);\n    }\n  };\n\n  public onFocus = (): void => {\n    if (!this.props.disabled) {\n      this.props.dispatch([Interaction.FOCUSED]);\n    }\n  };\n\n  public onBlur = (): void => {\n    if (!this.props.disabled) {\n      this.props.dispatch([]);\n    }\n  };\n\n  // PanResponderCallbacks\n\n  public onStartShouldSetPanResponder = (): boolean => {\n    return true;\n  };\n\n  public onStartShouldSetPanResponderCapture = (): boolean => {\n    return true;\n  };\n\n  public onMoveShouldSetPanResponder = (): boolean => {\n    return true;\n  };\n\n  public onMoveShouldSetPanResponderCapture = (): boolean => {\n    return true;\n  };\n\n  public onPanResponderTerminationRequest = (): boolean => {\n    return false;\n  };\n\n  public onPanResponderGrant = (): void => {\n    const { checked, disabled, themedStyle } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    this.onPressIn();\n\n    if (this.thumbTranslateAnimationActive) {\n      this.thumbTranslateAnimationActive = false;\n      this.stopAnimations();\n      return;\n    }\n\n    this.animateThumbWidth(themedStyle.thumbWidth * 1.2);\n    this.animateEllipseScale(checked ? 1 : 0.01);\n  };\n\n  public onPanResponderMove: () => boolean = (): boolean => {\n    return true;\n  };\n\n  public onPanResponderRelease = (e: GestureResponderEvent, gestureState: PanResponderGestureState): void => {\n    const { checked, disabled, themedStyle } = this.props;\n\n    if (!disabled) {\n      if ((!checked && gestureState.dx > -5) || (checked && gestureState.dx < 5)) {\n        this.toggle(this.onPress);\n      } else {\n        this.animateEllipseScale(checked ? 0.01 : 1);\n      }\n    }\n\n    this.animateThumbWidth(themedStyle.thumbWidth);\n    this.onPressOut();\n  };\n\n  private onPressIn = (): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n  };\n\n  private onPressOut = (): void => {\n    this.props.dispatch([]);\n  };\n\n  private onPress = (): void => {\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { checked, disabled } = this.props;\n\n    const {\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      thumbWidth,\n      thumbHeight,\n      thumbBorderRadius,\n      thumbBackgroundColor,\n      textMarginHorizontal,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textFontFamily,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      backgroundColor,\n      borderColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      toggleContainer: {},\n      ellipseContainer: {\n        borderColor: borderColor,\n        backgroundColor: backgroundColor,\n        ...containerParameters,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n      ellipse: {\n        width: containerParameters.width - (containerParameters.borderWidth * 2),\n        height: containerParameters.height - (containerParameters.borderWidth * 2),\n        borderRadius: (source.height - (source.borderWidth * 2)) / 2,\n        backgroundColor: backgroundColor,\n      },\n      thumb: {\n        alignSelf: checked ? 'flex-end' : 'flex-start',\n        width: this.thumbWidthAnimation,\n        height: thumbHeight,\n        borderRadius: thumbBorderRadius,\n        backgroundColor: thumbBackgroundColor,\n        elevation: disabled ? 0 : 5,\n        transform: [{ translateX: this.thumbTranslateAnimation }],\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        fontFamily: textFontFamily,\n        color: textColor,\n      },\n      icon: {\n        width: source.iconWidth,\n        height: source.iconHeight,\n        fill: iconTintColor,\n        stroke: iconTintColor,\n        strokeWidth: 3,\n      },\n    };\n  };\n\n  private animateThumbTranslate = (value: number, callback: () => void = () => null): void => {\n    this.thumbTranslateAnimationActive = true;\n\n    Animated.timing(this.thumbTranslateAnimation, {\n      toValue: I18nLayoutService.select(value, -value),\n      duration: 150,\n      easing: Easing.linear,\n    }).start(() => {\n      this.thumbTranslateAnimationActive = false;\n      callback();\n    });\n  };\n\n  private animateThumbWidth = (value: number, callback: () => void = () => null): void => {\n    Animated.timing(this.thumbWidthAnimation, {\n      toValue: value,\n      duration: 150,\n      easing: Easing.linear,\n    }).start(callback);\n  };\n\n  private animateEllipseScale = (value: number, callback: () => void = () => null): void => {\n    Animated.timing(this.ellipseScaleAnimation, {\n      toValue: value,\n      duration: 200,\n      easing: Easing.linear,\n    }).start(callback);\n  };\n\n  private stopAnimations = (): void => {\n    const value: number = this.props.checked ? 0.01 : 1;\n\n    this.thumbTranslateAnimation.stopAnimation();\n    this.ellipseScaleAnimation.stopAnimation();\n    this.thumbWidthAnimation.stopAnimation();\n\n    this.ellipseScaleAnimation.setValue(value);\n  };\n\n  private toggle = (callback = (nextValue: boolean) => null): void => {\n    const value: number = this.props.checked ? -20 : 20;\n\n    this.animateThumbTranslate(value, () => {\n      this.thumbTranslateAnimation.setValue(0);\n      callback(!this.props.checked);\n    });\n\n    this.animateThumbWidth(this.props.themedStyle.thumbWidth);\n  };\n\n  private renderTextElement = (style: StyleType): TextElement => {\n    return (\n      <Text style={[style, this.props.textStyle]}>\n        {this.props.text}\n      </Text>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    return [\n      this.props.text && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, checked, ...restProps } = this.props;\n\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n    const [textElement] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <View\n        {...this.panResponder.panHandlers}\n        style={[styles.container, style]}>\n        <TouchableOpacity\n          activeOpacity={1.0}\n          {...restProps}\n          {...this.webEventResponder.eventHandlers}\n          style={[componentStyle.toggleContainer, webStyles.toggleContainer, styles.toggleContainer]}>\n          <View style={[componentStyle.highlight, styles.highlight]}/>\n          <Animated.View style={[componentStyle.ellipseContainer, styles.ellipseContainer]}>\n            <Animated.View style={[componentStyle.ellipse, styles.ellipse]}/>\n            <Animated.View style={[componentStyle.thumb, styles.thumb]}>\n              <CheckMark {...componentStyle.icon} />\n            </Animated.View>\n          </Animated.View>\n        </TouchableOpacity>\n        {textElement}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  toggleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  ellipseContainer: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    overflow: 'hidden',\n  },\n  ellipse: {\n    alignSelf: 'center',\n    position: 'absolute',\n  },\n  highlight: {\n    alignSelf: 'center',\n    position: 'absolute',\n  },\n  thumb: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nconst webStyles = Platform.OS === 'web' && StyleSheet.create({\n  toggleContainer: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n\nexport const Toggle = styled<ToggleProps>(ToggleComponent);\n","import React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\n\nexport type PopoverIndicatorProps = ViewProps;\nexport type PopoverIndicatorElement = React.ReactElement<PopoverIndicatorProps>;\n\nexport class PopoverIndicator extends React.Component<PopoverIndicatorProps> {\n\n  private getComponentStyle = (source: StyleProp<ViewStyle>): StyleType => {\n    const flatStyle: ViewStyle = StyleSheet.flatten(source);\n\n    return {\n      container: {\n        // @ts-ignore: `width` is restricted to be a number\n        borderLeftWidth: flatStyle.width,\n        // @ts-ignore: `width` is restricted to be a number\n        borderRightWidth: flatStyle.width,\n        // @ts-ignore: `height` is restricted to be a number\n        borderBottomWidth: flatStyle.height,\n        borderBottomColor: flatStyle.backgroundColor,\n        borderLeftColor: 'transparent',\n        borderRightColor: 'transparent',\n        backgroundColor: 'transparent',\n      },\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, ...props } = this.props;\n    const componentStyle = this.getComponentStyle(style);\n\n    return (\n      <View\n        {...props}\n        style={[style, styles.container, componentStyle.container]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { IconElement } from '../icon/icon.component';\nimport {\n  Popover,\n  PopoverElement,\n  PopoverProps,\n} from '../popover/popover.component';\nimport { PopoverIndicator } from '../popover/popoverIndicator.component';\n\ntype IconProp = (style: StyleType) => IconElement;\ntype WrappingElement = React.ReactElement;\n\nexport interface TooltipProps extends StyledComponentProps, Omit<PopoverProps, 'content'> {\n  text: string;\n  textStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  children: WrappingElement;\n}\n\nexport type TooltipElement = React.ReactElement<TooltipProps>;\n\n/**\n * Tooltip displays informative text when users focus on or tap an element.\n *\n * @extends React.Component\n *\n * @property {boolean} visible - Determines whether popover is visible or not.\n *\n * @property {string} text - Determines the text of the tooltip\n *\n * @property {(style: StyleType) => ReactElement} icon - Determines icon of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {ReactElement} children - Determines the element \"above\" which popover will be shown.\n *\n * @property {string | PopoverPlacement} placement - Determines the actualPlacement of the popover.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Default is `bottom`.\n * Tip: use one of predefined placements instead of strings, e.g `PopoverPlacements.TOP`\n *\n * @property {boolean} fullWidth - Determines whether content element should have same width as child element.\n *\n * @property {boolean} allowBackdrop - Determines whether user can tap on back-drop.\n * Default is `false`.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Determines the style of backdrop.\n *\n * @property {() => void} onBackdropPress - Determines component's behavior when the user is\n * tapping on back-drop.\n *\n * @overview-example TooltipSimpleUsage\n *\n * @overview-example TooltipWithIcon\n *\n * @overview-example TooltipStyledBackdrop\n *\n * @overview-example TooltipPlacement\n *\n * @example TooltipWithExternalSourceIcon\n *\n * @example TooltipInlineStyling\n */\nexport class TooltipComponent extends React.Component<TooltipProps> {\n\n  static styledComponentName: string = 'Tooltip';\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      indicatorBackgroundColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      textMarginHorizontal,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textFontFamily,\n      textColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      content: {},\n      indicator: {\n        backgroundColor: indicatorBackgroundColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        fontFamily: textFontFamily,\n        color: textColor,\n      },\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    return (\n      <Text\n        key={1}\n        style={[style, this.props.textStyle]}>\n        {this.props.text}\n      </Text>\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 0,\n      style: [style, iconElement.props.style],\n    });\n  };\n\n  private renderContentElementChildren = (style: StyleType): React.ReactNodeArray => {\n    return [\n      this.props.icon && this.renderIconElement(style.icon),\n      this.renderTextElement(style.text),\n    ];\n  };\n\n  private renderPopoverIndicatorElement = (style: StyleType): React.ReactElement => {\n    const { indicator } = this.getComponentStyle(this.props.themedStyle);\n    return (\n      <PopoverIndicator style={indicator} />\n    );\n  };\n\n  private renderPopoverContentElement = (style: StyleType): React.ReactElement<ViewProps> => {\n    const { content, ...childrenStyle } = style;\n\n    const contentChildren: React.ReactNode = this.renderContentElementChildren(childrenStyle);\n\n    return (\n      <View style={[content, styles.content]}>\n        {contentChildren}\n      </View>\n    );\n  };\n\n  public render(): PopoverElement {\n    const { themedStyle, style, children, ...props } = this.props;\n    const { container, indicator, ...componentStyle } = this.getComponentStyle(themedStyle);\n\n    const contentElement: TextElement = this.renderPopoverContentElement(componentStyle);\n\n    return (\n      <Popover\n        {...props}\n        style={[container, style]}\n        content={contentElement}\n        indicator={this.renderPopoverIndicatorElement}>\n        {children}\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n});\n\nexport const Tooltip = styled<TooltipProps>(TooltipComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { TopNavigationActionElement } from './topNavigationAction.component';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ntype ActionElementProp = TopNavigationActionElement | TopNavigationActionElement[];\ntype AlignmentProp = 'start' | 'center';\n\nexport interface TopNavigationProps extends StyledComponentProps, ViewProps {\n  title?: string;\n  titleStyle?: StyleProp<TextStyle>;\n  subtitle?: string;\n  subtitleStyle?: StyleProp<TextStyle>;\n  alignment?: AlignmentProp;\n  leftControl?: TopNavigationActionElement;\n  rightControls?: ActionElementProp;\n}\n\nexport type TopNavigationElement = React.ReactElement<TopNavigationProps>;\n\n/**\n * `TopNavigation` component is designed to be a Navigation Bar.\n * Can be used for navigation.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the component.\n *\n * @property {string} subtitle - Determines the subtitle of the component.\n *\n * @property {string} alignment - Determines the alignment of the component.\n * Can be `center` or `start`.\n * Default is `start`.\n *\n * @property {ReactElement<TopNavigationActionProps>} leftControl - Determines the left control of the component.\n *\n * @property {ReactElement<TopNavigationActionProps>[]} rightControls - Determines the right controls of the component.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes text style of title.\n *\n * @property {StyleProp<TextStyle>} subtitleStyle - Customizes text style of subtitle.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example TopNavigationSimpleUsage\n *\n * @overview-example TopNavigationActions\n *\n * @overview-example TopNavigationAlignments\n *\n * @overview-example TopNavigationWithMenu\n *\n * @example TopNavigationInlineStyling\n */\nexport class TopNavigationComponent extends React.Component<TopNavigationProps> {\n\n  static styledComponentName: string = 'TopNavigation';\n\n  private getAlignmentDependentStyles = (alignment: AlignmentProp): StyleType => {\n    if (alignment === 'center') {\n      return {\n        container: styles.containerCentered,\n        titleContainer: styles.titleContainerCentered,\n      };\n    }\n\n    return {\n      rightControlsContainer: styles.rightControlsContainerStart,\n    };\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      titleTextAlign,\n      titleFontFamily,\n      titleFontSize,\n      titleLineHeight,\n      titleFontWeight,\n      titleColor,\n      subtitleTextAlign,\n      subtitleFontFamily,\n      subtitleFontSize,\n      subtitleLineHeight,\n      subtitleFontWeight,\n      subtitleColor,\n      ...containerParameters\n    } = source;\n\n\n    return {\n      container: containerParameters,\n      titleContainer: {},\n      title: {\n        textAlign: titleTextAlign,\n        fontFamily: titleFontFamily,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight,\n        fontWeight: titleFontWeight,\n        color: titleColor,\n      },\n      subtitle: {\n        textAlign: subtitleTextAlign,\n        fontFamily: subtitleFontFamily,\n        fontSize: subtitleFontSize,\n        color: subtitleColor,\n        fontWeight: subtitleFontWeight,\n        lineHeight: subtitleLineHeight,\n      },\n      leftControlContainer: {},\n      rightControlsContainer: {},\n    };\n  };\n\n  private renderTextElement = (text: string, style: StyleProp<TextStyle>): TextElement => {\n    return (\n      <Text style={style}>\n        {text}\n      </Text>\n    );\n  };\n\n  private renderActionElements(source: ActionElementProp): TopNavigationActionElement[] {\n    return React.Children.map(source, (element: TopNavigationActionElement, index: number) => {\n      return React.cloneElement(element, {\n        key: index,\n        appearance: this.props.appearance,\n      });\n    });\n  }\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const {\n      title,\n      subtitle,\n      leftControl,\n      rightControls,\n      titleStyle,\n      subtitleStyle,\n    } = this.props;\n\n    return [\n      isValidString(title) && this.renderTextElement(title, [style.title, styles.title, titleStyle]),\n      isValidString(subtitle) && this.renderTextElement(subtitle, [style.subtitle, styles.subtitle, subtitleStyle]),\n      leftControl && this.renderActionElements(leftControl),\n      rightControls && this.renderActionElements(rightControls),\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, alignment, ...restProps } = this.props;\n\n    const {\n      container,\n      leftControlContainer,\n      titleContainer,\n      rightControlsContainer,\n      ...componentStyles\n    } = this.getComponentStyle(themedStyle);\n\n    const alignmentStyles: StyleType = this.getAlignmentDependentStyles(alignment);\n\n    const [\n      titleElement,\n      subtitleElement,\n      leftControlElement,\n      rightControlElements,\n    ] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <View\n        style={[container, styles.container, alignmentStyles.container, style]}\n        {...restProps}>\n        <View style={[leftControlContainer, styles.leftControlContainer]}>\n          {leftControlElement}\n        </View>\n        <View style={[titleContainer, styles.titleContainer, alignmentStyles.titleContainer]}>\n          {titleElement}\n          {subtitleElement}\n        </View>\n        <View style={[rightControlsContainer, styles.rightControlsContainer, alignmentStyles.rightControlsContainer]}>\n          {rightControlElements}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  containerCentered: {\n    justifyContent: 'space-between',\n  },\n  titleContainer: {},\n  titleContainerCentered: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {},\n  subtitle: {},\n  leftControlContainer: {\n    flexDirection: 'row',\n    zIndex: 1,\n  },\n  rightControlsContainer: {\n    flexDirection: 'row',\n    zIndex: 1,\n  },\n  rightControlsContainerStart: {\n    flex: 1,\n    justifyContent: 'flex-end',\n  },\n});\n\nexport const TopNavigation = styled<TopNavigationProps>(TopNavigationComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageStyle,\n  Insets,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { IconElement } from '../icon/icon.component';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\ntype IconProp = (style: StyleType) => IconElement;\n\nexport interface TopNavigationActionProps extends StyledComponentProps, TouchableOpacityProps {\n  icon: IconProp;\n}\n\nexport type TopNavigationActionElement = React.ReactElement<TopNavigationActionProps>;\n\n/**\n * The `TopNavigationAction` component is a part of the `TopNavigation` component.\n * `TopNavigationActions` should be used in `TopNavigation` to provide usable component.\n * See usage examples at `TopNavigation` component documentation.\n *\n * @extends React.Component\n *\n * @property {(style: ImageStyle) => ReactElement} icon - Determines the icon of the component.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example TopNavigationActionSimpleUsage\n *\n * @example TopNavigationActionExternalSourceIcon\n *\n * @example TopNavigationActionInlineStyling\n */\nclass TopNavigationActionComponent extends React.Component<TopNavigationActionProps>\n  implements WebEventResponderCallbacks {\n\n  static styledComponentName: string = 'TopNavigationAction';\n\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.props.dispatch([Interaction.HOVER]);\n  };\n\n  public onMouseLeave = (): void => {\n    this.props.dispatch([]);\n  };\n\n  public onFocus = (): void => {\n    this.props.dispatch([Interaction.FOCUSED]);\n  };\n\n  public onBlur = (): void => {\n    this.props.dispatch([]);\n  };\n\n  private onPress = (event: GestureResponderEvent): void => {\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      iconTintColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n    } = source;\n\n    return {\n      container: {\n        marginHorizontal: iconMarginHorizontal,\n      },\n      icon: {\n        tintColor: iconTintColor,\n        width: iconWidth,\n        height: iconHeight,\n        ...styles.icon,\n      },\n    };\n  };\n\n  private createHitSlopInsets = (iconStyle: StyleProp<ImageStyle>): Insets => {\n    const flatStyle: ImageStyle = StyleSheet.flatten(iconStyle);\n\n    // @ts-ignore: `width` is restricted to be a number\n    const value: number = 40 - flatStyle.width;\n\n    return {\n      left: value,\n      top: value,\n      right: value,\n      bottom: value,\n    };\n  };\n\n  private renderIconElement = (style: StyleType): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      style: [style, iconElement.props.style],\n    });\n  };\n\n  public render(): React.ReactNode {\n    const { themedStyle, style, icon, ...touchableProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const hitSlopInsets: Insets = this.createHitSlopInsets(componentStyle.icon);\n\n    const iconElement: IconElement = this.renderIconElement(componentStyle.icon);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        hitSlop={hitSlopInsets}\n        {...touchableProps}\n        {...this.webEventResponder.eventHandlers}\n        style={[componentStyle.container, styles.container, webStyles.container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        {iconElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  icon: {},\n});\n\nconst webStyles = Platform.OS === 'web' && StyleSheet.create({\n  container: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n\nexport const TopNavigationAction = styled<TopNavigationActionProps>(TopNavigationActionComponent);\n","import React from 'react';\n\nexport enum AppTheme {\n  light = 'Light',\n  dark = 'Dark',\n}\n\nexport interface ThemeContextType {\n  theme: AppTheme;\n  setTheme: (theme: AppTheme) => void;\n  isDarkMode: () => boolean;\n}\n\nexport const ThemeContext = React.createContext<ThemeContextType>({\n  theme: AppTheme.light,\n  setTheme: (theme: AppTheme) => {},\n  isDarkMode: () => false,\n});\n","import React from 'react';\nimport { SvgProps } from 'react-native-svg';\nimport { IconProvider } from '@ui-kitten/components';\n\ntype IconElement = React.ReactElement<SvgProps>;\ntype IconComponent = React.ComponentType<SvgProps>;\n\nexport class EvaIcon implements IconProvider<SvgProps> {\n\n  constructor(private content: IconComponent) {\n  }\n\n  public toReactElement(props: SvgProps): IconElement {\n    const Icon: IconComponent = this.content;\n\n    // @ts-ignore - Eva maps icon color to `tintColor`\n    const { tintColor, ...restProps } = props;\n\n    return (\n      <Icon\n        fill={tintColor}\n        {...restProps}\n      />\n    );\n  }\n}\n","import { IconPack } from '@ui-kitten/components';\nimport { SvgProps } from 'react-native-svg';\nimport { createIconsMap } from './createIconsMap';\n\nexport const EvaIconsPack: IconPack<SvgProps> = {\n  name: 'eva',\n  icons: createIconsMap(),\n};\n\n","import { IconProvider } from '@ui-kitten/components';\nimport { SvgProps } from 'react-native-svg';\nimport { findIconByName } from 'react-native-eva-icons/icons';\nimport { EvaIcon } from './evaIcon.component';\n\nexport const createIconsMap = (): { [key: string]: IconProvider<SvgProps> } => {\n  return new Proxy({}, {\n    get(target: {}, name: string): IconProvider<SvgProps> {\n      return new EvaIcon(findIconByName(name));\n    },\n  });\n};\n","export const mapping = require('./mapping.json');\nexport const light = require('./themes/light.json');\nexport const dark = require('./themes/dark.json');\n","import React from 'react';\nimport {\n  Icon,\n  IconElement,\n  StyleType,\n} from '@ui-kitten/components';\n\n/**\n * Should contain all icon names used in app.\n * Needed to support compatible icon names between different icon packs.\n */\nexport interface AppIconRegistry {\n  ['arrow-back']: string;\n  ['brush']: string;\n  ['color-palette']: string;\n  ['grid']: string;\n  ['list']: string;\n  ['menu']: string;\n  ['more-vertical']: string;\n  ['search']: string;\n  ['settings']: string;\n  ['star']: string;\n  ['trash']: string;\n}\n\nexport const BackIcon = (style): IconElement => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nexport const BrushIcon = (style): IconElement => (\n  <Icon {...style} name='brush'/>\n);\n\nexport const ColorPaletteIcon = (style: StyleType): IconElement => (\n  <Icon name='color-palette' {...style}/>\n);\n\nexport const GridIcon = (style: StyleType): IconElement => (\n  <Icon name='grid' {...style}/>\n);\n\nexport const ListIcon = (style: StyleType): IconElement => (\n  <Icon name='list' {...style}/>\n);\n\nexport const MenuIcon = (style): IconElement => (\n  <Icon {...style} name='menu'/>\n);\n\nexport const MoreVerticalIcon = (style): IconElement => (\n  <Icon {...style} name='more-vertical'/>\n);\n\nexport const SearchIcon = (style: StyleType): IconElement => (\n  <Icon {...style} name='search' />\n);\n\nexport const SettingsIcon = (style: StyleType): IconElement => (\n  <Icon {...style} name='settings' />\n);\n\nexport const StarIcon = (style: StyleType): IconElement => (\n  <Icon name='star' {...style}/>\n);\n\nexport const TrashIcon = (style: StyleType): IconElement => (\n  <Icon {...style} name='trash' />\n);\n\n\n","import React from 'react';\nimport {\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Button,\n  Layout,\n  LayoutProps,\n  OverflowMenu,\n  OverflowMenuItemType,\n  Text,\n} from '@ui-kitten/components';\nimport {\n  AppTheme,\n  ThemeContext,\n  ThemeContextType,\n} from '@pg/themes/themeContext';\nimport { ColorPaletteIcon } from '@pg/icons';\n\ninterface Props {\n  showcaseId: string;\n}\n\nexport type SharingHeightContainerProps = LayoutProps & Props;\n\nconst themes: AppTheme[] = [AppTheme.light, AppTheme.dark];\n\nexport const sharingHeightContainer = (Component: React.ComponentType,\n                                       showcaseId: string): React.ReactElement<SharingHeightContainerProps> => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const themeContext: ThemeContextType = React.useContext(ThemeContext);\n\n  const onThemesButtonPress = (): void => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const onThemeSelect = (index: number): void => {\n    themeContext.setTheme(themes[index]);\n    setMenuVisible(false);\n  };\n\n  const onLayout = (event: LayoutChangeEvent): void => {\n    if (Platform.OS === 'web') {\n      postLayoutChangeEvent(event);\n    }\n  };\n\n  const postLayoutChangeEvent = ({ nativeEvent }: LayoutChangeEvent): void => {\n    const layoutChangeMessage: { height: number; id: string; } = {\n      id: showcaseId,\n      height: nativeEvent.layout.height,\n    };\n\n    window.parent.postMessage(layoutChangeMessage, '*');\n  };\n\n  const createThemeMenuItem = (title: string): OverflowMenuItemType => {\n    return { title };\n  };\n\n  return (\n    <Layout\n      style={styles.container}\n      onLayout={onLayout}>\n      <View style={styles.optionsContainer}>\n        <Text\n          appearance='hint'\n          category='c1'>\n          Powered by React Native Web\n        </Text>\n        <OverflowMenu\n          visible={menuVisible}\n          onSelect={onThemeSelect}\n          data={themes.map(createThemeMenuItem)}\n          onBackdropPress={onThemesButtonPress}>\n          <Button\n            appearance='ghost'\n            status='basic'\n            size='small'\n            icon={ColorPaletteIcon}\n            onPress={onThemesButtonPress}>\n            {themeContext.theme}\n          </Button>\n        </OverflowMenu>\n      </View>\n      <Component/>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 170,\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport {\n  Autocomplete,\n  Layout,\n} from '@ui-kitten/components';\n\nconst requestData = () => fetch(`https://facebook.github.io/react-native/movies.json`);\nconst requestDataWithDebounce = AwesomeDebouncePromise(requestData, 400);\n\nexport const AutocompleteAsyncShowcase = () => {\n\n  const [query, setQuery] = React.useState(null);\n  const [data, setData] = React.useState(null);\n\n  const updateData = () => {\n    requestDataWithDebounce()\n      .then(response => response.json())\n      .then(json => json.movies)\n      .then(applyFilter)\n      .then(setData);\n  };\n\n  React.useEffect(updateData, [query]);\n\n  const onSelect = ({ title }) => {\n    setQuery(title);\n  };\n\n  const applyFilter = (options) => {\n    // can be avoided if filtration is done on server\n    return options.filter(item => item.title.toLowerCase().includes(query.toLowerCase()));\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <Autocomplete\n        placeholder='Start typing to fetch options'\n        value={query}\n        data={data}\n        onChangeText={setQuery}\n        onSelect={onSelect}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 228,\n  },\n});\n","import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Autocomplete,\n  Avatar,\n  Layout,\n  Text,\n} from '@ui-kitten/components';\n\nconst DATA = [\n  { id: 1, title: 'Star Wars', releaseYear: 1977 },\n  { id: 2, title: 'Back to the Future', releaseYear: 1985 },\n  { id: 3, title: 'The Matrix', releaseYear: 1999 },\n  { id: 4, title: 'Inception', releaseYear: 2010 },\n  { id: 5, title: 'Interstellar', releaseYear: 2014 },\n];\n\nexport const AutocompleteCustomItemShowcase = () => {\n\n  const [value, setValue] = React.useState(null);\n  const [data, setData] = React.useState(DATA);\n\n  const onSelect = ({ title }) => {\n    setValue(title);\n  };\n\n  const onChangeText = (query) => {\n    setValue(query);\n    setData(DATA.filter(item => item.title.toLowerCase().includes(query.toLowerCase())));\n  };\n\n  const renderItem = ({ item }) => (\n    <React.Fragment>\n      <Avatar size='small' source={require('../../../assets/images/brand-logo.png')} />\n      <View style={{ marginHorizontal: 8 }}>\n        <Text>{item.title}</Text>\n        <Text appearance='hint' category='p2'>\n          {`${item.releaseYear}`}\n        </Text>\n      </View>\n    </React.Fragment>\n  );\n\n  return (\n    <Layout style={styles.container}>\n      <Autocomplete\n        placeholder='Place your Text'\n        value={value}\n        data={data}\n        renderItem={renderItem}\n        onChangeText={onChangeText}\n        onSelect={onSelect}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 228,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Autocomplete,\n  Layout,\n} from '@ui-kitten/components';\n\nconst DATA = [\n  { id: 1, title: 'Star Wars', releaseYear: 1977 },\n  { id: 2, title: 'Back to the Future', releaseYear: 1985 },\n  { id: 3, title: 'The Matrix', releaseYear: 1999 },\n  { id: 4, title: 'Inception', releaseYear: 2010 },\n  { id: 5, title: 'Interstellar', releaseYear: 2014 },\n];\n\nconst PLACEHOLDER_DATA = [\n  { title: 'No Results 🙀' },\n];\n\nexport const AutocompletePlaceholderDataShowcase = () => {\n\n  const [value, setValue] = React.useState(null);\n  const [data, setData] = React.useState(DATA);\n\n  const onSelect = ({ title }) => {\n    setValue(title);\n  };\n\n  const onChangeText = (query) => {\n    setValue(query);\n    setData(DATA.filter(item => item.title.toLowerCase().includes(query.toLowerCase())));\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <Autocomplete\n        placeholder='Place wrong Text'\n        value={value}\n        data={data}\n        placeholderData={PLACEHOLDER_DATA}\n        onChangeText={onChangeText}\n        onSelect={onSelect}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 228,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Autocomplete,\n  Layout,\n} from '@ui-kitten/components';\n\nconst DATA = [\n  { id: 1, title: 'Star Wars', releaseYear: 1977 },\n  { id: 2, title: 'Back to the Future', releaseYear: 1985 },\n  { id: 3, title: 'The Matrix', releaseYear: 1999 },\n  { id: 4, title: 'Inception', releaseYear: 2010 },\n  { id: 5, title: 'Interstellar', releaseYear: 2014 },\n];\n\nexport const AutocompleteSimpleUsageShowcase = () => {\n\n  const [value, setValue] = React.useState(null);\n  const [data, setData] = React.useState(DATA);\n\n  const onSelect = ({ title }) => {\n    setValue(title);\n  };\n\n  const onChangeText = (query) => {\n    setValue(query);\n    setData(DATA.filter(item => item.title.toLowerCase().includes(query.toLowerCase())));\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <Autocomplete\n        placeholder='Place your Text'\n        value={value}\n        data={data}\n        onChangeText={onChangeText}\n        onSelect={onSelect}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 228,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Autocomplete,\n  Layout,\n} from '@ui-kitten/components';\n\nconst DATA = [\n  { id: 1, title: 'Star Wars', releaseYear: 1977 },\n  { id: 2, title: 'Back to the Future', releaseYear: 1985 },\n  { id: 3, title: 'The Matrix', releaseYear: 1999 },\n  { id: 4, title: 'Inception', releaseYear: 2010 },\n  { id: 5, title: 'Interstellar', releaseYear: 2014 },\n];\n\nconst useAutocompleteChanges = (initialProps) => {\n  const [value, setValue] = React.useState(initialProps.value);\n  const [data, setData] = React.useState(initialProps.data);\n\n  const onSelect = ({ title }) => {\n    setValue(title);\n  };\n\n  const onChangeText = (query) => {\n    setValue(query);\n    setData(DATA.filter(item => item.title.toLowerCase().includes(query.toLowerCase())));\n  };\n\n  return { value, data, onSelect, onChangeText };\n};\n\nexport const AutocompleteSizeShowcase = () => {\n\n  const smallAutocompleteChanges = useAutocompleteChanges({ value: null, data: DATA });\n  const mediumAutocompleteChanges = useAutocompleteChanges({ value: null, data: DATA });\n  const largeAutocompleteChanges = useAutocompleteChanges({ value: null, data: DATA });\n\n  return (\n    <Layout>\n\n      <Autocomplete\n        style={styles.autocomplete}\n        size='small'\n        placeholder='Small'\n        {...smallAutocompleteChanges}\n      />\n\n      <Autocomplete\n        style={styles.autocomplete}\n        size='medium'\n        placeholder='Medium'\n        {...mediumAutocompleteChanges}\n      />\n\n      <Autocomplete\n        style={styles.autocomplete}\n        size='large'\n        placeholder='Large'\n        {...largeAutocompleteChanges}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  autocomplete: {\n    margin: 8,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Autocomplete,\n  Layout,\n} from '@ui-kitten/components';\n\nconst DATA = [\n  { id: 1, title: 'Star Wars', releaseYear: 1977 },\n  { id: 2, title: 'Back to the Future', releaseYear: 1985 },\n  { id: 3, title: 'The Matrix', releaseYear: 1999 },\n  { id: 4, title: 'Inception', releaseYear: 2010 },\n  { id: 5, title: 'Interstellar', releaseYear: 2014 },\n];\n\nexport const AutocompleteStatesShowcase = () => {\n\n  const [value, setValue] = React.useState(null);\n  const [data, setData] = React.useState(DATA);\n\n  const onChangeText = (query) => {\n    setValue(query);\n    setData(DATA.filter(item => item.title.toLowerCase().includes(query.toLowerCase())));\n  };\n\n  const onSelect = ({ title }) => {\n    setValue(title);\n  };\n\n  return (\n    <Layout style={styles.container}>\n\n      <Autocomplete\n        style={styles.autocomplete}\n        placeholder='Active'\n        value={value}\n        data={data}\n        onChangeText={onChangeText}\n        onSelect={onSelect}\n      />\n\n      <Autocomplete\n        style={styles.autocomplete}\n        disabled={true}\n        placeholder='Disabled'\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 228,\n  },\n  autocomplete: {\n    margin: 8,\n  },\n});\n\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Autocomplete,\n  Layout,\n} from '@ui-kitten/components';\n\nconst DATA = [\n  { id: 1, title: 'Star Wars', releaseYear: 1977 },\n  { id: 2, title: 'Back to the Future', releaseYear: 1985 },\n  { id: 3, title: 'The Matrix', releaseYear: 1999 },\n  { id: 4, title: 'Inception', releaseYear: 2010 },\n  { id: 5, title: 'Interstellar', releaseYear: 2014 },\n];\n\nconst useAutocompleteChanges = (initialProps) => {\n  const [value, setValue] = React.useState(initialProps.value);\n  const [data, setData] = React.useState(initialProps.data);\n\n  const onSelect = ({ title }) => {\n    setValue(title);\n  };\n\n  const onChangeText = (query) => {\n    setValue(query);\n    setData(DATA.filter(item => item.title.toLowerCase().includes(query.toLowerCase())));\n  };\n\n  return { value, data, onSelect, onChangeText };\n};\n\nexport const AutocompleteStatusShowcase = () => {\n\n  const primaryAutocompleteChanges = useAutocompleteChanges({ value: null, data: DATA });\n  const successAutocompleteChanges = useAutocompleteChanges({ value: null, data: DATA });\n  const infoAutocompleteChanges = useAutocompleteChanges({ value: null, data: DATA });\n  const warningAutocompleteChanges = useAutocompleteChanges({ value: null, data: DATA });\n  const dangerAutocompleteChanges = useAutocompleteChanges({ value: null, data: DATA });\n  const basicAutocompleteChanges = useAutocompleteChanges({ value: null, data: DATA });\n  const controlAutocompleteChanges = useAutocompleteChanges({ value: null, data: DATA });\n\n  return (\n    <Layout>\n\n      <Autocomplete\n        style={styles.autocomplete}\n        status='primary'\n        placeholder='Primary'\n        {...primaryAutocompleteChanges}\n      />\n\n      <Autocomplete\n        style={styles.autocomplete}\n        status='success'\n        placeholder='Success'\n        {...successAutocompleteChanges}\n      />\n\n      <Autocomplete\n        style={styles.autocomplete}\n        status='info'\n        placeholder='Info'\n        {...infoAutocompleteChanges}\n      />\n\n      <Autocomplete\n        style={styles.autocomplete}\n        status='warning'\n        placeholder='Warning'\n        {...warningAutocompleteChanges}\n      />\n\n      <Autocomplete\n        style={styles.autocomplete}\n        status='danger'\n        placeholder='Danger'\n        {...dangerAutocompleteChanges}\n      />\n\n      <Autocomplete\n        style={styles.autocomplete}\n        status='basic'\n        placeholder='Basic'\n        {...basicAutocompleteChanges}\n      />\n\n      <View style={styles.controlContainer}>\n        <Autocomplete\n          style={styles.autocomplete}\n          status='control'\n          placeholder='Control'\n          {...controlAutocompleteChanges}\n        />\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  autocomplete: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  Autocomplete,\n  Layout,\n} from '@ui-kitten/components';\n\nconst CloseIcon = (style) => (\n  <Icon {...style} name='close' />\n);\n\nconst DATA = [\n  { id: 1, title: 'Star Wars', releaseYear: 1977 },\n  { id: 2, title: 'Back to the Future', releaseYear: 1985 },\n  { id: 3, title: 'The Matrix', releaseYear: 1999 },\n  { id: 4, title: 'Inception', releaseYear: 2010 },\n  { id: 5, title: 'Interstellar', releaseYear: 2014 },\n];\n\nexport const AutocompleteWithIconShowcase = () => {\n\n  const [value, setValue] = React.useState(null);\n  const [data, setData] = React.useState(DATA);\n\n  const onSelect = ({ title }) => {\n    setValue(title);\n  };\n\n  const onChangeText = (query) => {\n    setValue(query);\n    setData(DATA.filter(item => item.title.toLowerCase().includes(query.toLowerCase())));\n  };\n\n  const clearInput = () => {\n    setValue('');\n    setData(DATA);\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <Autocomplete\n        placeholder='Place your Text'\n        value={value}\n        data={data}\n        icon={CloseIcon}\n        onIconPress={clearInput}\n        onChangeText={onChangeText}\n        onSelect={onSelect}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 228,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Autocomplete,\n  Layout,\n} from '@ui-kitten/components';\n\nconst DATA = [\n  { id: 1, title: 'Star Wars', releaseYear: 1977 },\n  { id: 2, title: 'Back to the Future', releaseYear: 1985 },\n  { id: 3, title: 'The Matrix', releaseYear: 1999 },\n  { id: 4, title: 'Inception', releaseYear: 2010 },\n  { id: 5, title: 'Interstellar', releaseYear: 2014 },\n];\n\nexport const AutocompleteWithLabelShowcase = () => {\n\n  const [value, setValue] = React.useState(null);\n  const [data, setData] = React.useState(DATA);\n\n  const onSelect = ({ title }) => {\n    setValue(title);\n  };\n\n  const onChangeText = (query) => {\n    setValue(query);\n    setData(DATA.filter(item => item.title.toLowerCase().includes(query.toLowerCase())));\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <Autocomplete\n        label='Movies'\n        placeholder='Place your Text'\n        value={value}\n        data={data}\n        onChangeText={onChangeText}\n        onSelect={onSelect}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 228,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar } from '@ui-kitten/components';\n\nexport const AvatarInlineStylingShowcase = () => (\n  <Avatar\n    style={styles.avatar}\n    source={require('../../../assets/images/brand-logo.png')}\n  />\n);\n\nconst styles = StyleSheet.create({\n  avatar: {\n    width: 96,\n    height: 96,\n    borderRadius: 16,\n  },\n});\n","import React from 'react';\nimport { Avatar } from '@ui-kitten/components';\n\nexport const AvatarRemoteImagesShowcase = () => (\n  <Avatar source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }} />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const AvatarShapeShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Avatar style={styles.avatar} shape='square' source={require('../../../assets/images/brand-logo.png')} />\n\n    <Avatar style={styles.avatar} shape='rounded' source={require('../../../assets/images/brand-logo.png')} />\n\n    <Avatar style={styles.avatar} shape='round' source={require('../../../assets/images/brand-logo.png')} />\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: 8,\n  },\n  avatar: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar } from '@ui-kitten/components';\n\nexport const AvatarSimpleUsageShowcase = () => (\n  <Avatar\n    style={styles.avatar}\n    source={require('../../../assets/images/brand-logo.png')}\n  />\n);\n\nconst styles = StyleSheet.create({\n  avatar: {\n    margin: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const AvatarSizeShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Avatar style={styles.avatar} size='tiny' source={require('../../../assets/images/brand-logo.png')}/>\n\n    <Avatar style={styles.avatar} size='small' source={require('../../../assets/images/brand-logo.png')}/>\n\n    <Avatar style={styles.avatar} size='medium' source={require('../../../assets/images/brand-logo.png')}/>\n\n    <Avatar style={styles.avatar} size='large' source={require('../../../assets/images/brand-logo.png')}/>\n\n    <Avatar style={styles.avatar} size='giant' source={require('../../../assets/images/brand-logo.png')}/>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: 8,\n  },\n  avatar: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n} from '@ui-kitten/components';\n\nexport const BottomNavigationInlineStylingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      style={styles.bottomNavigation}\n      indicatorStyle={styles.indicator}\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}>\n      <BottomNavigationTab title='USERS'/>\n      <BottomNavigationTab title='ORDERS'/>\n      <BottomNavigationTab title='TRANSACTION'/>\n    </BottomNavigation>\n  );\n};\n\nconst styles = StyleSheet.create({\n  bottomNavigation: { backgroundColor: 'white' },\n  indicator: { backgroundColor: 'black' },\n});\n","import React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n} from '@ui-kitten/components';\n\nexport const BottomNavigationSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}>\n      <BottomNavigationTab title='USERS'/>\n      <BottomNavigationTab title='ORDERS'/>\n      <BottomNavigationTab title='TRANSACTIONS'/>\n    </BottomNavigation>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { BottomNavigationTab } from '@ui-kitten/components';\n\nexport const BottomNavigationTabInlineStylingShowcase = () => (\n  <BottomNavigationTab\n    style={styles.tab}\n    titleStyle={styles.tabTitle}\n    title='USERS'\n  />\n);\n\nconst styles = StyleSheet.create({\n  tab: { backgroundColor: '#EDF1F7' },\n  tabTitle: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { BottomNavigationTab } from '@ui-kitten/components';\n\nexport const BottomNavigationTabSimpleUsageShowcase = () => (\n  <BottomNavigationTab title='USERS'/>\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport { Image } from 'react-native';\nimport {\n  BottomNavigationTab,\n  Icon,\n  Layout,\n} from '@ui-kitten/components';\n\nconst PersonIcon = (style) => (\n  <Icon {...style} name='person'/>\n);\n\nconst RemotePersonIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/person.png' }}\n  />\n);\n\nexport const BottomNavigationTabWithIconShowcase = () => (\n  <Layout>\n\n    <BottomNavigationTab title='EVA ICON' icon={PersonIcon}/>\n\n    <BottomNavigationTab title='REMOTE EVA ICON' icon={RemotePersonIcon}/>\n\n  </Layout>\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n  Icon,\n  Layout,\n} from '@ui-kitten/components';\n\nconst PersonIcon = (style) => (\n  <Icon {...style} name='person-outline' />\n);\n\nconst BellIcon = (style) => (\n  <Icon {...style} name='bell-outline' />\n);\n\nconst EmailIcon = (style) => (\n  <Icon {...style} name='email-outline' />\n);\n\nexport const BottomNavigationWithIconsShowcase = () => {\n\n  const [topSelectedIndex, setTopSelectedIndex] = React.useState(0);\n  const [bottomSelectedIndex, setBottomSelectedIndex] = React.useState(0);\n\n  return (\n    <Layout>\n\n      <BottomNavigation\n        style={styles.bottomNavigation}\n        selectedIndex={topSelectedIndex}\n        onSelect={setTopSelectedIndex}>\n        <BottomNavigationTab icon={PersonIcon}/>\n        <BottomNavigationTab icon={BellIcon}/>\n        <BottomNavigationTab icon={EmailIcon}/>\n      </BottomNavigation>\n\n      <BottomNavigation\n        style={styles.bottomNavigation}\n        selectedIndex={bottomSelectedIndex}\n        onSelect={setBottomSelectedIndex}>\n        <BottomNavigationTab title='USERS' icon={PersonIcon}/>\n        <BottomNavigationTab title='ORDERS' icon={BellIcon}/>\n        <BottomNavigationTab title='TRANSACTIONS' icon={EmailIcon}/>\n      </BottomNavigation>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  bottomNavigation: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n} from '@ui-kitten/components';\n\nexport const BottomNavigationWithoutIndicatorShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      appearance='noIndicator'\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}>\n      <BottomNavigationTab title='USERS'/>\n      <BottomNavigationTab title='ORDERS'/>\n      <BottomNavigationTab title='TRANSACTIONS'/>\n    </BottomNavigation>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const ButtonAppearancesShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Button style={styles.button} appearance='filled'>FILLED</Button>\n\n    <Button style={styles.button} appearance='outline'>OUTLINE</Button>\n\n    <Button style={styles.button} appearance='ghost'>GHOST</Button>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Button,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const ButtonGhostShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Button style={styles.button} appearance='ghost' status='primary'>PRIMARY</Button>\n\n    <Button style={styles.button} appearance='ghost' status='success'>SUCCESS</Button>\n\n    <Button style={styles.button} appearance='ghost' status='info'>INFO</Button>\n\n    <Button style={styles.button} appearance='ghost' status='warning'>WARNING</Button>\n\n    <Button style={styles.button} appearance='ghost' status='danger'>DANGER</Button>\n\n    <Button style={styles.button} appearance='ghost' status='basic'>BASIC</Button>\n\n    <View style={styles.controlContainer}>\n      <Button style={styles.button} appearance='ghost' status='control'>CONTROL</Button>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Button,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const ButtonOutlineShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Button style={styles.button} appearance='outline' status='primary'>PRIMARY</Button>\n\n    <Button style={styles.button} appearance='outline' status='success'>SUCCESS</Button>\n\n    <Button style={styles.button} appearance='outline' status='info'>INFO</Button>\n\n    <Button style={styles.button} appearance='outline' status='warning'>WARNING</Button>\n\n    <Button style={styles.button} appearance='outline' status='danger'>DANGER</Button>\n\n    <Button style={styles.button} appearance='outline' status='basic'>BASIC</Button>\n\n    <View style={styles.controlContainer}>\n      <Button style={styles.button} appearance='outline' status='control'>CONTROL</Button>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { Button } from '@ui-kitten/components';\n\nexport const ButtonSimpleUsageShowcase = () => {\n\n  const [pressCounter, setPressCounter] = React.useState(0);\n\n  const onPress = () => {\n    setPressCounter(pressCounter + 1);\n  };\n\n  return (\n    <Button onPress={onPress}>\n      {`PRESSED ${pressCounter} TIMES`}\n    </Button>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const ButtonSizeShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Button style={styles.button} size='tiny'>TINY</Button>\n\n    <Button style={styles.button} size='small'>SMALL</Button>\n\n    <Button style={styles.button} size='medium'>MEDIUM</Button>\n\n    <Button style={styles.button} size='large'>LARGE</Button>\n\n    <Button style={styles.button} size='giant'>GIANT</Button>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const ButtonStatesShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Button style={styles.button}>ACTIVE</Button>\n\n    <Button style={styles.button} disabled={true}>DISABLED</Button>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Button,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const ButtonStatusShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Button style={styles.button} status='primary'>PRIMARY</Button>\n\n    <Button style={styles.button} status='success'>SUCCESS</Button>\n\n    <Button style={styles.button} status='info'>INFO</Button>\n\n    <Button style={styles.button} status='warning'>WARNING</Button>\n\n    <Button style={styles.button} status='danger'>DANGER</Button>\n\n    <Button style={styles.button} status='basic'>BASIC</Button>\n\n    <View style={styles.controlContainer}>\n      <Button style={styles.button} status='control'>CONTROL</Button>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: 8,\n  },\n  button: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Icon,\n  Layout,\n} from '@ui-kitten/components';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport const ButtonWithIconShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Button style={styles.button} status='primary' icon={StarIcon}>PRIMARY</Button>\n\n    <Button style={[styles.button, { flexDirection: 'row-reverse' }]} status='success' icon={StarIcon}>SUCCESS</Button>\n\n    <Button style={styles.button} status='danger' icon={StarIcon}/>\n\n    <Button style={styles.button} appearance='ghost' status='danger' icon={StarIcon}/>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const ButtonGroupAppearanceShowcase = () => (\n  <Layout style={styles.container}>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='filled'>\n      <Button>L</Button>\n      <Button>M</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline'>\n      <Button>L</Button>\n      <Button>M</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    padding: 8,\n  },\n  buttonGroup: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n} from '@ui-kitten/components';\n\nexport const ButtonGroupInlineStylingShowcase = () => (\n  <ButtonGroup style={styles.buttonGroup}>\n    <Button>L</Button>\n    <Button>M</Button>\n    <Button>R</Button>\n  </ButtonGroup>\n);\n\nconst styles = StyleSheet.create({\n  buttonGroup: {\n    margin: 16,\n    borderRadius: 8,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const ButtonGroupOutlineShowcase = () => (\n  <Layout style={styles.container}>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='primary'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='success'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='info'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='warning'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='danger'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='basic'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <View style={styles.controlContainer}>\n      <ButtonGroup style={styles.buttonGroup} appearance='outline' status='control'>\n        <Button>L</Button>\n        <Button>R</Button>\n      </ButtonGroup>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: 8,\n  },\n  buttonGroup: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n  Text,\n} from '@ui-kitten/components';\n\nexport const ButtonGroupSimpleUsageShowcase = () => {\n\n  const [text, setText] = React.useState('Press any button');\n\n  const onLeftPress = () => {\n    setText('Left button pressed');\n  };\n\n  const onMiddlePress = () => {\n    setText('Middle button pressed');\n  };\n\n  const onRightPress = () => {\n    setText('Right button pressed');\n  };\n\n  return (\n    <Layout style={styles.container}>\n\n      <ButtonGroup>\n        <Button onPress={onLeftPress}>L</Button>\n        <Button onPress={onMiddlePress}>M</Button>\n        <Button onPress={onRightPress}>R</Button>\n      </ButtonGroup>\n\n      <Text style={styles.text}>{text}</Text>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  text: {\n    marginHorizontal: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const ButtonGroupSizeShowcase = () => (\n  <Layout style={styles.container}>\n\n    <ButtonGroup style={styles.buttonGroup} size='tiny'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} size='small'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} size='medium'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} size='large'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} size='giant'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: 8,\n  },\n  buttonGroup: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const ButtonGroupStatusShowcase = () => (\n  <Layout style={styles.container}>\n\n    <ButtonGroup style={styles.buttonGroup} status='primary'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='success'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='info'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='warning'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='danger'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='basic'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <View style={styles.controlContainer}>\n      <ButtonGroup style={styles.buttonGroup} status='control'>\n        <Button>L</Button>\n        <Button>R</Button>\n      </ButtonGroup>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: 8,\n  },\n  buttonGroup: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Icon,\n  Layout,\n} from '@ui-kitten/components';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport const ButtonGroupWithIconsShowcase = () => (\n  <Layout style={styles.container}>\n\n    <ButtonGroup style={styles.buttonGroup}>\n      <Button icon={StarIcon}/>\n      <Button icon={StarIcon}/>\n      <Button icon={StarIcon}/>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='success'>\n      <Button icon={StarIcon}/>\n      <Button icon={StarIcon}/>\n      <Button icon={StarIcon}/>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='danger'>\n      <Button icon={StarIcon}/>\n      <Button icon={StarIcon}/>\n      <Button icon={StarIcon}/>\n    </ButtonGroup>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  buttonGroup: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { Calendar } from '@ui-kitten/components';\n\nexport const CalendarBoundingMonthShowcase = () => {\n\n  const [date, setDate] = React.useState(null);\n\n  return (\n    <Calendar\n      date={date}\n      onSelect={setDate}\n      boundingMonth={false}\n    />\n  );\n};\n","import React from 'react';\nimport { Calendar } from '@ui-kitten/components';\n\nconst now = new Date();\nconst minDate = new Date(now.getFullYear(), now.getMonth(), 15);\nconst maxDate = new Date(now.getFullYear(), now.getMonth() + 1, 15);\n\nexport const CalendarBoundsShowcase = () => {\n\n  const [date, setDate] = React.useState(null);\n\n  return (\n    <Calendar\n      min={minDate}\n      max={maxDate}\n      date={date}\n      onSelect={setDate}\n    />\n  );\n};\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Calendar,\n  Text,\n} from '@ui-kitten/components';\n\nconst DayCell = ({ date }, style) => (\n  <View\n    style={[styles.dayContainer, style.container]}>\n    <Text style={style.text}>{`${date.getDate()}`}</Text>\n    <Text style={[style.text, styles.value]}>\n      {`${100 * date.getDate() + Math.pow(date.getDate(), 2)}$`}\n    </Text>\n  </View>\n);\n\nexport const CalendarCustomDayShowcase = () => {\n\n  const [selectedDate, setSelectedDate] = React.useState(null);\n\n  return (\n    <Calendar\n      date={selectedDate}\n      onSelect={setSelectedDate}\n      renderDay={DayCell}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  dayContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: '400',\n  },\n});\n","import React from 'react';\nimport {\n  Calendar,\n  NativeDateService,\n} from '@ui-kitten/components';\n\nconst i18n = {\n  dayNames: {\n    short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n    long: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  },\n  monthNames: {\n    short: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dev'],\n    long: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  },\n};\n\nconst dateService = new NativeDateService('en', { i18n });\n\nexport const CalendarCustomLocaleShowcase = () => {\n\n  const [date, setDate] = React.useState(null);\n\n  return (\n    <Calendar\n      dateService={dateService}\n      date={date}\n      onSelect={setDate}\n    />\n  );\n};\n","import React from 'react';\nimport { Calendar } from '@ui-kitten/components';\n\nexport const CalendarFilterShowcase = () => {\n\n  const [selectedDate, setSelectedDate] = React.useState(null);\n\n  const filter = (date) => date.getDay() !== 0 && date.getDay() !== 6;\n\n  return (\n    <Calendar\n      date={selectedDate}\n      onSelect={setSelectedDate}\n      filter={filter}\n    />\n  );\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  DateService,\n  TranslationWidth,\n} from '@ui-kitten/components';\n// @ts-ignore\nimport _moment, {\n  default as _rollupMoment,\n  Moment,\n} from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\nexport class MomentDateService extends DateService<Moment> {\n\n  protected localeData: {\n    firstDayOfWeek: number,\n    defaultFormat: string,\n    months: { [key: string]: string[] },\n    days: { [key: string]: string[] },\n  };\n\n  constructor(locale: string = 'en') {\n    super();\n    this.setLocale(locale);\n  }\n\n  public setLocale(locale: string) {\n    super.setLocale(locale);\n    this.setMomentLocaleData(locale);\n  }\n\n  public addDay(date: Moment, days: number): Moment {\n    return this.clone(date).add({ days });\n  }\n\n  public addMonth(date: Moment, months: number): Moment {\n    return this.clone(date).add({ months });\n  }\n\n  public addYear(date: Moment, years: number): Moment {\n    return this.clone(date).add({ years });\n  }\n\n  public clone(date: Moment): Moment {\n    return date.clone().locale(this.locale);\n  }\n\n  public compareDates(date1: Moment, date2: Moment): number {\n    return this.getYear(date1) - this.getYear(date2) ||\n      this.getMonth(date1) - this.getMonth(date2) ||\n      this.getDate(date1) - this.getDate(date2);\n  }\n\n  public createDate(year: number, month: number, date: number): Moment {\n    return moment.utc([year, month, date]);\n  }\n\n  public format(date: Moment, format: string): string {\n    if (date) {\n      return date.format(format || this.localeData.defaultFormat);\n    }\n\n    return '';\n  }\n\n  public getDate(date: Moment): number {\n    return this.clone(date).date();\n  }\n\n  public getDayOfWeek(date: Moment): number {\n    return this.clone(date).day();\n  }\n\n  public getDayOfWeekNames(style: TranslationWidth = TranslationWidth.SHORT): string[] {\n    return this.localeData.days[style];\n  }\n\n  public getFirstDayOfWeek(): number {\n    return this.localeData.firstDayOfWeek;\n  }\n\n  public getMonth(date: Moment): number {\n    return this.clone(date).month();\n  }\n\n  public getMonthEnd(date: Moment): Moment {\n    return this.clone(date).endOf('month');\n  }\n\n  public getMonthName(date: Moment, style: TranslationWidth = TranslationWidth.SHORT): string {\n    const month: number = this.getMonth(date);\n\n    return this.getMonthNameByIndex(month, style);\n  }\n\n  public getMonthNameByIndex(month: number, style: TranslationWidth = TranslationWidth.SHORT): string {\n    return this.localeData.months[style][month];\n  }\n\n  public getMonthStart(date: Moment): Moment {\n    return this.clone(date).startOf('month');\n  }\n\n  public getNumberOfDaysInMonth(date: Moment): number {\n    return this.clone(date).daysInMonth();\n  }\n\n  public getYear(date: Moment): number {\n    return this.clone(date).year();\n  }\n\n  public getYearEnd(date: Moment): Moment {\n    return this.clone(date).endOf('year');\n  }\n\n  public getYearStart(date: Moment): Moment {\n    return this.clone(date).startOf('year');\n  }\n\n  public isSameDay(date1: Moment, date2: Moment): boolean {\n    return this.isSameMonth(date1, date2) && this.getDate(date1) === this.getDate(date2);\n  }\n\n  public isSameMonth(date1: Moment, date2: Moment): boolean {\n    return this.isSameYear(date1, date2) && this.getMonth(date1) === this.getMonth(date2);\n  }\n\n  public isSameYear(date1: Moment, date2: Moment): boolean {\n    return this.getYear(date1) === this.getYear(date2);\n  }\n\n  public isValidDateString(date: string, format: string): boolean {\n    return moment(date, format).isValid();\n  }\n\n  public parse(date: string, format: string): Moment {\n    return moment(date, format);\n  }\n\n  public today(): Moment {\n    return moment();\n  }\n\n  public getId(): string {\n    return 'moment';\n  }\n\n  protected setMomentLocaleData(locale: string) {\n    const momentLocaleData = moment.localeData(locale);\n\n    this.localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      defaultFormat: momentLocaleData.longDateFormat('L'),\n      months: {\n        [TranslationWidth.SHORT]: momentLocaleData.monthsShort(),\n        [TranslationWidth.LONG]: momentLocaleData.months(),\n      },\n      days: {\n        [TranslationWidth.SHORT]: momentLocaleData.weekdaysShort(),\n        [TranslationWidth.LONG]: momentLocaleData.weekdays(),\n      },\n    };\n  }\n}\n","/**\n * IMPORTANT: To use Moment make sure to install Moment Date Service\n * npm i @ui-kitten/moment\n */\n\nimport React from 'react';\nimport { Calendar } from '@ui-kitten/components';\nimport { MomentDateService } from '@ui-kitten/moment';\nimport moment from 'moment';\n\nconst dateService = new MomentDateService();\n\nexport const CalendarMomentShowcase = () => {\n\n  const [date, setDate] = React.useState(moment());\n\n  return (\n    <Calendar\n      dateService={dateService}\n      date={date}\n      onSelect={setDate}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n  Text,\n} from '@ui-kitten/components';\n\nexport const CalendarSimpleUsageShowcase = () => {\n\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <Layout style={styles.container}>\n\n      <Text\n        style={styles.text}\n        category='h6'>\n        {`Selected date: ${date.toLocaleDateString()}`}\n      </Text>\n\n      <Calendar\n        date={date}\n        onSelect={setDate}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n  text: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport {\n  Calendar,\n  NativeDateService,\n} from '@ui-kitten/components';\n\nconst dateService = new NativeDateService('en', { startDayOfWeek: 1 });\n\nexport const CalendarStartDayOfWeekShowcase = () => {\n\n  const [date, setDate] = React.useState(null);\n\n  return (\n    <Calendar\n      dateService={dateService}\n      date={date}\n      onSelect={setDate}\n    />\n  );\n};\n","import React from 'react';\nimport { RangeCalendar } from '@ui-kitten/components';\n\nexport const RangeCalendarSimpleUsageShowcase = () => {\n\n  const [range, setRange] = React.useState({ startDate: null, endDate: null });\n\n  return (\n    <RangeCalendar\n      range={range}\n      onSelect={setRange}\n    />\n  );\n};\n","import React from 'react';\nimport {\n  Image,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Card,\n  Text,\n} from '@ui-kitten/components';\n\nexport const CustomHeader = () => (\n  <React.Fragment>\n    <Image\n      style={styles.headerImage}\n      source={{ uri: 'https://cdn.pixabay.com/photo/2017/01/20/00/30/maldives-1993704__340.jpg' }}\n    />\n    <Text\n      style={styles.headerText}\n      category='h6'>\n      Maldives\n    </Text>\n  </React.Fragment>\n);\n\nexport const CardCustomHeaderShowcase = () => (\n  <Card header={CustomHeader}>\n    <Text>\n      The Maldives, officially the Republic of Maldives, is a small country in South Asia,\n      located in the Arabian Sea of the Indian Ocean.\n      It lies southwest of Sri Lanka and India, about 1,000 kilometres (620 mi) from the Asian continent\n    </Text>\n  </Card>\n);\n\nconst styles = StyleSheet.create({\n  headerText: {\n    marginHorizontal: 24,\n    marginVertical: 16,\n  },\n  headerImage: {\n    flex: 1,\n    height: 192,\n  },\n});\n","import React from 'react';\nimport {\n  Card,\n  Text,\n} from '@ui-kitten/components';\n\nexport const CardSimpleUsageShowcase = () => (\n  <Card>\n    <Text>\n      The Maldives, officially the Republic of Maldives, is a small country in South Asia,\n      located in the Arabian Sea of the Indian Ocean.\n      It lies southwest of Sri Lanka and India, about 1,000 kilometres (620 mi) from the Asian continent\n    </Text>\n  </Card>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Card,\n  CardHeader,\n  Layout,\n  Text,\n} from '@ui-kitten/components';\n\nconst Header = () => (\n  <CardHeader title='Maldives'/>\n);\n\nexport const CardStatusesShowcase = () => (\n  <Layout>\n\n    <Card style={styles.card} header={Header} status='success'>\n      <Text>\n        The Maldives, officially the Republic of Maldives, is a small country in South Asia,\n        located in the Arabian Sea of the Indian Ocean.\n        It lies southwest of Sri Lanka and India, about 1,000 kilometres (620 mi) from the Asian continent\n      </Text>\n    </Card>\n\n    <Card style={styles.card} header={Header} status='danger'>\n      <Text>\n        The Maldives, officially the Republic of Maldives, is a small country in South Asia,\n        located in the Arabian Sea of the Indian Ocean.\n        It lies southwest of Sri Lanka and India, about 1,000 kilometres (620 mi) from the Asian continent\n      </Text>\n    </Card>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  card: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Text,\n} from '@ui-kitten/components';\n\nconst Header = () => (\n  <CardHeader\n    title='Maldives'\n    description='By Wikipedia'\n  />\n);\n\nconst Footer = () => (\n  <View style={styles.footerContainer}>\n    <Button\n      style={styles.footerControl}\n      size='small'\n      status='basic'>\n      CANCEL\n    </Button>\n    <Button\n      style={styles.footerControl}\n      size='small'>\n      ACCEPT\n    </Button>\n  </View>\n);\n\nexport const CardWithHeaderAndFooterShowcase = () => (\n  <Card header={Header} footer={Footer}>\n    <Text>\n      The Maldives, officially the Republic of Maldives, is a small country in South Asia,\n      located in the Arabian Sea of the Indian Ocean.\n      It lies southwest of Sri Lanka and India, about 1,000 kilometres (620 mi) from the Asian continent\n    </Text>\n  </Card>\n);\n\nconst styles = StyleSheet.create({\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  CheckBox,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const CheckboxIndeterminateShowcase = () => {\n\n  const [allChecked, setAllChecked] = React.useState(false);\n  const [indeterminate, setIndeterminate] = React.useState(false);\n  const [readChecked, setReadChecked] = React.useState(false);\n  const [writeChecked, setWriteChecked] = React.useState(false);\n\n  const onGroupCheckedChange = (checked) => {\n    setReadChecked(checked);\n    setWriteChecked(checked);\n    setAllChecked(checked);\n  };\n\n  const onReadCheckedChange = (checked) => {\n    setReadChecked(checked);\n    updateGroup(checked, writeChecked);\n  };\n\n  const onWriteCheckedChange = (checked) => {\n    setWriteChecked(checked);\n    updateGroup(checked, readChecked);\n  };\n\n  const updateGroup = (...states) => {\n    const someChecked = states.some((item) => item === true);\n    const everyChecked = states.every((item) => item === true);\n\n    if (someChecked && !everyChecked) {\n      setAllChecked(true);\n      setIndeterminate(true);\n    } else if (!someChecked && !everyChecked) {\n      setAllChecked(false);\n      setIndeterminate(false);\n    } else if (everyChecked) {\n      setAllChecked(true);\n      setIndeterminate(false);\n    }\n  };\n\n  return (\n    <Layout>\n      <CheckBox\n        style={styles.group}\n        text='Permissions'\n        checked={allChecked}\n        indeterminate={indeterminate}\n        onChange={onGroupCheckedChange}\n      />\n      <CheckBox\n        text='Read'\n        style={styles.option}\n        checked={readChecked}\n        onChange={onReadCheckedChange}\n      />\n      <CheckBox\n        text='Write'\n        style={styles.option}\n        checked={writeChecked}\n        onChange={onWriteCheckedChange}\n      />\n    </Layout>\n  );\n};\n\nexport const styles = StyleSheet.create({\n  group: {\n    marginVertical: 4,\n  },\n  option: {\n    marginVertical: 4,\n    marginHorizontal: 12,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { CheckBox } from '@ui-kitten/components';\n\nexport const CheckboxInlineStylingShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return (\n    <CheckBox\n      style={styles.checkbox}\n      textStyle={styles.text}\n      checked={checked}\n      text='Place your Text'\n      onChange={onCheckedChange}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  checkbox: {\n    margin: 8,\n  },\n  text: {\n    color: '#3366FF',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { CheckBox } from '@ui-kitten/components';\n\nexport const CheckboxSimpleUsageShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return (\n    <CheckBox\n      text={`Checked: ${checked}`}\n      checked={checked}\n      onChange={onCheckedChange}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  CheckBox,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const CheckboxStatesShowcase = () => {\n\n  const [activeChecked, setActiveChecked] = React.useState(false);\n  const [indeterminateChecked, setIndeterminateChecked] = React.useState(true);\n  const [indeterminate, setIndeterminate] = React.useState(false);\n\n  const onActiveChange = (isChecked) => {\n    setActiveChecked(isChecked);\n  };\n\n  const onIndeterminateChange = (isChecked, isIndeterminate) => {\n    setIndeterminateChecked(isChecked);\n    setIndeterminate(isIndeterminate);\n  };\n\n  return (\n    <Layout style={styles.container}>\n\n      <CheckBox\n        style={styles.checkbox}\n        text='Active'\n        checked={activeChecked}\n        onChange={onActiveChange}\n      />\n\n      <CheckBox\n        style={styles.checkbox}\n        text='Indeterminate'\n        checked={indeterminateChecked}\n        indeterminate={indeterminate}\n        onChange={onIndeterminateChange}\n      />\n\n      <CheckBox\n        style={styles.checkbox}\n        text='Disabled'\n        disabled={true}\n      />\n\n      <CheckBox\n        style={styles.checkbox}\n        text='Checked Disabled'\n        disabled={true}\n        checked={true}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  checkbox: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  CheckBox,\n  Layout,\n} from '@ui-kitten/components';\n\nconst useCheckboxChanges = (initialCheck = false) => {\n  const [checked, setChecked] = React.useState(initialCheck);\n\n  const onChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return { checked, onChange };\n};\n\nexport const CheckboxStatusShowcase = () => {\n\n  const primaryCheckboxChanges = useCheckboxChanges();\n  const successCheckboxChanges = useCheckboxChanges();\n  const infoCheckboxChanges = useCheckboxChanges();\n  const warningCheckboxChanges = useCheckboxChanges();\n  const dangerCheckboxChanges = useCheckboxChanges();\n  const basicCheckboxChanges = useCheckboxChanges();\n  const controlCheckboxChanges = useCheckboxChanges();\n\n  return (\n    <Layout style={styles.container}>\n\n      <CheckBox\n        style={styles.checkbox}\n        status='primary'\n        text='Primary'\n        {...primaryCheckboxChanges}\n      />\n\n      <CheckBox\n        style={styles.checkbox}\n        status='success'\n        text='Success'\n        {...successCheckboxChanges}\n      />\n\n      <CheckBox\n        style={styles.checkbox}\n        status='info'\n        text='Info'\n        {...infoCheckboxChanges}\n      />\n\n      <CheckBox\n        style={styles.checkbox}\n        status='warning'\n        text='Warning'\n        {...warningCheckboxChanges}\n      />\n\n      <CheckBox\n        style={styles.checkbox}\n        status='danger'\n        text='Danger'\n        {...dangerCheckboxChanges}\n      />\n\n      <CheckBox\n        style={styles.checkbox}\n        status='basic'\n        text='Basic'\n        {...basicCheckboxChanges}\n      />\n\n      <View style={styles.controlContainer}>\n        <CheckBox\n          style={styles.checkbox}\n          status='control'\n          text='Control'\n          {...controlCheckboxChanges}\n        />\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: 8,\n  },\n  checkbox: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const DatepickerBoundingMonthShowcase = () => {\n\n  const [selectedDate, setSelectedDate] = React.useState(null);\n\n  return (\n    <Layout style={styles.container}>\n      <Datepicker\n        placeholder='Pick Date'\n        date={selectedDate}\n        onSelect={setSelectedDate}\n        boundingMonth={false}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n  Text,\n} from '@ui-kitten/components';\n\nconst DayCell = ({ date }, style) => (\n  <View\n    style={[styles.dayContainer, style.container]}>\n    <Text style={style.text}>{`${date.getDate()}`}</Text>\n    <Text style={[style.text, styles.value]}>\n      {`${100 * date.getDate() + Math.pow(date.getDate(), 2)}$`}\n    </Text>\n  </View>\n);\n\nexport const DatepickerCustomDayShowcase = () => {\n\n  const [selectedDate, setSelectedDate] = React.useState(null);\n\n  return (\n    <Layout style={styles.container}>\n      <Datepicker\n        placeholder='Pick Date'\n        date={selectedDate}\n        onSelect={setSelectedDate}\n        renderDay={DayCell}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n  dayContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: '400',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n  NativeDateService,\n} from '@ui-kitten/components';\n\nconst i18n = {\n  dayNames: {\n    short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n    long: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  },\n  monthNames: {\n    short: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dev'],\n    long: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  },\n};\n\nconst dateService = new NativeDateService('en', { i18n });\n\nexport const DatepickerCustomLocaleShowcase = () => {\n\n  const [selectedDate, setSelectedDate] = React.useState(null);\n\n  return (\n    <Layout style={styles.container}>\n      <Datepicker\n        placeholder='Pick Date'\n        date={selectedDate}\n        onSelect={setSelectedDate}\n        dateService={dateService}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const DatepickerFilterShowcase = () => {\n\n  const [selectedDate, setSelectedDate] = React.useState(null);\n\n  const filter = (date) => date.getDay() !== 0 && date.getDay() !== 6;\n\n  return (\n    <Layout style={styles.container}>\n      <Datepicker\n        placeholder='Pick Date'\n        date={selectedDate}\n        onSelect={setSelectedDate}\n        filter={filter}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n});\n","/**\n * IMPORTANT: To use Moment make sure to install Moment Date Service\n * npm i @ui-kitten/moment\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from '@ui-kitten/components';\nimport { MomentDateService } from '@ui-kitten/moment';\n\nconst dateService = new MomentDateService();\n\nexport const DatepickerMomentShowcase = () => {\n\n  const [date, setDate] = React.useState(null);\n\n  return (\n    <Layout style={styles.container}>\n      <Datepicker\n        placeholder='Pick Date'\n        date={date}\n        dateService={dateService}\n        onSelect={setDate}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n  Text,\n} from '@ui-kitten/components';\n\nexport const DatepickerSimpleUsageShowcase = () => {\n\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <Layout style={styles.container}>\n\n      <Text\n        style={styles.text}\n        category='h6'>\n        {`Selected date: ${date.toLocaleDateString()}`}\n      </Text>\n\n      <Datepicker\n        date={date}\n        onSelect={setDate}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n  text: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from '@ui-kitten/components';\n\nconst useDatepickerChanges = (initialDate = null) => {\n  const [date, setDate] = React.useState(initialDate);\n  return { date, onSelect: setDate };\n};\n\nexport const DatepickerSizeShowcase = () => {\n\n  const smallDatepickerChanges = useDatepickerChanges();\n  const mediumDatepickerChanges = useDatepickerChanges();\n  const largeDatepickerChanges = useDatepickerChanges();\n\n  return (\n    <Layout style={styles.container}>\n\n      <Datepicker\n        style={styles.datepicker}\n        size='small'\n        placeholder='Small'\n        {...smallDatepickerChanges}\n      />\n\n      <Datepicker\n        style={styles.datepicker}\n        size='medium'\n        placeholder='Medium'\n        {...mediumDatepickerChanges}\n      />\n\n      <Datepicker\n        style={styles.datepicker}\n        size='large'\n        placeholder='Large'\n        {...largeDatepickerChanges}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n  },\n  datepicker: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from '@ui-kitten/components';\n\nconst useDatepickerChanges = (initialDate = null) => {\n  const [date, setDate] = React.useState(initialDate);\n  return {\n    date,\n    onSelect: setDate,\n  };\n};\n\nexport const DatepickerStatusShowcase = () => {\n\n  const primaryDatepickerChanges = useDatepickerChanges();\n  const successDatepickerChanges = useDatepickerChanges();\n  const infoDatepickerChanges = useDatepickerChanges();\n  const warningDatepickerChanges = useDatepickerChanges();\n  const dangerDatepickerChanges = useDatepickerChanges();\n  const basicDatepickerChanges = useDatepickerChanges();\n\n  return (\n    <Layout style={styles.container}>\n\n      <Datepicker\n        style={styles.datepicker}\n        status='primary'\n        placeholder='Primary'\n        {...primaryDatepickerChanges}\n      />\n\n      <Datepicker\n        style={styles.datepicker}\n        status='success'\n        placeholder='Success'\n        {...successDatepickerChanges}\n      />\n\n      <Datepicker\n        style={styles.datepicker}\n        status='info'\n        placeholder='Info'\n        {...infoDatepickerChanges}\n      />\n\n      <Datepicker\n        style={styles.datepicker}\n        status='warning'\n        placeholder='Warning'\n        {...warningDatepickerChanges}\n      />\n\n      <Datepicker\n        style={styles.datepicker}\n        status='danger'\n        placeholder='Danger'\n        {...dangerDatepickerChanges}\n      />\n\n      <Datepicker\n        style={styles.datepicker}\n        status='basic'\n        placeholder='Basic'\n        {...basicDatepickerChanges}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n  datepicker: {\n    margin: 8,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Icon,\n  Layout,\n} from '@ui-kitten/components';\n\nconst CalendarIcon = (style) => (\n  <Icon {...style} name='calendar'/>\n);\n\nexport const DatepickerWithIconShowcase = () => {\n\n  const [date, setDate] = React.useState(null);\n\n  return (\n    <Layout style={styles.container}>\n      <Datepicker\n        placeholder='Pick Date'\n        date={date}\n        onSelect={setDate}\n        icon={CalendarIcon}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  RangeDatepicker,\n} from '@ui-kitten/components';\n\nexport const RangeDatepickerSimpleUsageShowcase = () => {\n\n  const [range, setRange] = React.useState({});\n\n  return (\n    <Layout style={styles.container}>\n      <RangeDatepicker\n        range={range}\n        onSelect={setRange}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n});\n\n","import React from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Layout,\n  Text,\n} from '@ui-kitten/components';\n\nconst drawerData = [\n  { title: 'Dashboard' },\n  { title: 'Messages' },\n  { title: 'Settings' },\n  { title: 'Articles' },\n  { title: 'Ecommerce' },\n  { title: 'Chat' },\n];\n\nconst Header = () => (\n  <Layout level='2'>\n    <Text category='h6'>Drawer Header</Text>\n  </Layout>\n);\n\nexport const DrawerCustomHeaderShowcase = () => {\n\n  const onRouteSelect = (index) => {\n    const route = drawerData[index];\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  return (\n    <SafeAreaView>\n      <Drawer\n        data={drawerData}\n        header={Header}\n        onSelect={onRouteSelect}\n      />\n    </SafeAreaView>\n  );\n};\n","import React from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  DrawerHeaderFooter,\n} from '@ui-kitten/components';\n\nconst drawerData = [\n  { title: 'Dashboard' },\n  { title: 'Messages' },\n  { title: 'Settings' },\n  { title: 'Articles' },\n  { title: 'Ecommerce' },\n  { title: 'Chat' },\n];\n\nconst Footer = () => (\n  <DrawerHeaderFooter description='Drawer Footer'/>\n);\n\nexport const DrawerFooterShowcase = () => {\n\n  const onRouteSelect = (index) => {\n    const route = drawerData[index];\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  return (\n    <SafeAreaView>\n      <Drawer\n        data={drawerData}\n        footer={Footer}\n        onSelect={onRouteSelect}\n      />\n    </SafeAreaView>\n  );\n};\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  DrawerHeaderFooter,\n  Icon,\n} from '@ui-kitten/components';\n\nconst PersonIcon = (style) => (\n  <Icon {...style} name='person'/>\n);\n\nconst Header = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    icon={PersonIcon}\n  />\n);\n\nconst drawerData = [\n  { title: 'Dashboard' },\n  { title: 'Messages' },\n  { title: 'Settings' },\n  { title: 'Articles' },\n  { title: 'Ecommerce' },\n  { title: 'Chat' },\n];\n\nexport const DrawerHeaderShowcase = () => {\n\n  const onRouteSelect = (index) => {\n    const route = drawerData[index];\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  return (\n    <SafeAreaView>\n      <Drawer\n        data={drawerData}\n        header={Header}\n        onSelect={onRouteSelect}\n      />\n    </SafeAreaView>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { DrawerHeaderFooter } from '@ui-kitten/components';\n\nexport const DrawerHeaderFooterInlineStylingShowcase = () => (\n  <DrawerHeaderFooter\n    style={styles.drawerHeader}\n    titleStyle={styles.drawerHeaderTitle}\n    descriptionStyle={styles.drawerHeaderDescription}\n    title='John Doe'\n    description='React Native Developer'\n  />\n);\n\nconst styles = StyleSheet.create({\n  drawerHeader: { backgroundColor: 'black' },\n  drawerHeaderTitle: { color: 'white' },\n  drawerHeaderDescription: { color: 'gray' },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  DrawerHeaderFooter,\n  Icon,\n} from '@ui-kitten/components';\n\nconst ProfileIcon = (style) => (\n  <Icon {...style} name='person'/>\n);\n\nexport const DrawerHeaderFooterSimpleUsageShowcase = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    icon={ProfileIcon}\n  />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  Button,\n  DrawerHeaderFooter,\n  Icon,\n} from '@ui-kitten/components';\n\nconst LogoutIcon = (style) => (\n  <Icon {...style} name='log-out'/>\n);\n\nconst LogoutButton = (style) => (\n  <Button style={style} icon={LogoutIcon}/>\n);\n\nexport const DrawerHeaderFooterWithAccessoryShowcase = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    accessory={LogoutButton}\n  />\n);\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { DrawerHeaderFooter } from '@ui-kitten/components';\n\nconst ProfileIcon = (style) => (\n  <Image style={style} source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/person.png'}}/>\n);\n\nexport const DrawerHeaderFooterWithExternalSourceIconShowcase = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    icon={ProfileIcon}\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Layout,\n  Text,\n} from '@ui-kitten/components';\n\nconst NotificationBadge = (style) => (\n  <Layout style={[style, styles.badge]}>\n    <Text>NEW</Text>\n  </Layout>\n);\n\nconst drawerData = [\n  { title: 'Dashboard' },\n  {\n    title: 'Messages',\n    accessory: NotificationBadge,\n  },\n  { title: 'Settings' },\n  { title: 'Articles' },\n];\n\nexport const DrawerNotificationBadgeItemShowcase = () => {\n\n  const onRouteSelect = (index) => {\n    const route = drawerData[index];\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  return (\n    <SafeAreaView>\n      <Drawer\n        data={drawerData}\n        onSelect={onRouteSelect}\n      />\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  badge: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 24,\n    width: 48,\n    paddingHorizontal: 24,\n    borderRadius: 12,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport { Drawer } from '@ui-kitten/components';\n\nconst drawerData = [\n  { title: 'Dashboard' },\n  { title: 'Messages' },\n  { title: 'Settings' },\n  { title: 'Articles' },\n  { title: 'Ecommerce' },\n  { title: 'Chat' },\n];\n\nexport const DrawerSimpleUsageShowcase = () => {\n\n  const onRouteSelect = (index) => {\n    const route = drawerData[index];\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  return (\n    <SafeAreaView>\n      <Drawer\n        data={drawerData}\n        onSelect={onRouteSelect}\n      />\n    </SafeAreaView>\n  );\n};\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Icon,\n} from '@ui-kitten/components';\n\nconst PersonIcon = (style) => (\n  <Icon {...style} name='person-outline' />\n);\n\nconst BellIcon = (style) => (\n  <Icon {...style} name='bell-outline' />\n);\n\nconst EmailIcon = (style) => (\n  <Icon {...style} name='email-outline' />\n);\n\nconst drawerData = [\n  { title: 'Users', icon: PersonIcon },\n  { title: 'Orders', icon: BellIcon },\n  { title: 'Transactions', icon: EmailIcon },\n];\n\nexport const DrawerWithIconsShowcase = () => {\n\n  const onRouteSelect = (index) => {\n    const route = drawerData[index];\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  return (\n    <SafeAreaView>\n      <Drawer\n        data={drawerData}\n        onSelect={onRouteSelect}\n      />\n    </SafeAreaView>\n  );\n};\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n} from '@ui-kitten/components';\n\nexport const IconAnimationShowcase = () => {\n\n  const iconRef = React.createRef();\n\n  const onPress = () => {\n    iconRef.current.startAnimation();\n  };\n\n  const renderIcon = (style) => (\n    <Icon\n      {...style}\n      ref={iconRef}\n      name='star'\n    />\n  );\n\n  return (\n    <Button\n      icon={renderIcon}\n      onPress={onPress}>\n      START ANIMATION\n    </Button>\n  );\n};\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n} from '@ui-kitten/components';\n\nexport const IconAnimationInfiniteShowcase = () => {\n\n  const iconRef = React.createRef();\n\n  const onPress = () => {\n    this.iconRef.current.startAnimation();\n  };\n\n  const renderIcon = (style) => (\n    <Icon\n      {...style}\n      ref={iconRef}\n      name='star'\n      animationConfig={{ cycles: Infinity }}\n    />\n  );\n\n  return (\n    <Button\n      icon={renderIcon}\n      onPress={onPress}>\n      START ANIMATION\n    </Button>\n  );\n};\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button } from '@ui-kitten/components';\n\nconst RemoteBulbIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/outline/png/128/bulb-outline.png' }}\n  />\n);\n\nexport const IconExternalSourceShowcase = (props) => (\n  <Button icon={RemoteBulbIcon}>\n    Login with Facebook\n  </Button>\n);\n","/**\n * Visit react-native-svg documentation for more details on styling\n * https://github.com/react-native-community/react-native-svg#common-props\n */\n\nimport React from 'react';\nimport { Icon } from '@ui-kitten/components';\n\nexport const IconInlineStylingShowcase = () => (\n  <Icon\n    name='github'\n    width={32}\n    height={32}\n    fill='#FF7E6D'\n  />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n *\n * Visit react-native-svg documentation for more details on styling\n * https://github.com/react-native-community/react-native-svg#common-props\n */\n\nimport React from 'react';\nimport { Icon } from '@ui-kitten/components';\n\nexport const IconSimpleUsageShowcase = () => (\n  <Icon name='star' width={32} height={32} fill='#3366FF' />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n} from '@ui-kitten/components';\n\nexport const IconWithinButtonShowcase = () => {\n\n  const [liked, setLiked] = React.useState(false);\n\n  const onPress = () => {\n    setLiked(!liked);\n  };\n\n  const renderIcon = (style) => (\n    <Icon\n      {...style}\n      name={liked ? 'heart' : 'heart-outline'}\n    />\n  );\n\n  return (\n    <Button\n      icon={renderIcon}\n      onPress={onPress}>\n      LIKE\n    </Button>\n  );\n};\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Input,\n} from '@ui-kitten/components';\n\nexport const IconWithinInputShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n  const [secureTextEntry, setSecureTextEntry] = React.useState(true);\n\n  const onIconPress = () => {\n    setSecureTextEntry(!secureTextEntry);\n  };\n\n  const renderIcon = (style) => (\n    <Icon\n      {...style}\n      name={!secureTextEntry ? 'eye' : 'eye-off'}\n    />\n  );\n\n  return (\n    <Input\n      placeholder='Password'\n      value={value}\n      secureTextEntry={secureTextEntry}\n      onChangeText={setValue}\n      icon={renderIcon}\n      onIconPress={onIconPress}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Input } from '@ui-kitten/components';\n\nexport const InputInlineStylingShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n\n  return (\n    <Input\n      value={value}\n      placeholder='Place your Text'\n      style={styles.input}\n      textStyle={styles.inputText}\n      labelStyle={styles.inputLabel}\n      captionTextStyle={styles.inputCaption}\n      onChangeText={setValue}\n      label='LABEL'\n      caption='CAPTION'\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: { borderRadius: 20 },\n  inputText: { color: '#3366FF' },\n  inputLabel: { color: '#3366FF' },\n  inputCaption: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { Input } from '@ui-kitten/components';\n\nexport const InputSimpleUsageShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n\n  return (\n    <Input\n      placeholder='Place your Text'\n      value={value}\n      onChangeText={setValue}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Input,\n  Layout,\n} from '@ui-kitten/components';\n\nconst useInputChanges = (initialValue = '') => {\n  const [value, setValue] = React.useState(initialValue);\n  return {\n    value,\n    onChangeText: setValue,\n  };\n};\n\nexport const InputSizeShowcase = () => {\n\n  const smallInputChanges = useInputChanges();\n  const mediumInputChanges = useInputChanges();\n  const largeInputChanges = useInputChanges();\n\n  return (\n    <Layout>\n\n      <Input\n        style={styles.input}\n        size='small'\n        placeholder='Small'\n        {...smallInputChanges}\n      />\n\n      <Input\n        style={styles.input}\n        size='medium'\n        placeholder='Medium'\n        {...mediumInputChanges}\n      />\n\n      <Input\n        style={styles.input}\n        size='large'\n        placeholder='Large'\n        {...largeInputChanges}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    margin: 8,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Input,\n  Layout,\n} from '@ui-kitten/components';\n\nexport const InputStatesShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n\n  return (\n    <Layout style={styles.container}>\n\n      <Input\n        style={styles.input}\n        value={value}\n        onChangeText={setValue}\n        placeholder='Active'\n      />\n\n      <Input\n        style={styles.input}\n        disabled={true}\n        placeholder='Disabled'\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  input: {\n    flex: 1,\n    margin: 8,\n  },\n});\n\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Input,\n  Layout,\n} from '@ui-kitten/components';\n\nconst useInputChanges = (initialValue = '') => {\n  const [value, setValue] = React.useState(initialValue);\n  return {\n    value,\n    onChangeText: setValue,\n  };\n};\n\nexport const InputStatusShowcase = () => {\n\n  const primaryInputChanges = useInputChanges();\n  const successInputChanges = useInputChanges();\n  const infoInputChanges = useInputChanges();\n  const warningInputChanges = useInputChanges();\n  const dangerInputChanges = useInputChanges();\n  const basicInputChanges = useInputChanges();\n  const controlInputChanges = useInputChanges();\n\n  return (\n    <Layout>\n\n      <Input\n        style={styles.input}\n        status='primary'\n        placeholder='Primary'\n        {...primaryInputChanges}\n      />\n\n      <Input\n        style={styles.input}\n        status='success'\n        placeholder='Success'\n        {...successInputChanges}\n      />\n\n      <Input\n        style={styles.input}\n        status='info'\n        placeholder='Info'\n        {...infoInputChanges}\n      />\n\n      <Input\n        style={styles.input}\n        status='warning'\n        placeholder='Warning'\n        {...warningInputChanges}\n      />\n\n      <Input\n        style={styles.input}\n        status='danger'\n        placeholder='Danger'\n        {...dangerInputChanges}\n      />\n\n      <Input\n        style={styles.input}\n        status='basic'\n        placeholder='Basic'\n        {...basicInputChanges}\n      />\n\n      <View style={styles.controlContainer}>\n        <Input\n          style={styles.input}\n          status='control'\n          placeholder='Control'\n          {...controlInputChanges}\n        />\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n\n","import React from 'react';\nimport { Input } from '@ui-kitten/components';\n\nexport const InputWithCaptionShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n  const isNotEmpty = value && value.length > 0;\n\n  return (\n    <Input\n      placeholder='Place your Text'\n      status={isNotEmpty ? 'success' : 'danger'}\n      caption={isNotEmpty ? '' : 'Can not be empty'}\n      value={value}\n      onChangeText={setValue}\n    />\n  );\n};\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport { Input } from '@ui-kitten/components';\nimport { Image } from 'react-native';\n\nexport const InputWithExternalSourceIconShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n\n  const renderIcon = (style) => (\n    <Image\n      style={style}\n      source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/eye-off.png' }}\n    />\n  );\n\n  return (\n    <Input\n      value={value}\n      placeholder='Place your Text'\n      icon={renderIcon}\n      secureTextEntry={true}\n      onChangeText={setValue}\n    />\n  );\n};\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Input,\n} from '@ui-kitten/components';\n\nexport const InputWithIconShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n  const [secureTextEntry, setSecureTextEntry] = React.useState(true);\n\n  const onIconPress = () => {\n    setSecureTextEntry(!secureTextEntry);\n  };\n\n  const renderIcon = (style) => (\n    <Icon {...style} name={secureTextEntry ? 'eye-off' : 'eye'}/>\n  );\n\n  return (\n    <Input\n      value={value}\n      placeholder='********'\n      icon={renderIcon}\n      secureTextEntry={secureTextEntry}\n      onIconPress={onIconPress}\n      onChangeText={setValue}\n    />\n  );\n};\n","import React from 'react';\nimport { Input } from '@ui-kitten/components';\n\nexport const InputWithLabelShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n\n  return (\n    <Input\n      label='Email'\n      placeholder='john.doe@example.com'\n      value={value}\n      onChangeText={setValue}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from '@ui-kitten/components';\n\nexport const LayoutInlineStylingShowcase = () => (\n  <Layout style={styles.container}>\n    <Text>Welcome To React Native UI Kitten!</Text>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    borderColor: 'red',\n    borderWidth: 2,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from '@ui-kitten/components';\n\nexport const LayoutLevelShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Layout style={styles.layout} level='4'>\n      <Text>4</Text>\n    </Layout>\n\n    <Layout style={styles.layout} level='3'>\n      <Text>3</Text>\n    </Layout>\n\n    <Layout style={styles.layout} level='2'>\n      <Text>2</Text>\n    </Layout>\n\n    <Layout style={styles.layout} level='1'>\n      <Text>1</Text>\n    </Layout>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  layout: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from '@ui-kitten/components';\n\nexport const LayoutSimpleUsageShowcase = () => (\n  <Layout style={styles.container}>\n    <Text>Welcome To React Native UI Kitten!</Text>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","/**\n * This example demonstrates how simply could be composed List Item\n * with classic layouts like icon at the left, forward button at the right, etc.\n *\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Icon,\n  List,\n  ListItem,\n} from '@ui-kitten/components';\n\nconst data = new Array(8).fill({\n  title: 'Title for Item',\n  description: 'Description for Item',\n});\n\nexport const ListCompositeItemShowcase = () => {\n\n  const renderItemAccessory = (style) => (\n    <Button style={style}>FOLLOW</Button>\n  );\n\n  const renderItemIcon = (style) => (\n    <Icon {...style} name='person' />\n  );\n\n  const renderItem = ({ item, index }) => (\n    <ListItem\n      title={`${item.title} ${index + 1}`}\n      description={`${item.description} ${index + 1}`}\n      icon={renderItemIcon}\n      accessory={renderItemAccessory}\n    />\n  );\n\n  return (\n    <List\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  List,\n  ListItem,\n} from '@ui-kitten/components';\n\nconst data = new Array(8).fill({\n  title: 'Title for Item',\n  description: 'Description for Item',\n});\n\nexport const ListInlineStylingShowcase = () => {\n\n  const renderItem = ({ item, index }) => (\n    <ListItem\n      title={`${item.title} ${index + 1}`}\n      description={`${item.description} ${index + 1}`}\n    />\n  );\n\n  return (\n    <List\n      contentContainerStyle={styles.contentContainer}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  contentContainer: { paddingHorizontal: 8 },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ListItem } from '@ui-kitten/components';\n\nexport const ListItemInlineStylingShowcase = () => (\n  <ListItem\n    style={styles.listItem}\n    titleStyle={styles.listItemTitle}\n    descriptionStyle={styles.listItemDescription}\n    title='Title'\n    description='Description'\n  />\n);\n\nconst styles = StyleSheet.create({\n  listItem: { borderRadius: 8 },\n  listItemTitle: { color: '#3366ff' },\n  listItemDescription: { color: '#2E3A59' },\n});\n","import React from 'react';\nimport { ListItem } from '@ui-kitten/components';\n\nexport const ListItemSimpleUsageShowcase = () => (\n  <ListItem title='Title' />\n);\n","import React from 'react';\nimport {\n  CheckBox,\n  ListItem,\n} from '@ui-kitten/components';\n\nexport const ListItemWithAccessoryShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  const onCheckBoxCheckedChange = (index) => {\n    setChecked(!checked);\n  };\n\n  const renderAccessory = (style, index) => (\n    <CheckBox\n      style={style}\n      checked={checked}\n      onChange={() => onCheckBoxCheckedChange(index)}\n    />\n  );\n\n  return (\n    <ListItem\n      title='Title'\n      description='Description'\n      accessory={renderAccessory}\n    />\n  );\n};\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { ListItem } from '@ui-kitten/components';\n\nconst RemoteStarIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}\n  />\n);\n\nexport const ListItemWithExternalIconShowcase = (props) => (\n  <ListItem\n    title='Title'\n    description='Description'\n    icon={RemoteStarIcon}\n  />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  ListItem,\n} from '@ui-kitten/components';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport const ListItemWithIconShowcase = () => (\n  <ListItem\n    title='Title'\n    description='Description'\n    icon={StarIcon}\n  />\n);\n","import React from 'react';\nimport {\n  List,\n  ListItem,\n} from '@ui-kitten/components';\n\nconst data = new Array(8).fill({\n  title: 'Item',\n});\n\nexport const ListSimpleUsageShowcase = () => {\n\n  const renderItem = ({ item, index }) => (\n    <ListItem title={`${item.title} ${index + 1}`} />\n  );\n\n  return (\n    <List\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n","import React from 'react';\nimport { Menu } from '@ui-kitten/components';\n\nconst data = [\n  { title: 'Item 1' },\n  { title: 'Item 2' },\n  { title: 'Item 3', disabled: true },\n  { title: 'Item 4' },\n];\n\nexport const MenuDisabledOptionsShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  return (\n    <Menu\n      data={data}\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Menu } from '@ui-kitten/components';\n\nexport const MenuInlineStylingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const data = [\n    { title: 'Item 1', titleStyle: styles.menuItemTitle },\n    { title: 'Item 2' },\n    { title: 'Item 3', titleStyle: styles.menuItemTitle },\n    { title: 'Item 4' },\n  ];\n\n  return (\n    <Menu\n      data={data}\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  menuItemTitle: {\n    color: 'black',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { Menu } from '@ui-kitten/components';\n\nconst data = [\n  { title: 'Item 1' },\n  { title: 'Item 2' },\n  { title: 'Item 3' },\n  { title: 'Item 4' },\n];\n\nexport const MenuSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  return (\n    <Menu\n      data={data}\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}\n    />\n  );\n};\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Menu,\n} from '@ui-kitten/components';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nconst data = [\n  { title: 'Item 1', icon: StarIcon },\n  { title: 'Item 2', icon: StarIcon },\n  { title: 'Item 3', icon: StarIcon },\n  { title: 'Item 4', icon: StarIcon },\n];\n\nexport const MenuWithIconsShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  return (\n    <Menu\n      data={data}\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}\n    />\n  );\n};\n","import React from 'react';\nimport { Menu } from '@ui-kitten/components';\n\nconst data = [\n  { title: 'Item 1' },\n  {\n    title: 'Item 2',\n    subItems: [\n      { title: 'Sub Item 1' },\n      { title: 'Sub Item 2' },\n    ],\n  },\n  { title: 'Item 3' },\n  { title: 'Item 4' },\n];\n\nexport const MenuWithSubMenuShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  return (\n    <Menu\n      data={data}\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}\n    />\n  );\n};\n","import React from 'react';\nimport { Menu } from '@ui-kitten/components';\n\nconst data = [\n  { title: 'Item 1' },\n  { title: 'Item 2' },\n  { title: 'Item 3' },\n  { title: 'Item 4' },\n];\n\nexport const MenuWithoutDividerShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  return (\n    <Menu\n      appearance='noDivider'\n      data={data}\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  Modal,\n  Text,\n} from '@ui-kitten/components';\n\nexport const ModalSimpleUsageShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const toggleModal = () => {\n    setVisible(!visible);\n  };\n\n  const renderModalElement = () => (\n    <Layout\n      level='3'\n      style={styles.modalContainer}>\n      <Text>Hi! This is modal</Text>\n      <Button onPress={toggleModal}>\n        DISMISS\n      </Button>\n    </Layout>\n  );\n\n  return (\n    <Layout style={styles.container}>\n      <Button onPress={toggleModal}>\n        TOGGLE MODAL\n      </Button>\n      <Modal visible={visible}>\n        {renderModalElement()}\n      </Modal>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n    padding: 16,\n  },\n  modalContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 256,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  Modal,\n  Text,\n} from '@ui-kitten/components';\n\nexport const ModalWithBackdropShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const toggleModal = () => {\n    setVisible(!visible);\n  };\n\n  const renderModalElement = () => (\n    <Layout\n      level='3'\n      style={styles.modalContainer}>\n      <Text>Hi! This is modal.</Text>\n    </Layout>\n  );\n\n  return (\n    <Layout style={styles.container}>\n      <Button onPress={toggleModal}>\n        TOGGLE MODAL\n      </Button>\n      <Modal\n        allowBackdrop={true}\n        backdropStyle={styles.backdrop}\n        onBackdropPress={toggleModal}\n        visible={visible}>\n        {renderModalElement()}\n      </Modal>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n    padding: 16,\n  },\n  modalContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 256,\n    padding: 16,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n});\n","import React from 'react';\nimport {\n  Image,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from '@ui-kitten/components';\n\nconst RemoteStarIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}\n  />\n);\n\nconst data = [\n  { title: 'Menu Item 1', icon: RemoteStarIcon },\n  { title: 'Menu Item 2', icon: RemoteStarIcon },\n  { title: 'Menu Item 3', icon: RemoteStarIcon },\n  { title: 'Menu Item 4', icon: RemoteStarIcon },\n];\n\nexport const OverflowMenuExternalSourceIconsShowcase = () => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setMenuVisible(false);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <OverflowMenu\n        data={data}\n        visible={menuVisible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={toggleMenu}>\n        <Button onPress={toggleMenu}>\n          TOGGLE MENU\n        </Button>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n  Select,\n} from '@ui-kitten/components';\n\nconst PLACEMENTS = [\n  { text: 'top' },\n  { text: 'top start' },\n  { text: 'top end' },\n  { text: 'left' },\n  { text: 'left start' },\n  { text: 'left end' },\n  { text: 'right' },\n  { text: 'right start' },\n  { text: 'right end' },\n  { text: 'bottom' },\n  { text: 'bottom start' },\n  { text: 'bottom end' },\n];\n\nconst data = [\n  { title: 'Menu Item 1' },\n  { title: 'Menu Item 2' },\n  { title: 'Menu Item 3' },\n  { title: 'Menu Item 4' },\n];\n\nexport const OverflowMenuPlacementShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n  const [placement, setPlacement] = React.useState(PLACEMENTS[0]);\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const toggleMenu = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <Layout>\n\n      <Select\n        placeholder='Select Placement'\n        data={PLACEMENTS}\n        selectedOption={placement}\n        onSelect={setPlacement}\n      />\n\n      <View style={styles.buttonContainer}>\n        <OverflowMenu\n          data={data}\n          visible={visible}\n          placement={placement.text}\n          selectedIndex={selectedIndex}\n          onSelect={setSelectedIndex}\n          onBackdropPress={toggleMenu}>\n          <Button style={styles.button} onPress={toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 376,\n  },\n  button: {\n    width: 192,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from '@ui-kitten/components';\n\nconst data = [\n  { title: 'Menu Item 1' },\n  { title: 'Menu Item 2' },\n  { title: 'Menu Item 3' },\n  { title: 'Menu Item 4' },\n];\n\nexport const OverflowMenuSimpleUsageShowcase = () => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setMenuVisible(false);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <OverflowMenu\n        data={data}\n        visible={menuVisible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={toggleMenu}>\n        <Button onPress={toggleMenu}>\n          TOGGLE MENU\n        </Button>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from '@ui-kitten/components';\n\nconst data = [\n  { title: 'Menu Item 1' },\n  { title: 'Menu Item 2' },\n  { title: 'Menu Item 3' },\n  { title: 'Menu Item 4' },\n];\n\nexport const OverflowMenuStyledBackdropShowcase = () => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setMenuVisible(false);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <OverflowMenu\n        backdropStyle={styles.backdrop}\n        data={data}\n        visible={menuVisible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={toggleMenu}>\n        <Button onPress={toggleMenu}>\n          TOGGLE MENU\n        </Button>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from '@ui-kitten/components';\n\nconst data = [\n  { title: 'Menu Item 1' },\n  { title: 'Menu Item 2', disabled: true },\n  { title: 'Menu Item 3' },\n  { title: 'Menu Item 4' },\n];\n\nexport const OverflowMenuWithDisabledItemsShowcase = () => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setMenuVisible(false);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <OverflowMenu\n        data={data}\n        visible={menuVisible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={toggleMenu}>\n        <Button onPress={toggleMenu}>\n          TOGGLE MENU\n        </Button>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Icon,\n  Layout,\n  OverflowMenu,\n} from '@ui-kitten/components';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nconst data = [\n  { title: 'Menu Item 1', icon: StarIcon },\n  { title: 'Menu Item 2', icon: StarIcon },\n  { title: 'Menu Item 3', icon: StarIcon },\n  { title: 'Menu Item 4', icon: StarIcon },\n];\n\nexport const OverflowMenuWithIconsShowcase = () => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setMenuVisible(false);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <OverflowMenu\n        data={data}\n        visible={menuVisible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={toggleMenu}>\n        <Button onPress={toggleMenu}>\n          TOGGLE MENU\n        </Button>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from '@ui-kitten/components';\n\nconst data = [\n  { title: 'Menu Item 1' },\n  { title: 'Menu Item 2' },\n  { title: 'Menu Item 3' },\n  { title: 'Menu Item 4' },\n];\n\nexport const OverflowMenuWithoutDividerShowcase = () => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setMenuVisible(false);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <OverflowMenu\n        appearance='noDivider'\n        data={data}\n        visible={menuVisible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={toggleMenu}>\n        <Button onPress={toggleMenu}>\n          TOGGLE MENU\n        </Button>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  Popover,\n  Text,\n} from '@ui-kitten/components';\n\nconst PopoverContent = () => (\n  <Layout style={styles.popoverContent}>\n    <Text>Hi!</Text>\n  </Layout>\n);\n\nexport const PopoverFullWidthShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const togglePopover = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <Popover\n      visible={visible}\n      content={PopoverContent()}\n      fullWidth={true}\n      onBackdropPress={togglePopover}>\n      <Button onPress={togglePopover}>\n        TOGGLE POPOVER\n      </Button>\n    </Popover>\n  );\n};\n\nconst styles = StyleSheet.create({\n  popoverContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Button,\n  Layout,\n  Popover,\n  Select,\n  Text,\n} from '@ui-kitten/components';\n\nconst PLACEMENTS = [\n  { text: 'top' },\n  { text: 'top start' },\n  { text: 'top end' },\n  { text: 'left' },\n  { text: 'left start' },\n  { text: 'left end' },\n  { text: 'right' },\n  { text: 'right start' },\n  { text: 'right end' },\n  { text: 'bottom' },\n  { text: 'bottom start' },\n  { text: 'bottom end' },\n];\n\nconst PopoverContent = () => (\n  <Layout style={styles.popoverContent}>\n    <Text>Hi!</Text>\n  </Layout>\n);\n\nexport const PopoverPlacementShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n  const [placement, setPlacement] = React.useState(PLACEMENTS[0]);\n\n  const togglePopover = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <Layout>\n\n      <Select\n        placeholder='Select Placement'\n        data={PLACEMENTS}\n        selectedOption={placement}\n        onSelect={setPlacement}\n      />\n\n      <View style={styles.buttonContainer}>\n        <Popover\n          visible={visible}\n          placement={placement.text}\n          content={PopoverContent()}\n          onBackdropPress={togglePopover}>\n          <Button style={styles.button} onPress={togglePopover}>\n            TOGGLE POPOVER\n          </Button>\n        </Popover>\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 376,\n  },\n  button: {\n    width: 192,\n  },\n  popoverContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  Popover,\n  Text,\n} from '@ui-kitten/components';\n\nconst PopoverContent = () => (\n  <Layout style={styles.popoverContent}>\n    <Text>Hi!</Text>\n  </Layout>\n);\n\nexport const PopoverSimpleUsageShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const togglePopover = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <Popover\n      visible={visible}\n      content={PopoverContent()}\n      onBackdropPress={togglePopover}>\n      <Button onPress={togglePopover}>\n        TOGGLE POPOVER\n      </Button>\n    </Popover>\n  );\n};\n\nconst styles = StyleSheet.create({\n  popoverContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  Popover,\n  Text,\n} from '@ui-kitten/components';\n\nconst PopoverContent = () => (\n  <Layout style={styles.popoverContent}>\n    <Text>Hi!</Text>\n  </Layout>\n);\n\nexport const PopoverStyledBackdropShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const togglePopover = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <Popover\n      backdropStyle={styles.backdrop}\n      visible={visible}\n      content={PopoverContent()}\n      onBackdropPress={togglePopover}>\n      <Button onPress={togglePopover}>\n        TOGGLE POPOVER\n      </Button>\n    </Popover>\n  );\n};\n\nconst styles = StyleSheet.create({\n  popoverContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Radio } from '@ui-kitten/components';\n\nexport const RadioInlineStylingShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return (\n    <Radio\n      style={styles.radio}\n      text='Place your text'\n      textStyle={styles.radioText}\n      checked={checked}\n      onChange={onCheckedChange}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  radio: {\n    width: 32,\n    height: 32,\n  },\n  radioText: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { Radio } from '@ui-kitten/components';\n\nexport const RadioSimpleUsageShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return (\n    <Radio\n      text={`Checked: ${checked}`}\n      checked={checked}\n      onChange={onCheckedChange}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Radio,\n} from '@ui-kitten/components';\n\nexport const RadioStatesShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return (\n    <Layout style={styles.container}>\n\n      <Radio\n        style={styles.radio}\n        text='Active'\n        checked={checked}\n        onChange={onCheckedChange}\n      />\n\n      <Radio\n        style={styles.radio}\n        text='Disabled'\n        disabled={true}\n      />\n\n      <Radio\n        style={styles.radio}\n        text='Checked Disabled'\n        checked={true}\n        disabled={true}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  radio: {\n    margin: 8,\n  },\n});\n\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Layout,\n  Radio,\n} from '@ui-kitten/components';\n\nconst useRadioChanges = (initialCheck = false) => {\n  const [checked, setChecked] = React.useState(initialCheck);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return {\n    checked,\n    onChange: onCheckedChange,\n  };\n};\n\nexport const RadioStatusShowcase = () => {\n\n  const primaryRadioChanges = useRadioChanges();\n  const successRadioChanges = useRadioChanges();\n  const infoRadioChanges = useRadioChanges();\n  const warningRadioChanges = useRadioChanges();\n  const dangerRadioChanges = useRadioChanges();\n  const basicRadioChanges = useRadioChanges();\n  const controlRadioChanges = useRadioChanges();\n\n  return (\n    <Layout style={styles.container}>\n\n      <Radio\n        style={styles.radio}\n        status='primary'\n        text='Primary'\n        {...primaryRadioChanges}\n      />\n\n      <Radio\n        style={styles.radio}\n        status='success'\n        text='Success'\n        {...successRadioChanges}\n      />\n\n      <Radio\n        style={styles.radio}\n        status='info'\n        text='Info'\n        {...infoRadioChanges}\n      />\n\n      <Radio\n        style={styles.radio}\n        status='warning'\n        text='Warning'\n        {...warningRadioChanges}\n      />\n\n      <Radio\n        style={styles.radio}\n        status='danger'\n        text='Danger'\n        {...dangerRadioChanges}\n      />\n\n      <Radio\n        style={styles.radio}\n        status='basic'\n        text='Basic'\n        {...basicRadioChanges}\n      />\n\n      <View style={styles.controlContainer}>\n        <Radio\n          style={styles.radio}\n          status='control'\n          text='Control'\n          {...controlRadioChanges}\n        />\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  radio: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    padding: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Radio,\n  RadioGroup,\n  Text,\n} from '@ui-kitten/components';\n\nexport const RadioGroupSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const onCheckedChange = (index) => {\n    setSelectedIndex(index);\n  };\n\n  return (\n    <Layout>\n\n      <Text style={styles.text} category='h6'>\n        {`Selected Option: Option ${selectedIndex}`}\n      </Text>\n\n      <RadioGroup\n        selectedIndex={selectedIndex}\n        onChange={onCheckedChange}>\n        <Radio style={styles.radio} text='Option 1'/>\n        <Radio style={styles.radio} text='Option 2'/>\n        <Radio style={styles.radio} text='Option 3'/>\n      </RadioGroup>\n\n    </Layout>\n  );\n};\n\nexport const styles = StyleSheet.create({\n  text: {\n    marginVertical: 8,\n  },\n  radio: {\n    marginVertical: 8,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  Layout,\n  Select,\n} from '@ui-kitten/components';\n\nconst data = [\n  { text: 'Option 1' },\n  { text: 'Option 2' },\n  { text: 'Option 3' },\n];\n\nexport const SelectCustomIconShowcase = () => {\n\n  const [selectedOption, setSelectedOption] = React.useState(null);\n\n  const renderIcon = (style, visible) => (\n    <Icon {...style} name={visible ? 'arrow-ios-upward' : 'arrow-ios-downward'}/>\n  );\n\n  return (\n    <Layout style={styles.container}>\n      <Select\n        data={data}\n        icon={renderIcon}\n        selectedOption={selectedOption}\n        onSelect={setSelectedOption}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 228,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from '@ui-kitten/components';\n\nconst data = [\n  { text: 'Option 1' },\n  { text: 'Option 2', disabled: true },\n  { text: 'Option 3' },\n];\n\nexport const SelectDisabledOptionsShowcase = () => {\n\n  const [selectedOption, setSelectedOption] = React.useState(null);\n\n  return (\n    <Layout style={styles.container}>\n      <Select\n        data={data}\n        selectedOption={selectedOption}\n        onSelect={setSelectedOption}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 228,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from '@ui-kitten/components';\n\nconst data = [\n  { text: 'Option 1' },\n  { text: 'Option 2' },\n  { text: 'Option 3' },\n];\n\nexport const SelectInitialValueShowcase = () => {\n\n  const [selectedOption, setSelectedOption] = React.useState(data[0]);\n\n  return (\n    <Layout style={styles.container}>\n      <Select\n        data={data}\n        selectedOption={selectedOption}\n        onSelect={setSelectedOption}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 228,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from '@ui-kitten/components';\n\nexport const SelectInlineStylingShowcase = () => {\n\n  const data = [\n    { text: 'Option 1' },\n    { text: 'Option 2', textStyle: styles.option2 },\n    { text: 'Option 3' },\n  ];\n\n  const [selectedOption, setSelectedOption] = React.useState(null);\n\n  return (\n    <Layout style={styles.container}>\n      <Select\n        labelStyle={styles.labelStyle}\n        placeholderStyle={styles.placeholderStyle}\n        controlStyle={styles.controlStyle}\n        data={data}\n        selectedOption={selectedOption}\n        onSelect={setSelectedOption}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 228,\n  },\n  labelStyle: {\n    color: 'gray',\n  },\n  placeholderStyle: {\n    color: 'gray',\n  },\n  controlStyle: {\n    borderRadius: 8,\n  },\n  option2: {\n    color: 'red',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from '@ui-kitten/components';\n\nconst data = [\n  { text: 'Option 1' },\n  { text: 'Option 2' },\n  { text: 'Option 3' },\n];\n\nexport const SelectMultiInitialValueShowcase = () => {\n\n  const [selectedOption, setSelectedOption] = React.useState([data[0], data[1]]);\n\n  return (\n    <Layout style={styles.container}>\n      <Select\n        data={data}\n        multiSelect={true}\n        selectedOption={selectedOption}\n        onSelect={setSelectedOption}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 228,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from '@ui-kitten/components';\n\nconst data = [\n  { text: 'Option 1' },\n  { text: 'Option 2' },\n  { text: 'Option 3' },\n];\n\nexport const SelectMultiSelectShowcase = () => {\n\n  const [selectedOption, setSelectedOption] = React.useState([]);\n\n  return (\n    <Layout style={styles.container}>\n      <Select\n        data={data}\n        multiSelect={true}\n        selectedOption={selectedOption}\n        onSelect={setSelectedOption}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 228,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from '@ui-kitten/components';\n\nconst data = [\n  { text: 'Option 1' },\n  { text: 'Option 2' },\n  { text: 'Option 3' },\n];\n\nexport const SelectSimpleUsageShowcase = () => {\n\n  const [selectedOption, setSelectedOption] = React.useState(null);\n\n  return (\n    <Layout style={styles.container}>\n      <Select\n        data={data}\n        selectedOption={selectedOption}\n        onSelect={setSelectedOption}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 228,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from '@ui-kitten/components';\n\nconst useSelectChanges = (initialSelection = null) => {\n  const [selectedOption, setSelectedOption] = React.useState(initialSelection);\n  return {\n    selectedOption,\n    onSelect: setSelectedOption,\n  };\n};\n\nconst data = [\n  { text: 'Option 1' },\n  { text: 'Option 2' },\n  { text: 'Option 3' },\n];\n\nexport const SelectSizeShowcase = () => {\n\n  const smallSelectChanges = useSelectChanges();\n  const mediumSelectChanges = useSelectChanges();\n  const largeSelectChanges = useSelectChanges();\n\n  return (\n    <Layout>\n\n      <Select\n        style={styles.select}\n        data={data}\n        size='small'\n        placeholder='Small'\n        {...smallSelectChanges}\n      />\n\n      <Select\n        style={styles.select}\n        data={data}\n        size='medium'\n        placeholder='Medium'\n        {...mediumSelectChanges}\n      />\n\n      <Select\n        style={styles.select}\n        data={data}\n        size='large'\n        placeholder='Large'\n        {...largeSelectChanges}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  select: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from '@ui-kitten/components';\n\nconst data = [\n  { text: 'Option 1' },\n  { text: 'Option 2' },\n  { text: 'Option 3' },\n  { text: 'Option 4' },\n];\n\nexport const SelectStatesShowcase = () => {\n\n  const [selectedOption, setSelectedOption] = React.useState(null);\n\n  return (\n    <Layout style={styles.container}>\n\n      <Select\n        style={styles.select}\n        data={data}\n        placeholder='Active'\n        selectedOption={selectedOption}\n        onSelect={setSelectedOption}\n      />\n\n      <Select\n        style={styles.select}\n        data={data}\n        placeholder='Disabled'\n        disabled={true}\n        onSelect={setSelectedOption}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: 228,\n  },\n  select: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Layout,\n  Select,\n} from '@ui-kitten/components';\n\nconst useSelectChanges = (initialSelection = null) => {\n  const [selectedOption, setSelectedOption] = React.useState(initialSelection);\n  return {\n    selectedOption,\n    onSelect: setSelectedOption,\n  };\n};\n\nconst data = [\n  { text: 'Option 1' },\n  { text: 'Option 2' },\n  { text: 'Option 3' },\n];\n\nexport const SelectStatusShowcase = () => {\n\n  const primarySelectChanges = useSelectChanges();\n  const successSelectChanges = useSelectChanges();\n  const infoSelectChanges = useSelectChanges();\n  const warningSelectChanges = useSelectChanges();\n  const dangerSelectChanges = useSelectChanges();\n  const basicSelectChanges = useSelectChanges();\n  const controlSelectChanges = useSelectChanges();\n\n  return (\n    <Layout>\n\n      <Select\n        style={styles.select}\n        data={data}\n        status='primary'\n        placeholder='Primary'\n        {...primarySelectChanges}\n      />\n\n      <Select\n        style={styles.select}\n        data={data}\n        status='success'\n        placeholder='Success'\n        {...successSelectChanges}\n      />\n\n      <Select\n        style={styles.select}\n        data={data}\n        status='info'\n        placeholder='Info'\n        {...infoSelectChanges}\n      />\n\n      <Select\n        style={styles.select}\n        data={data}\n        status='warning'\n        placeholder='Warning'\n        {...warningSelectChanges}\n      />\n\n      <Select\n        style={styles.select}\n        data={data}\n        status='danger'\n        placeholder='Danger'\n        {...dangerSelectChanges}\n      />\n\n      <Select\n        style={styles.select}\n        data={data}\n        status='basic'\n        placeholder='Basic'\n        {...basicSelectChanges}\n      />\n\n      <View style={styles.controlContainer}>\n        <Select\n          style={styles.select}\n          data={data}\n          status='control'\n          placeholder='Control'\n          {...controlSelectChanges}\n        />\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  select: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from '@ui-kitten/components';\n\nconst data = [\n  { text: 'Option 1' },\n  { text: 'Option 2' },\n  {\n    text: 'Option 3',\n    items: [\n      { text: 'Sub Option 1' },\n      { text: 'Sub Option 2' },\n    ],\n  },\n];\n\nexport const SelectWithGroupsShowcase = () => {\n\n  const [selectedOption, setSelectedOption] = React.useState(null);\n\n  return (\n    <Layout style={styles.container}>\n      <Select\n        data={data}\n        selectedOption={selectedOption}\n        onSelect={setSelectedOption}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 280,\n  },\n});\n\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  List,\n  ListItem,\n  Spinner,\n} from '@ui-kitten/components';\n\nconst DATA = new Array(8).fill({\n  title: 'Title for Item',\n});\n\nexport const SpinnerDataLoadingShowcase = () => {\n\n  const [data, setData] = React.useState([]);\n\n  React.useEffect(() => {\n    setTimeout(loadData, 5000);\n  }, []);\n\n  const loadData = () => {\n    setData(DATA);\n  };\n\n  const renderLoading = () => (\n    <View style={styles.loading}>\n      <Spinner/>\n    </View>\n  );\n\n  const renderDataItem = ({ item, index }) => (\n    <ListItem title={`${item.title} ${index + 1}`}/>\n  );\n\n  const renderData = () => (\n    <List\n      data={data}\n      renderItem={renderDataItem}\n    />\n  );\n\n  return data.length > 0 ? renderData() : renderLoading();\n};\n\nconst styles = StyleSheet.create({\n  loading: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { Spinner } from '@ui-kitten/components';\n\nexport const SpinnerSimpleUsageShowcase = () => (\n  <Spinner/>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Spinner,\n} from '@ui-kitten/components';\n\nexport const SpinnerSizesShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Spinner size='tiny'/>\n\n    <Spinner size='small'/>\n\n    <Spinner size='medium'/>\n\n    <Spinner size='large'/>\n\n    <Spinner size='giant'/>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Layout,\n  Spinner,\n} from '@ui-kitten/components';\n\nexport const SpinnerStatusesShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Spinner status='primary'/>\n\n    <Spinner status='success'/>\n\n    <Spinner status='info'/>\n\n    <Spinner status='warning'/>\n\n    <Spinner status='danger'/>\n\n    <Spinner status='basic'/>\n\n    <View style={styles.controlContainer}>\n      <Spinner status='control'/>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n  },\n  controlContainer: {\n    borderRadius: 4,\n    padding: 12,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport {\n  ApplicationProvider,\n  styled,\n} from '@ui-kitten/components';\nimport {\n  light,\n  mapping,\n} from '@eva-design/eva';\n\n/**\n * All UI Kitten components are based on `styled` component.\n *\n * An example below demonstrates the how parameters can be transformed to component styles.\n * With next examples we'll see more complex examples.\n */\n\nexport const StyledComponentSimpleUsageShowcase = () => (\n  <ApplicationProvider\n    mapping={mapping}\n    theme={light}\n    customMapping={{ components: { StyledComponent: styledComponentMapping } }}>\n\n    <StyledComponentShowcase/>\n\n  </ApplicationProvider>\n);\n\nclass StyledComponent extends React.Component {\n\n  static styledComponentName = 'StyledComponent';\n\n  render() {\n    return (\n      <TouchableOpacity style={this.props.themedStyle}/>\n    );\n  }\n}\n\nconst StyledComponentShowcase = styled(StyledComponent);\n\nconst styledComponentMapping = {\n  meta: {\n    parameters: {\n      width: {\n        type: 'number',\n      },\n      height: {\n        type: 'number',\n      },\n      backgroundColor: {\n        type: 'string',\n      },\n    },\n    appearances: {\n      default: {\n        default: true,\n      },\n    },\n    variantGroups: {},\n    states: {},\n  },\n  appearances: {\n    default: {\n      mapping: {\n        width: 32,\n        height: 32,\n        backgroundColor: 'color-primary-default',\n      },\n    },\n  },\n};\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport {\n  ApplicationProvider,\n  Interaction,\n  styled,\n} from '@ui-kitten/components';\nimport {\n  light,\n  mapping,\n} from '@eva-design/eva';\n\n/**\n * This example shows how styled component can control states.\n *\n * Let's say we don't like the standard behavior of TouchableOpacity when it's pressed and\n * we want the component to change it's color rather being highlighted.\n *\n * We define an active state in `meta` key and in mapping, so that component will change `backgroundColor`,\n * when `active` is requested. To do this, we call `dispatch` function when Touchable is pressed.\n * Then, when touch is released, we request nothing, which stands for `default`.\n */\n\nexport const StyledComponentStatesShowcase = () => (\n  <ApplicationProvider\n    mapping={mapping}\n    theme={light}\n    customMapping={{ components: { StyledComponent: styledComponentMapping } }}>\n\n    <StyledComponentShowcase/>\n\n  </ApplicationProvider>\n);\n\nclass StyledComponent extends React.Component {\n\n  static styledComponentName = 'StyledComponent';\n\n  onPressIn = () => {\n    this.props.dispatch([Interaction.ACTIVE]);\n  };\n\n  onPressOut = () => {\n    this.props.dispatch([]);\n  };\n\n  render() {\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        style={this.props.themedStyle}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n      />\n    );\n  }\n}\n\nconst StyledComponentShowcase = styled(StyledComponent);\n\nconst styledComponentMapping = {\n  meta: {\n    parameters: {\n      width: {\n        type: 'number',\n      },\n      height: {\n        type: 'number',\n      },\n      backgroundColor: {\n        type: 'string',\n      },\n    },\n    appearances: {\n      default: {\n        default: true,\n      },\n    },\n    variantGroups: {},\n    states: {\n      active: {\n        default: false,\n        priority: 0,\n      },\n    },\n  },\n  appearances: {\n    default: {\n      mapping: {\n        width: 32,\n        height: 32,\n        backgroundColor: 'color-primary-default',\n        state: {\n          active: {\n            backgroundColor: 'color-primary-active',\n          },\n        },\n      },\n    },\n  },\n};\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport {\n  ApplicationProvider,\n  Interaction,\n  styled,\n} from '@ui-kitten/components';\nimport {\n  light,\n  mapping,\n} from '@eva-design/eva';\n\n/**\n * This example shows how styled component can apply custom properties like status or size.\n * Note that it is controlled by passing them outside, via props, but it is defined in mappings.\n *\n * Let's say we want to have a `status` property that can be `primary` (which is default) and `danger`.\n * Furthermore, we still want to control backgroundColor when it is pressed.\n *\n * The `variantGroups` key in `meta` defines all custom properties that can be applied by component.\n * Each key in variant group is a string value that can be passed to this prop.\n *\n * Note that we can move `backgroundColor` property from `mapping` to each status.\n */\n\nexport const StyledComponentVariantsShowcase = () => (\n  <ApplicationProvider\n    mapping={mapping}\n    theme={light}\n    customMapping={{ components: { StyledComponent: styledComponentMapping } }}>\n\n    <StyledComponentShowcase status='danger'/>\n\n  </ApplicationProvider>\n);\n\nclass StyledComponent extends React.Component {\n\n  static styledComponentName = 'StyledComponent';\n\n  onPressIn = () => {\n    this.props.dispatch([Interaction.ACTIVE]);\n  };\n\n  onPressOut = () => {\n    this.props.dispatch([]);\n  };\n\n  render() {\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        style={this.props.themedStyle}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n      />\n    );\n  }\n}\n\nconst StyledComponentShowcase = styled(StyledComponent);\n\nconst styledComponentMapping = {\n  meta: {\n    parameters: {\n      width: {\n        type: 'number',\n      },\n      height: {\n        type: 'number',\n      },\n      backgroundColor: {\n        type: 'string',\n      },\n    },\n    appearances: {\n      default: {\n        default: true,\n      },\n    },\n    variantGroups: {\n      status: {\n        primary: {\n          default: true,\n        },\n        danger: {\n          default: false,\n        },\n      },\n    },\n    states: {\n      active: {\n        default: false,\n        priority: 0,\n      },\n    },\n  },\n  appearances: {\n    default: {\n      mapping: {\n        width: 40,\n        height: 40,\n      },\n      variantGroups: {\n        status: {\n          primary: {\n            backgroundColor: 'color-primary-default',\n            state: {\n              active: {\n                backgroundColor: 'color-primary-active',\n              },\n            },\n          },\n          danger: {\n            backgroundColor: 'color-danger-default',\n            state: {\n              active: {\n                backgroundColor: 'color-danger-active',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n","import React from 'react';\nimport {\n  Tab,\n  TabBar,\n} from '@ui-kitten/components';\n\nexport const TabBarSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <TabBar\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}>\n      <Tab title='USERS'/>\n      <Tab title='ORDERS'/>\n      <Tab title='TRANSACTIONS'/>\n    </TabBar>\n  );\n};\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Layout,\n  Tab,\n  TabBar,\n} from '@ui-kitten/components';\n\nconst PersonIcon = (style) => (\n  <Icon {...style} name='person-outline' />\n);\n\nconst BellIcon = (style) => (\n  <Icon {...style} name='bell-outline' />\n);\n\nconst EmailIcon = (style) => (\n  <Icon {...style} name='email-outline' />\n);\n\nexport const TabBarWithIconShowcase = () => {\n\n  const [topTabsIndex, setTopTabsIndex] = React.useState(0);\n  const [bottomTabsIndex, setBottomTabsIndex] = React.useState(0);\n\n  return (\n    <Layout>\n\n      <TabBar\n        selectedIndex={topTabsIndex}\n        onSelect={setTopTabsIndex}>\n        <Tab icon={PersonIcon}/>\n        <Tab icon={BellIcon}/>\n        <Tab icon={EmailIcon}/>\n      </TabBar>\n\n      <TabBar\n        selectedIndex={bottomTabsIndex}\n        onSelect={setBottomTabsIndex}>\n        <Tab title='USERS' icon={PersonIcon}/>\n        <Tab title='ORDERS' icon={BellIcon}/>\n        <Tab title='TRANSACTIONS' icon={EmailIcon}/>\n      </TabBar>\n\n    </Layout>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Tab } from '@ui-kitten/components';\n\nexport const TabInlineStylingShowcase = () => (\n  <Tab\n    style={styles.tab}\n    titleStyle={styles.tabTitle}\n    title='USERS'\n  />\n);\n\nconst styles = StyleSheet.create({\n  tab: { backgroundColor: '#EDF1F7' },\n  tabTitle: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { Tab } from '@ui-kitten/components';\n\nexport const TabSimpleUsageShowcase = () => (\n  <Tab title='USERS' />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Tab,\n  TabView,\n  Text,\n} from '@ui-kitten/components';\n\nexport const TabViewInlineStylingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <TabView\n      style={styles.tabView}\n      tabBarStyle={styles.tabBar}\n      indicatorStyle={styles.tabViewIndicator}\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}>\n      <Tab title='USERS'>\n        <Text>USERS</Text>\n      </Tab>\n      <Tab title='ORDERS'>\n        <Text>ORDERS</Text>\n      </Tab>\n    </TabView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tabView: { backgroundColor: '#EDF1F7' },\n  tabBar: { backgroundColor: '#C5CEE0' },\n  tabViewIndicator: { backgroundColor: '#3366FF' },\n});\n","import React from 'react';\nimport {\n  Tab,\n  TabView,\n  Text,\n} from '@ui-kitten/components';\n\nexport const TabViewLazyLoadingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const shouldLoadComponent = (index) => index === selectedIndex;\n\n  return (\n    <TabView\n      selectedIndex={selectedIndex}\n      shouldLoadComponent={shouldLoadComponent}\n      onSelect={setSelectedIndex}>\n      <Tab title='USERS'>\n        <Text>List of users.</Text>\n      </Tab>\n      <Tab title='ORDERS'>\n        <Text>List of orders.</Text>\n      </Tab>\n      <Tab title='TRANSACTIONS'>\n        <Text>ORDERS</Text>\n      </Tab>\n    </TabView>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Tab,\n  TabView,\n  Text,\n} from '@ui-kitten/components';\n\nexport const TabViewSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <TabView\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}>\n      <Tab title='USERS'>\n        <Layout style={styles.tabContainer}>\n          <Text>List of users.</Text>\n        </Layout>\n      </Tab>\n      <Tab title='ORDERS'>\n        <Layout style={styles.tabContainer}>\n          <Text>List of orders.</Text>\n        </Layout>\n      </Tab>\n      <Tab title='TRANSACTIONS'>\n        <Layout style={styles.tabContainer}>\n          <Text>List of transactions.</Text>\n        </Layout>\n      </Tab>\n    </TabView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tabContainer: {\n    minHeight: 64,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  Layout,\n  Tab,\n  TabView,\n  Text,\n} from '@ui-kitten/components';\n\nconst PersonIcon = (style) => (\n  <Icon {...style} name='person-outline' />\n);\n\nconst BellIcon = (style) => (\n  <Icon {...style} name='bell-outline' />\n);\n\nconst EmailIcon = (style) => (\n  <Icon {...style} name='email-outline' />\n);\n\nexport const TabViewWithIconShowcase = () => {\n\n  const [topTabsIndex, setTopTabsIndex] = React.useState(0);\n  const [bottomTabsIndex, setBottomTabsIndex] = React.useState(0);\n\n  return (\n    <Layout>\n\n      <TabView\n        selectedIndex={topTabsIndex}\n        onSelect={setTopTabsIndex}>\n        <Tab icon={PersonIcon}>\n          <Layout style={styles.tabContainer}>\n            <Text>List of users.</Text>\n          </Layout>\n        </Tab>\n        <Tab icon={BellIcon}>\n          <Layout style={styles.tabContainer}>\n            <Text>List of orders.</Text>\n          </Layout>\n        </Tab>\n        <Tab icon={EmailIcon}>\n          <Layout style={styles.tabContainer}>\n            <Text>List of transactions.</Text>\n          </Layout>\n        </Tab>\n      </TabView>\n\n      <TabView\n        selectedIndex={bottomTabsIndex}\n        onSelect={setBottomTabsIndex}>\n        <Tab title='USERS' icon={PersonIcon}>\n          <Layout style={styles.tabContainer}>\n            <Text>List of users.</Text>\n          </Layout>\n        </Tab>\n        <Tab title='ORDERS' icon={BellIcon}>\n          <Layout style={styles.tabContainer}>\n            <Text>List of orders.</Text>\n          </Layout>\n        </Tab>\n        <Tab title='TRANSACTIONS' icon={EmailIcon}>\n          <Layout style={styles.tabContainer}>\n            <Text>List of transactions.</Text>\n          </Layout>\n        </Tab>\n      </TabView>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tabContainer: {\n    minHeight: 64,\n  },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Tab } from '@ui-kitten/components';\n\nconst PersonIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/outline/png/128/person-outline.png' }}\n  />\n);\n\nexport const TabWithExternalSourceIconShowcase = () => (\n  <Tab\n    title='USERS'\n    icon={PersonIcon}\n  />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Tab,\n} from '@ui-kitten/components';\n\nconst PersonIcon = (style) => (\n  <Icon {...style} name='person-outline'/>\n);\n\nexport const TabWithIconShowcase = () => (\n  <Tab\n    title='USERS'\n    icon={PersonIcon}\n  />\n);\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Layout,\n  Text,\n} from '@ui-kitten/components';\n\nexport const TextAppearancesShowcase = () => (\n  <Layout>\n\n    <Text style={styles.text} appearance='default'>Default</Text>\n\n    <Text style={styles.text} appearance='hint'>Hint</Text>\n\n    <View style={styles.alternativeContainer}>\n      <Text style={styles.text} appearance='alternative'>Alternative</Text>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  text: {\n    margin: 8,\n  },\n  alternativeContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from '@ui-kitten/components';\n\nexport const TextCategoriesShowcase = () => (\n  <Layout>\n\n    <Text style={styles.text} category='h1'>H1</Text>\n\n    <Text style={styles.text} category='h2'>H2</Text>\n\n    <Text style={styles.text} category='h3'>H3</Text>\n\n    <Text style={styles.text} category='h4'>H4</Text>\n\n    <Text style={styles.text} category='h5'>H5</Text>\n\n    <Text style={styles.text} category='h6'>H6</Text>\n\n    <Text style={styles.text} category='s1'>S1</Text>\n\n    <Text style={styles.text} category='s2'>S2</Text>\n\n    <Text style={styles.text} category='p1'>P1</Text>\n\n    <Text style={styles.text} category='p2'>P2</Text>\n\n    <Text style={styles.text} category='c1'>C1</Text>\n\n    <Text style={styles.text} category='c2'>C2</Text>\n\n    <Text style={styles.text} category='label'>LABEL</Text>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  text: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Text } from '@ui-kitten/components';\n\nexport const TextInlineStylingShowcase = () => (\n  <Text style={styles.text}>Sample Text</Text>\n);\n\nconst styles = StyleSheet.create({\n  text: {\n    color: '#3366FF',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { Text } from '@ui-kitten/components';\n\nexport const TextSimpleUsageShowcase = () => (\n  <Text>Sample Text</Text>\n);\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Layout,\n  Text,\n} from '@ui-kitten/components';\n\nexport const TextStatusesShowcase = () => (\n  <Layout>\n\n    <Text style={styles.text} status='primary'>Primary</Text>\n\n    <Text style={styles.text} status='success'>Success</Text>\n\n    <Text style={styles.text} status='info'>Info</Text>\n\n    <Text style={styles.text} status='warning'>Warning</Text>\n\n    <Text style={styles.text} status='danger'>Danger</Text>\n\n    <Text style={styles.text} status='basic'>Basic</Text>\n\n    <View style={styles.controlContainer}>\n      <Text style={styles.text} status='control'>Control</Text>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  text: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { light, dark } from '@eva-design/eva';\nimport { ThemeProvider, Card, Layout, Text } from '@ui-kitten/components';\n\nexport const ThemeProviderSimpleUsageShowcase = () => (\n  <Layout>\n\n    <ThemeProvider theme={light}>\n      <Card style={{ marginVertical: 8 }}>\n        <Text>I use light theme</Text>\n      </Card>\n    </ThemeProvider>\n\n    <ThemeProvider theme={dark}>\n      <Card style={{ marginVertical: 8 }}>\n        <Text>I use dark theme</Text>\n      </Card>\n    </ThemeProvider>\n\n    <ThemeProvider theme={{ ...light, 'color-primary-default': 'red' }}>\n      <Card style={{ marginVertical: 8 }}>\n        <Text status='primary'>I use custom light theme</Text>\n      </Card>\n    </ThemeProvider>\n\n  </Layout>\n);\n","import {\n  Styles,\n  StyleSheet,\n  ThemeType,\n} from '../style/styleSheet.service';\nimport { useTheme } from '../theme/useTheme';\n\n/**\n * Takes a theme provided by ApplicationProvider or ThemeProvider and applies it to style.\n *\n * @overview-example UseStyleSheetSimpleUsage\n */\nexport const useStyleSheet = <T extends Styles<T>>(styles: Styles<T>) => {\n  return {\n    create: (): T => {\n      const theme: ThemeType = useTheme();\n      return StyleSheet.createThemedStyles(styles, theme);\n    },\n  };\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Toggle } from '@ui-kitten/components';\n\nexport const ToggleInlineStylingShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return (\n    <Toggle\n      checked={checked}\n      text='Place your Text'\n      textStyle={styles.text}\n      onChange={onCheckedChange}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    color: '#3366FF',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { Toggle } from '@ui-kitten/components';\n\nexport const ToggleSimpleUsageShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return (\n    <Toggle\n      text={`Checked: ${checked}`}\n      checked={checked}\n      onChange={onCheckedChange}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Toggle,\n} from '@ui-kitten/components';\n\nexport const ToggleStatesShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return (\n    <Layout style={styles.container}>\n\n      <Toggle\n        style={styles.toggle}\n        text='Active'\n        checked={checked}\n        onChange={onCheckedChange}\n      />\n\n      <Toggle\n        style={styles.toggle}\n        text='Disabled'\n        disabled={true}\n      />\n\n      <Toggle\n        style={styles.toggle}\n        text='Checked Disabled'\n        checked={true}\n        disabled={true}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  toggle: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Layout,\n  Toggle,\n} from '@ui-kitten/components';\n\nconst useToggleChanges = (initialCheck = false) => {\n  const [checked, setChecked] = React.useState(initialCheck);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return {\n    checked,\n    onChange: onCheckedChange,\n  };\n};\n\nexport const ToggleStatusShowcase = () => {\n\n  const primaryToggleChanges = useToggleChanges();\n  const successToggleChanges = useToggleChanges();\n  const infoToggleChanges = useToggleChanges();\n  const warningToggleChanges = useToggleChanges();\n  const dangerToggleChanges = useToggleChanges();\n  const basicToggleChanges = useToggleChanges();\n  const controlToggleChanges = useToggleChanges();\n\n  return (\n    <Layout style={styles.container}>\n\n      <Toggle\n        style={styles.toggle}\n        text='Primary'\n        status='primary'\n        {...primaryToggleChanges}\n      />\n\n      <Toggle\n        style={styles.toggle}\n        text='Success'\n        status='success'\n        {...successToggleChanges}\n      />\n\n      <Toggle\n        style={styles.toggle}\n        text='Info'\n        status='info'\n        {...infoToggleChanges}\n      />\n\n      <Toggle\n        style={styles.toggle}\n        text='Warning'\n        status='warning'\n        {...warningToggleChanges}\n      />\n\n      <Toggle\n        style={styles.toggle}\n        text='Danger'\n        status='danger'\n        {...dangerToggleChanges}\n      />\n\n      <Toggle\n        style={styles.toggle}\n        text='Basic'\n        status='basic'\n        {...basicToggleChanges}\n      />\n\n      <View style={styles.controlContainer}>\n        <Toggle\n          style={styles.toggle}\n          text='Control'\n          status='control'\n          {...controlToggleChanges}\n        />\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  toggle: {\n    margin: 8,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Tooltip,\n} from '@ui-kitten/components';\n\nexport const TooltipInlineStylingShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const toggleTooltip = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <Tooltip\n      visible={visible}\n      text='Hi!'\n      textStyle={styles.tooltipText}\n      onBackdropPress={toggleTooltip}>\n      <Button onPress={toggleTooltip}>\n        TOGGLE TOOLTIP\n      </Button>\n    </Tooltip>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tooltipText: {\n    color: 'white',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Button,\n  Layout,\n  Select,\n  Tooltip,\n} from '@ui-kitten/components';\n\nconst PLACEMENTS = [\n  { text: 'top' },\n  { text: 'top start' },\n  { text: 'top end' },\n  { text: 'left' },\n  { text: 'left start' },\n  { text: 'left end' },\n  { text: 'right' },\n  { text: 'right start' },\n  { text: 'right end' },\n  { text: 'bottom' },\n  { text: 'bottom start' },\n  { text: 'bottom end' },\n];\n\nexport const TooltipPlacementShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n  const [placement, setPlacement] = React.useState(PLACEMENTS[0]);\n\n  const toggleTooltip = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <Layout>\n\n      <Select\n        placeholder='Select Placement'\n        data={PLACEMENTS}\n        selectedOption={placement}\n        onSelect={setPlacement}\n      />\n\n      <View style={styles.buttonContainer}>\n        <Tooltip\n          visible={visible}\n          placement={placement.text}\n          text='Hi!'\n          onBackdropPress={toggleTooltip}>\n          <Button style={styles.button} onPress={toggleTooltip}>\n            TOGGLE TOOLTIP\n          </Button>\n        </Tooltip>\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 376,\n  },\n  button: {\n    width: 192,\n  },\n});\n","import React from 'react';\nimport {\n  Button,\n  Tooltip,\n} from '@ui-kitten/components';\n\nexport const TooltipSimpleUsageShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const toggleTooltip = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <Tooltip\n      visible={visible}\n      text='Hi!'\n      onBackdropPress={toggleTooltip}>\n      <Button onPress={toggleTooltip}>\n        TOGGLE TOOLTIP\n      </Button>\n    </Tooltip>\n  );\n};\n","import React from 'react';\nimport {\n  Button,\n  Tooltip,\n} from '@ui-kitten/components';\nimport { StyleSheet } from 'react-native';\n\nexport const TooltipStyledBackdropShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const toggleTooltip = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <Tooltip\n      backdropStyle={styles.backdrop}\n      visible={visible}\n      text='Hi!'\n      onBackdropPress={toggleTooltip}>\n      <Button onPress={toggleTooltip}>\n        TOGGLE TOOLTIP\n      </Button>\n    </Tooltip>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport {\n  Button,\n  Tooltip,\n} from '@ui-kitten/components';\n\nconst InfoIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/info.png' }}\n  />\n);\n\nexport const TooltipWithExternalSourceIconShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const toggleTooltip = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <Tooltip\n      visible={visible}\n      text='Hi!'\n      icon={InfoIcon}\n      onBackdropPress={toggleTooltip}>\n      <Button onPress={toggleTooltip}>\n        TOGGLE TOOLTIP\n      </Button>\n    </Tooltip>\n  );\n};\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n  Tooltip,\n} from '@ui-kitten/components';\n\nconst InfoIcon = (style) => (\n  <Icon {...style} name='info'/>\n);\n\nexport const TooltipWithIconShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const toggleTooltip = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <Tooltip\n      visible={visible}\n      text='Hi!'\n      icon={InfoIcon}\n      onBackdropPress={toggleTooltip}>\n      <Button onPress={toggleTooltip}>\n        TOGGLE TOOLTIP\n      </Button>\n    </Tooltip>\n  );\n};\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { TopNavigationAction } from '@ui-kitten/components';\n\nconst BackIcon = (style) => (\n  <Image\n    style={style}\n    source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/arrow-back.png'}}\n  />\n);\n\nexport const TopNavigationActionExternalSourceIconShowcase = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  TopNavigationAction,\n} from '@ui-kitten/components';\n\nconst EditIcon = (style) => (\n  <Icon {...style} name='edit' />\n);\n\nexport const TopNavigationActionInlineStylingShowcase = () => (\n  <TopNavigationAction\n    style={styles.action}\n    icon={EditIcon}\n  />\n);\n\nconst styles = StyleSheet.create({\n  action: { marginHorizontal: 4 },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  TopNavigationAction,\n} from '@ui-kitten/components';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nexport const TopNavigationActionSimpleUsageShowcase = () => (\n  <TopNavigationAction icon={BackIcon} />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from '@ui-kitten/components';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nconst EditIcon = (style) => (\n  <Icon {...style} name='edit'/>\n);\n\nconst MenuIcon = (style) => (\n  <Icon {...style} name='more-vertical'/>\n);\n\nconst BackAction = (props) => (\n  <TopNavigationAction {...props} icon={BackIcon}/>\n);\n\nconst EditAction = (props) => (\n  <TopNavigationAction {...props} icon={EditIcon}/>\n);\n\nconst MenuAction = (props) => (\n  <TopNavigationAction {...props} icon={MenuIcon}/>\n);\n\nexport const TopNavigationActionsShowcase = () => {\n\n  const onBackPress = () => {\n  };\n\n  const renderLeftControl = () => (\n    <BackAction onPress={onBackPress}/>\n  );\n\n  const renderRightControls = () => [\n    <EditAction/>,\n    <MenuAction/>,\n  ];\n\n  return (\n    <TopNavigation\n      title='Application Title'\n      leftControl={renderLeftControl()}\n      rightControls={renderRightControls()}\n    />\n  );\n};\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Layout,\n  TopNavigation,\n  TopNavigationAction,\n} from '@ui-kitten/components';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back' />\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationAlignmentsShowcase = () => (\n  <Layout>\n    <TopNavigation\n      title='Start'\n      alignment='start'\n      leftControl={BackAction()}\n    />\n    <TopNavigation\n      title='Center'\n      alignment='center'\n      leftControl={BackAction()}\n    />\n  </Layout>\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from '@ui-kitten/components';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back' />\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationInlineStylingShowcase = () => (\n  <TopNavigation\n    style={styles.topNavigation}\n    title='Title'\n    subtitle='Subtitle'\n    leftControl={BackAction()}\n    titleStyle={styles.title}\n    subtitleStyle={styles.subtitle}\n  />\n);\n\nconst styles = StyleSheet.create({\n  topNavigation: { backgroundColor: '#1A2138' },\n  title: { color: '#EDF1F7' },\n  subtitle: { color: '#C5CEE0' },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/icon-packages\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from '@ui-kitten/components';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back' />\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationSimpleUsageShowcase = () => (\n  <TopNavigation\n    leftControl={BackAction()}\n    title='Application Title'\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  Layout,\n  OverflowMenu,\n  TopNavigation,\n  TopNavigationAction,\n} from '@ui-kitten/components';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nconst MenuIcon = (style) => (\n  <Icon {...style} name='more-vertical'/>\n);\n\nconst InfoIcon = (style) => (\n  <Icon {...style} name='info'/>\n);\n\nconst LogoutIcon = (style) => (\n  <Icon {...style} name='log-out'/>\n);\n\nexport const TopNavigationWithMenuShowcase = () => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n\n  const menuData = [\n    { title: 'About', icon: InfoIcon },\n    { title: 'Logout', icon: LogoutIcon },\n  ];\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const onMenuItemSelect = (index) => {\n    // Handle Item Select\n\n    setMenuVisible(false);\n  };\n\n  const renderMenuAction = () => (\n    <OverflowMenu\n      visible={menuVisible}\n      data={menuData}\n      onSelect={onMenuItemSelect}\n      onBackdropPress={toggleMenu}>\n      <TopNavigationAction\n        icon={MenuIcon}\n        onPress={toggleMenu}\n      />\n    </OverflowMenu>\n  );\n\n  const renderBackAction = () => (\n    <TopNavigationAction icon={BackIcon}/>\n  );\n\n  return (\n    <Layout style={styles.container}>\n      <TopNavigation\n        title='Application Title'\n        leftControl={renderBackAction()}\n        rightControls={renderMenuAction()}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 192,\n  },\n});\n\n","import React from 'react';\nimport {\n  Text,\n  Layout,\n  useStyleSheet,\n} from '@ui-kitten/components';\n\nexport const UseStyleSheetSimpleUsageShowcase = () => {\n  const styles = StyleSheet.create();\n\n  return (\n    <Layout style={styles.container}>\n      <Text category='h4' status='control'>\n        I use success color as background!\n      </Text>\n    </Layout>\n  );\n};\n\nconst StyleSheet = useStyleSheet({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'color-success-default',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n  useTheme,\n} from '@ui-kitten/components';\n\nexport const UseThemeSimpleUsageShowcase = () => {\n  const theme = useTheme();\n\n  return (\n    <Layout style={[styles.container, { backgroundColor: theme['color-primary-default'] }]}>\n      <Text category='h4' status='control'>\n        I use primary color as background!\n      </Text>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n  ViewPager,\n} from '@ui-kitten/components';\n\nexport const ViewPagerInlineStylingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <ViewPager\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}>\n      <Layout\n        level='2'\n        style={styles.tab}>\n        <Text category='h5'>Tab 1</Text>\n      </Layout>\n      <Layout\n        level='2'\n        style={styles.tab}>\n        <Text category='h5'>Tab 2</Text>\n      </Layout>\n    </ViewPager>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 192,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n  ViewPager,\n} from '@ui-kitten/components';\n\nexport const ViewPagerLazyLoadingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const shouldLoadComponent = (index) => index === selectedIndex;\n\n  return (\n    <ViewPager\n      selectedIndex={selectedIndex}\n      shouldLoadComponent={shouldLoadComponent}\n      onSelect={setSelectedIndex}>\n      <Layout\n        level='2'\n        style={styles.tab}>\n        <Text category='h5'>Tab 1</Text>\n      </Layout>\n      <Layout\n        level='2'\n        style={styles.tab}>\n        <Text category='h5'>Tab 2</Text>\n      </Layout>\n    </ViewPager>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 192,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n  ViewPager,\n} from '@ui-kitten/components';\n\nexport const ViewPagerSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <ViewPager\n      selectedIndex={selectedIndex}\n      onSelect={setSelectedIndex}>\n      <Layout\n        level='2'\n        style={styles.tab}>\n        <Text category='h5'>Tab 1</Text>\n      </Layout>\n      <Layout\n        level='2'\n        style={styles.tab}>\n        <Text category='h5'>Tab 2</Text>\n      </Layout>\n    </ViewPager>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 192,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport {\n  Layout,\n  Text,\n  withStyles,\n} from '@ui-kitten/components';\n\nconst ThemedComponent = ({ themedStyle, theme }) => (\n  <Layout style={themedStyle.container}>\n    <Text\n      style={{ color: theme['color-success-default'] }}\n      category='h4'>\n      I use info as background color and success as text color!\n    </Text>\n  </Layout>\n);\n\nexport const WithStylesSimpleUsageShowcase = withStyles(ThemedComponent, theme => ({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme['color-info-default'],\n  },\n}));\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ThemeContext } from './themeContext';\nimport {\n  Styles,\n  ThemeType,\n} from '../style/styleSheet.service';\n\ninterface PrivateProps<T> {\n  forwardedRef?: React.RefObject<T>;\n}\n\nexport interface ThemedComponentProps<T extends Styles<T> = any> {\n  theme?: ThemeType;\n  themedStyle?: T | undefined;\n}\n\nexport type ThemedComponentClass<P, S extends Styles<S>> = React.ComponentClass<ThemedComponentProps<S> & P>;\n\ninterface PrivateProps<T> {\n  forwardedRef?: React.RefObject<T>;\n}\n\ntype CreateStylesFunction<T extends Styles<T>> = (theme: ThemeType) => T;\n\n/**\n * `withStyles` is a High Order Function which is used to create themed style for non-styled component.\n * Basically used when need to use theme variable somewhere.\n * Returns component class which can be used as themed component.\n *\n * @property {ThemeType} theme - Determines theme used to style component.\n *\n * @property {Styles} themedStyle - Determines component style for it's current state.\n *\n * @param Component - Type: {ComponentType}. Determines class of component to be themed.\n *\n * @param createStyles - Type: {(theme: ThemeType) => Styles}. Determines arrow function used to create styles.\n *\n * @overview-example WithStylesSimpleUsage\n */\nexport const withStyles = <P extends object, S>(Component: React.ComponentType<P>,\n                                                createStyles?: CreateStylesFunction<S>): ThemedComponentClass<P, S> => {\n\n  type WrappingProps = PrivateProps<WrappedElementInstance> & WrappedProps;\n  type WrappedProps = ThemedComponentProps<S> & P;\n  type WrappingElement = React.ReactElement<WrappingProps>;\n  type WrappedElementInstance = React.ReactInstance;\n\n  class Wrapper extends React.Component<WrappingProps> {\n\n    private withThemedProps = (props: P, theme: ThemeType): WrappedProps => {\n      const themedStyle = createStyles && createStyles(theme);\n      return { ...props, theme, themedStyle };\n    };\n\n    private renderWrappedElement = (theme: ThemeType): React.ReactElement<ThemedComponentProps<S>> => {\n      const { forwardedRef, ...restProps } = this.props;\n      const props: WrappedProps = this.withThemedProps(restProps as P, theme);\n\n      return (\n        <Component\n          {...props}\n          ref={forwardedRef}\n        />\n      );\n    };\n\n    public render(): React.ReactElement {\n      return (\n        <ThemeContext.Consumer>\n          {this.renderWrappedElement}\n        </ThemeContext.Consumer>\n      );\n    }\n  }\n\n  const WrappingElement = (props: WrappingProps, ref: React.Ref<WrappedElementInstance>): WrappingElement => {\n    return (\n      // @ts-ignore\n      <Wrapper\n        {...props}\n        forwardedRef={ref}\n      />\n    );\n  };\n\n  const ThemedComponent = React.forwardRef<WrappedElementInstance, WrappingProps>(WrappingElement);\n\n  ThemedComponent.displayName = Component.displayName || Component.name;\n\n  hoistNonReactStatics(ThemedComponent, Component);\n\n  // @ts-ignore\n  return ThemedComponent;\n};\n","import React from 'react';\nimport { createBrowserApp } from '@react-navigation/web';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { sharingHeightContainer } from '@pg/components/sharingHeight.container';\nimport { AutocompleteAsyncShowcase } from '@pg/components/showcases/autocomplete/autocompleteAsync.component';\nimport { AutocompleteCustomItemShowcase } from '@pg/components/showcases/autocomplete/autocompleteCustomItem.component';\nimport { AutocompletePlaceholderDataShowcase } from '@pg/components/showcases/autocomplete/autocompletePlaceholderData.component';\nimport { AutocompleteSimpleUsageShowcase } from '@pg/components/showcases/autocomplete/autocompleteSimpleUsage.component';\nimport { AutocompleteSizeShowcase } from '@pg/components/showcases/autocomplete/autocompleteSize.component';\nimport { AutocompleteStatesShowcase } from '@pg/components/showcases/autocomplete/autocompleteStates.component';\nimport { AutocompleteStatusShowcase } from '@pg/components/showcases/autocomplete/autocompleteStatus.component';\nimport { AutocompleteWithIconShowcase } from '@pg/components/showcases/autocomplete/autocompleteWithIcon.component';\nimport { AutocompleteWithLabelShowcase } from '@pg/components/showcases/autocomplete/autocompleteWithLabel.component';\nimport { AvatarInlineStylingShowcase } from '@pg/components/showcases/avatar/avatarInlineStyling.component';\nimport { AvatarRemoteImagesShowcase } from '@pg/components/showcases/avatar/avatarRemoteImages.component';\nimport { AvatarShapeShowcase } from '@pg/components/showcases/avatar/avatarShape.component';\nimport { AvatarSimpleUsageShowcase } from '@pg/components/showcases/avatar/avatarSimpleUsage.component';\nimport { AvatarSizeShowcase } from '@pg/components/showcases/avatar/avatarSize.component';\nimport { BottomNavigationInlineStylingShowcase } from '@pg/components/showcases/bottomNavigation/bottomNavigationInlineStyling.component';\nimport { BottomNavigationSimpleUsageShowcase } from '@pg/components/showcases/bottomNavigation/bottomNavigationSimpleUsage.component';\nimport { BottomNavigationTabInlineStylingShowcase } from '@pg/components/showcases/bottomNavigation/bottomNavigationTabInlineStyling.component';\nimport { BottomNavigationTabSimpleUsageShowcase } from '@pg/components/showcases/bottomNavigation/bottomNavigationTabSimpleUsage.component';\nimport { BottomNavigationTabWithIconShowcase } from '@pg/components/showcases/bottomNavigation/bottomNavigationTabWithIcon.component';\nimport { BottomNavigationWithIconsShowcase } from '@pg/components/showcases/bottomNavigation/bottomNavigationWithIcons.component';\nimport { BottomNavigationWithoutIndicatorShowcase } from '@pg/components/showcases/bottomNavigation/bottomNavigationWithoutIndicator.component';\nimport { ButtonAppearancesShowcase } from '@pg/components/showcases/button/buttonAppearances.component';\nimport { ButtonGhostShowcase } from '@pg/components/showcases/button/buttonGhost.component';\nimport { ButtonOutlineShowcase } from '@pg/components/showcases/button/buttonOutline.component';\nimport { ButtonSimpleUsageShowcase } from '@pg/components/showcases/button/buttonSimpleUsage.component';\nimport { ButtonSizeShowcase } from '@pg/components/showcases/button/buttonSize.component';\nimport { ButtonStatesShowcase } from '@pg/components/showcases/button/buttonStates.component';\nimport { ButtonStatusShowcase } from '@pg/components/showcases/button/buttonStatus.component';\nimport { ButtonWithIconShowcase } from '@pg/components/showcases/button/buttonWithIcon.component';\nimport { ButtonGroupAppearanceShowcase } from '@pg/components/showcases/buttonGroup/buttonGroupAppearance.component';\nimport { ButtonGroupInlineStylingShowcase } from '@pg/components/showcases/buttonGroup/buttonGroupInlineStyling.component';\nimport { ButtonGroupOutlineShowcase } from '@pg/components/showcases/buttonGroup/buttonGroupOutline.component';\nimport { ButtonGroupSimpleUsageShowcase } from '@pg/components/showcases/buttonGroup/buttonGroupSimpleUsage.component';\nimport { ButtonGroupSizeShowcase } from '@pg/components/showcases/buttonGroup/buttonGroupSize.component';\nimport { ButtonGroupStatusShowcase } from '@pg/components/showcases/buttonGroup/buttonGroupStatus.component';\nimport { ButtonGroupWithIconsShowcase } from '@pg/components/showcases/buttonGroup/buttonGroupWithIcons.component';\nimport { CalendarBoundingMonthShowcase } from '@pg/components/showcases/calendar/calendarBoundingMonth.component';\nimport { CalendarBoundsShowcase } from '@pg/components/showcases/calendar/calendarBounds.component';\nimport { CalendarCustomDayShowcase } from '@pg/components/showcases/calendar/calendarCustomDay.component';\nimport { CalendarCustomLocaleShowcase } from '@pg/components/showcases/calendar/calendarCustomLocale.component';\nimport { CalendarFilterShowcase } from '@pg/components/showcases/calendar/calendarFilter.component';\nimport { CalendarMomentShowcase } from '@pg/components/showcases/calendar/calendarMoment.component';\nimport { CalendarSimpleUsageShowcase } from '@pg/components/showcases/calendar/calendarSimpleUsage.component';\nimport { CalendarStartDayOfWeekShowcase } from '@pg/components/showcases/calendar/calendarStartDayOfWeek.component';\nimport { RangeCalendarSimpleUsageShowcase } from '@pg/components/showcases/calendar/rangeCalendarSimpleUsage.component';\nimport { CardCustomHeaderShowcase } from '@pg/components/showcases/card/cardCustomHeader.component';\nimport { CardSimpleUsageShowcase } from '@pg/components/showcases/card/cardSimpleUsage.component';\nimport { CardStatusesShowcase } from '@pg/components/showcases/card/cardStatuses.component';\nimport { CardWithHeaderAndFooterShowcase } from '@pg/components/showcases/card/cardWithHeaderAndFooter.component';\nimport { CheckboxIndeterminateShowcase } from '@pg/components/showcases/checkbox/checkboxIndeterminate.component';\nimport { CheckboxInlineStylingShowcase } from '@pg/components/showcases/checkbox/checkboxInlineStyling.component';\nimport { CheckboxSimpleUsageShowcase } from '@pg/components/showcases/checkbox/checkboxSimpleUsage.component';\nimport { CheckboxStatesShowcase } from '@pg/components/showcases/checkbox/checkboxStates.component';\nimport { CheckboxStatusShowcase } from '@pg/components/showcases/checkbox/checkboxStatus.component';\nimport { DatepickerBoundingMonthShowcase } from '@pg/components/showcases/datepicker/datepickerBoundingMonth.component';\nimport { DatepickerCustomDayShowcase } from '@pg/components/showcases/datepicker/datepickerCustomDay.component';\nimport { DatepickerCustomLocaleShowcase } from '@pg/components/showcases/datepicker/datepickerCustomLocale.component';\nimport { DatepickerFilterShowcase } from '@pg/components/showcases/datepicker/datepickerFilter.component';\nimport { DatepickerMomentShowcase } from '@pg/components/showcases/datepicker/datepickerMoment.component';\nimport { DatepickerSimpleUsageShowcase } from '@pg/components/showcases/datepicker/datepickerSimpleUsage.component';\nimport { DatepickerSizeShowcase } from '@pg/components/showcases/datepicker/datepickerSize.component';\nimport { DatepickerStatusShowcase } from '@pg/components/showcases/datepicker/datepickerStatus.component';\nimport { DatepickerWithIconShowcase } from '@pg/components/showcases/datepicker/datepickerWithIcon.component';\nimport { RangeDatepickerSimpleUsageShowcase } from '@pg/components/showcases/datepicker/rangeDatepickerSimpleUsage.component';\nimport { DrawerCustomHeaderShowcase } from '@pg/components/showcases/drawer/drawerCustomHeader.component';\nimport { DrawerFooterShowcase } from '@pg/components/showcases/drawer/drawerFooter.component';\nimport { DrawerHeaderShowcase } from '@pg/components/showcases/drawer/drawerHeader.component';\nimport { DrawerHeaderFooterInlineStylingShowcase } from '@pg/components/showcases/drawer/drawerHeaderFooterInlineStyling.component';\nimport { DrawerHeaderFooterSimpleUsageShowcase } from '@pg/components/showcases/drawer/drawerHeaderFooterSimpleUsage.component';\nimport { DrawerHeaderFooterWithAccessoryShowcase } from '@pg/components/showcases/drawer/drawerHeaderFooterWithAccessory.component';\nimport { DrawerHeaderFooterWithExternalSourceIconShowcase } from '@pg/components/showcases/drawer/drawerHeaderFooterWithExternalSourceIcon.component';\nimport { DrawerNotificationBadgeItemShowcase } from '@pg/components/showcases/drawer/drawerNotificationBadgeItem.component';\nimport { DrawerSimpleUsageShowcase } from '@pg/components/showcases/drawer/drawerSimpleUsage.component';\nimport { DrawerWithIconsShowcase } from '@pg/components/showcases/drawer/drawerWithIcons.component';\nimport { IconAnimationShowcase } from '@pg/components/showcases/icon/iconAnimation.component';\nimport { IconAnimationInfiniteShowcase } from '@pg/components/showcases/icon/iconAnimationInfinite.component';\nimport { IconExternalSourceShowcase } from '@pg/components/showcases/icon/iconExternalSource.component';\nimport { IconInlineStylingShowcase } from '@pg/components/showcases/icon/iconInlineStyling.component';\nimport { IconSimpleUsageShowcase } from '@pg/components/showcases/icon/iconSimpleUsage.component';\nimport { IconWithinButtonShowcase } from '@pg/components/showcases/icon/iconWithinButton.component';\nimport { IconWithinInputShowcase } from '@pg/components/showcases/icon/iconWithinInput.component';\nimport { InputInlineStylingShowcase } from '@pg/components/showcases/input/inputInlineStyling.component';\nimport { InputSimpleUsageShowcase } from '@pg/components/showcases/input/inputSimpleUsage.component';\nimport { InputSizeShowcase } from '@pg/components/showcases/input/inputSize.component';\nimport { InputStatesShowcase } from '@pg/components/showcases/input/inputStates.component';\nimport { InputStatusShowcase } from '@pg/components/showcases/input/inputStatus.component';\nimport { InputWithCaptionShowcase } from '@pg/components/showcases/input/inputWithCaption.component';\nimport { InputWithExternalSourceIconShowcase } from '@pg/components/showcases/input/inputWithExternalSourceIcon.component';\nimport { InputWithIconShowcase } from '@pg/components/showcases/input/inputWithIcon.component';\nimport { InputWithLabelShowcase } from '@pg/components/showcases/input/inputWithLabel.component';\nimport { LayoutInlineStylingShowcase } from '@pg/components/showcases/layout/layoutInlineStyling.component';\nimport { LayoutLevelShowcase } from '@pg/components/showcases/layout/layoutLevel.component';\nimport { LayoutSimpleUsageShowcase } from '@pg/components/showcases/layout/layoutSimpleUsage.component';\nimport { ListCompositeItemShowcase } from '@pg/components/showcases/list/listCompositeItem.component';\nimport { ListInlineStylingShowcase } from '@pg/components/showcases/list/listInlineStyling.component';\nimport { ListItemInlineStylingShowcase } from '@pg/components/showcases/list/listItemInlineStyling.component';\nimport { ListItemSimpleUsageShowcase } from '@pg/components/showcases/list/listItemSimpleUsage.component';\nimport { ListItemWithAccessoryShowcase } from '@pg/components/showcases/list/listItemWithAccessory.component';\nimport { ListItemWithExternalIconShowcase } from '@pg/components/showcases/list/listItemWithExternalIcon.component';\nimport { ListItemWithIconShowcase } from '@pg/components/showcases/list/listItemWithIcon.component';\nimport { ListSimpleUsageShowcase } from '@pg/components/showcases/list/listSimpleUsage.component';\nimport { MenuDisabledOptionsShowcase } from '@pg/components/showcases/menu/menuDisabledOptions.component';\nimport { MenuInlineStylingShowcase } from '@pg/components/showcases/menu/menuInlineStyling.component';\nimport { MenuSimpleUsageShowcase } from '@pg/components/showcases/menu/menuSimpleUsage.component';\nimport { MenuWithIconsShowcase } from '@pg/components/showcases/menu/menuWithIcons.component';\nimport { MenuWithSubMenuShowcase } from '@pg/components/showcases/menu/menuWithSubMenu.component';\nimport { MenuWithoutDividerShowcase } from '@pg/components/showcases/menu/menuWithoutDivider.component';\nimport { ModalSimpleUsageShowcase } from '@pg/components/showcases/modal/modalSimpleUsage.component';\nimport { ModalWithBackdropShowcase } from '@pg/components/showcases/modal/modalWithBackdrop.component';\nimport { OverflowMenuExternalSourceIconsShowcase } from '@pg/components/showcases/overflowMenu/overflowMenuExternalSourceIcons.component';\nimport { OverflowMenuPlacementShowcase } from '@pg/components/showcases/overflowMenu/overflowMenuPlacement.component';\nimport { OverflowMenuSimpleUsageShowcase } from '@pg/components/showcases/overflowMenu/overflowMenuSimpleUsage.component';\nimport { OverflowMenuStyledBackdropShowcase } from '@pg/components/showcases/overflowMenu/overflowMenuStyledBackdrop.component';\nimport { OverflowMenuWithDisabledItemsShowcase } from '@pg/components/showcases/overflowMenu/overflowMenuWithDisabledItems.component';\nimport { OverflowMenuWithIconsShowcase } from '@pg/components/showcases/overflowMenu/overflowMenuWithIcons.component';\nimport { OverflowMenuWithoutDividerShowcase } from '@pg/components/showcases/overflowMenu/overflowMenuWithoutDivider.component';\nimport { PopoverFullWidthShowcase } from '@pg/components/showcases/popover/popoverFullWidth.component';\nimport { PopoverPlacementShowcase } from '@pg/components/showcases/popover/popoverPlacement.component';\nimport { PopoverSimpleUsageShowcase } from '@pg/components/showcases/popover/popoverSimpleUsage.component';\nimport { PopoverStyledBackdropShowcase } from '@pg/components/showcases/popover/popoverStyledBackdrop.component';\nimport { RadioInlineStylingShowcase } from '@pg/components/showcases/radio/radioInlineStyling.component';\nimport { RadioSimpleUsageShowcase } from '@pg/components/showcases/radio/radioSimpleUsage.component';\nimport { RadioStatesShowcase } from '@pg/components/showcases/radio/radioStates.component';\nimport { RadioStatusShowcase } from '@pg/components/showcases/radio/radioStatus.component';\nimport { RadioGroupSimpleUsageShowcase } from '@pg/components/showcases/radioGroup/radioGroupSimpleUsage.component';\nimport { SelectCustomIconShowcase } from '@pg/components/showcases/select/selectCustomIcon.component';\nimport { SelectDisabledOptionsShowcase } from '@pg/components/showcases/select/selectDisabledOptions.component';\nimport { SelectInitialValueShowcase } from '@pg/components/showcases/select/selectInitialValue.component';\nimport { SelectInlineStylingShowcase } from '@pg/components/showcases/select/selectInlineStyling.component';\nimport { SelectMultiInitialValueShowcase } from '@pg/components/showcases/select/selectMultiInitialValue.component';\nimport { SelectMultiSelectShowcase } from '@pg/components/showcases/select/selectMultiSelect.component';\nimport { SelectSimpleUsageShowcase } from '@pg/components/showcases/select/selectSimpleUsage.component';\nimport { SelectSizeShowcase } from '@pg/components/showcases/select/selectSize.component';\nimport { SelectStatesShowcase } from '@pg/components/showcases/select/selectStates.component';\nimport { SelectStatusShowcase } from '@pg/components/showcases/select/selectStatus.component';\nimport { SelectWithGroupsShowcase } from '@pg/components/showcases/select/selectWithGroups.component';\nimport { SpinnerDataLoadingShowcase } from '@pg/components/showcases/spinner/spinnerDataLoading.component';\nimport { SpinnerSimpleUsageShowcase } from '@pg/components/showcases/spinner/spinnerSimpleUsage.component';\nimport { SpinnerSizesShowcase } from '@pg/components/showcases/spinner/spinnerSizes.component';\nimport { SpinnerStatusesShowcase } from '@pg/components/showcases/spinner/spinnerStatuses.component';\nimport { StyledComponentSimpleUsageShowcase } from '@pg/components/showcases/styled/styledComponentSimpleUsage.component';\nimport { StyledComponentStatesShowcase } from '@pg/components/showcases/styled/styledComponentStates.component';\nimport { StyledComponentVariantsShowcase } from '@pg/components/showcases/styled/styledComponentVariants.component';\nimport { TabBarSimpleUsageShowcase } from '@pg/components/showcases/tab/tabBarSimpleUsage.component';\nimport { TabBarWithIconShowcase } from '@pg/components/showcases/tab/tabBarWithIcon.component';\nimport { TabInlineStylingShowcase } from '@pg/components/showcases/tab/tabInlineStyling.component';\nimport { TabSimpleUsageShowcase } from '@pg/components/showcases/tab/tabSimpleUsage.component';\nimport { TabViewInlineStylingShowcase } from '@pg/components/showcases/tab/tabViewInlineStyling.component';\nimport { TabViewLazyLoadingShowcase } from '@pg/components/showcases/tab/tabViewLazyLoading.component';\nimport { TabViewSimpleUsageShowcase } from '@pg/components/showcases/tab/tabViewSimpleUsage.component';\nimport { TabViewWithIconShowcase } from '@pg/components/showcases/tab/tabViewWithIcon.component';\nimport { TabWithExternalSourceIconShowcase } from '@pg/components/showcases/tab/tabWithExternalSourceIcon.component';\nimport { TabWithIconShowcase } from '@pg/components/showcases/tab/tabWithIcon.component';\nimport { TextAppearancesShowcase } from '@pg/components/showcases/text/textAppearances.component';\nimport { TextCategoriesShowcase } from '@pg/components/showcases/text/textCategories.component';\nimport { TextInlineStylingShowcase } from '@pg/components/showcases/text/textInlineStyling.component';\nimport { TextSimpleUsageShowcase } from '@pg/components/showcases/text/textSimpleUsage.component';\nimport { TextStatusesShowcase } from '@pg/components/showcases/text/textStatuses.component';\nimport { ThemeProviderSimpleUsageShowcase } from '@pg/components/showcases/themeProvider/themeProviderSimpleUsage.component';\nimport { ToggleInlineStylingShowcase } from '@pg/components/showcases/toggle/toggleInlineStyling.component';\nimport { ToggleSimpleUsageShowcase } from '@pg/components/showcases/toggle/toggleSimpleUsage.component';\nimport { ToggleStatesShowcase } from '@pg/components/showcases/toggle/toggleStates.component';\nimport { ToggleStatusShowcase } from '@pg/components/showcases/toggle/toggleStatus.component';\nimport { TooltipInlineStylingShowcase } from '@pg/components/showcases/tooltip/tooltipInlineStyling.component';\nimport { TooltipPlacementShowcase } from '@pg/components/showcases/tooltip/tooltipPlacement.component';\nimport { TooltipSimpleUsageShowcase } from '@pg/components/showcases/tooltip/tooltipSimpleUsage.component';\nimport { TooltipStyledBackdropShowcase } from '@pg/components/showcases/tooltip/tooltipStyledBackdrop.component';\nimport { TooltipWithExternalSourceIconShowcase } from '@pg/components/showcases/tooltip/tooltipWithExternalSourceIcon.component';\nimport { TooltipWithIconShowcase } from '@pg/components/showcases/tooltip/tooltipWithIcon.component';\nimport { TopNavigationActionExternalSourceIconShowcase } from '@pg/components/showcases/topNavigation/topNavigationActionExternalSourceIcon.component';\nimport { TopNavigationActionInlineStylingShowcase } from '@pg/components/showcases/topNavigation/topNavigationActionInlineStyling.component';\nimport { TopNavigationActionSimpleUsageShowcase } from '@pg/components/showcases/topNavigation/topNavigationActionSimpleUsage.component';\nimport { TopNavigationActionsShowcase } from '@pg/components/showcases/topNavigation/topNavigationActions.component';\nimport { TopNavigationAlignmentsShowcase } from '@pg/components/showcases/topNavigation/topNavigationAlignments.component';\nimport { TopNavigationInlineStylingShowcase } from '@pg/components/showcases/topNavigation/topNavigationInlineStyling.component';\nimport { TopNavigationSimpleUsageShowcase } from '@pg/components/showcases/topNavigation/topNavigationSimpleUsage.component';\nimport { TopNavigationWithMenuShowcase } from '@pg/components/showcases/topNavigation/topNavigationWithMenu.component';\nimport { UseStyleSheetSimpleUsageShowcase } from '@pg/components/showcases/useStyleSheet/useStyleSheetSimpleUsage.component';\nimport { UseThemeSimpleUsageShowcase } from '@pg/components/showcases/useTheme/useThemeSimpleUsage.component';\nimport { ViewPagerInlineStylingShowcase } from '@pg/components/showcases/viewPager/viewPagerInlineStyling.component';\nimport { ViewPagerLazyLoadingShowcase } from '@pg/components/showcases/viewPager/viewPagerLazyLoading.component';\nimport { ViewPagerSimpleUsageShowcase } from '@pg/components/showcases/viewPager/viewPagerSimpleUsage.component';\nimport { WithStylesSimpleUsageShowcase } from '@pg/components/showcases/withStyles/withStylesSimpleUsage.component';\n\nconst routes = {\n  AutocompleteAsync: () => sharingHeightContainer(AutocompleteAsyncShowcase, 'AutocompleteAsync'),\n  AutocompleteCustomItem: () => sharingHeightContainer(AutocompleteCustomItemShowcase, 'AutocompleteCustomItem'),\n  AutocompletePlaceholderData: () => sharingHeightContainer(AutocompletePlaceholderDataShowcase, 'AutocompletePlaceholderData'),\n  AutocompleteSimpleUsage: () => sharingHeightContainer(AutocompleteSimpleUsageShowcase, 'AutocompleteSimpleUsage'),\n  AutocompleteSize: () => sharingHeightContainer(AutocompleteSizeShowcase, 'AutocompleteSize'),\n  AutocompleteStates: () => sharingHeightContainer(AutocompleteStatesShowcase, 'AutocompleteStates'),\n  AutocompleteStatus: () => sharingHeightContainer(AutocompleteStatusShowcase, 'AutocompleteStatus'),\n  AutocompleteWithIcon: () => sharingHeightContainer(AutocompleteWithIconShowcase, 'AutocompleteWithIcon'),\n  AutocompleteWithLabel: () => sharingHeightContainer(AutocompleteWithLabelShowcase, 'AutocompleteWithLabel'),\n  AvatarInlineStyling: () => sharingHeightContainer(AvatarInlineStylingShowcase, 'AvatarInlineStyling'),\n  AvatarRemoteImages: () => sharingHeightContainer(AvatarRemoteImagesShowcase, 'AvatarRemoteImages'),\n  AvatarShape: () => sharingHeightContainer(AvatarShapeShowcase, 'AvatarShape'),\n  AvatarSimpleUsage: () => sharingHeightContainer(AvatarSimpleUsageShowcase, 'AvatarSimpleUsage'),\n  AvatarSize: () => sharingHeightContainer(AvatarSizeShowcase, 'AvatarSize'),\n  BottomNavigationInlineStyling: () => sharingHeightContainer(BottomNavigationInlineStylingShowcase, 'BottomNavigationInlineStyling'),\n  BottomNavigationSimpleUsage: () => sharingHeightContainer(BottomNavigationSimpleUsageShowcase, 'BottomNavigationSimpleUsage'),\n  BottomNavigationTabInlineStyling: () => sharingHeightContainer(BottomNavigationTabInlineStylingShowcase, 'BottomNavigationTabInlineStyling'),\n  BottomNavigationTabSimpleUsage: () => sharingHeightContainer(BottomNavigationTabSimpleUsageShowcase, 'BottomNavigationTabSimpleUsage'),\n  BottomNavigationTabWithIcon: () => sharingHeightContainer(BottomNavigationTabWithIconShowcase, 'BottomNavigationTabWithIcon'),\n  BottomNavigationWithIcons: () => sharingHeightContainer(BottomNavigationWithIconsShowcase, 'BottomNavigationWithIcons'),\n  BottomNavigationWithoutIndicator: () => sharingHeightContainer(BottomNavigationWithoutIndicatorShowcase, 'BottomNavigationWithoutIndicator'),\n  ButtonAppearances: () => sharingHeightContainer(ButtonAppearancesShowcase, 'ButtonAppearances'),\n  ButtonGhost: () => sharingHeightContainer(ButtonGhostShowcase, 'ButtonGhost'),\n  ButtonOutline: () => sharingHeightContainer(ButtonOutlineShowcase, 'ButtonOutline'),\n  ButtonSimpleUsage: () => sharingHeightContainer(ButtonSimpleUsageShowcase, 'ButtonSimpleUsage'),\n  ButtonSize: () => sharingHeightContainer(ButtonSizeShowcase, 'ButtonSize'),\n  ButtonStates: () => sharingHeightContainer(ButtonStatesShowcase, 'ButtonStates'),\n  ButtonStatus: () => sharingHeightContainer(ButtonStatusShowcase, 'ButtonStatus'),\n  ButtonWithIcon: () => sharingHeightContainer(ButtonWithIconShowcase, 'ButtonWithIcon'),\n  ButtonGroupAppearance: () => sharingHeightContainer(ButtonGroupAppearanceShowcase, 'ButtonGroupAppearance'),\n  ButtonGroupInlineStyling: () => sharingHeightContainer(ButtonGroupInlineStylingShowcase, 'ButtonGroupInlineStyling'),\n  ButtonGroupOutline: () => sharingHeightContainer(ButtonGroupOutlineShowcase, 'ButtonGroupOutline'),\n  ButtonGroupSimpleUsage: () => sharingHeightContainer(ButtonGroupSimpleUsageShowcase, 'ButtonGroupSimpleUsage'),\n  ButtonGroupSize: () => sharingHeightContainer(ButtonGroupSizeShowcase, 'ButtonGroupSize'),\n  ButtonGroupStatus: () => sharingHeightContainer(ButtonGroupStatusShowcase, 'ButtonGroupStatus'),\n  ButtonGroupWithIcons: () => sharingHeightContainer(ButtonGroupWithIconsShowcase, 'ButtonGroupWithIcons'),\n  CalendarBoundingMonth: () => sharingHeightContainer(CalendarBoundingMonthShowcase, 'CalendarBoundingMonth'),\n  CalendarBounds: () => sharingHeightContainer(CalendarBoundsShowcase, 'CalendarBounds'),\n  CalendarCustomDay: () => sharingHeightContainer(CalendarCustomDayShowcase, 'CalendarCustomDay'),\n  CalendarCustomLocale: () => sharingHeightContainer(CalendarCustomLocaleShowcase, 'CalendarCustomLocale'),\n  CalendarFilter: () => sharingHeightContainer(CalendarFilterShowcase, 'CalendarFilter'),\n  CalendarMoment: () => sharingHeightContainer(CalendarMomentShowcase, 'CalendarMoment'),\n  CalendarSimpleUsage: () => sharingHeightContainer(CalendarSimpleUsageShowcase, 'CalendarSimpleUsage'),\n  CalendarStartDayOfWeek: () => sharingHeightContainer(CalendarStartDayOfWeekShowcase, 'CalendarStartDayOfWeek'),\n  RangeCalendarSimpleUsage: () => sharingHeightContainer(RangeCalendarSimpleUsageShowcase, 'RangeCalendarSimpleUsage'),\n  CardCustomHeader: () => sharingHeightContainer(CardCustomHeaderShowcase, 'CardCustomHeader'),\n  CardSimpleUsage: () => sharingHeightContainer(CardSimpleUsageShowcase, 'CardSimpleUsage'),\n  CardStatuses: () => sharingHeightContainer(CardStatusesShowcase, 'CardStatuses'),\n  CardWithHeaderAndFooter: () => sharingHeightContainer(CardWithHeaderAndFooterShowcase, 'CardWithHeaderAndFooter'),\n  CheckboxIndeterminate: () => sharingHeightContainer(CheckboxIndeterminateShowcase, 'CheckboxIndeterminate'),\n  CheckboxInlineStyling: () => sharingHeightContainer(CheckboxInlineStylingShowcase, 'CheckboxInlineStyling'),\n  CheckboxSimpleUsage: () => sharingHeightContainer(CheckboxSimpleUsageShowcase, 'CheckboxSimpleUsage'),\n  CheckboxStates: () => sharingHeightContainer(CheckboxStatesShowcase, 'CheckboxStates'),\n  CheckboxStatus: () => sharingHeightContainer(CheckboxStatusShowcase, 'CheckboxStatus'),\n  DatepickerBoundingMonth: () => sharingHeightContainer(DatepickerBoundingMonthShowcase, 'DatepickerBoundingMonth'),\n  DatepickerCustomDay: () => sharingHeightContainer(DatepickerCustomDayShowcase, 'DatepickerCustomDay'),\n  DatepickerCustomLocale: () => sharingHeightContainer(DatepickerCustomLocaleShowcase, 'DatepickerCustomLocale'),\n  DatepickerFilter: () => sharingHeightContainer(DatepickerFilterShowcase, 'DatepickerFilter'),\n  DatepickerMoment: () => sharingHeightContainer(DatepickerMomentShowcase, 'DatepickerMoment'),\n  DatepickerSimpleUsage: () => sharingHeightContainer(DatepickerSimpleUsageShowcase, 'DatepickerSimpleUsage'),\n  DatepickerSize: () => sharingHeightContainer(DatepickerSizeShowcase, 'DatepickerSize'),\n  DatepickerStatus: () => sharingHeightContainer(DatepickerStatusShowcase, 'DatepickerStatus'),\n  DatepickerWithIcon: () => sharingHeightContainer(DatepickerWithIconShowcase, 'DatepickerWithIcon'),\n  RangeDatepickerSimpleUsage: () => sharingHeightContainer(RangeDatepickerSimpleUsageShowcase, 'RangeDatepickerSimpleUsage'),\n  DrawerCustomHeader: () => sharingHeightContainer(DrawerCustomHeaderShowcase, 'DrawerCustomHeader'),\n  DrawerFooter: () => sharingHeightContainer(DrawerFooterShowcase, 'DrawerFooter'),\n  DrawerHeader: () => sharingHeightContainer(DrawerHeaderShowcase, 'DrawerHeader'),\n  DrawerHeaderFooterInlineStyling: () => sharingHeightContainer(DrawerHeaderFooterInlineStylingShowcase, 'DrawerHeaderFooterInlineStyling'),\n  DrawerHeaderFooterSimpleUsage: () => sharingHeightContainer(DrawerHeaderFooterSimpleUsageShowcase, 'DrawerHeaderFooterSimpleUsage'),\n  DrawerHeaderFooterWithAccessory: () => sharingHeightContainer(DrawerHeaderFooterWithAccessoryShowcase, 'DrawerHeaderFooterWithAccessory'),\n  DrawerHeaderFooterWithExternalSourceIcon: () => sharingHeightContainer(DrawerHeaderFooterWithExternalSourceIconShowcase, 'DrawerHeaderFooterWithExternalSourceIcon'),\n  DrawerNotificationBadgeItem: () => sharingHeightContainer(DrawerNotificationBadgeItemShowcase, 'DrawerNotificationBadgeItem'),\n  DrawerSimpleUsage: () => sharingHeightContainer(DrawerSimpleUsageShowcase, 'DrawerSimpleUsage'),\n  DrawerWithIcons: () => sharingHeightContainer(DrawerWithIconsShowcase, 'DrawerWithIcons'),\n  IconAnimation: () => sharingHeightContainer(IconAnimationShowcase, 'IconAnimation'),\n  IconAnimationInfinite: () => sharingHeightContainer(IconAnimationInfiniteShowcase, 'IconAnimationInfinite'),\n  IconExternalSource: () => sharingHeightContainer(IconExternalSourceShowcase, 'IconExternalSource'),\n  IconInlineStyling: () => sharingHeightContainer(IconInlineStylingShowcase, 'IconInlineStyling'),\n  IconSimpleUsage: () => sharingHeightContainer(IconSimpleUsageShowcase, 'IconSimpleUsage'),\n  IconWithinButton: () => sharingHeightContainer(IconWithinButtonShowcase, 'IconWithinButton'),\n  IconWithinInput: () => sharingHeightContainer(IconWithinInputShowcase, 'IconWithinInput'),\n  InputInlineStyling: () => sharingHeightContainer(InputInlineStylingShowcase, 'InputInlineStyling'),\n  InputSimpleUsage: () => sharingHeightContainer(InputSimpleUsageShowcase, 'InputSimpleUsage'),\n  InputSize: () => sharingHeightContainer(InputSizeShowcase, 'InputSize'),\n  InputStates: () => sharingHeightContainer(InputStatesShowcase, 'InputStates'),\n  InputStatus: () => sharingHeightContainer(InputStatusShowcase, 'InputStatus'),\n  InputWithCaption: () => sharingHeightContainer(InputWithCaptionShowcase, 'InputWithCaption'),\n  InputWithExternalSourceIcon: () => sharingHeightContainer(InputWithExternalSourceIconShowcase, 'InputWithExternalSourceIcon'),\n  InputWithIcon: () => sharingHeightContainer(InputWithIconShowcase, 'InputWithIcon'),\n  InputWithLabel: () => sharingHeightContainer(InputWithLabelShowcase, 'InputWithLabel'),\n  LayoutInlineStyling: () => sharingHeightContainer(LayoutInlineStylingShowcase, 'LayoutInlineStyling'),\n  LayoutLevel: () => sharingHeightContainer(LayoutLevelShowcase, 'LayoutLevel'),\n  LayoutSimpleUsage: () => sharingHeightContainer(LayoutSimpleUsageShowcase, 'LayoutSimpleUsage'),\n  ListCompositeItem: () => sharingHeightContainer(ListCompositeItemShowcase, 'ListCompositeItem'),\n  ListInlineStyling: () => sharingHeightContainer(ListInlineStylingShowcase, 'ListInlineStyling'),\n  ListItemInlineStyling: () => sharingHeightContainer(ListItemInlineStylingShowcase, 'ListItemInlineStyling'),\n  ListItemSimpleUsage: () => sharingHeightContainer(ListItemSimpleUsageShowcase, 'ListItemSimpleUsage'),\n  ListItemWithAccessory: () => sharingHeightContainer(ListItemWithAccessoryShowcase, 'ListItemWithAccessory'),\n  ListItemWithExternalIcon: () => sharingHeightContainer(ListItemWithExternalIconShowcase, 'ListItemWithExternalIcon'),\n  ListItemWithIcon: () => sharingHeightContainer(ListItemWithIconShowcase, 'ListItemWithIcon'),\n  ListSimpleUsage: () => sharingHeightContainer(ListSimpleUsageShowcase, 'ListSimpleUsage'),\n  MenuDisabledOptions: () => sharingHeightContainer(MenuDisabledOptionsShowcase, 'MenuDisabledOptions'),\n  MenuInlineStyling: () => sharingHeightContainer(MenuInlineStylingShowcase, 'MenuInlineStyling'),\n  MenuSimpleUsage: () => sharingHeightContainer(MenuSimpleUsageShowcase, 'MenuSimpleUsage'),\n  MenuWithIcons: () => sharingHeightContainer(MenuWithIconsShowcase, 'MenuWithIcons'),\n  MenuWithSubMenu: () => sharingHeightContainer(MenuWithSubMenuShowcase, 'MenuWithSubMenu'),\n  MenuWithoutDivider: () => sharingHeightContainer(MenuWithoutDividerShowcase, 'MenuWithoutDivider'),\n  ModalSimpleUsage: () => sharingHeightContainer(ModalSimpleUsageShowcase, 'ModalSimpleUsage'),\n  ModalWithBackdrop: () => sharingHeightContainer(ModalWithBackdropShowcase, 'ModalWithBackdrop'),\n  OverflowMenuExternalSourceIcons: () => sharingHeightContainer(OverflowMenuExternalSourceIconsShowcase, 'OverflowMenuExternalSourceIcons'),\n  OverflowMenuPlacement: () => sharingHeightContainer(OverflowMenuPlacementShowcase, 'OverflowMenuPlacement'),\n  OverflowMenuSimpleUsage: () => sharingHeightContainer(OverflowMenuSimpleUsageShowcase, 'OverflowMenuSimpleUsage'),\n  OverflowMenuStyledBackdrop: () => sharingHeightContainer(OverflowMenuStyledBackdropShowcase, 'OverflowMenuStyledBackdrop'),\n  OverflowMenuWithDisabledItems: () => sharingHeightContainer(OverflowMenuWithDisabledItemsShowcase, 'OverflowMenuWithDisabledItems'),\n  OverflowMenuWithIcons: () => sharingHeightContainer(OverflowMenuWithIconsShowcase, 'OverflowMenuWithIcons'),\n  OverflowMenuWithoutDivider: () => sharingHeightContainer(OverflowMenuWithoutDividerShowcase, 'OverflowMenuWithoutDivider'),\n  PopoverFullWidth: () => sharingHeightContainer(PopoverFullWidthShowcase, 'PopoverFullWidth'),\n  PopoverPlacement: () => sharingHeightContainer(PopoverPlacementShowcase, 'PopoverPlacement'),\n  PopoverSimpleUsage: () => sharingHeightContainer(PopoverSimpleUsageShowcase, 'PopoverSimpleUsage'),\n  PopoverStyledBackdrop: () => sharingHeightContainer(PopoverStyledBackdropShowcase, 'PopoverStyledBackdrop'),\n  RadioInlineStyling: () => sharingHeightContainer(RadioInlineStylingShowcase, 'RadioInlineStyling'),\n  RadioSimpleUsage: () => sharingHeightContainer(RadioSimpleUsageShowcase, 'RadioSimpleUsage'),\n  RadioStates: () => sharingHeightContainer(RadioStatesShowcase, 'RadioStates'),\n  RadioStatus: () => sharingHeightContainer(RadioStatusShowcase, 'RadioStatus'),\n  RadioGroupSimpleUsage: () => sharingHeightContainer(RadioGroupSimpleUsageShowcase, 'RadioGroupSimpleUsage'),\n  SelectCustomIcon: () => sharingHeightContainer(SelectCustomIconShowcase, 'SelectCustomIcon'),\n  SelectDisabledOptions: () => sharingHeightContainer(SelectDisabledOptionsShowcase, 'SelectDisabledOptions'),\n  SelectInitialValue: () => sharingHeightContainer(SelectInitialValueShowcase, 'SelectInitialValue'),\n  SelectInlineStyling: () => sharingHeightContainer(SelectInlineStylingShowcase, 'SelectInlineStyling'),\n  SelectMultiInitialValue: () => sharingHeightContainer(SelectMultiInitialValueShowcase, 'SelectMultiInitialValue'),\n  SelectMultiSelect: () => sharingHeightContainer(SelectMultiSelectShowcase, 'SelectMultiSelect'),\n  SelectSimpleUsage: () => sharingHeightContainer(SelectSimpleUsageShowcase, 'SelectSimpleUsage'),\n  SelectSize: () => sharingHeightContainer(SelectSizeShowcase, 'SelectSize'),\n  SelectStates: () => sharingHeightContainer(SelectStatesShowcase, 'SelectStates'),\n  SelectStatus: () => sharingHeightContainer(SelectStatusShowcase, 'SelectStatus'),\n  SelectWithGroups: () => sharingHeightContainer(SelectWithGroupsShowcase, 'SelectWithGroups'),\n  SpinnerDataLoading: () => sharingHeightContainer(SpinnerDataLoadingShowcase, 'SpinnerDataLoading'),\n  SpinnerSimpleUsage: () => sharingHeightContainer(SpinnerSimpleUsageShowcase, 'SpinnerSimpleUsage'),\n  SpinnerSizes: () => sharingHeightContainer(SpinnerSizesShowcase, 'SpinnerSizes'),\n  SpinnerStatuses: () => sharingHeightContainer(SpinnerStatusesShowcase, 'SpinnerStatuses'),\n  StyledComponentSimpleUsage: () => sharingHeightContainer(StyledComponentSimpleUsageShowcase, 'StyledComponentSimpleUsage'),\n  StyledComponentStates: () => sharingHeightContainer(StyledComponentStatesShowcase, 'StyledComponentStates'),\n  StyledComponentVariants: () => sharingHeightContainer(StyledComponentVariantsShowcase, 'StyledComponentVariants'),\n  TabBarSimpleUsage: () => sharingHeightContainer(TabBarSimpleUsageShowcase, 'TabBarSimpleUsage'),\n  TabBarWithIcon: () => sharingHeightContainer(TabBarWithIconShowcase, 'TabBarWithIcon'),\n  TabInlineStyling: () => sharingHeightContainer(TabInlineStylingShowcase, 'TabInlineStyling'),\n  TabSimpleUsage: () => sharingHeightContainer(TabSimpleUsageShowcase, 'TabSimpleUsage'),\n  TabViewInlineStyling: () => sharingHeightContainer(TabViewInlineStylingShowcase, 'TabViewInlineStyling'),\n  TabViewLazyLoading: () => sharingHeightContainer(TabViewLazyLoadingShowcase, 'TabViewLazyLoading'),\n  TabViewSimpleUsage: () => sharingHeightContainer(TabViewSimpleUsageShowcase, 'TabViewSimpleUsage'),\n  TabViewWithIcon: () => sharingHeightContainer(TabViewWithIconShowcase, 'TabViewWithIcon'),\n  TabWithExternalSourceIcon: () => sharingHeightContainer(TabWithExternalSourceIconShowcase, 'TabWithExternalSourceIcon'),\n  TabWithIcon: () => sharingHeightContainer(TabWithIconShowcase, 'TabWithIcon'),\n  TextAppearances: () => sharingHeightContainer(TextAppearancesShowcase, 'TextAppearances'),\n  TextCategories: () => sharingHeightContainer(TextCategoriesShowcase, 'TextCategories'),\n  TextInlineStyling: () => sharingHeightContainer(TextInlineStylingShowcase, 'TextInlineStyling'),\n  TextSimpleUsage: () => sharingHeightContainer(TextSimpleUsageShowcase, 'TextSimpleUsage'),\n  TextStatuses: () => sharingHeightContainer(TextStatusesShowcase, 'TextStatuses'),\n  ThemeProviderSimpleUsage: () => sharingHeightContainer(ThemeProviderSimpleUsageShowcase, 'ThemeProviderSimpleUsage'),\n  ToggleInlineStyling: () => sharingHeightContainer(ToggleInlineStylingShowcase, 'ToggleInlineStyling'),\n  ToggleSimpleUsage: () => sharingHeightContainer(ToggleSimpleUsageShowcase, 'ToggleSimpleUsage'),\n  ToggleStates: () => sharingHeightContainer(ToggleStatesShowcase, 'ToggleStates'),\n  ToggleStatus: () => sharingHeightContainer(ToggleStatusShowcase, 'ToggleStatus'),\n  TooltipInlineStyling: () => sharingHeightContainer(TooltipInlineStylingShowcase, 'TooltipInlineStyling'),\n  TooltipPlacement: () => sharingHeightContainer(TooltipPlacementShowcase, 'TooltipPlacement'),\n  TooltipSimpleUsage: () => sharingHeightContainer(TooltipSimpleUsageShowcase, 'TooltipSimpleUsage'),\n  TooltipStyledBackdrop: () => sharingHeightContainer(TooltipStyledBackdropShowcase, 'TooltipStyledBackdrop'),\n  TooltipWithExternalSourceIcon: () => sharingHeightContainer(TooltipWithExternalSourceIconShowcase, 'TooltipWithExternalSourceIcon'),\n  TooltipWithIcon: () => sharingHeightContainer(TooltipWithIconShowcase, 'TooltipWithIcon'),\n  TopNavigationActionExternalSourceIcon: () => sharingHeightContainer(TopNavigationActionExternalSourceIconShowcase, 'TopNavigationActionExternalSourceIcon'),\n  TopNavigationActionInlineStyling: () => sharingHeightContainer(TopNavigationActionInlineStylingShowcase, 'TopNavigationActionInlineStyling'),\n  TopNavigationActionSimpleUsage: () => sharingHeightContainer(TopNavigationActionSimpleUsageShowcase, 'TopNavigationActionSimpleUsage'),\n  TopNavigationActions: () => sharingHeightContainer(TopNavigationActionsShowcase, 'TopNavigationActions'),\n  TopNavigationAlignments: () => sharingHeightContainer(TopNavigationAlignmentsShowcase, 'TopNavigationAlignments'),\n  TopNavigationInlineStyling: () => sharingHeightContainer(TopNavigationInlineStylingShowcase, 'TopNavigationInlineStyling'),\n  TopNavigationSimpleUsage: () => sharingHeightContainer(TopNavigationSimpleUsageShowcase, 'TopNavigationSimpleUsage'),\n  TopNavigationWithMenu: () => sharingHeightContainer(TopNavigationWithMenuShowcase, 'TopNavigationWithMenu'),\n  UseStyleSheetSimpleUsage: () => sharingHeightContainer(UseStyleSheetSimpleUsageShowcase, 'UseStyleSheetSimpleUsage'),\n  UseThemeSimpleUsage: () => sharingHeightContainer(UseThemeSimpleUsageShowcase, 'UseThemeSimpleUsage'),\n  ViewPagerInlineStyling: () => sharingHeightContainer(ViewPagerInlineStylingShowcase, 'ViewPagerInlineStyling'),\n  ViewPagerLazyLoading: () => sharingHeightContainer(ViewPagerLazyLoadingShowcase, 'ViewPagerLazyLoading'),\n  ViewPagerSimpleUsage: () => sharingHeightContainer(ViewPagerSimpleUsageShowcase, 'ViewPagerSimpleUsage'),\n  WithStylesSimpleUsage: () => sharingHeightContainer(WithStylesSimpleUsageShowcase, 'WithStylesSimpleUsage')\n};\n\nconst AppStack = createStackNavigator(routes, { headerMode: 'none' });\nexport const AppNavigator = createBrowserApp(AppStack, { history: 'hash' });","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { AppIconRegistry } from '@pg/icons';\n\nexport const MaterialIconsPack = {\n  name: 'material',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy({}, {\n    get(target, name) {\n      return IconProvider(name);\n    },\n  });\n}\n\nconst IconProvider = (name) => ({\n  toReactElement: (props) => MaterialIcon({ name, ...props }),\n});\n\nconst MaterialIconRegistry: AppIconRegistry = {\n  ['arrow-back']: 'arrow-back',\n  ['brush']: 'brush',\n  ['color-palette']: 'palette',\n  ['grid']: 'dashboard',\n  ['list']: 'list',\n  ['menu']: 'menu',\n  ['more-vertical']: 'more-vert',\n  ['search']: 'search',\n  ['settings']: 'settings',\n  ['star']: 'star',\n  ['trash']: 'delete',\n};\n\nfunction MaterialIcon(props) {\n  const { name, style } = props;\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <MaterialIcons\n      name={MaterialIconRegistry[name]}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n","import React from 'react';\nimport {\n  Animated,\n  Easing,\n  ImageRequireSource,\n  StyleSheet,\n} from 'react-native';\n\ninterface Props {\n  image: ImageRequireSource;\n  isLoaded: boolean;\n}\n\ninterface State {\n  animationValue: Animated.Value;\n  animationCompleted: boolean;\n}\n\nexport class LoadingAnimation extends React.Component<Props, State> {\n\n  public state: State = {\n    animationValue: new Animated.Value(0),\n    animationCompleted: false,\n  };\n\n  public componentDidUpdate(prevProps: Props): void {\n    if (this.props.isLoaded && this.props.isLoaded !== prevProps.isLoaded) {\n      this.triggerAnimation();\n    }\n  }\n\n  private triggerAnimation(): void {\n    Animated.timing(this.state.animationValue, {\n      toValue: 1,\n      duration: 700,\n      useNativeDriver: true,\n      easing: Easing.in(Easing.exp),\n    }).start(() => this.onAnimationCompleted());\n  }\n\n  private onAnimationCompleted(): void {\n    this.setState({ animationCompleted: true });\n  }\n\n  public renderAnimatedComponent(): React.ReactNode {\n    const opacity: Animated.AnimatedInterpolation = this.state.animationValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [1, 0],\n    });\n    const transform: Object[] = [\n      {\n        scale: this.state.animationValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 1.5],\n        }),\n      },\n    ];\n\n    return (\n      <Animated.View\n        style={[styles.container, { opacity }]}>\n        <Animated.Image\n          source={this.props.image}\n          style={[styles.image, { transform }]}\n        />\n      </Animated.View>\n    );\n  }\n\n  public render(): React.ReactNode {\n    const { animationCompleted } = this.state;\n    return animationCompleted ? null : this.renderAnimatedComponent();\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n  },\n  image: {\n    width: undefined,\n    height: undefined,\n    ...StyleSheet.absoluteFillObject,\n    resizeMode: 'contain',\n  },\n});\n","import React from 'react';\nimport { ImageRequireSource } from 'react-native';\nimport {\n  AppLoading,\n  SplashScreen,\n} from 'expo';\nimport { Asset } from 'expo-asset';\nimport * as Font from 'expo-font';\nimport { LoadingAnimation } from './loadingAnimation.component';\n\nexport interface Assets {\n  images?: ImageRequireSource[];\n  fonts?: { [key: string]: number };\n}\n\ninterface Props {\n  assets: Assets;\n  splash: ImageRequireSource;\n  children: React.ReactNode;\n}\n\ninterface State {\n  loaded: boolean;\n}\n\ntype LoadingElement = React.ReactElement<{}>;\n\n/**\n * Loads child component after asynchronous tasks are done\n */\nexport class ApplicationLoader extends React.Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props);\n    SplashScreen.preventAutoHide();\n  }\n\n  public state: State = {\n    loaded: false,\n  };\n\n  private onLoadSuccess = () => {\n    // setTimeout(() => {\n      this.setState({ loaded: true });\n      SplashScreen.hide();\n    // }, 1);\n  };\n\n  private onLoadError = (error: Error) => {\n    console.warn(error);\n  };\n\n  private loadResources = (): Promise<void> => {\n    return this.loadResourcesAsync(this.props.assets);\n  };\n\n  private loadFonts = (fonts: {[key: string]: number}): Promise<void> => {\n    return Font.loadAsync(fonts);\n  };\n\n  private loadImages = (images: ImageRequireSource[]): Promise<void[]> => {\n    const tasks: Promise<void>[] = images.map((image: ImageRequireSource): Promise<void> => {\n      return Asset.fromModule(image).downloadAsync();\n    });\n\n    return Promise.all(tasks);\n  };\n\n  private async loadResourcesAsync(assets: Assets): Promise<void> {\n    const { fonts, images } = assets;\n\n    // @ts-ignore (expo type error)\n    return Promise.all([\n      fonts && this.loadFonts(fonts),\n      images && this.loadImages(images),\n    ]);\n  }\n\n  private renderLoading = (): LoadingElement => {\n    return (\n      <AppLoading\n        startAsync={this.loadResources}\n        onFinish={this.onLoadSuccess}\n        onError={this.onLoadError}\n        autoHideSplash={false}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <React.Fragment>\n        {this.state.loaded ? this.props.children : this.renderLoading()}\n        <LoadingAnimation\n          isLoaded={this.state.loaded}\n          image={this.props.splash}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport {\n  ApplicationProvider,\n  ApplicationProviderProps,\n  IconPack,\n  IconRegistry,\n} from '@ui-kitten/components';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport { mapping, light, dark } from '@eva-design/eva';\nimport { AppNavigator } from '@pg/navigation/app.navigator';\nimport { MaterialIconsPack } from '@pg/icons/materialIconPack';\nimport {\n  AppTheme,\n  ThemeContext,\n  ThemeContextType,\n} from '@pg/themes/themeContext';\nimport { default as customMapping } from './mapping.json';\nimport { ApplicationLoader } from './applicationLoader.component';\n\nconst themes = {\n  Light: light,\n  Dark: dark,\n};\n\nconst fonts = {\n  'opensans-regular': require('../assets/fonts/opensans-regular.ttf'),\n  'roboto-regular': require('../assets/fonts/roboto-regular.ttf'),\n};\n\nconst icons: IconPack<any>[] = [\n  EvaIconsPack,\n  MaterialIconsPack,\n];\n\nexport default () => {\n\n  const [theme, setTheme] = React.useState<AppTheme>(AppTheme.light);\n\n  const isDarkMode = (): boolean => {\n    return theme === AppTheme.dark;\n  };\n\n  const applicationProviderConfig: ApplicationProviderProps = {\n    mapping: mapping,\n    theme: themes[theme],\n    // @ts-ignore\n    customMapping: customMapping,\n  };\n\n  const themeContextProviderConfig: ThemeContextType = {\n    theme: theme,\n    setTheme: setTheme,\n    isDarkMode: isDarkMode,\n  };\n\n  return (\n    <React.Fragment>\n      <IconRegistry icons={icons}/>\n      <ApplicationLoader assets={{ fonts }} splash={require('../assets/images/splash.png')}>\n        <IconRegistry icons={icons} />\n        <ApplicationProvider {...applicationProviderConfig}>\n          <SafeAreaProvider>\n            <ThemeContext.Provider value={themeContextProviderConfig}>\n              <AppNavigator />\n            </ThemeContext.Provider>\n          </SafeAreaProvider>\n        </ApplicationProvider>\n      </ApplicationLoader>\n    </React.Fragment>\n  );\n};\n","import App from './src/app/app.component';\n\nexport default App;\n","var map = {\n\t\"./af\": 190,\n\t\"./af.js\": 190,\n\t\"./ar\": 191,\n\t\"./ar-dz\": 192,\n\t\"./ar-dz.js\": 192,\n\t\"./ar-kw\": 193,\n\t\"./ar-kw.js\": 193,\n\t\"./ar-ly\": 194,\n\t\"./ar-ly.js\": 194,\n\t\"./ar-ma\": 195,\n\t\"./ar-ma.js\": 195,\n\t\"./ar-sa\": 196,\n\t\"./ar-sa.js\": 196,\n\t\"./ar-tn\": 197,\n\t\"./ar-tn.js\": 197,\n\t\"./ar.js\": 191,\n\t\"./az\": 198,\n\t\"./az.js\": 198,\n\t\"./be\": 199,\n\t\"./be.js\": 199,\n\t\"./bg\": 200,\n\t\"./bg.js\": 200,\n\t\"./bm\": 201,\n\t\"./bm.js\": 201,\n\t\"./bn\": 202,\n\t\"./bn.js\": 202,\n\t\"./bo\": 203,\n\t\"./bo.js\": 203,\n\t\"./br\": 204,\n\t\"./br.js\": 204,\n\t\"./bs\": 205,\n\t\"./bs.js\": 205,\n\t\"./ca\": 206,\n\t\"./ca.js\": 206,\n\t\"./cs\": 207,\n\t\"./cs.js\": 207,\n\t\"./cv\": 208,\n\t\"./cv.js\": 208,\n\t\"./cy\": 209,\n\t\"./cy.js\": 209,\n\t\"./da\": 210,\n\t\"./da.js\": 210,\n\t\"./de\": 211,\n\t\"./de-at\": 212,\n\t\"./de-at.js\": 212,\n\t\"./de-ch\": 213,\n\t\"./de-ch.js\": 213,\n\t\"./de.js\": 211,\n\t\"./dv\": 214,\n\t\"./dv.js\": 214,\n\t\"./el\": 215,\n\t\"./el.js\": 215,\n\t\"./en-SG\": 216,\n\t\"./en-SG.js\": 216,\n\t\"./en-au\": 217,\n\t\"./en-au.js\": 217,\n\t\"./en-ca\": 218,\n\t\"./en-ca.js\": 218,\n\t\"./en-gb\": 219,\n\t\"./en-gb.js\": 219,\n\t\"./en-ie\": 220,\n\t\"./en-ie.js\": 220,\n\t\"./en-il\": 221,\n\t\"./en-il.js\": 221,\n\t\"./en-nz\": 222,\n\t\"./en-nz.js\": 222,\n\t\"./eo\": 223,\n\t\"./eo.js\": 223,\n\t\"./es\": 224,\n\t\"./es-do\": 225,\n\t\"./es-do.js\": 225,\n\t\"./es-us\": 226,\n\t\"./es-us.js\": 226,\n\t\"./es.js\": 224,\n\t\"./et\": 227,\n\t\"./et.js\": 227,\n\t\"./eu\": 228,\n\t\"./eu.js\": 228,\n\t\"./fa\": 229,\n\t\"./fa.js\": 229,\n\t\"./fi\": 230,\n\t\"./fi.js\": 230,\n\t\"./fo\": 231,\n\t\"./fo.js\": 231,\n\t\"./fr\": 232,\n\t\"./fr-ca\": 233,\n\t\"./fr-ca.js\": 233,\n\t\"./fr-ch\": 234,\n\t\"./fr-ch.js\": 234,\n\t\"./fr.js\": 232,\n\t\"./fy\": 235,\n\t\"./fy.js\": 235,\n\t\"./ga\": 236,\n\t\"./ga.js\": 236,\n\t\"./gd\": 237,\n\t\"./gd.js\": 237,\n\t\"./gl\": 238,\n\t\"./gl.js\": 238,\n\t\"./gom-latn\": 239,\n\t\"./gom-latn.js\": 239,\n\t\"./gu\": 240,\n\t\"./gu.js\": 240,\n\t\"./he\": 241,\n\t\"./he.js\": 241,\n\t\"./hi\": 242,\n\t\"./hi.js\": 242,\n\t\"./hr\": 243,\n\t\"./hr.js\": 243,\n\t\"./hu\": 244,\n\t\"./hu.js\": 244,\n\t\"./hy-am\": 245,\n\t\"./hy-am.js\": 245,\n\t\"./id\": 246,\n\t\"./id.js\": 246,\n\t\"./is\": 247,\n\t\"./is.js\": 247,\n\t\"./it\": 248,\n\t\"./it-ch\": 249,\n\t\"./it-ch.js\": 249,\n\t\"./it.js\": 248,\n\t\"./ja\": 250,\n\t\"./ja.js\": 250,\n\t\"./jv\": 251,\n\t\"./jv.js\": 251,\n\t\"./ka\": 252,\n\t\"./ka.js\": 252,\n\t\"./kk\": 253,\n\t\"./kk.js\": 253,\n\t\"./km\": 254,\n\t\"./km.js\": 254,\n\t\"./kn\": 255,\n\t\"./kn.js\": 255,\n\t\"./ko\": 256,\n\t\"./ko.js\": 256,\n\t\"./ku\": 257,\n\t\"./ku.js\": 257,\n\t\"./ky\": 258,\n\t\"./ky.js\": 258,\n\t\"./lb\": 259,\n\t\"./lb.js\": 259,\n\t\"./lo\": 260,\n\t\"./lo.js\": 260,\n\t\"./lt\": 261,\n\t\"./lt.js\": 261,\n\t\"./lv\": 262,\n\t\"./lv.js\": 262,\n\t\"./me\": 263,\n\t\"./me.js\": 263,\n\t\"./mi\": 264,\n\t\"./mi.js\": 264,\n\t\"./mk\": 265,\n\t\"./mk.js\": 265,\n\t\"./ml\": 266,\n\t\"./ml.js\": 266,\n\t\"./mn\": 267,\n\t\"./mn.js\": 267,\n\t\"./mr\": 268,\n\t\"./mr.js\": 268,\n\t\"./ms\": 269,\n\t\"./ms-my\": 270,\n\t\"./ms-my.js\": 270,\n\t\"./ms.js\": 269,\n\t\"./mt\": 271,\n\t\"./mt.js\": 271,\n\t\"./my\": 272,\n\t\"./my.js\": 272,\n\t\"./nb\": 273,\n\t\"./nb.js\": 273,\n\t\"./ne\": 274,\n\t\"./ne.js\": 274,\n\t\"./nl\": 275,\n\t\"./nl-be\": 276,\n\t\"./nl-be.js\": 276,\n\t\"./nl.js\": 275,\n\t\"./nn\": 277,\n\t\"./nn.js\": 277,\n\t\"./pa-in\": 278,\n\t\"./pa-in.js\": 278,\n\t\"./pl\": 279,\n\t\"./pl.js\": 279,\n\t\"./pt\": 280,\n\t\"./pt-br\": 281,\n\t\"./pt-br.js\": 281,\n\t\"./pt.js\": 280,\n\t\"./ro\": 282,\n\t\"./ro.js\": 282,\n\t\"./ru\": 283,\n\t\"./ru.js\": 283,\n\t\"./sd\": 284,\n\t\"./sd.js\": 284,\n\t\"./se\": 285,\n\t\"./se.js\": 285,\n\t\"./si\": 286,\n\t\"./si.js\": 286,\n\t\"./sk\": 287,\n\t\"./sk.js\": 287,\n\t\"./sl\": 288,\n\t\"./sl.js\": 288,\n\t\"./sq\": 289,\n\t\"./sq.js\": 289,\n\t\"./sr\": 290,\n\t\"./sr-cyrl\": 291,\n\t\"./sr-cyrl.js\": 291,\n\t\"./sr.js\": 290,\n\t\"./ss\": 292,\n\t\"./ss.js\": 292,\n\t\"./sv\": 293,\n\t\"./sv.js\": 293,\n\t\"./sw\": 294,\n\t\"./sw.js\": 294,\n\t\"./ta\": 295,\n\t\"./ta.js\": 295,\n\t\"./te\": 296,\n\t\"./te.js\": 296,\n\t\"./tet\": 297,\n\t\"./tet.js\": 297,\n\t\"./tg\": 298,\n\t\"./tg.js\": 298,\n\t\"./th\": 299,\n\t\"./th.js\": 299,\n\t\"./tl-ph\": 300,\n\t\"./tl-ph.js\": 300,\n\t\"./tlh\": 301,\n\t\"./tlh.js\": 301,\n\t\"./tr\": 302,\n\t\"./tr.js\": 302,\n\t\"./tzl\": 303,\n\t\"./tzl.js\": 303,\n\t\"./tzm\": 304,\n\t\"./tzm-latn\": 305,\n\t\"./tzm-latn.js\": 305,\n\t\"./tzm.js\": 304,\n\t\"./ug-cn\": 306,\n\t\"./ug-cn.js\": 306,\n\t\"./uk\": 307,\n\t\"./uk.js\": 307,\n\t\"./ur\": 308,\n\t\"./ur.js\": 308,\n\t\"./uz\": 309,\n\t\"./uz-latn\": 310,\n\t\"./uz-latn.js\": 310,\n\t\"./uz.js\": 309,\n\t\"./vi\": 311,\n\t\"./vi.js\": 311,\n\t\"./x-pseudo\": 312,\n\t\"./x-pseudo.js\": 312,\n\t\"./yo\": 313,\n\t\"./yo.js\": 313,\n\t\"./zh-cn\": 314,\n\t\"./zh-cn.js\": 314,\n\t\"./zh-hk\": 315,\n\t\"./zh-hk.js\": 315,\n\t\"./zh-tw\": 316,\n\t\"./zh-tw.js\": 316\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 564;","var map = {\n\t\"./af\": 317,\n\t\"./af.js\": 317,\n\t\"./ar\": 318,\n\t\"./ar-dz\": 319,\n\t\"./ar-dz.js\": 319,\n\t\"./ar-kw\": 320,\n\t\"./ar-kw.js\": 320,\n\t\"./ar-ly\": 321,\n\t\"./ar-ly.js\": 321,\n\t\"./ar-ma\": 322,\n\t\"./ar-ma.js\": 322,\n\t\"./ar-sa\": 323,\n\t\"./ar-sa.js\": 323,\n\t\"./ar-tn\": 324,\n\t\"./ar-tn.js\": 324,\n\t\"./ar.js\": 318,\n\t\"./az\": 325,\n\t\"./az.js\": 325,\n\t\"./be\": 326,\n\t\"./be.js\": 326,\n\t\"./bg\": 327,\n\t\"./bg.js\": 327,\n\t\"./bm\": 328,\n\t\"./bm.js\": 328,\n\t\"./bn\": 329,\n\t\"./bn.js\": 329,\n\t\"./bo\": 330,\n\t\"./bo.js\": 330,\n\t\"./br\": 331,\n\t\"./br.js\": 331,\n\t\"./bs\": 332,\n\t\"./bs.js\": 332,\n\t\"./ca\": 333,\n\t\"./ca.js\": 333,\n\t\"./cs\": 334,\n\t\"./cs.js\": 334,\n\t\"./cv\": 335,\n\t\"./cv.js\": 335,\n\t\"./cy\": 336,\n\t\"./cy.js\": 336,\n\t\"./da\": 337,\n\t\"./da.js\": 337,\n\t\"./de\": 338,\n\t\"./de-at\": 339,\n\t\"./de-at.js\": 339,\n\t\"./de-ch\": 340,\n\t\"./de-ch.js\": 340,\n\t\"./de.js\": 338,\n\t\"./dv\": 341,\n\t\"./dv.js\": 341,\n\t\"./el\": 342,\n\t\"./el.js\": 342,\n\t\"./en-SG\": 343,\n\t\"./en-SG.js\": 343,\n\t\"./en-au\": 344,\n\t\"./en-au.js\": 344,\n\t\"./en-ca\": 345,\n\t\"./en-ca.js\": 345,\n\t\"./en-gb\": 346,\n\t\"./en-gb.js\": 346,\n\t\"./en-ie\": 347,\n\t\"./en-ie.js\": 347,\n\t\"./en-il\": 348,\n\t\"./en-il.js\": 348,\n\t\"./en-nz\": 349,\n\t\"./en-nz.js\": 349,\n\t\"./eo\": 350,\n\t\"./eo.js\": 350,\n\t\"./es\": 351,\n\t\"./es-do\": 352,\n\t\"./es-do.js\": 352,\n\t\"./es-us\": 353,\n\t\"./es-us.js\": 353,\n\t\"./es.js\": 351,\n\t\"./et\": 354,\n\t\"./et.js\": 354,\n\t\"./eu\": 355,\n\t\"./eu.js\": 355,\n\t\"./fa\": 356,\n\t\"./fa.js\": 356,\n\t\"./fi\": 357,\n\t\"./fi.js\": 357,\n\t\"./fo\": 358,\n\t\"./fo.js\": 358,\n\t\"./fr\": 359,\n\t\"./fr-ca\": 360,\n\t\"./fr-ca.js\": 360,\n\t\"./fr-ch\": 361,\n\t\"./fr-ch.js\": 361,\n\t\"./fr.js\": 359,\n\t\"./fy\": 362,\n\t\"./fy.js\": 362,\n\t\"./ga\": 363,\n\t\"./ga.js\": 363,\n\t\"./gd\": 364,\n\t\"./gd.js\": 364,\n\t\"./gl\": 365,\n\t\"./gl.js\": 365,\n\t\"./gom-latn\": 366,\n\t\"./gom-latn.js\": 366,\n\t\"./gu\": 367,\n\t\"./gu.js\": 367,\n\t\"./he\": 368,\n\t\"./he.js\": 368,\n\t\"./hi\": 369,\n\t\"./hi.js\": 369,\n\t\"./hr\": 370,\n\t\"./hr.js\": 370,\n\t\"./hu\": 371,\n\t\"./hu.js\": 371,\n\t\"./hy-am\": 372,\n\t\"./hy-am.js\": 372,\n\t\"./id\": 373,\n\t\"./id.js\": 373,\n\t\"./is\": 374,\n\t\"./is.js\": 374,\n\t\"./it\": 375,\n\t\"./it-ch\": 376,\n\t\"./it-ch.js\": 376,\n\t\"./it.js\": 375,\n\t\"./ja\": 377,\n\t\"./ja.js\": 377,\n\t\"./jv\": 378,\n\t\"./jv.js\": 378,\n\t\"./ka\": 379,\n\t\"./ka.js\": 379,\n\t\"./kk\": 380,\n\t\"./kk.js\": 380,\n\t\"./km\": 381,\n\t\"./km.js\": 381,\n\t\"./kn\": 382,\n\t\"./kn.js\": 382,\n\t\"./ko\": 383,\n\t\"./ko.js\": 383,\n\t\"./ku\": 384,\n\t\"./ku.js\": 384,\n\t\"./ky\": 385,\n\t\"./ky.js\": 385,\n\t\"./lb\": 386,\n\t\"./lb.js\": 386,\n\t\"./lo\": 387,\n\t\"./lo.js\": 387,\n\t\"./lt\": 388,\n\t\"./lt.js\": 388,\n\t\"./lv\": 389,\n\t\"./lv.js\": 389,\n\t\"./me\": 390,\n\t\"./me.js\": 390,\n\t\"./mi\": 391,\n\t\"./mi.js\": 391,\n\t\"./mk\": 392,\n\t\"./mk.js\": 392,\n\t\"./ml\": 393,\n\t\"./ml.js\": 393,\n\t\"./mn\": 394,\n\t\"./mn.js\": 394,\n\t\"./mr\": 395,\n\t\"./mr.js\": 395,\n\t\"./ms\": 396,\n\t\"./ms-my\": 397,\n\t\"./ms-my.js\": 397,\n\t\"./ms.js\": 396,\n\t\"./mt\": 398,\n\t\"./mt.js\": 398,\n\t\"./my\": 399,\n\t\"./my.js\": 399,\n\t\"./nb\": 400,\n\t\"./nb.js\": 400,\n\t\"./ne\": 401,\n\t\"./ne.js\": 401,\n\t\"./nl\": 402,\n\t\"./nl-be\": 403,\n\t\"./nl-be.js\": 403,\n\t\"./nl.js\": 402,\n\t\"./nn\": 404,\n\t\"./nn.js\": 404,\n\t\"./pa-in\": 405,\n\t\"./pa-in.js\": 405,\n\t\"./pl\": 406,\n\t\"./pl.js\": 406,\n\t\"./pt\": 407,\n\t\"./pt-br\": 408,\n\t\"./pt-br.js\": 408,\n\t\"./pt.js\": 407,\n\t\"./ro\": 409,\n\t\"./ro.js\": 409,\n\t\"./ru\": 410,\n\t\"./ru.js\": 410,\n\t\"./sd\": 411,\n\t\"./sd.js\": 411,\n\t\"./se\": 412,\n\t\"./se.js\": 412,\n\t\"./si\": 413,\n\t\"./si.js\": 413,\n\t\"./sk\": 414,\n\t\"./sk.js\": 414,\n\t\"./sl\": 415,\n\t\"./sl.js\": 415,\n\t\"./sq\": 416,\n\t\"./sq.js\": 416,\n\t\"./sr\": 417,\n\t\"./sr-cyrl\": 418,\n\t\"./sr-cyrl.js\": 418,\n\t\"./sr.js\": 417,\n\t\"./ss\": 419,\n\t\"./ss.js\": 419,\n\t\"./sv\": 420,\n\t\"./sv.js\": 420,\n\t\"./sw\": 421,\n\t\"./sw.js\": 421,\n\t\"./ta\": 422,\n\t\"./ta.js\": 422,\n\t\"./te\": 423,\n\t\"./te.js\": 423,\n\t\"./tet\": 424,\n\t\"./tet.js\": 424,\n\t\"./tg\": 425,\n\t\"./tg.js\": 425,\n\t\"./th\": 426,\n\t\"./th.js\": 426,\n\t\"./tl-ph\": 427,\n\t\"./tl-ph.js\": 427,\n\t\"./tlh\": 428,\n\t\"./tlh.js\": 428,\n\t\"./tr\": 429,\n\t\"./tr.js\": 429,\n\t\"./tzl\": 430,\n\t\"./tzl.js\": 430,\n\t\"./tzm\": 431,\n\t\"./tzm-latn\": 432,\n\t\"./tzm-latn.js\": 432,\n\t\"./tzm.js\": 431,\n\t\"./ug-cn\": 433,\n\t\"./ug-cn.js\": 433,\n\t\"./uk\": 434,\n\t\"./uk.js\": 434,\n\t\"./ur\": 435,\n\t\"./ur.js\": 435,\n\t\"./uz\": 436,\n\t\"./uz-latn\": 437,\n\t\"./uz-latn.js\": 437,\n\t\"./uz.js\": 436,\n\t\"./vi\": 438,\n\t\"./vi.js\": 438,\n\t\"./x-pseudo\": 439,\n\t\"./x-pseudo.js\": 439,\n\t\"./yo\": 440,\n\t\"./yo.js\": 440,\n\t\"./zh-cn\": 441,\n\t\"./zh-cn.js\": 441,\n\t\"./zh-hk\": 442,\n\t\"./zh-hk.js\": 442,\n\t\"./zh-tw\": 443,\n\t\"./zh-tw.js\": 443\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 565;","module.exports = __webpack_public_path__ + \"static/media/brand-logo.a78e4b51.png\";","module.exports = __webpack_public_path__ + \"./fonts/opensans-regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/roboto-regular.ttf\";"],"sourceRoot":""}