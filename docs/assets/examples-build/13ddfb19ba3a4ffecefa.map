{"version":3,"sources":["/Users/yauhenpenkin/Documents/Projects/eva/packages/eva/index.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/eva-icons/evaIcon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/eva-icons/index.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/eva-icons/createIconsMap.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/theme/theme/theme.service.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/theme/style/style.service.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/theme/style/styleConsumer.service.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/theme/mapping/mappingContext.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/theme/theme/themeContext.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/theme/style/styleConsumer.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/theme/theme/themeConsumer.component.tsx","/Users/yauhenpenkin/Documents/Projects/eva/packages/processor/js/src/service/common/common.service.ts","/Users/yauhenpenkin/Documents/Projects/eva/packages/processor/js/src/service/mapping/mapping.service.ts","/Users/yauhenpenkin/Documents/Projects/eva/packages/processor/js/src/service/style/style.service.ts","/Users/yauhenpenkin/Documents/Projects/eva/packages/processor/js/src/processor/mapping/mappingProcessor.ts","/Users/yauhenpenkin/Documents/Projects/eva/packages/processor/js/src/processor/meta/metaProcessor.ts","/Users/yauhenpenkin/Documents/Projects/eva/packages/processor/js/src/processor/schema/schemaProcessor.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/theme/mapping/mappingProvider.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/theme/theme/themeProvider.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/theme/style/styleProvider.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/theme/modal/modalResolver.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/theme/modal/modal.service.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/theme/modal/modalPanel.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/theme/style/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/theme/application/applicationProvider.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/animation/animation.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/animation/pulseAnimation.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/animation/shakeAnimation.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/animation/zoomAnimation.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/avatar/avatar.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/support/components/arrow/arrow.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/support/services/props.service.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/support/services/i18n/i18nLayoutFlexMap.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/support/services/i18n/i18nLayout.service.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/support/services/validation.service.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/support/components/checkmark/checkmark.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/support/components/tabIndicator/tabIndicator.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/support/components/chevron/chevron.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/bottomNavigation/bottomNavigation.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/text/text.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/bottomNavigation/bottomNavigationTab.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/button/button.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/buttonGroup/buttonGroup.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/components/calendarHeader.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/components/calendarMonthHeader.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/viewPager/viewPager.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/components/calendarPager.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/components/picker/calendarPickerRow.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/components/picker/calendarPickerCell.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/components/picker/calendarPicker.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/components/calendarDateContent.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/service/date.service.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/i18n/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/i18n/en.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/service/nativeDate.service.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/service/helpers.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/service/calendarData.service.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/divider/divider.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/baseCalendar.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/calendar.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/service/rangeDate.service.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/calendar/rangeCalendar.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/checkbox/checkbox.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/popover/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/popover/popoverView.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/popover/measure.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/popover/placement.service.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/popover/popover.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/datepicker/baseDatepicker.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/datepicker/datepicker.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/datepicker/rangeDatepicker.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/list/list.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/menu/menuItem.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/menu/subMenu.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/menu/menu.service.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/menu/menu.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/drawer/drawer.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/list/listItem.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/drawer/drawerHeaderFooter.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/select/selectOption.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/select/selectGroupOption.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/select/selectOptionsList.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/select/selection.strategy.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/select/select.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/icon/service/iconRegistry.service.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/icon/icon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/icon/iconAnimation.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/icon/iconRegistry.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/support/typings/props.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/input/input.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/layout/layout.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/modal/modal.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/overflowMenu/overflowMenu.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/radio/radio.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/radioGroup/radioGroup.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/spinner/animation.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/spinner/spinner.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/tab/tabBar.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/tab/tabView.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/tab/tab.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/toggle/toggle.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/tooltip/tooltip.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/topNavigation/topNavigation.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/framework/ui/topNavigation/topNavigationAction.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/avatar/avatarShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/avatar/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/common/showcaseSettings.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/common/showcaseItem.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/common/showcaseSection.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/common/showcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/themes/registry.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/themes/themeContext.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/common/showcase.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/avatar/avatar.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/bottomNavigation/bottomNavigationShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/bottomNavigation/type.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/bottomNavigation/bottomNavigation.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/button/buttonShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/button/type.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/button/button.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/buttonGroup/buttonGroupShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/buttonGroup/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/buttonGroup/buttonGroup.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/checkbox/checkboxShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/checkbox/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/checkbox/checkbox.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/drawer/drawerShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/drawer/type.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/drawer/drawer.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/icon/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/icon/iconShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/icon/icon.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/calendar/calendarShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/moment/momentDate.service.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/date-fns/dateFnsDate.service.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/calendar/calendarCustomItem.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/calendar/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/calendar/calendar.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/input/inputShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/input/type.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/input/input.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/layout/layoutShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/layout/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/layout/layout.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/list/listShowcase.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/list/listItemShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/list/type.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/list/list.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/menu/menuShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/menu/type.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/menu/menu.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/popover/popoverShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/popover/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/popover/popover.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/radio/radioShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/radio/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/radio/radio.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/radioGroup/radioGroupShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/radioGroup/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/radioGroup/radioGroup.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/spinner/spinnerShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/spinner/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/spinner/spinner.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/tabView/tabViewShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/tabView/type.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/tabView/tabView.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/tooltip/tooltipShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/tooltip/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/tooltip/tooltip.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/text/textShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/text/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/text/text.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/toggle/toggleShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/toggle/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/toggle/toggle.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/topNavigation/type.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/topNavigation/topNavigationShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/topNavigation/topNavigation.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/overflowMenu/overflowMenuShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/overflowMenu/type.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/overflowMenu/overflowMenu.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/sample/sample.component.web.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/sample/sample.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/modal/modalShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/modal/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/modal/modal.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/select/selectShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/select/type.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/select/select.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/datepicker/datepickerShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/datepicker/rangeDatepickerShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/datepicker/datepicker.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/rangeCalendar/rangeCalendarShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/rangeCalendar/type.ts","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/rangeCalendar/rangeCalendar.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/home.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/avatar/avatarSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/avatar/avatarRemoteImages.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/avatar/avatarSize.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/avatar/avatarShape.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/avatar/avatarInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationTabInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationTabSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationTabWithExternalSourceIcon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationTabWithIcon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationWithIcons.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationWithoutIndicator.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/button/buttonAppearances.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/button/buttonGhost.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/button/buttonOutline.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/button/buttonWithIcon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/button/buttonSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/button/buttonSize.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/button/buttonStatus.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/buttonGroup/buttonGroupAppearance.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/buttonGroup/buttonGroupInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/buttonGroup/buttonGroupSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/buttonGroup/buttonGroupSize.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/buttonGroup/buttonGroupStatus.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/calendarBoundingMonth.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/calendarCustomDay.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/calendarCustomLocale.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/calendarFilterShowcase.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/calendarMoment.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/calendarSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/rangeCalendarSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/checkbox/checkboxSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/checkbox/checkboxStatus.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/checkbox/checkboxText.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/checkbox/checkboxInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/checkbox/checkboxIndeterminate.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/datePickerBoundingMonth.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/datepickerCustomDay.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/datepickerFilter.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/datepickerCustomLocale.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/datepickerMoment.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/datepickerSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/datepickerWithIcon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/rangeDatepickerSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerWithIcons.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerHeader.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerHeaderFooterInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerHeaderFooterSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerHeaderFooterWithAccessory.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerHeaderFooterWithExternalSourceIcons.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerFooter.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerCustomHeader.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerNotificationBadgeItem.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/icon/iconSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/icon/iconWithinButton.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/icon/iconWithinInput.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/icon/iconExternalSource.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/icon/iconAnimation.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/icon/iconAnimationInfinite.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/icon/iconInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputSize.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputStatus.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputWithCaption.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputWithIcon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputWithExternalSourceIcon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputWithLabel.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/layout/layoutSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/layout/layoutLevel.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/layout/layoutInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listCompositeItem.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listItemInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listItemSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listItemWithAccessory.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listItemWithExternalIcon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listItemWithIcon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/menu/menuSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/menu/menuWithSubMenu.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/menu/menuAppearance.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/menu/menuWithIcons.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/menu/menuInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/overflowMenu/overflowMenuAppearance.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/overflowMenu/overflowMenuExternalSourceIcons.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/overflowMenu/overflowMenuSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/overflowMenu/overflowMenuWithDisabledItems.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/overflowMenu/overflowMenuWithIcons.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/popover/popoverSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/popover/popoverPlacement.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/radio/radioSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/radio/radioWithText.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/radio/radioStatus.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/radio/radioInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/radioGroup/radioGroupSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/select/selectSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/select/selectMultiSelect.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/select/selectWithGroups.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/select/selectCustomIcon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/select/selectStatus.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/select/selectInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/spinner/spinnerLoadingData.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/spinner/spinnerSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/spinner/spinnerSizes.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/spinner/spinnerStatuses.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabBarSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabViewInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabViewLazyLoading.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabViewSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabWithExternalSourceIcon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabWithIcon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/text/textAppearances.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/text/textCategories.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/text/textInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/text/textSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/text/textStatuses.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/toggle/toggleSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/toggle/toggleStatus.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/toggle/toggleSize.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/toggle/toggleWithText.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/toggle/toggleInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tooltip/tooltipInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tooltip/tooltipSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tooltip/tooltipWithExternalSourceIcon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tooltip/tooltipWithIcon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tooltip/tooltipPlacement.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationActionExternalSourceIcon.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationActionInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationActions.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationActionSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationAlignments.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationWithMenu.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/viewPager/viewPagerInlineStyling.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/viewPager/viewPagerLazyLoading.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/ui/screen/showcases/viewPager/viewPagerSimpleUsage.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/navigation/drawerNavigation.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/navigation/sharingHeight.container.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/navigation/navigation.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/icons/ant.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/icons/feather.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/icons/fontAwesome.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/icons/material.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/app.component.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/icons/materialCommunity.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/App.tsx","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/node_modules/moment/locale sync /^/.//.*$","/Users/yauhenpenkin/Documents/Projects/react-native-ui-kitten/src/playground/src/assets/brand-logo.png"],"names":["mapping","require","light","dark","EvaIcon","content","props","Icon","this","tintColor","restProps","fill","EvaIconsPack","name","icons","Proxy","get","target","findIconByName","SYMBOL_REFERENCE","findThemeValue","theme","value","isReferenceKey","toThemeKey","startsWith","substring","createThemedStyle","Object","keys","reduce","acc","current","mappingValue","fallback","getThemeValue","StyleConsumerService","context","meta","safe","style","generatedConfig","docRoot","message","join","console","error","appearance","getDefaultAppearance","getDefaultVariants","getDefaultStates","source","interaction","styleInfo","getStyleInfo","generatedMapping","getGeneratedStyleMapping","JSON","stringify","toLowerCase","warn","withStyledProps","createDefaultProps","withValidParameters","themedStyle","info","componentStyles","styleKeys","styles","query","findGeneratedQuery","invalidParameters","forEach","key","parameters","includes","push","length","variantProps","getDerivedVariants","stateProps","getDerivedStates","variants","map","variant","states","matches","appearances","filter","default","transformObject","variantGroups","group","find","state","isDefault","undefined","p","prop","isState","isAssigned","transform","nextValue","keyQuery","split","compareArrays","lhs","rhs","reducer","MappingContext","React","createContext","ThemeContext","styled","Component","styledComponentName","Wrapper","init","onInit","service","defaultProps","onDispatch","setState","renderWrappedElement","forwardedRef","ref","dispatch","StyledElement","Consumer","ResultComponent","forwardRef","displayName","hoistNonReactStatics","withStyles","createStyles","createThemedStyles","withThemedProps","ThemedElement","ThemedComponent","toObject","array","c","hasOwnProperty","getComponentDefaultAppearance","component","getComponentMapping","getComponentDefaultState","getAppearance","getAppearanceMapping","getVariantMapping","groupValue","groupNameValue","getStateMapping","SEPARATOR_MAPPING_ENTRY","createStyle","normalizedAppearance","normalize","normalizeAppearance","normalizedVariants","defaultVariants","getComponentDefaultVariants","normalizeVariants","normalizedStates","stateWeight","separator","preprocess","createStateVariations","result","next","nextItem","concat","shift","sort","getStateVariationWeight","normalizeStates","indexOf","appearanceMapping","apce","getStatelessAppearanceMapping","variantMapping","getStatelessVariantMapping","stateMapping","getStateAppearanceMapping","getStateVariantMapping","currentToken","nextToken","withStrictTokens","parts","createStyleEntry","params","Boolean","noNulls","Set","noDuplicates","items","MappingProcessor","getComponentMappingMeta","componentMapping","getComponentVariants","getComponentStates","concatComponentVariants","concatComponentStates","concatVariantGroups","lhsValue","rhsValue","MetaProcessor","entries","controlMeta","nextAppearanceEntries","stateless","withStates","withVariants","withVariantStates","createAllStyles","prevAppearanceStyles","nextAppearanceStyles","withControlMeta","control","controlEntry","SchemaProcessor","mappingProcessor","metaProcessor","themeMapping","components","strictTheme","strict","process","MappingProvider","children","Provider","PureComponent","ThemeProvider","StyleProvider","ModalResolver","onBackdropPress","allowBackdrop","onStartShouldSetResponder","onResponderRelease","onStartShouldSetResponderCapture","renderComponentChild","cloneElement","renderComponentChildren","Children","renderWithBackDrop","TouchableOpacity","container","onPress","activeOpacity","renderWithoutBackDrop","View","notVisibleWrapper","pointerEvents","renderComponent","derivedProps","componentChildren","dialog","contentWrapper","visible","StyleSheet","create","absoluteFillObject","position","width","height","alignSelf","ModalService","panel","element","config","show","identifier","update","hide","Interaction","State","ModalPanel","Map","delete","generateUniqueComponentKey","Math","random","toString","areThereAnyComponents","size","renderModal","index","renderModals","Array","from","values","mount","unmount","set","panelChild","childElement","flex","ApplicationProvider","schemaProcessor","custom","customizedMapping","merge","customMapping","DEFAULT_CONFIG","cycles","useNativeDriver","Animation","counter","running","onAnimationEnd","stop","start","endCallback","callback","animation","end","easing","Easing","linear","duration","PulseAnimation","Animated","Value","restConfig","startAnimation","timing","toValue","endAnimation","sequence","scale","offset","ShakeAnimation","translateX","ZoomAnimation","AvatarComponent","getComponentStyle","roundCoefficient","containerParameters","baseStyle","flatten","borderRadius","componentStyle","Image","Avatar","Arrow","flatStyle","borderLeftWidth","borderRightWidth","borderBottomWidth","borderBottomColor","backgroundColor","borderLeftColor","borderRightColor","allWithPrefix","styleName","obj","styleKey","FlexStartEndMapper","toI18n","rtl","endsWith","FLEX_PREFIX","I18nLayoutFlexMap","alignContent","alignItems","justifyContent","flexDirection","FLEX_ROW_PREFIX","flexWrap","FLEX_WRAP_PREFIX","I18nLayoutService","I18nManager","isRTL","ltr","i18nStyle","currentStyleValue","i18nStyleValue","isValidString","CheckMark","shape","borderWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderColor","left","top","right","isAnimated","toI18nStyle","rotate","TabIndicator","contentOffset","onContentOffsetAnimationStateChanged","onContentOffsetAnimationStateEnd","createOffsetAnimation","animationDuration","animated","select","onLayout","event","indicatorWidth","nativeEvent","layout","scrollToOffset","selectedPosition","positions","addListener","nextProps","scrollToIndex","removeAllListeners","rest","Chevron","getDirectionStyle","direction","containerTopRotate","containerRightRotate","containerLeftRotate","marginHorizontal","directionStyle","translateY","BottomNavigationComponent","onTabSelect","onSelect","selectedIndex","indicatorHeight","indicatorBackgroundColor","item","indicator","renderIndicatorElement","indicatorStyle","renderTabElement","selected","renderTabElements","tabElements","indicatorElement","BottomNavigation","TextComponent","Text","BottomNavigationTabComponent","iconWidth","iconHeight","iconMarginVertical","iconTintColor","textMarginVertical","textFontFamily","textFontSize","textLineHeight","textFontWeight","textColor","text","marginVertical","fontFamily","fontSize","lineHeight","fontWeight","color","icon","renderIconElement","iconElement","renderTitleElement","title","titleStyle","titleElement","BottomNavigationTab","ButtonComponent","onPressIn","ACTIVE","onPressOut","textMarginHorizontal","iconMarginHorizontal","renderTextElement","textStyle","containerProps","childStyles","textElement","Button","ButtonGroupComponent","dividerBackgroundColor","dividerWidth","button","borderEndColor","borderEndWidth","isLastElement","count","renderButtonElement","status","additionalStyle","lastButton","renderButtonElements","buttonElements","overflow","borderTopWidth","ButtonGroup","CalendarHeader","renderSpecificTitleIcon","renderTitleIcon","iconStyle","renderLeftIcon","lateralIcon","renderRightIcon","renderLateralNavigationControls","subContainer","headerButton","onLeft","onRight","onTitlePress","lateralNavigationAllowed","headerButtonText","paddingVertical","paddingHorizontal","minWidth","minHeight","CalendarMonthHeader","data","ViewPager","containerRef","createRef","contentWidth","contentOffsetValue","panResponder","PanResponder","onMoveShouldSetPanResponder","abs","dx","dy","i18nOffset","nextSelectedIndex","sign","getChildCount","onPanResponderMove","selectedPageOffset","setValue","onPanResponderRelease","vx","onOffsetChange","round","contentView","shouldLoadComponent","contentContainer","getContainerStyle","prevProps","childCount","panHandlers","CalendarPager","viewPagerRef","setTimeout","createChildElement","date","CalendarPickerRow","renderItem","CalendarPickerCellComponent","getContainerBorderRadius","firstRangeItem","lastRangeItem","contentBorderWidth","contentBorderRadius","contentBorderColor","contentBackgroundColor","contentTextFontSize","contentTextLineHeight","contentTextFontWeight","contentTextColor","contentTextFontFamily","contentText","renderContentElement","shouldComponentUpdate","bounding","today","CalendarPickerCell","CalendarPicker","isFirstRangeItem","range","isLastRangeItem","renderCellElement","rangedArray","category","isItemSelected","disabled","isItemDisabled","isItemToday","shouldItemUpdate","renderRowElement","rowStyle","CalendarDateContent","VIEW_MODE_DATE","id","navigationNext","VIEW_MODE_YEAR","pickNext","VIEW_MODE_MONTH","CalendarViewModes","DATE","MONTH","YEAR","DateService","locale","date1","date2","compareDates","isBetweenIncluding","isSameDay","isSameMonth","isSameYear","DAYS_IN_WEEK","MONTHS_IN_YEAR","TranslationWidth","EN","dayNames","short","long","monthNames","LOCALE_DEFAULT","NativeDateService","i18n","setFechaLocaleData","format","isNaN","parse","getTime","Date","getDate","getMonth","getFullYear","getDay","SHORT","getMonthNameByIndex","getFechaMonthNames","getFechaDayNames","fecha","num","createDate","month","setDate","min","getMonthEnd","year","UTC","setFullYear","dayNamesShort","LONG","monthNamesShort","batch","batchSize","res","chunkIndex","floor","bound","producer","i","arr","DEFAULT_DATE_OPTIONS","holiday","CalendarDataService","dateService","createDayPickerData","dateRange","weeks","createDates","withBoundingMonths","createMonthPickerData","rows","columns","yearStart","getYearStart","monthRange","addMonth","createYearPickerData","yearRange","addYear","createDayPickerPagerData","startDate","endDate","numberOfDayPickers","getNumberOfMonths","createYearPickerPagerData","numberOfYears","getNumberOfYears","numberOfYearPickers","max","ceil","getYear","activeMonth","options","days","createDateRangeForMonth","withRangedDates","startOfWeekDayDiff","getStartOfWeekDayDiff","calendarRange","withRangedStartDates","withRangedStartEndDates","day","compareDatesSafe","isSameStartDate","isSameEndDate","isBetween","isShouldAddPrevBoundingMonth","addPrevBoundingMonth","isShouldAddNextBoundingMonth","addNextBoundingMonth","firstWeek","numberOfBoundingDates","unshift","createPrevBoundingDays","lastWeek","pop","createNextBoundingDays","daysInMonth","getNumberOfDaysInMonth","slice","startOfMonth","getMonthStart","getWeekStartDiff","getFirstDayOfWeek","getDayOfWeek","monthDate","DividerComponent","Divider","PICKER_ROWS","PICKER_COLUMNS","VIEWS_IN_PICKER","FORMAT_DAY","FORMAT_MONTH","FORMAT_YEAR","FORMAT_HEADER_DATE","FORMAT_HEADER_MONTH","FORMAT_HEADER_YEAR","BaseCalendarComponent","viewMode","startView","visibleDate","getSelectedDate","dataService","calendarDayPagerRef","calendarYearPagerRef","scrollToToday","onDaySelect","onMonthSelect","nextVisibleDate","onYearSelect","onDayPickerPagerSelect","onYearPickerPagerSelect","onPickerNavigationPress","onCalendarPagerLeft","onCalendarPagerMove","onCalendarPagerRight","step","getCurrentPagerRef","getCalendarPagerIndex","onCalendarPagerMoveStart","shouldUpdateDayItem","shouldUpdateDayElement","getCalendarStyle","maxWidth","maxHeight","headerContainer","headerPaddingHorizontal","headerPaddingVertical","titleFontSize","titleFontWeight","titleLineHeight","titleColor","titleFontFamily","divider","dividerMarginVertical","daysHeaderContainer","rowMarginHorizontal","row","rowMinHeight","getWeekdayStyle","weekdayTextFontSize","weekdayTextFontWeight","weekdayTextLineHeight","weekdayTextColor","weekdayTextFontFamily","getIsDaySelected","isDaySelected","isMonthSelected","isSameMonthSafe","isYearSelected","isSameYearSafe","isDayDisabled","isDateFitsBounds","isDateFitsFilter","isMonthDisabled","isYearDisabled","isDayToday","isSameDaySafe","isMonthToday","isYearToday","isBetweenIncludingSafe","isDayPickerInViewPort","visibleDayPickerIndex","isYearPickerInViewPort","visibleYearPickerIndex","createHeaderTitle","isLateralNavigationAllowed","renderWeekdayElement","weekday","renderDayElement","renderDayIfNeeded","boundingMonth","renderDay","renderMonthElement","monthCell","renderYearElement","yearCell","renderDayPickerElement","getDayPickerData","renderDayPickerPagerElement","Fragment","getDayOfWeekNames","renderMonthPickerElement","renderMonth","renderYearPickerElement","renderYear","renderYearPickerPagerElement","renderPickerElement","renderCalendarFooter","renderFooter","renderCalendarHeader","titleSelector","getYearEnd","aspectRatio","CalendarComponent","selectionChanged","disablingChanged","Calendar","RangeDateService","createRangeForStart","createRangeForStartEnd","RangeCalendarComponent","rangeDateService","createRange","rangeChanged","rangeStartPlaceChanged","rangeEndPlaceChanged","RangeCalendar","CheckBoxComponent","onChange","checked","iconBorderRadius","outlineWidth","outlineHeight","outlineBorderRadius","outlineBackgroundColor","highlightContainer","selectContainer","highlight","createHitSlopInsets","bottom","renderSelectIconElement","renderIndeterminateIconElement","indeterminate","selectContainerStyle","hitSlopInsets","hitSlop","CheckBox","Point","x","y","Size","Frame","origin","other","zero","point","OffsetRect","Offsets","MARGIN","rawValue","MARGIN_HORIZONTAL","MARGIN_VERTICAL","MARGIN_LEFT","MARGIN_TOP","MARGIN_RIGHT","MARGIN_BOTTOM","offsetValue","parseString","applyToRect","rect","PopoverPlacements","typeOf","LEFT","TOP","RIGHT","BOTTOM","LEFT_START","LEFT_END","TOP_START","TOP_END","RIGHT_START","RIGHT_END","BOTTOM_START","BOTTOM_END","leftOf","centerVerticalOf","offsets","bounds","alignment","frame","fitsStart","fitsTop","fitsBottom","parent","family","fits","topOf","centerHorizontalOf","fitsLeft","fitsRight","rightOf","fitsEnd","bottomOf","PLACEMENT_DEFAULT","PopoverView","placement","derivedIndicatorStyle","isVertical","isStart","isEnd","isReverse","indicatorPrimaryRotate","indicatorSecondaryRotate","containerTranslate","indicatorTranslate","indicatorOffset","i18nVerticalIndicatorTranslate","containerStyle","contentStyle","rawPlacement","MeasureElement","onResult","node","findNodeHandle","UIManager","measureInWindow","w","h","window","Dimensions","bindToWindow","measuredElement","MeasureNode","onChildMeasure","tag","renderMeasuringElement","PLACEMENT_FAMILIES","PopoverPlacementService","preferredValue","findRecursive","families","oneOfCurrentFamily","findFromFamily","oneOfReversedFamily","reverse","firstTruthy","nextPlacement","preferredFrame","familyValue","familyFrame","WINDOW","WINDOW_BOUNDS","TAG_CHILD","TAG_CONTENT","PopoverComponent","placementService","handleVisibility","popoverId","updatePopoverElement","renderPopoverElement","popoverPlacement","popoverElement","popoverVisible","onMeasure","placementOptions","createPlacementOptions","showPopoverModal","createPlacement","popoverFrame","positionStyle","positionedPopoverElement","derivedStyle","measuringProps","popover","popoverInvisible","renderChildElement","child","opacity","Popover","BaseDatepickerComponent","getComponentStyles","popoverMarginHorizontal","indent","toggleVisible","dispatchActive","renderIcon","renderText","getComponentTitle","renderControl","popoverStyle","renderCalendar","DatepickerComponent","formatDateToString","Datepicker","RangeDatepickerComponent","RangeDatepicker","ListComponent","listRef","scrollToEnd","getItemStyle","keyExtractor","itemStyle","itemElement","FlatList","List","MenuItemComponent","menuIndex","onLongPress","titleStyles","indicatorStyles","iconStyles","titleMarginHorizontal","renderTitle","renderAccessory","accessory","restStyles","accessoryElement","zIndex","MenuItem","MAIN_ITEM_KEY","DIVIDER_ELEMENT_KEY","SUB_ITEMS_MEASURE_TAG","SubMenuComponent","subItemsVisible","subItemsHeight","subItemsAnimation","iconAnimation","subItemsExpandAnimate","spring","animateIcon","onMainItemPress","onSubItemPress","subItemsPaddingHorizontal","onSubMenuMeasure","getIsSelected","isMainItemDividerExist","isSubItemDividerExist","subItems","renderDivider","renderMainItemAccessory","animatedStyle","interpolate","inputRange","outputRange","renderMenuItem","isMainItem","onPressHandler","mainMenuItemAccessory","renderSubItemsInvisible","invisibleMenu","renderSubItems","sub","isSelected","dividerElement","prevState","mainItem","invisibleSubs","SubMenu","MenuService","tempIndex","MenuComponent","isDividerAbsent","areThereSubItems","setIndexes","ItemSeparatorComponent","Menu","DrawerComponent","renderHeader","header","footer","renderMenu","showsVerticalScrollIndicator","bounces","menu","Drawer","ListItemComponent","descriptionFontFamily","descriptionFontSize","descriptionFontWeight","descriptionLineHeight","descriptionColor","descriptionMarginHorizontal","accessoryMarginHorizontal","description","contentStyles","renderContentElementChildren","descriptionElement","renderDescriptionElement","descriptionStyle","renderAccessoryElement","renderTemplateChildren","textAlign","ListItem","DrawerHeaderFooter","SelectOptionComponent","onMultiSelectItemPress","multiSelectBackgroundColor","multiSelectTextColor","containerStyles","multiSelectContainer","multiSelectText","renderDefaultItem","renderMultiSelectItem","multiSelect","SelectOption","SelectGroupOptionComponent","itemPaddingHorizontal","getMainItemStatus","subItemsSelectedStatusArray","someSelected","some","everySelected","every","renderSubItem","option","strategy","returningOption","separators","renderSubItemsElements","renderMultiSelectMainElement","subItemsElements","subItem","itemStatus","renderDefaultMainElement","renderMainElement","mainElement","SelectGroupOption","SelectOptionsList","dropdownItem","MultiSelectStrategy","isArray","selectedOption","areThereSubOptions","selectOptionWithSubOptions","selectDefaultOption","removeOption","enabledItems","placeholder","isSelectedOptionExist","findIndex","splice","SingleSelectStrategy","hasOptionSubItems","MEASURED_CONTROL_TAG","SelectComponent","optionsListWidth","setVisibility","onItemSelect","onControlMeasure","createSelectionStrategy","handleVisibleChange","startIconAnimation","textStyles","placeholderStyles","optionsListStyles","labelStyle","outlineStyles","placeholderColor","placeholderFontFamily","placeholderFontSize","placeholderFontWeight","placeholderLineHeight","placeholderMarginHorizontal","outline","padding","outlinePadding","optionsList","optionsListMaxHeight","optionsListBorderRadius","optionsListBorderColor","optionsListBorderWidth","label","labelColor","marginBottom","labelMarginBottom","renderLabelElement","renderDefaultIconElement","valueStyle","placeholderStyle","getPlaceholder","numberOfLines","ellipsizeMode","renderOptionsListElement","additionalOptionsListStyle","renderControlChildren","renderControlElement","controlStyle","childrenStyles","optionsListElement","labelElement","controlElement","flexGrow","outlineContainer","Select","throwPackNotFoundError","Error","throwIconNotFoundError","pack","IconRegistryService","packs","registerIconPack","has","defaultPack","iconsPack","getPackOrThrow","getDefaultPack","getIconFromPack","getIconPack","shouldThrow","stopAnimation","toProps","getIconAnimation","animationConfig","release","registeredIcon","getIcon","toReactElement","IconRegistry","findDefaultIconPack","requestedPackIndex","registerIcons","defaultIconPack","register","setDefaultIconPack","defaultIcons","FlexStyleProps","InputComponent","textInputRef","focus","blur","isFocused","clear","onFocus","FOCUSED","onBlur","onIconPress","allOf","allWithRest","inputContainerStyle","labelFontSize","labelLineHeight","labelFontWeight","captionMarginTop","captionColor","captionFontSize","captionLineHeight","captionFontWeight","captionIconWidth","captionIconHeight","captionIconMarginRight","captionIconTintColor","inputContainer","captionContainer","marginTop","captionIcon","marginRight","captionLabel","renderIconTouchableElement","TouchableWithoutFeedback","renderCaptionElement","captionTextStyle","caption","renderCaptionIconElement","captionElement","captionIconElement","TextInput","placeholderTextColor","editable","flexShrink","flexBasis","Input","LayoutComponent","Layout","screenWidth","screenHeight","initialContentSize","baseModalTestId","Modal","contentSize","getAbsoluteRelatedStyle","renderBaseModal","absoluteRelatedStyle","testID","backdropStyle","modal","backdrop","renderMeasureNode","measureStyledModal","hiddenModal","OverflowMenuComponent","renderPopoverContentElement","initialNumToRender","contentElement","OverflowMenu","RadioComponent","Radio","RadioGroupComponent","onRadioChange","renderRadioElement","renderRadioElements","radioElements","RadioGroup","PI2","OFFSET_MIN","PI","OFFSET_MAX","BaseBezierEasing","bezier","StartArcEasing","progress","EndArcEasing","SpinnerAnimation","arcSize","createFrameRange","createContainerInterpolation","animationValue","toDegValue","createArcInterpolation","createArcInterpolationInputRange","createArcInterpolationOutputRange","animationFrames","boundedProgress","toStyleTransformProp","containerInterpolation","startArcInterpolation","endArcInterpolation","SpinnerComponent","containerSize","arc","renderArcElement","absolute","noOverflow","animating","animatingChanged","Spinner","TabBarComponent","tabIndicatorRef","indicatorBorderRadius","isTabSelected","TabBar","TabViewChildren","tabs","TabView","tabBarRef","onBarSelect","onPagerOffsetChange","tabBar","tabCount","onPagerSelect","tab","toArray","tabBarStyle","TabComponent","Tab","ToggleComponent","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponderCapture","onPanResponderTerminationRequest","onPanResponderGrant","thumbTranslateAnimationActive","stopAnimations","animateThumbWidth","thumbWidth","animateEllipseScale","e","gestureState","toggle","thumbHeight","thumbBorderRadius","thumbBackgroundColor","interpolatedBackgroundColor","getInterpolatedColor","thumbScale","animateThumbScale","toggleContainer","ellipseContainer","ellipse","ellipseScaleAnimation","thumb","thumbWidthAnimation","elevation","thumbTranslateAnimation","animateThumbTranslate","startColor","endColor","Toggle","TooltipComponent","childrenStyle","contentChildren","Tooltip","TopNavigationComponent","getAlignmentDependentStyles","containerCentered","titleContainer","titleContainerCentered","rightControlsContainer","rightControlsContainerStart","titleTextAlign","subtitleTextAlign","subtitleFontFamily","subtitleFontSize","subtitleLineHeight","subtitleFontWeight","subtitleColor","subtitle","leftControlContainer","leftControl","rightControls","subtitleStyle","renderActionElements","alignmentStyles","subtitleElement","leftControlElement","rightControlElements","TopNavigation","TopNavigationActionComponent","touchableProps","TopNavigationAction","AvatarShowcase","uri","avatarShowcase","sections","ShowcaseSettings","themesMenuVisible","settingsMenuVisible","createSettingMenuItem","setting","createThemeMenuItem","onThemeSelect","onResetButtonPress","onSettingSelect","createThemesMenuItems","createSettingsMenuItems","toggleThemesMenu","toggleSettingsMenu","toggleRtl","Updates","ShowcaseItem","renderElement","showcaseElement","titleLabel","ShowcaseSection","section","ShowcaseComponent","Showcase","renderShowcaseElement","renderSectionElement","renderSectionItem","showcase","listItemElement","borderStyle","itemBorder","themes","toggleTheme","ShowcaseContainer","settings","onReset","AvatarContainer","BottomNavigationShowcase","bottomNavigationShowcase","bottomNavigationSettings","propertyName","BottomNavigationContainer","ButtonShowcase","IconElement","buttonShowcase","buttonSettings","ButtonContainer","ButtonGroupShowcase","buttonGroupShowcase","buttonGroupSettings","ButtonGroupContainer","CheckBoxShowcaseComponent","CheckBoxShowcase","checkboxShowcase","checkboxSettings","CheckBoxContainer","DrawerShowcase","drawerShowcase","DrawerContainer","iconShowcase","iconSettings","DEFAULT_ICON","IconShowcase","iconName","animationTimeout","clearTimeout","autoCapitalize","autoCorrect","onChangeText","IconContainer","CalendarShowcase","withFooter","footerContainer","footerDivider","moment","_rollupMoment","_moment","MomentDateService","setLocale","setMomentLocaleData","clone","add","months","years","utc","localeData","defaultFormat","firstDayOfWeek","endOf","startOf","isValid","momentLocaleData","longDateFormat","monthsShort","weekdaysShort","weekdays","rollupParse","dateFnsParse","formatDate","rollupFormat","dateFnsFormat","DateFnsService","formatOptions","parseDate","now","defaultCalendar","calendarShowcase","CalendarCustomItem","todayTitle","CalendarContainer","InputShowcase","inputShowcase","inputSettings","InputContainer","LayoutShowcase","layoutShowcase","layoutSettings","LayoutContainer","ListShowcase","ListItemShowcase","ListItemIconShowcase","ListItemAccessoryShowcase","AccessoryElement","ListItemIconAccessoryShowcase","listShowcase","renderListItem","listSettings","renderIconListItem","renderAccessoryListItem","renderIconAccessoryListItem","ListContainer","MenuShowcase","menuShowcase","menuSettings","MenuContainer","PopoverShowcase","popoverShowcase","popoverSettings","PopoverContainer","RadioShowcaseComponent","RadioShowcase","radioShowcase","radioSettings","RadioContainer","RadioGroupShowcase","radioGroupShowcase","RadioGroupContainer","SpinnerShowcase","WhiteSpinner","DefaultSpinner","blackSpinnerContainer","spinnerShowcase","spinnerSettings","SpinnerContainer","TabViewShowcase","tabViewShowcase","TabViewContainer","TooltipShowcase","tooltipVisible","tooltipShowcase","tooltipSettings","TooltipContainer","TextShowcase","textShowcase","textSettings","TextContainer","ToggleShowcaseComponent","ToggleShowcase","titleSection","stateSection","toggleShowcase","toggleSettings","ToggleContainer","RightControlIcon","rightControlsTopNavigation","leftControlTopNavigation","rightControlsSection","leftControlSection","subtitleSection","topNavigationShowcase","topNavigationSettings","TopNavigationShowcase","TopNavigationContainer","OverflowMenuShowcase","menuVisible","selectedMenuIndex","withIconMenuItems","withDisabledItemMenuItems","defaultOverflowMenu","withIcons","withDisabledItem","defaultSection","overflowMenuShowcase","overflowMenuSettings","OverflowMenuContainer","SampleComponent","passwordVisible","onPasswordIconPress","renderPasswordIcon","profileImage","isDark","setTheme","level","secureTextEntry","Sample","cardContainer","cardHeader","themeToggleContainer","themeText","welcomeContainer","formContainer","formInput","formInputBox","signInButton","SampleContainer","nextTheme","ModalShowcase","modalVisible","customModalPosition","customStyledModal","customStyledModalBackdrop","customStyledSection","customModalBackdropAllowed","customModalBackdropNotAllowed","closeOnBackdrop","customBackdropAllowingSection","modalShowcase","ModalContainer","SelectShowcaseComponent","dropdown","SelectShowcase","defaultSelectOption","withGroupsSelectOption","defaultSelect","multiSelectSelect","multiSelectSection","groupSelect","groupSelectMultiselect","withGroupsSection","withIconSelect","withIconSection","withLabelSelect","withCustomPlaceholderSelect","customTextsSection","selectShowcase","selectSettings","SelectContainer","DatepickerShowcase","datepicker","RangeDatepickerShowcase","DatepickerContainer","RangeCalendarShowcase","RangeCalendarContainer","routes","HomeScreen","onItemPressMobile","route","renderWebListItem","routeName","renderMobileListItem","Platform","ios","android","AvatarSimpleUsageShowcase","AvatarRemoteImagesShowcase","AvatarSizeShowcase","AvatarShapeShowcase","AvatarInlineStylingShowcase","avatar","BottomNavigationInlineStylingShowcase","bottomNavigation","BottomNavigationSimpleUsageShowcase","BottomNavigationTabInlineStylingShowcase","tabTitle","BottomNavigationTabSimpleUsageShowcase","DashboardIcon","BottomNavigationTabWithExternalSourceIconShowcase","BottomNavigationTabWithIconShowcase","SettingsIcon","BottomNavigationWithIconsShowcase","BottomNavigationWithoutIndicatorShowcase","ButtonAppearancesShowcase","ButtonGhostShowcase","ButtonOutlineShowcase","StarIcon","ButtonWithIconShowcase","ButtonSimpleUsageShowcase","ButtonSizeShowcase","ButtonStatusShowcase","ButtonGroupAppearanceShowcase","buttonGroup","ButtonGroupInlineStylingShowcase","margin","ButtonGroupSimpleUsageShowcase","ButtonGroupSizeShowcase","ButtonGroupStatusShowcase","CalendarBoundingMonthShowcase","CalendarCustomDayShowcase","dayContainer","CalendarCustomLocaleShowcase","CalendarFilterShowcase","CalendarMomentShowcase","CalendarSimpleUsageShowcase","RangeCalendarSimpleUsageShowcase","CheckboxSimpleUsageShowcase","checked1","checkbox","CheckboxStatusShowcase","primaryChecked","successChecked","infoChecked","warningChecked","dangerChecked","basicChecked","CheckboxTextShowcase","CheckboxInlineStylingShowcase","CheckboxIndeterminateShowcase","mainCheckboxChecked","mainCheckboxIndeterminate","checkbox1Checked","checkbox2Checked","checkbox3Checked","someChecked","everyChecked","leftSpace","DatepickerBoundingMonthShowcase","DatepickerCustomDayShowcase","DatepickerFilterShowcase","DatepickerCustomLocaleShowcase","DatepickerMomentShowcase","DatepickerSimpleUsageShowcase","CalendarIcon","DatepickerWithIconShowcase","RangeDatepickerSimpleUsageShowcase","DrawerSimpleUsageShowcase","MessagesIcon","DrawerWithIconsShowcase","PersonIcon","DrawerHeaderShowcase","DrawerHeaderFooterInlineStylingShowcase","drawerHeader","drawerHeaderTitle","drawerHeaderDescription","ProfileIcon","DrawerHeaderFooterSimpleUsageShowcase","LogoutIcon","LogoutButton","DrawerHeaderFooterWithAccessoryShowcase","DrawerHeaderFooterWithExternalSourceIconShowcase","DrawerFooterShowcase","DrawerCustomHeaderShowcase","NotificationBadge","DrawerNotificationBadgeItemShowcase","badge","IconSimpleUsageShowcase","IconWithinButtonShowcase","liked","IconWithinInputShowcase","RemoteBulbIcon","IconExternalSourceShowcase","IconAnimationShowcase","IconAnimationInfiniteShowcase","IconInlineStylingShowcase","InputInlineStylingShowcase","inputValue","input","inputText","inputLabel","inputCaption","InputSimpleUsageShowcase","InputSizeShowcase","smallValue","mediumValue","largeValue","InputStatusShowcase","primaryValue","successValue","infoValue","warningValue","dangerValue","basicValue","InputWithCaptionShowcase","isValidInputValue","InputWithIconShowcase","InputWithExternalSourceIconShowcase","InputWithLabelShowcase","LayoutSimpleUsageShowcase","LayoutLevelShowcase","LayoutInlineStylingShowcase","additionalContainerStyle","SAMPLE_DATA","ListCompositeItemShowcase","renderItemAccessory","renderItemIcon","list","ListInlineStylingShowcase","contentContainerStyle","ListItemInlineStylingShowcase","listItem","listItemTitle","listItemDescription","ListItemSimpleUsageShowcase","ListItemWithAccessoryShowcase","RemoteStarIcon","ListItemWithExternalIconShowcase","ListItemWithIconShowcase","ListSimpleUsageShowcase","MenuSimpleUsageShowcase","MenuWithSubMenuShowcase","MenuAppearanceShowcase","MenuWithIconsShowcase","MenuInlineStylingShowcase","menuItemTitle","OverflowMenuWithoutDividerShowcase","OverflowMenuExternalSourceIconsShowcase","OverflowMenuSimpleUsageShowcase","OverflowMenuWithDisabledItemsShowcase","OverflowMenuWithIconsShowcase","PopoverSimpleUsageShowcase","popoverContent","PopoverPlacementShowcase","RadioSimpleUsageShowcase","radio","RadioWithTextShowcase","RadioStatusShowcase","RadioInlineStylingShowcase","radioText","RadioGroupSimpleUsageShowcase","SelectSimpleUsageShowcase","SelectMultiSelectShowcase","SelectWithGroupsShowcase","SelectCustomIconShowcase","SelectStatusShowcase","selectedOptionPrimary","selectedOptionSuccess","selectedOptionInfo","selectedOptionDanger","selectedOptionWarning","selectedOptionBasic","SelectInlineStylingShowcase","option2","SpinnerDataLoadingShowcase","loading","SpinnerSimpleUsageShowcase","SpinnerSizesShowcase","SpinnerStatusesShowcase","TabBarSimpleUsageShowcase","TabInlineStylingShowcase","TabSimpleUsageShowcase","TabViewInlineStylingShowcase","tabView","tabViewIndicator","TabViewLazyLoadingShowcase","TabViewSimpleUsageShowcase","TabWithExternalSourceIconShowcase","TabWithIconShowcase","TextAppearancesShowcase","TextCategoriesShowcase","TextInlineStylingShowcase","TextSimpleUsageShowcase","TextStatusesShowcase","ToggleSimpleUsageShowcase","ToggleStatusShowcase","ToggleSizeShowcase","tinyChecked","smallChecked","mediumChecked","largeChecked","giantChecked","ToggleWithTextShowcase","ToggleInlineStylingShowcase","TooltipInlineStylingShowcase","tooltipText","TooltipSimpleUsageShowcase","InfoIcon","TooltipWithExternalSourceIconShowcase","TooltipWithIconShowcase","TooltipPlacementShowcase","BackIcon","TopNavigationActionExternalSourceIconShowcase","EditIcon","TopNavigationActionInlineStylingShowcase","action","MenuIcon","BackAction","EditAction","MenuAction","TopNavigationActionsShowcase","onBackPress","TopNavigationActionSimpleUsageShowcase","TopNavigationAlignmentsShowcase","TopNavigationInlineStylingShowcase","topNavigation","TopNavigationSimpleUsageShowcase","TopNavigationWithMenuShowcase","ViewPagerInlineStylingShowcase","ViewPagerLazyLoadingShowcase","ViewPagerSimpleUsageShowcase","DrawerNavigation","selectedRoute","drawerItems","safeArea","ColorPaletteIcon","sharingHeightContainer","setMenuVisible","themeContext","onThemesButtonPress","postLayoutChangeEvent","layoutChangeMessage","marginLeft","selectedTheme","optionsContainer","warningContainer","warningIcon","MenuNavigator","createStackNavigator","initialRouteName","headerMode","DrawerNavigator","createDrawerNavigator","contentComponent","Router","createBrowserApp","history","createAppContainer","AntDesignIconsPack","AntDesignIcon","IconProvider","FeatherIconsPack","FeatherIcon","FontAwesomeIconsPack","FontAwesomeIcon","MaterialIconsPack","MaterialIcon","MaterialCommunityIcon","App","currentTheme","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","resolve","module","exports"],"mappings":"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ACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAASg2D,EAAeC,GACvB,IAAI12C,EAAK22C,EAAsBD,GAC/B,OAAOE,EAAoB52C,GAE5B,SAAS22C,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEp2D,EAAKi2D,GAAM,CACpC,IAAInlB,EAAI,IAAI1K,MAAM,uBAAyB6vB,EAAM,KAEjD,MADAnlB,EAAEulB,KAAO,mBACHvlB,EAEP,OAAO9wC,EAAIi2D,GAEZD,EAAet5D,KAAO,WACrB,OAAOD,OAAOC,KAAKsD,IAEpBg2D,EAAeM,QAAUJ,EACzBK,EAAOC,QAAUR,EACjBA,EAAez2C,GAAK,K,oBCnRpBg3C,EAAOC,QAAU,IAA0B,wC","file":"static/js/app.eb6dfb03.chunk.js","sourcesContent":["export const mapping = require('./mapping.json');\nexport const light = require('./themes/light.json');\nexport const dark = require('./themes/dark.json');\n","import React from 'react';\nimport { SvgProps } from 'react-native-svg';\nimport { IconProvider } from 'react-native-ui-kitten';\n\ntype IconElement = React.ReactElement<SvgProps>;\ntype IconComponent = React.ComponentType<SvgProps>;\n\nexport class EvaIcon implements IconProvider<SvgProps> {\n\n  constructor(private content: IconComponent) {\n  }\n\n  public toReactElement(props: SvgProps): IconElement {\n    const Icon: IconComponent = this.content;\n\n    // @ts-ignore - Eva maps icon color to `tintColor`\n    const { tintColor, ...restProps } = props;\n\n    return (\n      <Icon\n        fill={tintColor}\n        {...restProps}\n      />\n    );\n  }\n}\n","import { IconPack } from 'react-native-ui-kitten';\nimport { SvgProps } from 'react-native-svg';\nimport { createIconsMap } from './createIconsMap';\n\nexport const EvaIconsPack: IconPack<SvgProps> = {\n  name: 'eva',\n  icons: createIconsMap(),\n};\n\n","import { IconProvider } from 'react-native-ui-kitten';\nimport { SvgProps } from 'react-native-svg';\nimport { findIconByName } from 'react-native-eva-icons/icons';\nimport { EvaIcon } from './evaIcon.component';\n\nexport const createIconsMap = (): { [key: string]: IconProvider<SvgProps> } => {\n  return new Proxy({}, {\n    get(target: {}, name: string): IconProvider<SvgProps> {\n      return new EvaIcon(findIconByName(name));\n    },\n  });\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ThemeType } from './type';\n\nconst SYMBOL_REFERENCE: string = '$';\n\n/**\n * @param name: string - theme property name, like `backgroundColor`\n * @param theme: ThemeType - theme\n * @param fallback: any - fallback value\n *\n * @return any. Theme property value if it presents in theme, fallback otherwise\n */\nexport function getThemeValue(name: string, theme: ThemeType, fallback?: any): any | undefined {\n  if (isReferenceKey(name)) {\n    const themeKey: string = toThemeKey(name);\n\n    return findThemeValue(themeKey, theme) || fallback;\n  }\n\n  return findThemeValue(name, theme) || fallback;\n}\n\nfunction findThemeValue(name: string, theme: ThemeType): any | undefined {\n  const value: any = theme[name];\n\n  if (isReferenceKey(value)) {\n    const themeKey: string = toThemeKey(value);\n\n    return findThemeValue(themeKey, theme);\n  }\n\n  return value;\n}\n\n/**\n * @returns true if theme value references to another\n */\nfunction isReferenceKey(value: any): boolean {\n  return `${value}`.startsWith(SYMBOL_REFERENCE);\n}\n\n/**\n * Transforms reference key to theme key\n */\nfunction toThemeKey(value: any): string {\n  return `${value}`.substring(1);\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ThemedStyleType } from '@eva-design/dss';\nimport { StyleType } from './type';\nimport { getThemeValue } from '../theme/theme.service';\nimport { ThemeType } from '../theme/type';\n\nexport function createThemedStyle(mapping: ThemedStyleType, theme: ThemeType): StyleType {\n  return Object.keys(mapping).reduce((acc: StyleType, current: string): StyleType => {\n    const mappingValue: any = mapping[current];\n\n    return { ...acc, [current]: getThemeValue(mappingValue, theme, mappingValue) };\n  }, {});\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ControlMetaType,\n  ControlThemedStyleType,\n  ThemedStyleType,\n  ThemeStyleType,\n} from '@eva-design/dss';\nimport {\n  ContextProps,\n  StyledComponentProps,\n} from './styleConsumer.component';\nimport { createThemedStyle } from './style.service';\nimport { Interaction } from './type';\n\nconst SEPARATOR_MAPPING_ENTRY: string = '.';\n\ninterface StyleInfo {\n  appearance: string;\n  variants: string[];\n  states: string[];\n}\n\nexport class StyleConsumerService {\n\n  private readonly name: string;\n  private readonly meta: ControlMetaType;\n\n  constructor(name: string, context: ContextProps) {\n    this.name = name;\n\n    this.meta = this.safe(context.style[name], (generatedConfig): ControlMetaType => {\n      return generatedConfig.meta;\n    });\n\n    if (!this.meta) {\n      const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n      const message: string = [\n        `\\n${this.name}: unsupported configuration.`,\n        'Using UI Kitten components is only possible with configuring ApplicationProvider.',\n        `📖 Documentation: ${docRoot}/guides/install-ui-kitten#configure-application-root`,\n        '\\nIn case you have all in place, there might be an incorrect usage of a \"styled\" function.',\n        `📖 Documentation: ${docRoot}/design-system/custom-component-mapping`,\n      ].join('\\n');\n\n      console.error(message);\n    }\n  }\n\n  public createDefaultProps<P extends object>(): StyledComponentProps {\n    const appearance: string = this.getDefaultAppearance();\n    const variants: { [key: string]: string } = this.getDefaultVariants();\n    const states: { [key: string]: boolean } = this.getDefaultStates();\n\n    return { appearance, ...variants, ...states };\n  }\n\n  public withStyledProps<P extends object>(source: P,\n                                           context: ContextProps,\n                                           interaction: Interaction[]): P & StyledComponentProps {\n\n    const styleInfo: StyleInfo = this.getStyleInfo(source, interaction);\n\n    const generatedMapping: ThemedStyleType = this.getGeneratedStyleMapping(context.style, styleInfo);\n\n    if (!generatedMapping) {\n      const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n      const message: string = [\n        `${this.name}: unsupported configuration.`,\n        `Check one of the following prop values ${JSON.stringify(styleInfo, null, 2)}`,\n        `📖 Documentation: ${docRoot}/components/${this.name.toLowerCase()}/api`,\n      ].join('\\n');\n\n      console.warn(message);\n\n      return this.withStyledProps({ ...source, ...this.createDefaultProps() }, context, interaction);\n    }\n\n    const mapping = this.withValidParameters(generatedMapping);\n\n    return {\n      ...source,\n      theme: context.theme,\n      themedStyle: createThemedStyle(mapping, context.theme),\n    };\n  }\n\n  private getGeneratedStyleMapping<P extends StyledComponentProps>(style: ThemeStyleType,\n                                                                   info: StyleInfo): ThemedStyleType {\n\n    return this.safe(style[this.name], (componentStyles: ControlThemedStyleType): ThemedStyleType => {\n      const styleKeys: string[] = Object.keys(componentStyles.styles);\n      const query: string = this.findGeneratedQuery(info, styleKeys);\n\n      return componentStyles.styles[query];\n    });\n  }\n\n  private withValidParameters(mapping: ThemedStyleType): ThemedStyleType {\n    const invalidParameters: string[] = [];\n\n    Object.keys(mapping).forEach((key: string) => {\n      if (!Object.keys(this.meta.parameters).includes(key)) {\n        invalidParameters.push(key);\n        delete mapping[key];\n      }\n    });\n\n    if (invalidParameters.length !== 0) {\n      const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n      const message: string = [\n        `${this.name}: unsupported configuration.`,\n        `Unable to apply ${invalidParameters}`,\n        'There might be an incorrect usage of mapping',\n        `📖 Documentation: ${docRoot}/design-system/custom-component-mapping`,\n      ].join('\\n');\n\n      console.warn(message);\n    }\n\n    return mapping;\n  }\n\n  private getStyleInfo<P extends StyledComponentProps>(props: P, interaction: Interaction[]): StyleInfo {\n    const variantProps: Partial<P> = this.getDerivedVariants(this.meta, props);\n    const stateProps: Partial<P> = this.getDerivedStates(this.meta, props);\n\n    const variants: string[] = Object.keys(variantProps).map((variant: string): string => {\n      return variantProps[variant];\n    });\n\n    const states: string[] = Object.keys(stateProps);\n\n    return {\n      appearance: props.appearance,\n      variants: variants,\n      states: [...states, ...interaction],\n    };\n  }\n\n  private getDefaultAppearance(): string {\n    const matches: string[] = Object.keys(this.meta.appearances).filter((appearance: string): boolean => {\n      return this.meta.appearances[appearance].default === true;\n    });\n\n    return matches[matches.length - 1];\n  }\n\n  private getDefaultVariants(): { [key: string]: any } {\n    return this.transformObject(this.meta.variantGroups, (variants, group: string): string | undefined => {\n      return Object.keys(variants[group]).find((variant: string): boolean => {\n\n        return variants[group][variant].default === true;\n      });\n    });\n  }\n\n  private getDefaultStates(): { [key: string]: any } {\n    return this.transformObject(this.meta.states, (states, state: string): boolean | undefined => {\n      const isDefault: boolean = states[state].default === true;\n\n      return isDefault ? isDefault : undefined;\n    });\n  }\n\n  private getDerivedVariants<P extends StyledComponentProps>(meta: ControlMetaType, props: P): Partial<P> {\n    return this.transformObject(props, (p: P, prop: string): string | undefined => {\n      const isVariant: boolean = Object.keys(meta.variantGroups).includes(prop);\n\n      return isVariant ? p[prop] : undefined;\n    });\n  }\n\n  private getDerivedStates<P extends StyledComponentProps>(meta: ControlMetaType, props: P): Partial<P> {\n    return this.transformObject(props, (p: P, prop: string): boolean => {\n      const isState: boolean = Object.keys(meta.states).includes(prop);\n      const isAssigned: boolean = p[prop] === true;\n\n      return isState && isAssigned;\n    });\n  }\n\n  /**\n   * Iterates throw `value` object keys and fills it values with values provided by `transform` callback\n   * If `transform` returns `undefined`, then appends nothing\n   *\n   * @param value (V extends object) - object to transform\n   * @param transform - object key transformation callback\n   */\n  private transformObject<V extends object>(value: V, transform: (value: V, key: string) => any): Partial<V> {\n    return Object.keys(value).reduce((acc: Partial<V>, key: string): any => {\n      const nextValue: any = transform(value, key);\n\n      return nextValue ? {\n        ...acc,\n        [key]: nextValue,\n      } : acc;\n    }, {});\n  }\n\n  /**\n   * Finds identical keys across `source` keys array\n   *\n   * Example:\n   *\n   * source = ['default.error.small.checked', ...]\n   * info = { appearance: 'default', variants: ['small', 'error'], states: ['checked'] }\n   *\n   * will return ['default', 'error', 'small', 'checked']\n   *\n   * @param info (StyleInfo) - component style info\n   * @param source (string[]) - array of style keys\n   *\n   * @return (string | undefined) - key identical to some of `source` keys if presents\n   */\n  private findGeneratedQuery(info: StyleInfo, source: string[]): string | undefined {\n    const query: string[] = [\n      info.appearance,\n      ...info.variants,\n      ...info.states,\n    ];\n\n    const matches: string[] = source.filter((key: string): boolean => {\n      const keyQuery: string[] = key.split(SEPARATOR_MAPPING_ENTRY);\n\n      return this.compareArrays(query, keyQuery);\n    });\n\n    return matches[0];\n  }\n\n  /**\n   * @param lhs (string[]) - comparable array\n   * @param rhs (string[]) - comparing array\n   *\n   * @return true if all of lhs keys are included in rhs\n   */\n  private compareArrays(lhs: string[], rhs: string[]): boolean {\n    if (lhs.length !== rhs.length) {\n      return false;\n    }\n\n    return lhs.reduce((acc: boolean, current: string): boolean => acc && rhs.includes(current), true);\n  }\n\n  /**\n   * Safely retrieves R value of T object with reducer\n   *\n   * @param value (T | undefined) - unsafe object which should be processed\n   * @param reducer ((T) => R) - `value` processing lambda. Called if `value` is not `undefined`\n   * @param fallback (R) - fallback value to return. Optional\n   *\n   * @return (R | undefined) - object returned by `reducer` if `value` is not `undefined`, `fallback` otherwise\n   **/\n  private safe<T, R>(value: T | undefined, reducer: (value: T) => R, fallback?: R): R | undefined {\n    if (value) {\n      return reducer(value);\n    }\n\n    return fallback;\n  }\n}\n","import React from 'react';\nimport { ThemeStyleType } from '@eva-design/dss';\n\nconst defaultValue: ThemeStyleType = {};\n\nexport const MappingContext: React.Context<ThemeStyleType> = React.createContext(defaultValue);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ThemeType } from './type';\n\nconst defaultValue: ThemeType = {};\n\nexport const ThemeContext: React.Context<ThemeType> = React.createContext(defaultValue);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ThemeStyleType } from '@eva-design/dss';\nimport { StyleConsumerService } from './styleConsumer.service';\nimport {\n  Interaction,\n  StyleType,\n} from './type';\nimport { MappingContext } from '../mapping/mappingContext';\nimport { ThemeContext } from '../theme/themeContext';\nimport { ThemeType } from '../theme/type';\n\ninterface PrivateProps<T> {\n  forwardedRef?: React.Ref<T>;\n}\n\nexport interface StyledComponentProps {\n  appearance?: string;\n  theme?: ThemeType;\n  themedStyle?: StyleType;\n  dispatch?: (interaction: Interaction[]) => void;\n}\n\ninterface State {\n  interaction: Interaction[];\n}\n\nexport interface ContextProps {\n  style: ThemeStyleType;\n  theme: ThemeType;\n}\n\nexport type StyledComponentClass<P> = React.ComponentClass<StyledComponentProps & P>;\n\n/**\n * `styled` is a High Order Function which is used to apply style mapping on component.\n *\n * Requires component to have `styledComponentName` string property which defines\n * corresponding component name in mapping. (e.g 'Button' for Button component).\n * Returns component class which can be used as styled component.\n *\n * @property {string} appearance - Determines style appearance of component. Default is provided by mapping.\n *\n * @property {ThemeType} theme - Determines theme used to style component.\n *\n * @property {StyleType} themedStyle - Determines component style for it's current state.\n *\n * @property {(interaction: Interaction[]) => void} dispatch - Determines function\n * for dispatching current state of component. This is designed to be used as style request function.\n * Calls component re-render if style for requested state differ from current.\n *\n * @param Component - Type: {React.ComponentClass}. Determines class or functional component to be styled.\n *\n * @overview-example Declaring Styled Component\n *\n * ```\n * import React from 'react';\n * import { TouchableOpacity } from 'react-native';\n * import { styled, Interaction } from 'react-native-ui-kitten';\n *\n * class Button extends React.Component {\n *\n *   // Define component name used in `mapping`\n *   static styledComponentName = 'Button';\n *\n *   onPressIn = (e) => {\n *     // Request styles for `active` state and re-render\n *\n *     this.props.dispatch([Interaction.ACTIVE]);\n *\n *     if(this.props.onPressIn) {\n *       this.props.onPressIn(e);\n *     }\n *   };\n *\n *   onPressOut = (e) => {\n *     // Request styles for default state and re-render\n *\n *     this.props.dispatch([]);\n *\n *     if(this.props.onPressOut) {\n *       this.props.onPressOut(e);\n *     }\n *   };\n *\n *   render() {\n *     // Retrieve styles for current state from props (provided with themedStyle prop)\n *     // And apply it with saving priority of `style` prop\n *\n *     const { style, themedStyle, ...restProps } = this.props;\n *\n *     return (\n *       <TouchableOpacity\n *         {...restProps}\n *         style={[themedStyle, style]}\n *         onPressIn={this.onPressIn}\n *         onPressOut={this.onPressOut}\n *       />\n *     );\n *   }\n * }\n *\n * export const StyledButton = styled(Button);\n * ```\n *\n * @overview-example Styled Component Usage\n *\n * ```\n * import React from 'react';\n * import { StyledButton } from './path-to/styledButton.component';\n *\n * export const StyledButtonShowcase = (props) => (\n *   <StyledButton {...props}/>\n * );\n * ```\n */\nexport const styled = <P extends object>(Component: React.ComponentType<P>): StyledComponentClass<P> => {\n\n  // @ts-ignore\n  if (!Component.styledComponentName) {\n    console.warn('Styled components should specify corresponding style name.');\n    return null;\n  }\n\n  type WrappingProps = PrivateProps<WrappedElementInstance> & WrappedProps;\n  type WrappedProps = StyledComponentProps & P;\n  type WrappingElement = React.ReactElement<WrappingProps>;\n  type WrappedElement = React.ReactElement<WrappedProps>;\n  type WrappedElementInstance = React.ReactInstance;\n\n  class Wrapper extends React.Component<WrappingProps, State> {\n\n    public state: State = {\n      interaction: [],\n    };\n\n    private init: boolean = false;\n\n    // Yes. This is not static because it is calculated once we got some meta from style context.\n    private defaultProps: StyledComponentProps;\n    private service: StyleConsumerService;\n\n    private onInit = (context: ContextProps) => {\n\n      // @ts-ignore\n      this.service = new StyleConsumerService(Component.styledComponentName, context);\n      this.defaultProps = this.service.createDefaultProps();\n\n      this.init = true;\n    };\n\n    private onDispatch = (interaction: Interaction[]) => {\n      this.setState({ interaction });\n    };\n\n    private withStyledProps = (source: P, context: ContextProps): WrappedProps => {\n      const { interaction } = this.state;\n\n      const props: WrappingProps = { ...this.defaultProps, ...source };\n\n      return this.service.withStyledProps(props, context, interaction);\n    };\n\n    private renderWrappedElement = (context: ContextProps): WrappedElement => {\n      if (!this.init) {\n        this.onInit(context);\n      }\n\n      const { forwardedRef, ...restProps } = this.props;\n      const props: P & StyledComponentProps = this.withStyledProps(restProps as P, context);\n\n      return (\n        <Component\n          {...props}\n          ref={forwardedRef}\n          dispatch={this.onDispatch}\n        />\n      );\n    };\n\n    public render(): React.ReactNode {\n      const StyledElement = this.renderWrappedElement;\n\n      return (\n        <MappingContext.Consumer>{(styles: ThemeStyleType): WrappedElement => (\n          <ThemeContext.Consumer>{(theme: ThemeType): WrappedElement => (\n            <StyledElement style={styles} theme={theme}/>\n          )}</ThemeContext.Consumer>\n        )}</MappingContext.Consumer>\n      );\n    }\n  }\n\n  const WrappingElement = (props: WrappingProps, ref: React.Ref<WrappedElementInstance>): WrappingElement => {\n    return (\n      // @ts-ignore\n\n      <Wrapper\n        {...props}\n        forwardedRef={ref}\n      />\n    );\n  };\n\n  const ResultComponent = React.forwardRef<WrappedElementInstance, WrappingProps>(WrappingElement);\n\n  ResultComponent.displayName = Component.displayName || Component.name;\n\n  // @ts-ignore\n  hoistNonReactStatics(ResultComponent, Component);\n\n  // @ts-ignore\n  return ResultComponent;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ThemeContext } from './themeContext';\nimport {\n  StyleSheetType,\n  ThemedStyleType,\n  ThemeType,\n} from './type';\nimport { createThemedStyle } from '../style/style.service';\nimport { StyleType } from '@kitten/theme';\n\ninterface PrivateProps<T> {\n  forwardedRef?: React.RefObject<T>;\n}\n\nexport interface ThemedComponentProps {\n  theme?: ThemeType;\n  themedStyle?: ThemedStyleType | undefined;\n}\n\nexport type CreateStylesFunction = (theme: ThemeType) => StyleSheetType;\n\nexport interface Context {\n  theme: ThemeType;\n}\n\nexport type ThemedComponentClass<P> = React.ComponentClass<ThemedComponentProps & P>;\n\n/**\n * `withStyles` is a High Order Function which is used to create themed style for non-styled component.\n * Basically used when need to use theme variable somewhere.\n * Returns component class which can be used as themed component.\n *\n * @property {ThemeType} theme - Determines theme used to style component.\n *\n * @property {StyleType} themedStyle - Determines component style for it's current state.\n *\n * @param Component - Type: {React.ComponentClass}. Determines class of component to be themed.\n *\n * @param createStyles - Type: {(theme: ThemeType) => any}. Determines arrow function used to create styles.\n *\n * @overview-example Declaring Themed Component\n *\n * ```\n * import React from 'react';\n * import { TouchableOpacity } from 'react-native';\n * import { withStyles } from 'react-native-ui-kitten';\n *\n * class Button extends React.Component {\n *\n *   render() {\n *     // Retrieve styles from props (provided with themedStyle prop)\n *     // And apply it with saving priority of `style` prop\n *\n *     const { style, themedStyle, ...restProps } = this.props;\n *\n *     return (\n *       <TouchableOpacity\n *         {...restProps}\n *         style={[themedStyle, style]}\n *       />\n *     );\n *   }\n * }\n *\n * export const ThemedButton = withStyles(Button, (theme) => ({\n *   backgroundColor: theme['color-primary-default'],\n * }));\n * ```\n *\n * @overview-example Themed Component Usage\n *\n * ```\n * import React from 'react';\n * import { ThemedButton } from './path-to/themedButton.component';\n *\n * export const ThemedButtonShowcase = (props) => (\n *   <ThemedButton {...props}/>\n * );\n * ```\n */\nexport const withStyles = <P extends object>(Component: React.ComponentType<P>,\n                                             createStyles?: CreateStylesFunction): ThemedComponentClass<P> => {\n\n  type WrappingProps = PrivateProps<WrappedElementInstance> & WrappedProps;\n  type WrappedProps = ThemedComponentProps & P;\n  type WrappingElement = React.ReactElement<WrappingProps>;\n  type WrappedElement = React.ReactElement<WrappedProps>;\n  type WrappedElementInstance = React.ReactInstance;\n\n  class Wrapper extends React.Component<WrappingProps> {\n\n    private createThemedStyles = (style: ThemedStyleType, theme: ThemeType): ThemedStyleType => {\n      return Object.keys(style).reduce((acc: StyleType, current: string): ThemedStyleType => {\n        return { ...acc, [current]: createThemedStyle(style[current], theme) };\n      }, {});\n    };\n\n    private withThemedProps = (source: P, context: Context): WrappedProps => {\n      const style: ThemedStyleType = createStyles ? createStyles(context.theme) : {};\n\n      return {\n        ...source,\n        theme: context.theme,\n        themedStyle: this.createThemedStyles(style, context.theme),\n      };\n    };\n\n    private renderWrappedElement = (context: Context): WrappedElement => {\n      const { forwardedRef, ...restProps } = this.props;\n      const props: WrappedProps = this.withThemedProps(restProps as P, context);\n\n      return (\n        <Component\n          {...props}\n          ref={forwardedRef}\n        />\n      );\n    };\n\n    public render(): React.ReactNode {\n      const ThemedElement = this.renderWrappedElement;\n\n      return (\n        <ThemeContext.Consumer>{(theme: ThemeType): React.ReactElement<P> => (\n          <ThemedElement theme={theme}/>\n        )}</ThemeContext.Consumer>\n      );\n    }\n  }\n\n  const WrappingElement = (props: WrappingProps, ref: React.Ref<WrappedElementInstance>): WrappingElement => {\n    return (\n      // @ts-ignore\n\n      <Wrapper\n        {...props}\n        forwardedRef={ref}\n      />\n    );\n  };\n\n  const ThemedComponent = React.forwardRef<WrappedElementInstance, WrappingProps>(WrappingElement);\n\n  ThemedComponent.displayName = Component.displayName || Component.name;\n\n  // @ts-ignore\n  hoistNonReactStatics(ThemedComponent, Component);\n\n  // @ts-ignore\n  return ThemedComponent;\n};\n","/**\n * Safely retrieves R value of T object with reducer\n *\n * @param value (T | undefined) - unsafe object which should be processed\n * @param reducer ((T) => R) - `value` processing lambda. Called if `value` is not `undefined`\n *\n * @return (R | undefined) - object returned by `reducer` if `value` is not `undefined`, `undefined` otherwise\n **/\nexport function safe<T, R>(value: T | undefined, reducer: (value: T) => R): R | undefined {\n  if (value) {\n    return reducer(value);\n  }\n  return undefined;\n}\n\n/**\n * Maps 2-dim array to 1-dim\n *\n * @param params (T[][]) - 2-dim array\n *\n * @return 1-dim array\n */\nexport function flatten<T>(params: T[][]): T[] {\n  return [].concat(...params);\n}\n\n/**\n * Removes all duplicates from array\n *\n * @param params (T[]) - array with possible duplicate values\n *\n * @return (T[]) - processed array\n */\nexport function noDuplicates<T>(params: T[]): T[] {\n  return [...new Set(params)];\n}\n\n\n/**\n * Removes null and undefined values from array\n *\n * @param params (T[]) - array with possible null values\n *\n * @return (T[]) - processed array\n */\nexport function noNulls<T>(params: T[]): T[] {\n  return params.filter(Boolean);\n}\n\n/**\n * Returns Object with string keys from array type [string, IndexSignatureBase]\n *\n * @param array like [string, IndexSignatureBase]\n *\n * @return object with string keys and IndexSignatureBase values\n */\nexport function toObject(array: [string, any][]): any {\n  return array.reduce((p, c) => {\n    if (p && p.hasOwnProperty(c[0])) {\n      p[c[0]] = { ...p[c[0]], ...c[1] };\n    } else {\n      p[c[0]] = c[1];\n    }\n    return p;\n  }, {});\n}\n","import {\n  ThemeMappingType,\n  ControlMappingType,\n  AppearanceMappingType,\n  MappingType,\n  StatelessMappingType,\n} from '@eva-design/dss';\nimport { safe } from '../common';\n\nexport function getComponentDefaultAppearance(mapping: ThemeMappingType,\n                                              component: string): string | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string => {\n    const { appearances } = value.meta;\n\n    return Object.keys(appearances).find((appearance: string): boolean => {\n      return appearances[appearance].default === true;\n    });\n  });\n}\n\nexport function getComponentDefaultVariants(mapping: ThemeMappingType,\n                                            component: string): string[] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[] => {\n    const { variantGroups } = value.meta;\n\n    return Object.keys(variantGroups).map((group: string): string => {\n      return Object.keys(variantGroups[group]).find((variant: string): boolean => {\n        return variantGroups[group][variant].default === true;\n      });\n    });\n  });\n}\n\nexport function getComponentDefaultState(mapping: ThemeMappingType,\n                                         component: string): string | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string => {\n    const { states } = value.meta;\n\n    return Object.keys(states).find((state: string): boolean => {\n      return states[state].default === true;\n    });\n  });\n}\n\nexport function getComponentVariantGroups(mapping: ThemeMappingType,\n                                          component: string): string[] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[] => {\n    const { variantGroups } = value.meta;\n\n    return Object.keys(variantGroups);\n  });\n}\n\nexport function getComponentVariants(mapping: ThemeMappingType,\n                                     component: string): string[][] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[][] => {\n    const { variantGroups } = value.meta;\n\n    return Object.keys(variantGroups).map((group: string): string[] => {\n      return Object.keys(variantGroups[group]);\n    });\n  });\n}\n\nexport function getComponentStates(mapping: ThemeMappingType,\n                                   component: string): string[] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[] => {\n    const { states } = value.meta;\n\n    return Object.keys(states);\n  });\n}\n\nexport function getStateAppearanceMapping(mapping: ThemeMappingType,\n                                          component: string,\n                                          appearance: string,\n                                          state: string): StatelessMappingType | undefined {\n\n  const appearanceMapping: MappingType = getAppearanceMapping(mapping, component, appearance);\n\n  return safe(appearanceMapping, (value: MappingType): StatelessMappingType => {\n    return getStateMapping(value, state);\n  });\n}\n\nexport function getStatelessAppearanceMapping(mapping: ThemeMappingType,\n                                              component: string,\n                                              appearance: string): StatelessMappingType | undefined {\n\n  const appearanceMapping: MappingType = getAppearanceMapping(mapping, component, appearance);\n\n  return safe(appearanceMapping, (value: MappingType): StatelessMappingType => {\n    const { state, ...params } = value;\n\n    return params as StatelessMappingType;\n  });\n}\n\nexport function getStateVariantMapping(mapping: ThemeMappingType,\n                                       component: string,\n                                       appearance: string,\n                                       variant: string,\n                                       state: string): MappingType | undefined {\n\n  const variantMapping: MappingType = getVariantMapping(mapping, component, appearance, variant);\n\n  return safe(variantMapping, (value: MappingType): MappingType => {\n    return getStateMapping(value, state);\n  });\n}\n\nexport function getStatelessVariantMapping(mapping: ThemeMappingType,\n                                           component: string,\n                                           appearance: string,\n                                           variant: string): StatelessMappingType | undefined {\n\n  const variantMapping: MappingType = getVariantMapping(mapping, component, appearance, variant);\n\n  return safe(variantMapping, (value: MappingType): StatelessMappingType => {\n    const { state, ...params } = value;\n\n    return params as StatelessMappingType;\n  });\n}\n\nexport function getComponentMapping(mapping: ThemeMappingType,\n                                    component: string): ControlMappingType | undefined {\n\n  return mapping[component];\n}\n\nfunction getAppearance(mapping: ThemeMappingType,\n                       component: string,\n                       appearance: string): AppearanceMappingType | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): AppearanceMappingType => {\n    return value.appearances[appearance];\n  });\n}\n\nfunction getAppearanceMapping(mapping: ThemeMappingType,\n                              component: string,\n                              appearance: string): MappingType | undefined {\n\n  const appearanceConfig: AppearanceMappingType = getAppearance(mapping, component, appearance);\n\n  return safe(appearanceConfig, (value: AppearanceMappingType): MappingType => {\n    return value.mapping;\n  });\n}\n\nfunction getVariantMapping(mapping: ThemeMappingType,\n                           component: string,\n                           appearance: string,\n                           variant: string): MappingType | undefined {\n\n  const appearanceConfig: AppearanceMappingType = getAppearance(mapping, component, appearance);\n\n  return safe(appearanceConfig, (value: AppearanceMappingType): MappingType => {\n    return safe(value.variantGroups, (groupValue): MappingType => {\n\n      const groupName = Object.keys(groupValue).find((group: string) => {\n        return groupValue[group][variant] !== undefined;\n      });\n\n      return safe(groupName, (groupNameValue): MappingType => {\n        return groupValue[groupNameValue][variant];\n      });\n    });\n  });\n}\n\nfunction getStateMapping(mapping: MappingType, state: string): StatelessMappingType | undefined {\n\n  return safe(mapping.state, (value): StatelessMappingType => {\n    return value[state];\n  });\n}\n","import {\n  ThemeMappingType,\n  ControlMappingType,\n  ThemedStyleType,\n  MappingType,\n  StrictTheme,\n  StatelessMappingType,\n  ParameterType,\n} from '@eva-design/dss';\nimport {\n  safe,\n  noNulls,\n  noDuplicates,\n} from '../common';\nimport {\n  getComponentDefaultAppearance,\n  getComponentDefaultVariants,\n  getComponentDefaultState,\n  getStatelessAppearanceMapping,\n  getStatelessVariantMapping,\n  getStateAppearanceMapping,\n  getStateVariantMapping,\n} from '../mapping';\n\nexport const SEPARATOR_MAPPING_ENTRY = '.';\n\n/**\n * Creates style object for variant/list of variants(optional) and its state/list of states(optional)\n *\n * Example\n *\n * appearance = 'outline';\n * variants = ['success', 'large'];\n * state = ['active', 'checked'];\n *\n * a = `default` + `outline`                    - acc appearance (apce) mapping\n *\n * v1 = `success` of `default`                  - `success` variant mapping of `default` apce\n * v2 = `success` of `outline`                  - `success` variant mapping of `outline` apce\n * v3 = `large` of `default`                    - `large` variant mapping of `default` apce\n * v4 = `large` of `outline`                    - `large` variant mapping of `outline` apce\n *\n * s1 = `active` of `default`                   - `active` state mapping of `default` apce\n * s2 = `active` of `outline`                   - `active` state mapping of `outline` apce\n * s3 = `active` of `default success`           - `active` state mapping of `success` variant of `default` apce\n * s4 = `active` of `outline success`           - `active` state mapping of `success` variant of `outline` apce\n * s5 = `active` of `default large`             - `active` state mapping of `large` variant of `default` apce\n * s6 = `active` of `outline large`             - `active` state mapping of `large` variant of `outline` apce\n *\n * s7 = `checked` of `default`                  - `checked` state mapping of `default` apce\n * s8 = `checked` of `outline`                  - `checked` state mapping of `outline` apce\n * s9 = `checked` of `default success`          - `checked` state mapping of `success` variant of `default` apce\n * s10 = `checked` of `outline success`         - `checked` state mapping of `success` variant of `outline` apce\n * s11 = `checked` of `default large`           - `checked` state mapping of `large` variant of `default` apce\n * s12 = `checked` of `outline large`           - `checked` state mapping of `large` variant of `outline` apce\n *\n * s13 = `active.checked` of `default`          - `active.checked` state mapping of `default` apce\n * s14 = `active.checked` of `outline`          - `active.checked` state mapping of `outline` apce\n * s15 = `active.checked` of `default success`  - `active.checked` state mapping of `success` variant of `default` apce\n * s16 = `active.checked` of `outline success`  - `active.checked` state mapping of `success` variant of `outline` apce\n * s17 = `active.checked` of `default large`    - `active.checked` state mapping of `large` variant of `default` apce\n * s18 = `active.checked` of `outline large`    - `active.checked` state mapping of `large` variant of `outline` apce\n *\n * res = a + (v1 + v2 + ... + vn) + (s1 + s2 + ... + sn)\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param appearance: string - appearance applied to component\n * @param variants: string[] - variants applied to component. Default is []\n * @param states: string[] - states in which component is. Default is []\n * @param theme: StrictTheme - theme configuration object. Default is {}\n *\n * @return ThemedStyleType - compiled component styles declared in mappings, mapped to theme values\n */\nexport function createStyle(mapping: ThemeMappingType,\n                            component: string,\n                            appearance: string,\n                            variants: string[] = [],\n                            states: string[] = [],\n                            theme: StrictTheme = {}): ThemedStyleType {\n\n  const normalizedAppearance: string[] = normalizeAppearance(mapping, component, appearance);\n  const normalizedVariants: string[] = normalizeVariants(mapping, component, variants);\n  const normalizedStates: string[] = normalizeStates(mapping, component, states, (state: string): number => {\n    return states.indexOf(state);\n  });\n\n  const appearanceMapping: StatelessMappingType = reduce(normalizedAppearance, apce => {\n    return getStatelessAppearanceMapping(mapping, component, apce);\n  });\n\n  const variantMapping: StatelessMappingType = reduce(normalizedVariants, variant => {\n    return reduce(normalizedAppearance, apce => {\n      return getStatelessVariantMapping(mapping, component, apce, variant);\n    });\n  });\n\n  const stateMapping: StatelessMappingType = reduce(normalizedStates, state => {\n    const appearanceStateMapping = reduce(normalizedAppearance, apce => {\n      return getStateAppearanceMapping(mapping, component, apce, state);\n    });\n\n    const variantStateMapping: StatelessMappingType = reduce(normalizedVariants, variant => {\n      return reduce(normalizedAppearance, apce => {\n        return getStateVariantMapping(mapping, component, apce, variant, state);\n      });\n    });\n\n    return { ...appearanceStateMapping, ...variantStateMapping };\n  });\n\n  const strictlessMapping: StatelessMappingType = {\n    ...appearanceMapping,\n    ...variantMapping,\n    ...stateMapping,\n  };\n\n  return withStrictTokens(strictlessMapping, theme);\n}\n\nexport function createAllStyles(mapping: ThemeMappingType,\n                                component: string,\n                                appearance: string,\n                                variants: string[],\n                                states: string[],\n                                theme: StrictTheme): [string, ThemedStyleType][] {\n\n  const stateless = createStyleEntry(mapping,\n    component,\n    appearance,\n    appearance,\n    '',\n    '',\n    theme,\n  );\n\n  const withStates = states.reduce((acc: [string, ThemedStyleType][], current: string) => {\n    const key = appearance.concat(SEPARATOR_MAPPING_ENTRY, current);\n    const next = createStyleEntry(mapping, component, key, appearance, '', current, theme);\n    return [...acc, next];\n  }, []);\n\n  const withVariants = variants.map(variant => {\n    const key = appearance.concat(SEPARATOR_MAPPING_ENTRY, variant);\n    return createStyleEntry(mapping, component, key, appearance, variant, '', theme);\n  });\n\n  const withVariantStates = variants.reduce((acc: [string, ThemedStyleType][], current: string) => {\n    const next = states.map(state => {\n      const key = appearance.concat(SEPARATOR_MAPPING_ENTRY, current, SEPARATOR_MAPPING_ENTRY, state);\n      return createStyleEntry(mapping, component, key, appearance, current, state, theme);\n    });\n    return [...acc, ...next];\n  }, []);\n\n  return [\n    stateless,\n    ...withStates,\n    ...withVariants,\n    ...withVariantStates,\n  ];\n}\n\nexport function getStyle(mapping: ThemeMappingType,\n                         component: string,\n                         appearance: string,\n                         variants: string[],\n                         states: string[]): ThemedStyleType | undefined {\n\n  return safe(mapping, (themeMapping: ThemeMappingType) => {\n    return safe(themeMapping[component], (componentMapping: ControlMappingType) => {\n\n      const query = findStyleKey(Object.keys(componentMapping), [\n        appearance,\n        ...variants,\n        ...states,\n      ]);\n\n      return componentMapping[query];\n    });\n  });\n}\n\n/**\n * Creates normalized to design system array of component appearances\n *\n * Example:\n *\n * '' => ['default']\n * 'bold' => ['default', 'bold']\n * 'default' => ['default']\n * ...\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param appearance: string - appearance applied to component\n *\n * @return string[] - array of merged appearances\n */\nexport function normalizeAppearance(mapping: ThemeMappingType,\n                                    component: string,\n                                    appearance: string): string[] {\n\n  const defaultAppearance: string = getComponentDefaultAppearance(mapping, component);\n\n  return normalize([defaultAppearance, appearance]);\n}\n\n/**\n * Creates normalized to design system array of component variants\n *\n * Example:\n *\n * [''] => ['default0', 'default1']\n * ['success'] => ['default0', 'default1', 'success']\n * ['default0', 'tiny'] => ['default0', 'default1', 'tiny']\n * ...\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param variants: string[] - variants applied to component\n *\n * @return string[] - array of merged variants\n */\nexport function normalizeVariants(mapping: ThemeMappingType,\n                                  component: string,\n                                  variants: string[]): string[] {\n\n  const defaultVariants: string[] = getComponentDefaultVariants(mapping, component);\n\n  return normalize([...defaultVariants, ...variants]);\n}\n\n/**\n * Creates normalized to design system array of component states\n *\n * Example:\n *\n * [''] => ['default']\n * ['active', 'checked'] => [\n *                           'default',\n *                           'active',\n *                           'default.active',\n *                           'checked',\n *                           'default.active.checked'\n *                          ]\n * ...\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param states: string[] - states in which component is\n * @param stateWeight: (state: string) => number - state weight calculation lambda\n * @param separator - state separator. `.` in example\n *\n * @return string[] - array of merged states\n */\nexport function normalizeStates(mapping: ThemeMappingType,\n                                component: string,\n                                states: string[],\n                                stateWeight: (state: string) => number,\n                                separator: string = SEPARATOR_MAPPING_ENTRY): string[] {\n\n  const defaultState: string = getComponentDefaultState(mapping, component);\n\n  const preprocess: string[] = normalize([defaultState, ...states]);\n  if (preprocess.length === 0) {\n    return preprocess;\n  }\n\n  const variations = createStateVariations([...preprocess], separator, []);\n\n  return variations.sort((lhs: string, rhs: string) => {\n    const lhsWeight = getStateVariationWeight(lhs, separator, stateWeight);\n    const rhsWeight = getStateVariationWeight(rhs, separator, stateWeight);\n    return lhsWeight - rhsWeight;\n  });\n}\n\nfunction createStateVariations(states: string[], separator: string, result: string[] = []): string[] {\n  if (states.length === 0) {\n    return result;\n  }\n\n  const next = states.reduce((acc: string[], current: string) => {\n    const nextItem = acc.map(value => value.concat(separator, current));\n    return [...acc, ...nextItem];\n  }, [states.shift()]);\n\n  return createStateVariations(states, separator, [...result, ...next]);\n}\n\nfunction withStrictTokens(mapping: StatelessMappingType, theme: StrictTheme): StatelessMappingType {\n  return Object.keys(mapping).reduce((acc: StatelessMappingType, next: string): StatelessMappingType => {\n    const currentToken: ParameterType = mapping[next];\n    const nextToken: ParameterType = theme[currentToken] || currentToken;\n\n    return { ...acc, [next]: nextToken };\n  }, {});\n}\n\nfunction getStateVariationWeight(state: string,\n                                 separator: string,\n                                 stateWeight: (state: string) => number): number {\n\n  const parts = state.split(separator);\n  return parts.reduce((acc: number, current: string): number => {\n    return acc + stateWeight(current) + parts.length;\n  }, 0);\n}\n\n/**\n * Finds identical keys across `source` keys array\n *\n * Example:\n *\n * source = ['default.error.small.checked', ...]\n * query = ['default', 'small', 'error', 'checked']\n *\n * will return 'default.error.small.checked'\n *\n * @param source (string[]) - array of style keys\n * @param query (string[]) - array of key parts to search\n *\n * @return (string | undefined) - key identical to some of `source` keys if presents\n */\nexport function findStyleKey(source: string[], query: string[]): string | undefined {\n\n  const partialKeys: string[][] = source.map((key: string) => {\n    return key.split(SEPARATOR_MAPPING_ENTRY);\n  });\n\n  const result: string[][] = partialKeys.filter((partial: string[]) => {\n    return compareArrays(query, partial);\n  });\n\n  return safe(result[0], (value: string[]) => {\n    return value.join(SEPARATOR_MAPPING_ENTRY);\n  });\n}\n\nfunction createStyleEntry(mapping: ThemeMappingType,\n                          component: string,\n                          key: string,\n                          appearance: string,\n                          variant: string = '',\n                          state: string = '',\n                          theme: StrictTheme = {}): [string, ThemedStyleType] {\n\n  const value = createStyle(\n    mapping,\n    component,\n    appearance,\n    variant.split(SEPARATOR_MAPPING_ENTRY),\n    state.split(SEPARATOR_MAPPING_ENTRY),\n    theme,\n  );\n\n  return [key, value];\n}\n\nfunction normalize(params: string[]): string[] {\n  return noNulls(noDuplicates(params));\n}\n\nfunction compareArrays(lhs: string[], rhs: string[]): boolean {\n  const isEqualLength = lhs && rhs && lhs.length === rhs.length;\n  if (!isEqualLength) {\n    return false;\n  }\n\n  return lhs.reduce((acc: boolean, next: string): boolean => acc && rhs.includes(next), true);\n}\n\nfunction reduce(items: string[], next: (item: string) => any): any {\n  return items.reduce((acc, current) => ({ ...acc, ...next(current) }), {});\n}\n","import {\n  ThemeMappingType,\n  ControlMappingType,\n} from '@eva-design/dss';\nimport { Processor } from '../processor';\nimport {\n  getComponentVariants,\n  getComponentStates,\n  SEPARATOR_MAPPING_ENTRY,\n} from '../../service';\n\nexport interface MappingMetaType {\n  name: string;\n  appearance: string;\n  variants: string[];\n  states: string[];\n}\n\nexport class MappingProcessor implements Processor<ThemeMappingType, MappingMetaType[]> {\n\n  public process(params: ThemeMappingType): MappingMetaType[] {\n    return Object.keys(params).reduce((acc: MappingMetaType[], component: string) => {\n      return [\n        ...acc,\n        ...this.getComponentMappingMeta(params, component),\n      ];\n    }, []);\n  }\n\n  private getComponentMappingMeta(mapping: ThemeMappingType, component: string): MappingMetaType[] {\n    const componentMapping: ControlMappingType = mapping[component];\n\n    return Object.keys(componentMapping.appearances).map((appearance: string): MappingMetaType => {\n      return {\n        name: component,\n        appearance: appearance,\n        variants: this.getComponentVariants(mapping, component),\n        states: this.getComponentStates(mapping, component),\n      };\n    });\n  }\n\n  private getComponentVariants(mapping: ThemeMappingType, component: string): string[] {\n    const variants: string[][] = getComponentVariants(mapping, component);\n\n    return this.concatComponentVariants([...variants]);\n  }\n\n  private getComponentStates(mapping: ThemeMappingType, component: string): string[] {\n    const states: string[] = getComponentStates(mapping, component);\n\n    return this.concatComponentStates([...states]);\n  }\n\n  private concatComponentVariants(variants: string[][], result: string[] = []): string[] {\n    if (variants.length === 0) {\n      return result;\n    }\n\n    const concat = variants.reduce((acc: string[], current: string[]) => {\n      return [...acc, ...this.concatVariantGroups(acc, current)];\n    }, variants.shift());\n\n    return this.concatComponentVariants(variants, [...result, ...concat]);\n  }\n\n  private concatVariantGroups(lhs: string[], rhs: string[]): string[] {\n    return lhs.reduce((acc: string[], lhsValue: string) => {\n      const concat = rhs.map(rhsValue => {\n        return lhsValue.concat(SEPARATOR_MAPPING_ENTRY, rhsValue);\n      });\n      return [...acc, ...concat];\n    }, []);\n  }\n\n  private concatComponentStates(states: string[], result: string[] = []): string[] {\n    if (states.length === 0) {\n      return result;\n    }\n\n    const concat = states.reduce((acc: string[], current: string) => {\n      const next = acc.map(value => value.concat(SEPARATOR_MAPPING_ENTRY, current));\n      return [...acc, ...next];\n    }, [states.shift()]);\n\n    return this.concatComponentStates(states, [...result, ...concat]);\n  }\n}\n","import {\n  ThemeStyleType,\n  ThemeMappingType,\n  StrictTheme,\n  ThemedStyleType,\n  ControlThemedStyleType,\n} from '@eva-design/dss';\nimport { MappingMetaType } from '../mapping/mappingProcessor';\nimport { Processor } from '../processor';\nimport {\n  createAllStyles,\n  toObject,\n} from '../../service';\n\nexport interface MappingProcessorParamsType {\n  mapping: ThemeMappingType;\n  meta: MappingMetaType[];\n  theme: StrictTheme;\n}\n\ninterface NoMetaThemeStyleType {\n  [key: string]: {\n    [key: string]: ThemedStyleType,\n  };\n}\n\nexport class MetaProcessor implements Processor<MappingProcessorParamsType, ThemeStyleType> {\n\n  public process(params: MappingProcessorParamsType): ThemeStyleType {\n    const { mapping, meta, theme } = params;\n\n    const entries = meta.reduce((acc: ThemeStyleType, controlMeta: MappingMetaType) => {\n      const { name, appearance, variants, states } = controlMeta;\n\n      const nextAppearanceEntries = createAllStyles(mapping, name, appearance, variants, states, theme);\n      const prevAppearanceStyles = acc[name];\n      const nextAppearanceStyles = toObject(nextAppearanceEntries);\n\n      return { ...acc, [name]: { ...prevAppearanceStyles, ...nextAppearanceStyles } };\n    }, {});\n\n    return this.withControlMeta(mapping, entries);\n  }\n\n  private withControlMeta(mapping: ThemeMappingType, style: NoMetaThemeStyleType): ThemeStyleType {\n    return Object.keys(style).reduce((acc: ThemeStyleType, control: string) => {\n      const controlEntry: ControlThemedStyleType = {\n        meta: mapping[control].meta,\n        styles: style[control],\n      };\n\n      return { ...acc, [control]: controlEntry };\n    }, {});\n  }\n}\n","import { Processor } from '../processor';\nimport {\n  MappingProcessor,\n  MappingMetaType,\n} from '../mapping/mappingProcessor';\nimport { MetaProcessor } from '../meta/metaProcessor';\nimport {\n  SchemaType,\n  ThemeStyleType,\n} from '@eva-design/dss';\n\nexport class SchemaProcessor implements Processor<SchemaType, ThemeStyleType> {\n\n  private mappingProcessor: MappingProcessor = new MappingProcessor();\n  private metaProcessor: MetaProcessor = new MetaProcessor();\n\n  public process(params: SchemaType): ThemeStyleType {\n    const { components: themeMapping, strict: strictTheme } = params;\n\n    const meta: MappingMetaType[] = this.mappingProcessor.process(themeMapping);\n\n    return this.metaProcessor.process({\n      mapping: themeMapping,\n      meta: meta,\n      theme: strictTheme,\n    });\n  }\n}\n","import React from 'react';\nimport { ThemeStyleType } from '@eva-design/dss';\nimport { MappingContext } from './mappingContext';\n\nexport interface MappingProviderProps {\n  styles: ThemeStyleType;\n  children?: React.ReactNode;\n}\n\nexport class MappingProvider extends React.PureComponent<MappingProviderProps> {\n\n  public render(): React.ReactNode {\n    const { styles, children } = this.props;\n\n    return (\n      <MappingContext.Provider\n        value={styles}>\n        {children}\n      </MappingContext.Provider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ThemeContext } from './themeContext';\nimport { ThemeType } from './type';\n\nexport interface ThemeProviderProps {\n  theme: ThemeType;\n  children?: React.ReactNode;\n}\n\nexport class ThemeProvider extends React.PureComponent<ThemeProviderProps> {\n\n  public render(): React.ReactNode {\n    const { theme, children } = this.props;\n\n    return (\n      <ThemeContext.Provider\n        value={theme}>\n        {children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  MappingProvider,\n  MappingProviderProps,\n} from '../mapping/mappingProvider.component';\nimport {\n  ThemeProvider,\n  ThemeProviderProps,\n} from '../theme/themeProvider.component';\n\nexport type StyleProviderProps = MappingProviderProps & ThemeProviderProps;\n\nexport class StyleProvider extends React.PureComponent<StyleProviderProps> {\n\n  public render(): React.ReactNode {\n    const { styles, theme, children } = this.props;\n\n    return (\n      <MappingProvider styles={styles}>\n        <ThemeProvider theme={theme}>\n          {children}\n        </ThemeProvider>\n      </MappingProvider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\n\ntype ChildElement = React.ReactElement<any>;\ntype ChildrenProp = ChildElement | ChildElement[];\n\ninterface ComponentProps {\n  visible: boolean;\n  children: ChildrenProp;\n  allowBackdrop: boolean;\n  onBackdropPress: () => void;\n}\n\nexport type ModalResolverProps = ViewProps & ComponentProps;\n\nexport class ModalResolver extends React.Component<ModalResolverProps> {\n\n  static defaultProps: Partial<ModalResolverProps> = {\n    visible: false,\n  };\n\n  private onBackdropPress = (): void => {\n    const { allowBackdrop, onBackdropPress } = this.props;\n\n    if (allowBackdrop) {\n      onBackdropPress();\n    }\n  };\n\n  private onStartShouldSetResponder = (): boolean => {\n    return true;\n  };\n\n  private onResponderRelease = (): void => {\n    return;\n  };\n\n  private onStartShouldSetResponderCapture = (): boolean => {\n    return false;\n  };\n\n  private renderComponentChild = (source: React.ReactElement<any>): React.ReactElement<any> => {\n    return React.cloneElement(source, {\n      style: [source.props.style, this.props.style],\n    });\n  };\n\n  private renderComponentChildren = (source: React.ReactNode): React.ReactElement<any>[] => {\n    return React.Children.map(source, this.renderComponentChild);\n  };\n\n  private renderWithBackDrop = (component: React.ReactElement<ViewProps>):\n    React.ReactElement<TouchableOpacityProps> => {\n\n    return (\n      <TouchableOpacity\n        style={styles.container}\n        onPress={this.onBackdropPress}\n        activeOpacity={1}>\n        {component}\n      </TouchableOpacity>\n    );\n  };\n\n  private renderWithoutBackDrop = (component: React.ReactElement<ViewProps>): React.ReactElement<ViewProps> => {\n    return (\n      <View style={styles.notVisibleWrapper}>\n        <View\n          style={styles.container}\n          pointerEvents='none'/>\n        {component}\n      </View>\n    );\n  };\n\n  private renderComponent = (): React.ReactElement<TouchableOpacityProps | ViewProps> => {\n    const { children, allowBackdrop, ...derivedProps } = this.props;\n    const componentChildren: React.ReactElement<any>[] = this.renderComponentChildren(children);\n\n    const dialog: React.ReactElement<ViewProps> =\n      <View\n        {...derivedProps}\n        style={styles.contentWrapper}\n        onStartShouldSetResponder={this.onStartShouldSetResponder}\n        onResponderRelease={this.onResponderRelease}\n        onStartShouldSetResponderCapture={this.onStartShouldSetResponderCapture}\n        pointerEvents='box-none'>\n        {componentChildren}\n      </View>;\n\n    return allowBackdrop ?\n      this.renderWithBackDrop(dialog) : this.renderWithoutBackDrop(dialog);\n  };\n\n  public render(): React.ReactElement<ViewProps | TouchableOpacityProps> | null {\n    return this.props.visible ? this.renderComponent() : null;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: StyleSheet.absoluteFillObject,\n  notVisibleWrapper: {\n    position: 'absolute',\n    width: 0,\n    height: 0,\n  },\n  contentWrapper: {\n    alignSelf: 'flex-start',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ModalPresentingBased } from '../../ui/support/typings';\n\n/**\n * Singleton service designed to manage modal components.\n *\n * @type ModalServiceType\n *\n * @method {(element: React.ReactElement<ModalPresentingBased>, config: ModalPresentingConfig) => string} show -\n * Shows component in a modal window. Returns its id.\n *\n * @method {(identifier: string) => string} hide - Hides component from a modal window and returns empty string.\n *\n * @method {(identifier: string, children: React.ReactNode) => void} update - Updates component from a modal window.\n *\n * @example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { Layout, Button, Text, ModalService } from 'react-native-ui-kitten';\n *\n * export const ModalServiceShowcase = () => {\n *\n *   const modalID = '';\n *\n *   const showModal = () => {\n *     const contentElement = this.renderModalContentElement();\n *     this.modalID = ModalService.show(contentElement, { allowBackdrop: true, onBackdropPress: this.hideModal });\n *   };\n *\n *   const hideModal = () => {\n *     ModalService.hide(this.modalID);\n *   };\n *\n *   const renderModalContentElement = () => {\n *     return (\n *       <Layout>\n *         <Text>Hi, I'm modal!</Text>\n *       </Layout>\n *     );\n *   };\n *\n *   return (\n *     <Layout>\n *       <Button onPress={showModal}>SHOW MODAL</Button>\n *       <Button onPress={hideModal}>HIDE MODAL</Button>\n *     </Layout>\n *   );\n * }\n * ```\n */\nclass ModalServiceType {\n\n  panel: ModalPresenting | null = null;\n\n  public mount(panel: ModalPresenting | null): void {\n    this.panel = panel;\n  }\n\n  public unmount(): void {\n    this.panel = null;\n  }\n\n  public show(element: React.ReactElement<ModalPresentingBased>,\n              config: ModalPresentingConfig): string {\n\n    if (this.panel) {\n      return this.panel.show(element, config);\n    }\n  }\n\n  public update(identifier: string, children: React.ReactNode): void {\n    if (this.panel) {\n      this.panel.update(identifier, children);\n    }\n  }\n\n  public hide(identifier: string): string {\n    if (this.panel) {\n      return this.panel.hide(identifier);\n    }\n  }\n}\n\nexport interface ModalPresentingConfig {\n  allowBackdrop: boolean;\n  onBackdropPress: () => void;\n}\n\nexport interface ModalPresenting {\n  show(element: React.ReactElement<ModalPresentingBased>,\n       config: ModalPresentingConfig): string;\n\n  hide(identifier: string): string;\n\n  update(identifier: string, children: React.ReactNode): void;\n}\n\nexport const ModalService = new ModalServiceType();\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  StyleSheet,\n  ViewProps,\n} from 'react-native';\nimport {\n  ModalResolver,\n  ModalResolverProps,\n} from './modalResolver.component';\nimport {\n  ModalService,\n  ModalPresenting,\n  ModalPresentingConfig,\n} from './modal.service';\nimport { ModalPresentingBased } from '../../ui/support/typings';\n\ninterface ModalPanelChild extends ModalPresentingConfig {\n  element: React.ReactElement<ModalPresentingBased>;\n}\n\nexport interface ModalPanelProps {\n  children: React.ReactNode;\n}\n\ninterface ModalPanelState {\n  components: Map<string, ModalPanelChild>;\n}\n\nexport class ModalPanel extends React.Component<ModalPanelProps, ModalPanelState> implements ModalPresenting {\n\n  public state: ModalPanelState = {\n    components: new Map(),\n  };\n\n  public componentDidMount(): void {\n    ModalService.mount(this);\n  }\n\n  public componentWillUnmount(): void {\n    ModalService.unmount();\n  }\n\n  public hide = (identifier: string): string => {\n    const components: Map<string, ModalPanelChild> = this.state.components;\n    components.delete(identifier);\n    this.setState({ components });\n    return '';\n  };\n\n  public show(element: React.ReactElement<ModalPresentingBased>,\n              config: ModalPresentingConfig): string {\n\n    const key: string = this.generateUniqueComponentKey();\n    const components: Map<string, ModalPanelChild> = this.state.components\n      .set(key, { ...config, element });\n\n    this.setState({ components });\n\n    return key;\n  }\n\n  public update(identifier: string, children: React.ReactNode): void {\n    const panelChild: ModalPanelChild = this.state.components.get(identifier);\n    const childElement: React.ReactElement<ModalPresentingBased> = panelChild.element;\n\n    panelChild.element = React.cloneElement(childElement, {\n      children: children,\n    });\n\n    const components: Map<string, ModalPanelChild> = this.state.components;\n    components.delete(identifier);\n    components.set(identifier, panelChild);\n    this.setState({ components });\n  }\n\n  private generateUniqueComponentKey = (): string => {\n    return Math.random().toString(36).substring(2);\n  };\n\n  private areThereAnyComponents = (): boolean => {\n    return this.state.components && this.state.components.size !== 0;\n  };\n\n  private renderModal = (config: ModalPanelChild, index: number): React.ReactElement<ModalResolverProps> => {\n    return (\n      <ModalResolver\n        {...config.element.props}\n        visible={true}\n        key={index}\n        allowBackdrop={config.allowBackdrop}\n        onBackdropPress={config.onBackdropPress}>\n        {config.element}\n      </ModalResolver>\n    );\n  };\n\n  private renderModals = (): React.ReactElement<ModalResolverProps>[] => {\n    return Array.from(this.state.components.values()).map(this.renderModal);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    return (\n      <View style={styles.container}>\n        {this.props.children}\n        {this.areThereAnyComponents() && this.renderModals()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","export interface StyleType {\n  [key: string]: any;\n}\n\nexport enum Interaction {\n  ACTIVE = 'active',\n  FOCUSED = 'focused',\n  INDETERMINATE = 'indeterminate',\n  VISIBLE = 'visible',\n}\n\nexport enum State {\n  CHECKED = 'checked',\n  SELECTED = 'selected',\n  DISABLED = 'disabled',\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport merge from 'lodash.merge';\nimport { SchemaProcessor } from '@eva-design/processor';\nimport {\n  CustomSchemaType,\n  SchemaType,\n  ThemeStyleType,\n} from '@eva-design/dss';\nimport { StyleProvider } from '../style/styleProvider.component';\nimport { ThemeProviderProps } from '../theme/themeProvider.component';\nimport { ModalPanel } from '../modal/modalPanel.component';\nimport { ThemeType } from '../theme/type';\n\ninterface ComponentProps {\n  mapping: SchemaType;\n  customMapping?: CustomSchemaType;\n}\n\nexport type ApplicationProviderProps = ComponentProps & ThemeProviderProps;\nexport type ApplicationProviderElement = React.ReactElement<ApplicationProviderProps>;\n\ninterface State {\n  styles: ThemeStyleType;\n}\n\n/**\n * `ApplicationProvider` component is designed to be a root of the application.\n *\n * This does basically two things:\n * - Provides styles for basic components;\n * - Renders modal window which is used to be common for all elements presented as modal;\n *\n * @extends React.Component\n *\n * @property {SchemaType} mapping - Determines the mapping for basic components.\n * This is designed to be provided by developers team and can be imported from npm package (e.g. `@eva-design/eva`).\n *\n * @property {CustomSchemaType} customMapping - Determines the customization mapping.\n * This is merged with `mapping` property and designed to be used components customization.\n *\n * @property {ThemeType} theme - Determines the theme for basic components.\n * This is designed to be provided by developers team and can be imported from npm package (e.g. `@eva-design/eva`).\n *\n * @property {React.ReactNode} children - Determines application root component.\n *\n * @property ThemeProviderProps\n *\n * @overview-example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { mapping, light as lightTheme } from '@eva-design/eva';\n * import { ApplicationProvider, Layout, Text } from 'react-native-ui-kitten';\n *\n * export default class App extends React.Component {\n *\n *   render() {\n *     return (\n *       <ApplicationProvider\n *         mapping={mapping}\n *         theme={lightTheme}>\n *         <Layout style={{ flex: 1 }}>\n *           <Text>Welcome to UI Kitten</Text>\n *         </Layout>\n *       </ApplicationProvider>\n *     );\n *   }\n * }\n * ```\n */\nexport class ApplicationProvider extends React.Component<ApplicationProviderProps, State> {\n\n  private schemaProcessor: SchemaProcessor = new SchemaProcessor();\n\n  constructor(props: ApplicationProviderProps) {\n    super(props);\n    const { mapping, customMapping, theme } = this.props;\n\n    const styles: ThemeStyleType = this.createStyles(mapping, customMapping);\n\n    this.state = { styles };\n  }\n\n  private createStyles = (mapping: SchemaType, custom: CustomSchemaType): ThemeStyleType => {\n    const customizedMapping: SchemaType = merge({}, mapping, custom);\n\n    return this.schemaProcessor.process(customizedMapping);\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <StyleProvider\n        theme={this.props.theme}\n        styles={this.state.styles}>\n        <ModalPanel>\n          {this.props.children}\n        </ModalPanel>\n      </StyleProvider>\n    );\n  }\n}\n","import { Animated } from 'react-native';\n\nexport const DEFAULT_CONFIG: AnimationConfig = {\n  cycles: 1,\n  useNativeDriver: true,\n};\n\n/**\n * @property cycles - number of animation cycles. -1 for infinite\n */\nexport interface AnimationConfig extends Animated.AnimationConfig {\n  cycles?: number;\n}\n\nexport abstract class Animation<C extends AnimationConfig, R> {\n\n  protected abstract animation: Animated.CompositeAnimation;\n  protected counter: number = 0;\n  protected endCallback: Animated.EndCallback;\n  protected running: boolean = false;\n  protected config: C;\n\n  public abstract toProps(): R;\n\n  constructor(config?: C) {\n    this.config = {\n      ...DEFAULT_CONFIG,\n      ...config,\n    };\n  }\n\n  public start(callback?: Animated.EndCallback) {\n    this.endCallback = callback;\n    this.running = true;\n\n    this.animation.start(this.onAnimationEnd);\n  }\n\n  public stop() {\n    this.running = false;\n\n    this.animation.stop();\n  }\n\n  public release() {\n    this.stop();\n  }\n\n  protected onAnimationEnd = (result: Animated.EndResult) => {\n    this.counter += 1;\n    if (this.counter === this.config.cycles) {\n      this.stop();\n    }\n    if (this.running) {\n      this.start(this.endCallback);\n    }\n    if (!this.running) {\n      this.counter = 0;\n      this.endCallback && this.endCallback(result);\n      this.endCallback = null;\n    }\n  };\n}\n","import {\n  Animated,\n  Easing,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: PulseAnimationConfig = {\n  start: 1.0,\n  end: 1.25,\n  easing: Easing.linear,\n  duration: 500,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface PulseAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  end?: number;\n}\n\nexport class PulseAnimation extends Animation<PulseAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, end, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: end,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: start,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  constructor(config?: PulseAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ scale: this.value }],\n      },\n    };\n  }\n}\n","import {\n  Animated,\n  Easing,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: ShakeAnimationConfig = {\n  start: 0.0,\n  offset: 2.5,\n  easing: Easing.linear,\n  duration: 25,\n  cycles: 8,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface ShakeAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  offset?: number;\n}\n\nexport class ShakeAnimation extends Animation<ShakeAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, offset, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: this.counter % 2 !== 0 ? -offset : offset,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: this.counter % 2 !== 0 ? offset : -offset,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  constructor(config?: ShakeAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ translateX: this.value }],\n      },\n    };\n  }\n}\n","import {\n  Animated,\n  Easing,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: ZoomAnimationConfig = {\n  start: 1.0,\n  end: 0.5,\n  easing: Easing.linear,\n  duration: 500,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface ZoomAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  end?: number;\n}\n\nexport class ZoomAnimation extends Animation<ZoomAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, end, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: end,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: start,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  constructor(config?: ZoomAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ scale: this.value }],\n      },\n    };\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Image,\n  ImageProps,\n  ImageStyle,\n  StyleSheet,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\n\ninterface ComponentProps {\n  shape?: string;\n  size?: string;\n}\n\nexport type AvatarProps = StyledComponentProps & ImageProps & ComponentProps;\nexport type AvatarElement = React.ReactElement<AvatarProps>;\n\n/**\n * `Avatar` is a styled `Image` component.\n *\n * @extends React.Component\n *\n * @property {string} shape - Determines the shape of the component.\n * Can be `round`, `rounded` or `square`.\n * Default is `round`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `giant`, `large`, `medium`, `small`, or `tiny`.\n * Default is `medium`.\n *\n * @property ImageProps\n *\n * @property StyledComponentProps\n *\n * @overview-example AvatarSimpleUsage\n *\n * @overview-example AvatarSize\n *\n * @overview-example AvatarShape\n *\n * @example AvatarRemoteImages\n *\n * @example AvatarInlineStyling\n */\nexport class AvatarComponent extends React.Component<AvatarProps> {\n\n  static styledComponentName: string = 'Avatar';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { roundCoefficient, ...containerParameters } = source;\n\n    // @ts-ignore: avoid checking `containerParameters`\n    const baseStyle: ImageStyle = StyleSheet.flatten([\n      containerParameters,\n      this.props.style,\n    ]);\n\n    // @ts-ignore: rhs operator is restricted to be number\n    const borderRadius: number = roundCoefficient * baseStyle.height;\n\n    return {\n      borderRadius,\n      ...baseStyle,\n    };\n  };\n\n  public render(): React.ReactElement<ImageProps> {\n    const { themedStyle, ...restProps } = this.props;\n    const componentStyle: ImageStyle = this.getComponentStyle(themedStyle);\n\n    return (\n      <Image\n        {...restProps}\n        style={componentStyle}\n      />\n    );\n  }\n}\n\nexport const Avatar = styled<AvatarProps>(AvatarComponent);\n","import React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\n\nexport type ArrowProps = ViewProps;\nexport type ArrowElement = React.ReactElement<ArrowProps>;\n\nexport class Arrow extends React.Component<ArrowProps> {\n\n  private getComponentStyle = (source: StyleProp<ViewStyle>): StyleType => {\n    const flatStyle: ViewStyle = StyleSheet.flatten(source);\n\n    return {\n      container: {\n        // @ts-ignore: `width` is restricted to be a number\n        borderLeftWidth: flatStyle.width,\n        // @ts-ignore: `width` is restricted to be a number\n        borderRightWidth: flatStyle.width,\n        // @ts-ignore: `height` is restricted to be a number\n        borderBottomWidth: flatStyle.height,\n        borderBottomColor: flatStyle.backgroundColor,\n        borderLeftColor: 'transparent',\n        borderRightColor: 'transparent',\n        backgroundColor: 'transparent',\n      },\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, ...props } = this.props;\n    const componentStyle = this.getComponentStyle(style);\n\n    return (\n      <View\n        {...props}\n        style={[style, styles.container, componentStyle.container]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n","import { StyleType } from '@kitten/theme';\n\nexport interface Props {\n  [key: string]: any;\n}\n\nexport interface RestProps {\n  rest?: Partial<Props>;\n}\n\nexport type AllOfProps = Partial<Props>;\n\nexport type AllWithRestProps = Partial<Props> & RestProps;\n\n/**\n * Retrieves all props included in `from` array\n *\n * @param source (Props) - source object\n * @param from (string[]) - array of keys needed to retrieve from `source`\n *\n * @return (Partial<Props>) - object with keys contained in `from` array\n */\nexport function all(source: Props | undefined, from: string[]): AllOfProps {\n  if (!source) {\n    return {};\n  }\n\n  return from.reduce((acc: Partial<AllOfProps>, prop: string): Partial<AllOfProps> => {\n    return { ...acc, [prop]: source[prop] };\n  }, {});\n}\n\n/**\n * Retrieves all props included in `from` array, rest props includes in under the `rest` key\n */\nexport function allWithRest(source: Props | undefined, from: string[]): AllWithRestProps {\n  if (!source) {\n    return { rest: {} };\n  }\n\n  return Object.keys(source).reduce((acc: Partial<AllWithRestProps>, prop: string): Partial<AllWithRestProps> => {\n    const { rest, ...allOf } = acc;\n\n    if (from.includes(prop)) {\n      return { ...allOf, [prop]: source[prop], rest };\n    }\n\n    return { ...allOf, rest: { ...rest, [prop]: source[prop] } };\n  }, {});\n}\n\n/**\n * Returns all styles with prefix\n *\n * @param {StyleType} source - Eva Styles\n * @param {string} key - prefix\n *\n * @return {StyleType} - all styles with prefix\n */\nexport function allWithPrefix(source: StyleType, key: string): StyleType {\n  return Object.keys(source)\n    .filter((styleName: string) => styleName.includes(key))\n    .reduce((obj: StyleType, styleKey: string) => {\n      return {\n        ...obj,\n        [styleKey]: source[styleKey],\n      };\n    }, {});\n}\n","const FLEX_PREFIX: string = 'flex';\nconst FLEX_ROW_PREFIX: string = 'row';\nconst FLEX_WRAP_PREFIX: string = 'wrap';\nconst FLEX_START_PREFIX: string = 'start';\nconst FLEX_END_PREFIX: string = 'end';\nconst FLEX_REVERSE_PREFIX: string = 'reverse';\n\n/**\n * Works with FlexBox style properties that starts with `flex` and ends with `-start` or `-end`\n *\n * E.g justifyContent: flex-start\n */\nconst FlexStartEndMapper: I18nLayoutFlexMapper<string> = {\n  toI18n(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(FLEX_END_PREFIX);\n\n    if (isReverse) {\n      return `${FLEX_PREFIX}-${FLEX_START_PREFIX}`;\n    }\n\n    return `${FLEX_PREFIX}-${FLEX_END_PREFIX}`;\n  },\n};\n\n/**\n * Works with FlexBox style properties that starts with `row` and optionally ends with `-reverse`\n *\n * E.g flexDirection: row-reverse\n */\nconst FlexRowMapper: I18nLayoutFlexMapper<string> = {\n  toI18n(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_ROW_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(FLEX_REVERSE_PREFIX);\n\n    if (isReverse) {\n      return FLEX_ROW_PREFIX;\n    }\n\n    return `${FLEX_ROW_PREFIX}-${FLEX_REVERSE_PREFIX}`;\n  },\n};\n\n/**\n * Works with FlexBox style properties that starts with `wrap` and optionally ends with `-reverse`\n *\n * E.g flexWrap: wrap-reverse\n */\nconst FlexWrapMapper: I18nLayoutFlexMapper<string> = {\n  toI18n(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_WRAP_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(`-${FLEX_REVERSE_PREFIX}`);\n\n    if (isReverse) {\n      return FLEX_WRAP_PREFIX;\n    }\n\n    return `${FLEX_WRAP_PREFIX}-${FLEX_REVERSE_PREFIX}`;\n  },\n};\n\n/**\n * Matches FlexBox style properties that can affect on Layout depending on LTR/RTL mode corresponding Mappers\n */\nexport const I18nLayoutFlexMap: { [key: string]: I18nLayoutFlexMapper<any> } = {\n  alignContent: FlexStartEndMapper,\n  alignItems: FlexStartEndMapper,\n  alignSelf: FlexStartEndMapper,\n  justifyContent: FlexStartEndMapper,\n  flexDirection: FlexRowMapper,\n  flexWrap: FlexWrapMapper,\n};\n\ninterface I18nLayoutFlexMapper<T> {\n  toI18n(value: T, rtl: boolean): T;\n}\n","import {\n  I18nManager,\n  ViewStyle,\n} from 'react-native';\nimport { I18nLayoutFlexMap } from './i18nLayoutFlexMap';\nimport { I18nLayoutServiceType } from './type';\n\nclass NativeI18nLayoutService implements I18nLayoutServiceType {\n\n  public isRTL(): boolean {\n    return I18nManager.isRTL;\n  }\n\n  public select<T>(ltr: T, rtl): T {\n    return this.isRTL() ? rtl : ltr;\n  }\n\n  /**\n   * Iterates through I18nLayoutFlexMap and reverses style values if needed.\n   *\n   * @param {ViewStyle} source - style to convert\n   * @param {boolean} rtl - is layout currently in RTL mode (Needed for tests, because unable to mock this)\n   *\n   * @returns {ViewStyle} - style reversed to fit i18n\n   */\n  public toI18nStyle(source: ViewStyle, rtl: boolean = this.isRTL()): ViewStyle {\n    const i18nStyle: ViewStyle = Object.keys(I18nLayoutFlexMap).reduce((style: ViewStyle, prop: string): ViewStyle => {\n      const currentStyleValue = source[prop];\n      if (currentStyleValue) {\n        const i18nStyleValue = I18nLayoutFlexMap[prop].toI18n(currentStyleValue, rtl);\n        return { ...style, [prop]: i18nStyleValue };\n      }\n\n      return style;\n    }, {});\n\n    return { ...source, ...i18nStyle };\n  }\n}\n\nexport const I18nLayoutService = new NativeI18nLayoutService();\n","export const isValidString = (source: string | null): boolean => {\n  if (source && source.length > 0) {\n    return true;\n  }\n  return false;\n};\n","import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  ViewProps,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport { I18nLayoutService } from '../../services';\n\ninterface ComponentProps {\n  isAnimated?: boolean;\n}\n\nexport type CheckMarkProps = ViewProps & ComponentProps;\nexport type CheckMarkElement = React.ReactElement<CheckMarkProps>;\n\nexport class CheckMark extends React.Component<CheckMarkProps> {\n\n  static defaultProps = {\n    isAnimated: false,\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { width, height, backgroundColor } = source;\n\n    return {\n      container: {\n        width: width,\n        height: height,\n      },\n      // the dependence of the variables was determined experimentally. Changes may be needed later.\n      shape: {\n        borderWidth: width * 0.125,\n        borderTopLeftRadius: height * 0.5,\n        borderTopRightRadius: height * 0.5,\n        borderBottomLeftRadius: height * 0.5,\n        borderBottomRightRadius: height * 0.5,\n        borderColor: backgroundColor,\n        backgroundColor: backgroundColor,\n      },\n      left: {\n        left: width * 0.125,\n        top: width * 0.25,\n        height: height * 0.65,\n      },\n      right: {\n        right: width * 0.175,\n        height: height * 0.875,\n      },\n    };\n  };\n\n  public render(): React.ReactNode {\n    const { style, isAnimated } = this.props;\n    const { container, shape, left, right } = this.getComponentStyle(StyleSheet.flatten(style));\n\n    const Component = isAnimated ? Animated.View : View;\n\n    return (\n      <Component style={[container, styles.container]}>\n        <Component style={[shape, left, styles.shape, styles.left]} />\n        <Component style={[shape, right, styles.shape, styles.right]} />\n      </Component>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: I18nLayoutService.toI18nStyle({\n    flexDirection: 'row',\n    transform: [{ rotate: '-5deg' }],\n  }),\n  shape: {\n    position: 'absolute',\n  },\n  left: {\n    transform: [{ rotate: '-40deg' }],\n  },\n  right: {\n    transform: [{ rotate: '40deg' }],\n  },\n});\n","import React from 'react';\nimport {\n  Animated,\n  Easing,\n  LayoutChangeEvent,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { I18nLayoutService } from '../../services';\n\ninterface ComponentProps {\n  positions: number;\n  selectedPosition?: number;\n  animationDuration?: number;\n}\n\nexport type TabIndicatorProps = ViewProps & ComponentProps;\nexport type TabIndicatorElement = React.ReactElement<TabIndicatorProps>;\n\nexport class TabIndicator extends React.Component<TabIndicatorProps> {\n\n  static defaultProps: Partial<TabIndicatorProps> = {\n    selectedPosition: 0,\n    animationDuration: 200,\n  };\n\n  private indicatorWidth: number;\n  private contentOffset: Animated.Value = new Animated.Value(0);\n\n  public componentDidMount() {\n    this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n  }\n\n  public shouldComponentUpdate(nextProps: TabIndicatorProps): boolean {\n    return this.props.selectedPosition !== nextProps.selectedPosition;\n  }\n\n  public componentDidUpdate() {\n    const { selectedPosition: index } = this.props;\n\n    this.scrollToIndex({ index, animated: true });\n  }\n\n  public componentWillUnmount() {\n    this.contentOffset.removeAllListeners();\n  }\n\n  /**\n   * scrolls indicator to passed index\n   *\n   * @param params (object) - {\n   *  index: number,\n   *  animated: boolean | undefined\n   * }\n   */\n  public scrollToIndex(params: { index: number, animated?: boolean }) {\n    const { index, ...rest } = params;\n    const offset: number = this.indicatorWidth * index;\n\n    this.scrollToOffset({ offset, ...rest });\n  }\n\n  /**\n   * scrolls indicator to passed offset\n   *\n   * @param params (object) - {\n   *  offset: number,\n   *  animated: boolean | undefined\n   * }\n   */\n  public scrollToOffset(params: { offset: number, animated?: boolean }) {\n    this.createOffsetAnimation(params).start(this.onContentOffsetAnimationStateEnd);\n  }\n\n  private onContentOffsetAnimationStateChanged = (state: { value: number }) => {\n    // no-op\n  };\n\n  private onContentOffsetAnimationStateEnd = (result: { finished: boolean }) => {\n    // no-op\n  };\n\n  private createOffsetAnimation = (params: { offset: number, animated?: boolean }): Animated.CompositeAnimation => {\n    const animationDuration: number = params.animated ? this.props.animationDuration : 0;\n\n    return Animated.timing(this.contentOffset, {\n      toValue: I18nLayoutService.select(params.offset, -params.offset),\n      duration: animationDuration,\n      easing: Easing.linear,\n    });\n  };\n\n  private onLayout = (event: LayoutChangeEvent) => {\n    this.indicatorWidth = event.nativeEvent.layout.width;\n\n    this.scrollToOffset({\n      offset: this.indicatorWidth * this.props.selectedPosition,\n      animated: false,\n    });\n  };\n\n  private getComponentStyle = (): ViewStyle => {\n    const widthPercent: number = 100 / this.props.positions;\n\n    return {\n      width: `${widthPercent}%`,\n\n      // @ts-ignore: RN has no types for `Animated` styles\n      transform: [{ translateX: this.contentOffset }],\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, ...restProps } = this.props;\n    const componentStyle: ViewStyle = this.getComponentStyle();\n\n    return (\n      <Animated.View\n        {...restProps}\n        onLayout={this.onLayout}\n        style={[style, componentStyle]}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  ViewProps,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\n\nexport type ChevronDirection = 'top' | 'bottom' | 'left' | 'right';\n\ninterface ComponentProps {\n  isAnimated?: boolean;\n  direction?: ChevronDirection;\n}\n\nexport type ChevronProps = ViewProps & ComponentProps;\nexport type ChevronElement = React.ReactElement<ChevronProps>;\n\nexport class Chevron extends React.Component<ChevronProps> {\n\n  static defaultProps = {\n    isAnimated: false,\n    direction: 'bottom',\n  };\n\n  private getDirectionStyle = (): StyleType => {\n    const { direction } = this.props;\n\n    switch (direction) {\n      case 'top':\n        return styles.containerTopRotate;\n      case 'right':\n        return styles.containerRightRotate;\n      case 'left':\n        return styles.containerLeftRotate;\n      default:\n        return null;\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      width,\n      height,\n      tintColor: backgroundColor,\n      marginHorizontal,\n    } = source;\n\n    return {\n      container: {\n        width: width,\n        height: height,\n        marginHorizontal: marginHorizontal,\n      },\n      // the dependence of the variables was determined experimentally. Changes may be needed later.\n      shape: {\n        top: height * 0.25,\n        borderWidth: width * 0.06,\n        borderTopLeftRadius: height * 0.5,\n        borderTopRightRadius: height * 0.5,\n        borderBottomLeftRadius: height * 0.5,\n        borderBottomRightRadius: height * 0.5,\n        borderColor: backgroundColor,\n        backgroundColor: backgroundColor,\n      },\n      left: {\n        left: width * 0.28,\n        height: height * 0.45,\n      },\n      right: {\n        right: width * 0.28,\n        height: height * 0.45,\n      },\n    };\n  };\n\n  public render(): React.ReactNode {\n    const { style, isAnimated } = this.props;\n    const { container, shape, left, right } = this.getComponentStyle(StyleSheet.flatten(style));\n    const directionStyle: StyleType = this.getDirectionStyle();\n\n    const Component = isAnimated ? Animated.View : View;\n\n    return (\n      <Component style={[container, directionStyle, style]}>\n        <Component style={[shape, left, styles.shape, styles.left]}/>\n        <Component style={[shape, right, styles.shape, styles.right]}/>\n      </Component>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  containerTopRotate: {\n    transform: [{ rotate: '180deg' }],\n  },\n  containerLeftRotate: {\n    transform: [{ rotate: '90deg' }],\n  },\n  containerRightRotate: {\n    transform: [{ rotate: '-90deg' }],\n  },\n  shape: {\n    position: 'absolute',\n  },\n  left: {\n    transform: [{ rotate: '-45deg' }, { translateY: 1 }],\n  },\n  right: {\n    transform: [{ rotate: '45deg' }, { translateY: 1 }],\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { BottomNavigationTabElement } from './bottomNavigationTab.component';\nimport {\n  TabIndicator,\n  TabIndicatorProps,\n} from '../support/components';\n\ntype IndicatorElement = React.ReactElement<TabIndicatorProps>;\ntype ChildrenProp = BottomNavigationTabElement | BottomNavigationTabElement[];\n\ninterface ComponentProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  onSelect?: (index: number) => void;\n}\n\nexport type BottomNavigationProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type BottomNavigationElement = React.ReactElement<BottomNavigationProps>;\n\n/**\n * `BottomNavigation` component is designed to be a Bottom Tab Bar.\n * Can be used for navigation.\n *\n * @extends React.Component\n *\n * @property {number} selectedIndex - Determines index of the selected tab.\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default` | `noIndicator`.\n *\n * @property {React.ReactElement<TabProps> | React.ReactElement<TabProps>[]} children -\n * Determines tabs of the Bottom Navigation.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines styles of the indicator.\n *\n * @property {(index: number) => void} onSelect - Triggered on select value.\n *\n * @property ViewProps\n *\n * @property StyledComponentProps\n *\n * @overview-example BottomNavigationSimpleUsage\n *\n * @overview-example With React Navigation\n *\n * ```\n * import React from 'react';\n * import { BottomNavigation, BottomNavigationTab } from 'react-native-ui-kitten';\n * import { createBottomTabNavigator } from 'react-navigation-tabs';\n * import { Dashboard, Settings } from './path-to/screen-components'; // <-- Import screen components\n *\n * export const BottomNavigationShowcase = (props) => {\n *\n *  const onTabSelect = (selectedIndex) => {\n *    const { [index]: selectedRoute } = props.navigation.state.routes;\n *    props.navigation.navigate(selectedRoute.routeName);\n *  };\n *\n *  return (\n *    <BottomNavigation\n *      selectedIndex={props.navigation.state.index}\n *      onSelect={onTabSelect}>\n *      <BottomNavigationTab title='Dashboard' />\n *      <BottomNavigationTab title='Settings' />\n *    </BottomNavigation>\n *   );\n * }\n *\n * export const BottomTabNavigator = createBottomTabNavigator({\n *   Dashboard: Dashboard,\n *   Settings: Settings,\n * }, {\n *   initialRouteName: 'Dashboard',\n *   tabBarComponent: BottomNavigationShowcase,\n * });\n * ```\n *\n * @example BottomNavigationWithoutIndicator\n *\n * @overview-example BottomNavigationWithIcons\n *\n * @example BottomNavigationInlineStyling\n */\nexport class BottomNavigationComponent extends React.Component<BottomNavigationProps> {\n\n  static styledComponentName: string = 'BottomNavigation';\n\n  static defaultProps: Partial<BottomNavigationProps> = {\n    selectedIndex: 0,\n  };\n\n  private onTabSelect = (index: number) => {\n    if (this.props.onSelect && this.props.selectedIndex !== index) {\n      this.props.onSelect(index);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { indicatorHeight, indicatorBackgroundColor, ...containerParameters } = source;\n\n    return {\n      container: containerParameters,\n      item: {},\n      indicator: {\n        height: indicatorHeight,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private renderIndicatorElement = (positions: number, style: ViewStyle): IndicatorElement => {\n    const { indicatorStyle, selectedIndex } = this.props;\n\n    return (\n      <TabIndicator\n        key={0}\n        style={[style, styles.indicator, indicatorStyle]}\n        selectedPosition={selectedIndex}\n        positions={positions}\n      />\n    );\n  };\n\n  private renderTabElement = (element: BottomNavigationTabElement, index: number): BottomNavigationTabElement => {\n    return React.cloneElement(element, {\n      key: index,\n      style: [styles.item, element.props.style],\n      selected: index === this.props.selectedIndex,\n      onSelect: () => this.onTabSelect(index),\n    });\n  };\n\n  private renderTabElements = (source: ChildrenProp): BottomNavigationTabElement[] => {\n    return React.Children.map(source, this.renderTabElement);\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const tabElements: BottomNavigationTabElement[] = this.renderTabElements(this.props.children);\n\n    const hasIndicator: boolean = style.indicator.height > 0;\n\n    return [\n      hasIndicator && this.renderIndicatorElement(tabElements.length, style.indicator),\n      ...tabElements,\n    ];\n  };\n\n  public render(): React.ReactNode {\n    const { themedStyle, style, ...derivedProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    const [indicatorElement, ...tabElements] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <View\n        {...derivedProps}\n        style={[container, styles.container, style]}>\n        {indicatorElement}\n        {tabElements}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  item: {\n    flex: 1,\n  },\n  indicator: {\n    position: 'absolute',\n  },\n});\n\nexport const BottomNavigation = styled<BottomNavigationProps>(BottomNavigationComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Text as RNText,\n  TextProps as RNTextProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\n\ntype ChildElement = string | TextElement;\n\ninterface ComponentProps {\n  category?: string;\n  status?: string;\n  children?: ChildElement | ChildElement[];\n}\n\nexport type TextProps = StyledComponentProps & RNTextProps & ComponentProps;\nexport type TextElement = React.ReactElement<TextProps>;\n\n/**\n * Styled `Text` component.\n *\n * @extends React.Component\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning` or `danger`.\n *\n * @property {string} children - Determines text of the component.\n *\n * @property {string} category - Determines the category of the component.\n * Can be `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `s1`, `s2`, `p1`, `p2`, `c1`, `c2`, `label`.\n * Default is `p1`.\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default`, `alternative`, `hint`.\n * Default is `default`.\n *\n * @property TextComponentProps\n *\n * @property StyledComponentProps\n *\n * @overview-example TextSimpleUsage\n *\n * @overview-example TextAppearances\n *\n * @overview-example TextCategories\n *\n * @overview-example TextStatuses\n *\n * @example TextInlineStyling\n */\nexport class TextComponent extends React.Component<TextProps> {\n\n  static styledComponentName: string = 'Text';\n\n  public render(): React.ReactElement<RNTextProps> {\n    const { themedStyle, style, ...derivedProps } = this.props;\n\n    return (\n      <RNText\n        {...derivedProps}\n        style={[themedStyle, style]}\n      />\n    );\n  }\n}\n\nexport const Text = styled<TextProps>(TextComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: ImageStyle) => IconElement;\n\ninterface ComponentProps {\n  title?: string;\n  titleStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  selected?: boolean;\n  onSelect?: (selected: boolean) => void;\n}\n\nexport type BottomNavigationTabProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type BottomNavigationTabElement = React.ReactElement<BottomNavigationTabProps>;\n\n/**\n * `BottomNavigationTab` component is a part of the `BottomNavigation` component.\n * `BottomNavigation` tabs should be wrapped in BottomNavigation to provide usable component.\n * See usage examples at `BottomNavigation` component documentation.\n *\n * @extends React.Component\n *\n * @property {boolean} selected - Determines whether component is selected.\n *\n * @property {string} title - Determines the title of the tab.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines the icon of the tab.\n *\n * @property {(selected: boolean) => void} onSelect - Triggered on select value.\n *\n * @property TouchableOpacityProps\n *\n * @property StyledComponentProps\n *\n * @overview-example BottomNavigationTabSimpleUsage\n *\n * @overview-example BottomNavigationTabWithIcon\n *\n * @example BottomNavigationTabWithExternalSourceIcon\n *\n * @example BottomNavigationTabInlineStyling\n */\nexport class BottomNavigationTabComponent extends React.Component<BottomNavigationTabProps> {\n\n  static styledComponentName: string = 'BottomNavigationTab';\n\n  private onPress = () => {\n    if (this.props.onSelect) {\n      this.props.onSelect(!this.props.selected);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      iconWidth,\n      iconHeight,\n      iconMarginVertical,\n      iconTintColor,\n      textMarginVertical,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      text: {\n        marginVertical: textMarginVertical,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginVertical: iconMarginVertical,\n        tintColor: iconTintColor,\n      },\n    };\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 1,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderTitleElement = (style: TextStyle): TextElement => {\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text\n        key={2}\n        style={[style, styles.text, titleStyle]}>\n        {title}\n      </Text>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon, title } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      isValidString(title) && this.renderTitleElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactNode {\n    const { style, themedStyle, ...restProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    const [iconElement, titleElement] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        {...restProps}\n        style={[container, styles.container, style]}\n        activeOpacity={1.0}\n        onPress={this.onPress}>\n        {iconElement}\n        {titleElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {},\n  icon: {},\n});\n\nexport const BottomNavigationTab = styled<BottomNavigationTabProps>(BottomNavigationTabComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: ImageStyle) => IconElement;\n\ninterface ComponentProps {\n  textStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  status?: string;\n  size?: string;\n  children?: string;\n}\n\nexport type ButtonProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type ButtonElement = React.ReactElement<ButtonProps>;\n\n/**\n * Styled `Button` component.\n *\n * @extends React.Component\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `primary`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `giant`, `large`, `medium`, `small`, or `tiny`.\n * Default is `medium`.\n *\n * @property {string} children - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines icon of the component.\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `filled` | `outline` | `ghost`.\n * Default is `filled`.\n *\n * @property TouchableOpacityProps\n *\n * @property StyledComponentProps\n *\n * @overview-example ButtonSimpleUsage\n *\n * @overview-example ButtonAppearances\n *\n * @overview-example ButtonStatus\n *\n * @overview-example ButtonSize\n *\n * @overview-example ButtonOutline\n *\n * @overview-example ButtonGhost\n *\n * @overview-example ButtonWithIcon\n */\nexport class ButtonComponent extends React.Component<ButtonProps> {\n\n  static styledComponentName: string = 'Button';\n\n  private onPress = (event: GestureResponderEvent) => {\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent) => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent) => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textColor,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textMarginHorizontal,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      iconMarginHorizontal,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      text: {\n        color: textColor,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        marginHorizontal: textMarginHorizontal,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        tintColor: iconTintColor,\n        marginHorizontal: iconMarginHorizontal,\n      },\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    return (\n      <Text\n        key={1}\n        style={[style, styles.text, this.props.textStyle]}>\n        {this.props.children}\n      </Text>\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 2,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon, children } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      isValidString(children) && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, ...containerProps } = this.props;\n    const { container, ...childStyles } = this.getComponentStyle(themedStyle);\n\n    const [iconElement, textElement] = this.renderComponentChildren(childStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...containerProps}\n        style={[container, styles.container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        {iconElement}\n        {textElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {},\n  icon: {},\n});\n\nexport const Button = styled<ButtonProps>(ButtonComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { ButtonElement } from '../button/button.component';\n\ntype ChildrenProp = ButtonElement | ButtonElement[];\n\ninterface ComponentProps {\n  size?: string;\n  status?: string;\n  children: ChildrenProp;\n}\n\nexport type ButtonGroupProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type ButtonGroupElement = React.ReactElement<ButtonGroupProps>;\n\n/**\n * Renders a group of `Buttons`.\n *\n * @extends React.Component\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning`, `danger` or `white`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `giant`, `large`, `medium`, `small`, or `tiny`.\n * Default is `medium`.\n *\n * @property {React.ReactElement<ButtonProps>[]} children - Determines buttons in group.\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `filled` or `outline`.\n * Default is `filled`.\n *\n * @property ViewProps\n *\n * @property StyledComponentProps\n *\n * @overview-example ButtonGroupSimpleUsage\n *\n * @overview-example ButtonGroupStatus\n *\n * @overview-example ButtonGroupSize\n *\n * @example ButtonGroupInlineStyling\n */\nclass ButtonGroupComponent extends React.Component<ButtonGroupProps> {\n\n  static styledComponentName: string = 'ButtonGroup';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      dividerBackgroundColor,\n      dividerWidth,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      button: {\n        borderEndColor: dividerBackgroundColor,\n        borderEndWidth: dividerWidth,\n      },\n    };\n  };\n\n  private isLastElement = (index: number): boolean => {\n    const { children } = this.props;\n\n    return index === React.Children.count(children) - 1;\n  };\n\n  private renderButtonElement = (element: ButtonElement, index: number, style: StyleType): ButtonElement => {\n    const { appearance, size, status } = this.props;\n\n    const additionalStyle: ViewStyle = this.isLastElement(index) ? styles.lastButton : style;\n\n    return React.cloneElement(element, {\n      key: index,\n      appearance: appearance,\n      size: size,\n      status: status,\n      style: [element.props.style, styles.button, additionalStyle],\n    });\n  };\n\n  private renderButtonElements = (source: ChildrenProp, style: StyleType): ButtonElement[] => {\n    return React.Children.map(source, (element: ButtonElement, index: number): ButtonElement => {\n      return this.renderButtonElement(element, index, style.button);\n    });\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, children, ...derivedProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    const buttonElements: ButtonElement[] = this.renderButtonElements(children, componentStyles);\n\n    return (\n      <View\n        {...derivedProps}\n        style={[container, styles.container, style]}>\n        {buttonElements}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n  button: {\n    borderRadius: 0,\n    borderLeftWidth: 0,\n    borderTopWidth: 0,\n    borderBottomWidth: 0,\n  },\n  lastButton: {\n    borderWidth: 0,\n    borderRadius: 0,\n  },\n});\n\nexport const ButtonGroup = styled<ButtonGroupProps>(ButtonGroupComponent);\n","import React from 'react';\nimport {\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Button } from '../../button/button.component';\nimport {\n  Chevron,\n  ChevronElement,\n  ChevronDirection,\n} from '../../support/components';\n\ninterface ComponentProps extends ViewProps {\n  title: string;\n  titleStyle?: StyleProp<TextStyle>;\n  iconStyle?: ImageStyle;\n  lateralNavigationAllowed: boolean;\n  onTitlePress?: () => void;\n  onRight?: () => void;\n  onLeft?: () => void;\n}\n\nexport type CalendarHeaderProps = ComponentProps;\nexport type CalendarHeaderElement = React.ReactElement<CalendarHeaderProps>;\n\nexport class CalendarHeader extends React.Component<CalendarHeaderProps> {\n\n  private renderSpecificTitleIcon = (style: StyleProp<ImageStyle>, direction: ChevronDirection): ChevronElement => {\n    return (\n      <Chevron\n        style={style}\n        direction={direction}\n      />\n    );\n  };\n\n  private renderTitleIcon = (style: ImageStyle): ChevronElement => {\n    const { iconStyle } = this.props;\n\n    return this.renderSpecificTitleIcon(iconStyle, 'bottom');\n  };\n\n  private renderLeftIcon = (style: ImageStyle): ChevronElement => {\n    const { iconStyle } = this.props;\n\n    return this.renderSpecificTitleIcon([iconStyle, styles.lateralIcon], 'left');\n  };\n\n  private renderRightIcon = (style: ImageStyle): ChevronElement => {\n    const { iconStyle } = this.props;\n\n    return this.renderSpecificTitleIcon([iconStyle, styles.lateralIcon], 'right');\n  };\n\n  private renderLateralNavigationControls = (): React.ReactElement<ViewProps> => {\n    return (\n      <View style={styles.subContainer}>\n        <Button\n          style={styles.headerButton}\n          appearance='ghost'\n          // @ts-ignore\n          icon={this.renderLeftIcon}\n          onPress={this.props.onLeft}\n        />\n        <Button\n          style={styles.headerButton}\n          appearance='ghost'\n          // @ts-ignore\n          icon={this.renderRightIcon}\n          onPress={this.props.onRight}\n        />\n      </View>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, titleStyle, onTitlePress, title, lateralNavigationAllowed, ...restProps } = this.props;\n\n    return (\n      <View style={[styles.container, style]} {...restProps}>\n        <Button\n          style={styles.headerButton}\n          appearance='ghost'\n          textStyle={[titleStyle, styles.headerButtonText]}\n          // @ts-ignore\n          icon={this.renderTitleIcon}\n          onPress={onTitlePress}>\n          {title}\n        </Button>\n        {lateralNavigationAllowed && this.renderLateralNavigationControls()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  headerButton: {\n    paddingVertical: 0,\n    paddingHorizontal: 0,\n    minWidth: 24,\n    minHeight: 24,\n  },\n  headerButtonText: {\n    marginHorizontal: 0,\n  },\n  lateralIcon: {\n    marginHorizontal: 0,\n  },\n  subContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\n\ninterface ComponentProps extends ViewProps {\n  data: string[];\n  children: (data: string, index: number) => React.ReactElement<any>;\n}\n\nexport type CalendarMonthHeaderProps = ComponentProps;\nexport type CalendarMonthHeaderElement = React.ReactElement<CalendarMonthHeaderProps>;\n\nexport class CalendarMonthHeader extends React.Component<CalendarMonthHeaderProps> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, data, children, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, style]}>\n        {data.map(children)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  PanResponder,\n  PanResponderCallbacks,\n  PanResponderGestureState,\n  PanResponderInstance,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { I18nLayoutService } from '../support/services';\n\ntype ChildElement = React.ReactElement<any>;\ntype ChildrenProp = ChildElement | ChildElement[];\n\ninterface ComponentProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  shouldLoadComponent?: (index: number) => boolean;\n  onOffsetChange?: (offset: number) => void;\n  onSelect?: (index: number) => void;\n}\n\nexport type ViewPagerProps = ViewProps & ComponentProps;\nexport type ViewPagerElement = React.ReactElement<ViewPagerProps>;\n\n/**\n * `ViewPager` allows flipping through the \"pages\".\n *\n * @extends React.Component\n *\n * @property {React.ReactElement<any> | React.ReactElement<any>[]} children - Determines children of the component.\n *\n * @property {number} selectedIndex - Determines the index of selected \"page\".\n *\n * @property {(index: number) => boolean} shouldLoadComponent - Determines loading behavior particular page and can be\n * used for lazy loading.\n *\n * @property {(offset: number) => void} onOffsetChange - Fires on scroll event with current scroll offset.\n *\n * @property {(index: number) => void} onSelect - Fires on \"page\" select with corresponding index.\n *\n * @property ScrollViewProps\n *\n * @overview-example ViewPagerSimpleUsage\n *\n * @overview-example ViewPagerLazyLoading\n *\n * @example ViewPagerInlineStyling\n */\nexport class ViewPager extends React.Component<ViewPagerProps> implements PanResponderCallbacks {\n\n  static defaultProps: Partial<ViewPagerProps> = {\n    selectedIndex: 0,\n    shouldLoadComponent: (): boolean => true,\n  };\n\n  private containerRef: React.RefObject<View> = React.createRef();\n  private contentWidth: number = 0;\n  private contentOffsetValue: number = 0;\n  private contentOffset: Animated.Value = new Animated.Value(this.contentOffsetValue);\n  private panResponder: PanResponderInstance = PanResponder.create(this);\n\n  public componentDidMount() {\n    this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n  }\n\n  public componentDidUpdate(prevProps: ViewPagerProps) {\n    if (prevProps.selectedIndex !== this.props.selectedIndex) {\n      const index: number = this.props.selectedIndex;\n      this.scrollToIndex({ index, animated: true });\n    }\n  }\n\n  public componentWillUnmount() {\n    this.contentOffset.removeAllListeners();\n  }\n\n  public onMoveShouldSetPanResponder = (event: GestureResponderEvent, state: PanResponderGestureState): boolean => {\n    const isHorizontalMove: boolean = Math.abs(state.dx) > 0 && Math.abs(state.dx) > Math.abs(state.dy);\n\n    if (isHorizontalMove) {\n      const i18nOffset: number = I18nLayoutService.select(state.dx, -state.dx);\n      const nextSelectedIndex: number = this.props.selectedIndex - Math.sign(i18nOffset);\n\n      return nextSelectedIndex >= 0 && nextSelectedIndex < this.getChildCount();\n    }\n\n    return false;\n  };\n\n  public onPanResponderMove = (event: GestureResponderEvent, state: PanResponderGestureState) => {\n    const i18nOffset: number = I18nLayoutService.select(this.contentWidth, -this.contentWidth);\n    const selectedPageOffset: number = this.props.selectedIndex * i18nOffset;\n\n    this.contentOffset.setValue(state.dx - selectedPageOffset);\n  };\n\n  public onPanResponderRelease = (event: GestureResponderEvent, state: PanResponderGestureState) => {\n    if (Math.abs(state.vx) >= 0.5 || Math.abs(state.dx) >= 0.5 * this.contentWidth) {\n      const i18nOffset: number = I18nLayoutService.select(state.dx, -state.dx);\n      const index: number = i18nOffset > 0 ? this.props.selectedIndex - 1 : this.props.selectedIndex + 1;\n      this.scrollToIndex({ index, animated: true });\n    } else {\n      const index: number = this.props.selectedIndex;\n      this.scrollToIndex({ index, animated: true });\n    }\n  };\n\n  public scrollToIndex(params: { index: number, animated?: boolean }) {\n    const { index, ...rest } = params;\n    const childCount = this.getChildCount() - 1;\n    const offset: number = this.contentWidth * (index < 0 ? 0 : index > childCount ? childCount : index);\n\n    this.scrollToOffset({ offset, ...rest });\n  }\n\n  public scrollToOffset = (params: { offset: number, animated?: boolean }) => {\n    this.createOffsetAnimation(params).start(this.onContentOffsetAnimationStateEnd);\n  };\n\n  private onLayout = (event: LayoutChangeEvent) => {\n    this.contentWidth = event.nativeEvent.layout.width / this.getChildCount();\n\n    this.scrollToIndex({\n      index: this.props.selectedIndex,\n    });\n  };\n\n  private onContentOffsetAnimationStateChanged = (state: { value: number }) => {\n    this.contentOffsetValue = I18nLayoutService.select(-state.value, state.value);\n\n    if (this.props.onOffsetChange) {\n      this.props.onOffsetChange(this.contentOffsetValue);\n    }\n  };\n\n  private onContentOffsetAnimationStateEnd = (result: { finished: boolean }) => {\n    const selectedIndex: number = this.contentOffsetValue / this.contentWidth;\n\n    if (selectedIndex !== this.props.selectedIndex && this.props.onSelect) {\n      this.props.onSelect(Math.round(selectedIndex));\n    }\n  };\n\n  private createOffsetAnimation = (params: { offset: number, animated?: boolean }): Animated.CompositeAnimation => {\n    const animationDuration: number = params.animated ? 300 : 0;\n\n    return Animated.timing(this.contentOffset, {\n      toValue: I18nLayoutService.select(-params.offset, params.offset),\n      easing: Easing.linear,\n      duration: animationDuration,\n    });\n  };\n\n  private renderComponentChild = (source: ChildElement, index: number): ChildElement => {\n    const contentView: ChildElement | null = this.props.shouldLoadComponent(index) ? source : null;\n\n    return (\n      <View style={styles.contentContainer}>\n        {contentView}\n      </View>\n    );\n  };\n\n  private renderComponentChildren = (source: ChildrenProp): ChildElement[] => {\n    return React.Children.map(source, this.renderComponentChild);\n  };\n\n  private getChildCount = (): number => {\n    return React.Children.count(this.props.children);\n  };\n\n  private getContainerStyle = (): ViewStyle => {\n    return {\n      width: `${100 * this.getChildCount()}%`,\n\n      // @ts-ignore: RN has no types for `Animated` styles\n      transform: [{ translateX: this.contentOffset }],\n    };\n  };\n\n  public render(): React.ReactNode {\n    const { style, children, ...restProps } = this.props;\n\n    return (\n      <Animated.View\n        {...restProps}\n        ref={this.containerRef}\n        style={[styles.container, style, this.getContainerStyle()]}\n        onLayout={this.onLayout}\n        {...this.panResponder.panHandlers}>\n        {this.renderComponentChildren(children)}\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  contentContainer: {\n    flex: 1,\n    width: '100%',\n  },\n});\n","import React from 'react';\nimport {\n  ViewPager,\n  ViewPagerElement,\n  ViewPagerProps,\n} from '../../viewPager/viewPager.component';\nimport { CalendarDateInfo } from '../type';\nimport { Override } from '../../support/typings';\n\nexport type CalendarPagerProps<D> = Override<ViewPagerProps, {\n  data: CalendarDateInfo<D>[];\n  children: (date: CalendarDateInfo<D>, index: number) => React.ReactElement<any>;\n}>;\n\nexport type CalendarPagerElement<D> = React.ReactElement<CalendarPagerProps<D>>;\n\nexport class CalendarPager<D> extends React.Component<CalendarPagerProps<D>> {\n\n  public scrollToIndex(params: { index: number, animated?: boolean }) {\n    this.viewPagerRef.current.scrollToIndex(params);\n  }\n\n  private viewPagerRef: React.RefObject<ViewPager> = React.createRef();\n\n  private onSelect = (index: number) => {\n    // TODO: This fixes layout junks (for any reason)\n    setTimeout(() => {\n      this.props.onSelect(index);\n    });\n  };\n\n  private shouldLoadComponent = (index: number): boolean => {\n    if (this.props.shouldLoadComponent) {\n      return this.props.shouldLoadComponent(index);\n    }\n    return true;\n  };\n\n  private createChildElement = (date: CalendarDateInfo<D>, index: number): React.ReactElement<any> => {\n    if (this.shouldLoadComponent(index)) {\n      return this.props.children(date, index);\n    }\n    return null;\n  };\n\n  public render(): ViewPagerElement {\n    const { data, children, ...restProps } = this.props;\n\n    return (\n      <ViewPager\n        {...restProps}\n        ref={this.viewPagerRef}\n        shouldLoadComponent={this.shouldLoadComponent}\n        onSelect={this.onSelect}>\n        {data.map(this.createChildElement)}\n      </ViewPager>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { CalendarPickerCellElement } from './calendarPickerCell.component';\nimport { CalendarDateInfo } from '../../type';\n\ninterface ComponentProps<D> extends ViewProps {\n  data: CalendarDateInfo<D>[];\n  renderItem: (item: CalendarDateInfo<D>, index: number) => CalendarPickerCellElement<D>;\n}\n\nexport type CalendarPickerRowProps<D> = ComponentProps<D>;\nexport type CalendarPickerRowElement<D> = React.ReactElement<CalendarPickerRowProps<D>>;\n\nexport class CalendarPickerRow<D> extends React.Component<CalendarPickerRowProps<D>> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, data, renderItem, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, style]}>\n        {data.map(renderItem)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { CalendarDateInfo } from '@kitten/ui/calendar/type';\n\ntype ChildrenProp<D> = (date: CalendarDateInfo<D>, style: StyleType) => React.ReactElement<any>;\n\ninterface ComponentProps<D> extends TouchableOpacityProps {\n  date: CalendarDateInfo<D>;\n  category?: string;\n  selected?: boolean;\n  bounding?: boolean;\n  today?: boolean;\n  range?: boolean;\n  firstRangeItem?: boolean;\n  lastRangeItem?: boolean;\n  onSelect?: (date: CalendarDateInfo<D>) => void;\n  children: ChildrenProp<D>;\n  shouldComponentUpdate?: (props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>) => boolean;\n}\n\nexport type CalendarPickerCellProps<D> = StyledComponentProps & ComponentProps<D>;\nexport type CalendarPickerCellElement<D> = React.ReactElement<CalendarPickerCellProps<D>>;\n\nclass CalendarPickerCellComponent<D> extends React.Component<CalendarPickerCellProps<D>> {\n\n  static styledComponentName: string = 'CalendarCell';\n\n  static defaultProps = {\n    selected: false,\n    today: false,\n  };\n\n  public shouldComponentUpdate(nextProps: CalendarPickerCellProps<D>): boolean {\n    if (nextProps.shouldComponentUpdate) {\n      return nextProps.shouldComponentUpdate(this.props, nextProps);\n    }\n    return true;\n  }\n\n  private onPress = () => {\n    if (this.props.onSelect) {\n      this.props.onSelect(this.props.date);\n    }\n  };\n\n  private getContainerBorderRadius = (borderRadius: number): StyleType => {\n    const { firstRangeItem, lastRangeItem } = this.props;\n\n    if (firstRangeItem) {\n      return {\n        borderBottomLeftRadius: borderRadius,\n        borderBottomRightRadius: 0,\n        borderTopLeftRadius: borderRadius,\n        borderTopRightRadius: 0,\n      };\n    }\n    if (lastRangeItem) {\n      return {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: borderRadius,\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: borderRadius,\n      };\n    }\n\n    return {};\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      contentBorderWidth,\n      contentBorderRadius,\n      contentBorderColor,\n      contentBackgroundColor,\n      contentTextFontSize,\n      contentTextLineHeight,\n      contentTextFontWeight,\n      contentTextColor,\n      contentTextFontFamily,\n      borderRadius,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: {\n        ...containerParameters,\n        ...this.getContainerBorderRadius(borderRadius),\n      },\n      contentContainer: {\n        borderWidth: contentBorderWidth,\n        borderRadius: contentBorderRadius,\n        borderColor: contentBorderColor,\n        backgroundColor: contentBackgroundColor,\n      },\n      contentText: {\n        fontSize: contentTextFontSize,\n        fontWeight: contentTextFontWeight,\n        lineHeight: contentTextLineHeight,\n        color: contentTextColor,\n        fontFamily: contentTextFontFamily,\n      },\n    };\n  };\n\n  private renderContentElement = (source: ChildrenProp<D>, style: StyleType): React.ReactElement<any> => {\n    return source && source(this.props.date, {\n      container: style.contentContainer,\n      text: style.contentText,\n    });\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { style, themedStyle, date, bounding, children, ...restProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        onPress={this.onPress}\n        {...restProps}\n        style={[container, styles.container, style]}>\n        {this.renderContentElement(children, componentStyles)}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nexport const CalendarPickerCell = styled(CalendarPickerCellComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleProp,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport {\n  CalendarPickerRow,\n  CalendarPickerRowElement,\n} from './calendarPickerRow.component';\nimport {\n  CalendarPickerCell,\n  CalendarPickerCellElement,\n  CalendarPickerCellProps,\n} from './calendarPickerCell.component';\nimport { CalendarDateInfo } from '../../type';\n\ninterface ComponentProps<D> extends ViewProps {\n  data: CalendarDateInfo<D>[][];\n  category: string;\n  isItemSelected: (item: CalendarDateInfo<D>) => boolean;\n  isItemDisabled: (item: CalendarDateInfo<D>) => boolean;\n  isItemToday: (item: CalendarDateInfo<D>) => boolean;\n  onSelect?: (item: CalendarDateInfo<D>) => void;\n  renderItem: (item: CalendarDateInfo<D>, style: StyleType) => React.ReactElement<any>;\n  shouldItemUpdate?: (props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>) => boolean;\n  rowStyle?: StyleProp<ViewProps>;\n}\n\nexport type CalendarPickerProps<D> = ComponentProps<D>;\nexport type CalendarPickerElement<D> = React.ReactElement<CalendarPickerProps<D>>;\n\nexport class CalendarPicker<D> extends React.Component<CalendarPickerProps<D>> {\n\n  private get rangedArray (): CalendarDateInfo<D>[] {\n    const { data } = this.props;\n\n    return [].concat(...data).filter((item: CalendarDateInfo<D>) => {\n      return item.range;\n    });\n  }\n\n  private isFirstRangeItem = (item: CalendarDateInfo<D>, range: CalendarDateInfo<D>[]): boolean => {\n    return range.indexOf(item) === 0;\n  };\n\n  private isLastRangeItem = (item: CalendarDateInfo<D>, range: CalendarDateInfo<D>[]): boolean => {\n    return range.indexOf(item) === range.length - 1;\n  };\n\n  private renderCellElement = (item: CalendarDateInfo<D>, index: number): CalendarPickerCellElement<D> => {\n    const isFirstRangeItem: boolean = this.isFirstRangeItem(item, this.rangedArray);\n    const isLastRangeItem: boolean = this.isLastRangeItem(item, this.rangedArray);\n\n    return (\n      <CalendarPickerCell\n        key={index}\n        date={item}\n        category={this.props.category}\n        selected={this.props.isItemSelected(item)}\n        disabled={this.props.isItemDisabled(item)}\n        bounding={item.bounding}\n        today={this.props.isItemToday(item)}\n        range={item.range}\n        firstRangeItem={isFirstRangeItem}\n        lastRangeItem={isLastRangeItem}\n        onSelect={this.props.onSelect}\n        shouldComponentUpdate={this.props.shouldItemUpdate}>\n        {this.props.renderItem}\n      </CalendarPickerCell>\n    );\n  };\n\n  private renderRowElement = (item: CalendarDateInfo<D>[], index: number): CalendarPickerRowElement<D> => {\n    const { rowStyle } = this.props;\n\n    return (\n      <CalendarPickerRow\n        style={rowStyle}\n        key={index}\n        data={item}\n        renderItem={this.renderCellElement}\n      />\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { data, renderItem, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}>\n        {data.map(this.renderRowElement)}\n      </View>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Text } from '../../text/text.component';\n\ninterface ComponentProps extends ViewProps {\n  textStyle?: StyleProp<TextStyle>;\n  children: string;\n}\n\nexport type CalendarDateContentProps = ComponentProps;\nexport type CalendarDateContentElement = React.ReactElement<CalendarDateContentProps>;\n\nexport class CalendarDateContent extends React.Component<CalendarDateContentProps> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, textStyle, children, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, style]}>\n        <Text style={textStyle}>{children}</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","export interface CalendarDateOptions {\n  bounding: boolean;\n  holiday: boolean;\n  range?: boolean;\n}\n\nexport interface CalendarRange<D> {\n  startDate?: D;\n  endDate?: D;\n}\n\nexport interface CalendarDateInfo<D> extends CalendarDateOptions {\n  date: D;\n}\n\nconst VIEW_MODE_DATE: CalendarViewMode = {\n  id: 'DATE',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_YEAR;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n};\n\nconst VIEW_MODE_MONTH: CalendarViewMode = {\n  id: 'MONTH',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n};\n\nconst VIEW_MODE_YEAR: CalendarViewMode = {\n  id: 'YEAR',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_MONTH;\n  },\n};\n\nexport interface CalendarViewMode {\n  id: string;\n  navigationNext: () => CalendarViewMode;\n  pickNext: () => CalendarViewMode;\n}\n\ninterface CalendarViewModes {\n  DATE: CalendarViewMode;\n  MONTH: CalendarViewMode;\n  YEAR: CalendarViewMode;\n}\n\nexport const CalendarViewModes: CalendarViewModes = {\n  DATE: VIEW_MODE_DATE,\n  MONTH: VIEW_MODE_MONTH,\n  YEAR: VIEW_MODE_YEAR,\n};\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { TranslationWidth } from '../i18n/type';\n\nexport abstract class DateService<D> {\n  static DAYS_IN_WEEK: number = 7;\n  static MONTHS_IN_YEAR: number = 12;\n\n  protected locale: string;\n\n  public setLocale(locale: any) {\n    this.locale = locale;\n  }\n\n  public compareDatesSafe(date1: D, date2: D): number {\n    if (date1 && date2) {\n      return this.compareDates(date1, date2);\n    } else if (!date1 && !date2) {\n      return 0;\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date.\n   * */\n  public isBetween(date: D, start: D, end: D): boolean {\n    return this.compareDates(date, start) > 0 && this.compareDates(date, end) < 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date.\n   * */\n  public isBetweenSafe(date: D, start: D, end: D): boolean {\n    return date && start && end && this.compareDates(date, start) > 0 && this.compareDates(date, end) < 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date including bounds.\n   * */\n  public isBetweenIncluding(date: D, start: D, end: D): boolean {\n    return this.compareDates(date, start) >= 0 && this.compareDates(date, end) <= 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date including bounds.\n   * */\n  public isBetweenIncludingSafe(date: D, start: D, end: D): boolean {\n    return date && start && end && this.isBetweenIncluding(date, start, end);\n  }\n\n  /**\n   * Checks is two dates have the same day.\n   * */\n  public isSameDaySafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameDay(date1, date2);\n  }\n\n  /**\n   * Checks is two dates have the same month.\n   * */\n  public isSameMonthSafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameMonth(date1, date2);\n  }\n\n  /**\n   * Checks is two dates have the same year.\n   * */\n  public isSameYearSafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameYear(date1, date2);\n  }\n\n  /**\n   * Returns true if date string is valid date string according to the provided format.\n   * */\n  public abstract isValidDateString(date: string, format: string): boolean;\n\n  /**\n   * Returns today date.\n   * */\n  public abstract today(): D;\n\n  /**\n   * Gets the date of the month component of the given date.\n   */\n  public abstract getDate(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * */\n  public abstract getMonth(date: D): number;\n\n  /**\n   * Gets the year component of the given date.\n   * */\n  public abstract getYear(date: D): number;\n\n  /**\n   * Returns day of the week of the given date.\n   */\n  public abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Returns first day of the week, it can be 1 if week starts from monday\n   * and 0 if from sunday and so on.\n   * */\n  public abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Returns localized month name by date and style.\n   * */\n  public abstract getMonthName(date: D, style?: TranslationWidth): string;\n\n  /**\n   * Returns localized month name by month index and style.\n   * */\n  public abstract getMonthNameByIndex(month: number, style?: TranslationWidth): string;\n\n  /**\n   * Returns localized days names.\n   * */\n  public abstract getDayOfWeekNames(style?: TranslationWidth): string[];\n\n  /**\n   * Parses the date string according to the passed format.\n   * */\n  public abstract parse(date: string, format: string): D;\n\n  /**\n   * Transforms the date to the string according to the passed format.\n   * */\n  public abstract format(date: D, format: string): string;\n\n  /**\n   * Creates new date from year, month and date.\n   * */\n  public abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Checks is two dates have the same year.\n   * */\n  public abstract isSameYear(date1: D, date2: D): boolean;\n\n  /**\n   * Checks is two dates have the same month.\n   * */\n  public abstract isSameMonth(date1: D, date2: D): boolean;\n\n  /**\n   * Checks is two dates have the same day.\n   * */\n  public abstract isSameDay(date1: D, date2: D): boolean;\n\n  /**\n   * Compares two dates.\n   * Returns 0 if dates are the same.\n   * Returns 1 if the first date is greater than the second.\n   * Returns -1 if the second date is greater than the first.\n   * */\n  public abstract compareDates(date1: D, date2: D): number;\n\n  /**\n   * Clones passed date.\n   * */\n  public abstract clone(date: D): D;\n\n  /**\n   * Creates the same date but with day equals to 1.\n   * */\n  public abstract getMonthStart(date: D): D;\n\n  /**\n   * Creates the same date but with day equals to the last day in this month.\n   * */\n  public abstract getMonthEnd(date: D): D;\n\n  /**\n   * Creates the same date but with month equals to 0 and day equals to 1.\n   * */\n  public abstract getYearStart(date: D): D;\n\n  /**\n   * Creates the same date but with month equals to 11 and day equals to 31.\n   * */\n  public abstract getYearEnd(date: D): D;\n\n  /**\n   * Returns number of days in the date.\n   * */\n  public abstract getNumberOfDaysInMonth(date: D): number;\n\n  /**\n   * Returns date with added number of days.\n   * */\n  public abstract addDay(date: D, days: number): D;\n\n  /**\n   * Returns date with added number of months.\n   * */\n  public abstract addMonth(date: D, months: number): D;\n\n  /**\n   * Returns date with added number of years.\n   * */\n  public abstract addYear(date: D, years: number): D;\n\n  public abstract getId(): string;\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\ntype DaysArray = [string, string, string, string, string, string, string];\ntype MonthsArray = [string, string, string, string, string, string, string, string, string, string, string, string];\n\nexport enum TranslationWidth {\n  SHORT = 'short',\n  LONG = 'long',\n}\n\nexport interface I18nDayNames {\n  [TranslationWidth.SHORT]: DaysArray;\n  [TranslationWidth.LONG]: DaysArray;\n}\n\nexport interface I18nMonthNames {\n  [TranslationWidth.SHORT]?: MonthsArray;\n  [TranslationWidth.LONG]?: MonthsArray;\n}\n\nexport interface I18nConfig {\n  dayNames: I18nDayNames;\n  monthNames: I18nMonthNames;\n}\n","import { I18nConfig } from './type';\n\nexport const EN: I18nConfig = {\n  dayNames: {\n    short: [\n      'Su',\n      'Mo',\n      'Tu',\n      'We',\n      'Th',\n      'Fr',\n      'Sa',\n    ],\n    long: [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ],\n  },\n  monthNames: {\n    short: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ],\n    long: [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ],\n  },\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport fecha from 'fecha';\nimport { DateService } from './date.service';\nimport {\n  I18nConfig,\n  TranslationWidth,\n} from '../i18n/type';\nimport { EN } from '../i18n/en';\n\nexport const LOCALE_DEFAULT = 'en';\nexport const FIRST_DAY_OF_WEEK: number = 0;\n\n/**\n * The `NativeDateService` is basic implementation of `DateService` using\n * native js date objects.\n */\nexport class NativeDateService extends DateService<Date> {\n\n  constructor(locale: string = LOCALE_DEFAULT, i18n?: I18nConfig) {\n    super();\n    super.setLocale(i18n ? locale : LOCALE_DEFAULT);\n    this.setFechaLocaleData(i18n || EN);\n  }\n\n  public setLocale(locale: string) {\n    console.warn('Runtime locale is not supported');\n  }\n\n  public isValidDateString(date: string, format: string): boolean {\n    return !isNaN(this.parse(date, format).getTime());\n  }\n\n  public today(): Date {\n    return new Date();\n  }\n\n  public getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  public getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  public getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  public getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  /**\n   * returns first day of the week, it can be 1 if week starts from monday\n   * and 0 if from sunday and so on.\n   * */\n  public getFirstDayOfWeek(): number {\n    return FIRST_DAY_OF_WEEK;\n  }\n\n  public getMonthName(date: Date, style: TranslationWidth = TranslationWidth.SHORT): string {\n    const index: number = date.getMonth();\n\n    return this.getMonthNameByIndex(index, style);\n  }\n\n  public getMonthNameByIndex(index: number, style: TranslationWidth = TranslationWidth.SHORT): string {\n    return this.getFechaMonthNames(style)[index];\n  }\n\n  public getDayOfWeekNames(style: TranslationWidth = TranslationWidth.SHORT): string[] {\n    return this.getFechaDayNames(style);\n  }\n\n  public format(date: Date, format: string): string {\n    return fecha.format(date, format);\n  }\n\n  /**\n   * We haven't got capability to parse date using formatting without third party libraries.\n   * */\n  public parse(date: string, format: string): Date {\n    return new Date(Date.parse(date));\n  }\n\n  public addDay(date: Date, num: number): Date {\n    return this.createDate(date.getFullYear(), date.getMonth(), date.getDate() + num);\n  }\n\n  public addMonth(date: Date, num: number): Date {\n    const month: Date = this.createDate(date.getFullYear(), date.getMonth() + num, 1);\n\n    // In case of date has more days than calculated month js Date will change that month to the next one\n    // because of the date overflow.\n    month.setDate(Math.min(date.getDate(), this.getMonthEnd(month).getDate()));\n\n    return month;\n  }\n\n  public addYear(date: Date, num: number): Date {\n    return this.createDate(date.getFullYear() + num, date.getMonth(), date.getDate());\n  }\n\n  public clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  public compareDates(date1: Date, date2: Date): number {\n    return date1.getTime() - date2.getTime();\n  }\n\n  public compareDatesSafe(date1: Date, date2: Date): number {\n    if (this.compareDates(date1, date2) < 0) {\n      return -1;\n    } else if (this.compareDates(date1, date2) > 0) {\n      return 1;\n    } else if (this.compareDates(date1, date2) === 0) {\n      return 0;\n    }\n  }\n\n  public createDate(year: number, month: number, date: number): Date {\n    const result = new Date(Date.UTC(year, month, date));\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(result.getFullYear() - 1900);\n    }\n\n    return result;\n  }\n\n  public getMonthEnd(date: Date): Date {\n    return this.createDate(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  public getMonthStart(date: Date): Date {\n    return this.createDate(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  public getNumberOfDaysInMonth(date: Date): number {\n    return this.getMonthEnd(date).getDate();\n  }\n\n  public getYearEnd(date: Date): Date {\n    return this.createDate(date.getFullYear(), 11, 31);\n  }\n\n  public getYearStart(date: Date): Date {\n    return this.createDate(date.getFullYear(), 0, 1);\n  }\n\n  public isSameDay(date1: Date, date2: Date): boolean {\n    return this.isSameMonth(date1, date2) && date1.getDate() === date2.getDate();\n  }\n\n  public isSameMonth(date1: Date, date2: Date): boolean {\n    return this.isSameYear(date1, date2) && date1.getMonth() === date2.getMonth();\n  }\n\n  public isSameYear(date1: Date, date2: Date): boolean {\n    return date1.getFullYear() === date2.getFullYear();\n  }\n\n  public getId(): string {\n    return 'native';\n  }\n\n  private getFechaDayNames(style: TranslationWidth) {\n    switch (style) {\n      case TranslationWidth.SHORT:\n        return fecha.i18n.dayNamesShort;\n      case TranslationWidth.LONG:\n        return fecha.i18n.dayNames;\n    }\n  }\n\n  private getFechaMonthNames(style: TranslationWidth) {\n    switch (style) {\n      case TranslationWidth.SHORT:\n        return fecha.i18n.monthNamesShort;\n      case TranslationWidth.LONG:\n        return fecha.i18n.monthNames;\n    }\n  }\n\n  private setFechaLocaleData(config: I18nConfig) {\n    fecha.i18n.dayNames = config.dayNames[TranslationWidth.LONG];\n    fecha.i18n.dayNamesShort = config.dayNames[TranslationWidth.SHORT];\n    fecha.i18n.monthNames = config.monthNames[TranslationWidth.LONG];\n    fecha.i18n.monthNamesShort = config.monthNames[TranslationWidth.SHORT];\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nexport const batch = <T>(target: T[], batchSize: number, offset: number = 0): T[][] => {\n  return target.reduce((res, item, index): T[] => {\n    const chunkIndex = Math.floor((index + offset) / batchSize);\n    if (!res[chunkIndex]) {\n      res[chunkIndex] = [];\n    }\n    res[chunkIndex].push(item);\n\n    return res;\n  }, []);\n};\n\n/**\n * returns array with numbers from zero to bound.\n * */\nexport const range = <T>(bound: number, producer: (number) => T = i => i) => {\n  const arr: T[] = [];\n\n  for (let i = 0; i < bound; i++) {\n    arr.push(producer(i));\n  }\n\n  return arr;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { DateService } from './date.service';\nimport {\n  batch,\n  range,\n} from './helpers';\nimport {\n  CalendarDateInfo,\n  CalendarDateOptions,\n  CalendarRange,\n} from '../type';\n\nconst DEFAULT_DATE_OPTIONS: CalendarDateOptions = {\n  bounding: false,\n  holiday: false,\n  range: false,\n};\n\nexport type DateRange<D> = CalendarDateInfo<D>[];\nexport type DateBatch<D> = DateRange<D>[];\n\nexport class CalendarDataService<D> {\n\n  constructor(protected dateService: DateService<D>) {\n  }\n\n  public createDayPickerData = (date: D, dateRange?: CalendarRange<D>): DateBatch<D> => {\n    const weeks: DateBatch<D> = this.createDates(date, DEFAULT_DATE_OPTIONS, dateRange);\n\n    return this.withBoundingMonths(weeks, date);\n  };\n\n  public createMonthPickerData = (date: D, rows: number, columns: number): DateBatch<D> => {\n    const yearStart: D = this.dateService.getYearStart(date);\n    const monthRange: DateRange<D> = range(rows * columns, (index: number): CalendarDateInfo<D> => {\n      const monthDate: D = this.dateService.addMonth(yearStart, index);\n      return { date: monthDate, ...DEFAULT_DATE_OPTIONS };\n    });\n\n    return batch(monthRange, rows);\n  };\n\n  public createYearPickerData = (date: D, rows: number, columns: number): DateBatch<D> => {\n    const yearStart: D = this.dateService.getYearStart(date);\n    const yearRange: DateRange<D> = range(rows * columns, (index: number): CalendarDateInfo<D> => {\n      const yearDate: D = this.dateService.addYear(yearStart, index);\n      return { date: yearDate, ...DEFAULT_DATE_OPTIONS };\n    });\n\n    return batch(yearRange, rows);\n  };\n\n  public createDayPickerPagerData = (startDate: D, endDate: D): DateRange<D> => {\n    const numberOfDayPickers: number = this.getNumberOfMonths(startDate, endDate) + 1;\n\n    return range(numberOfDayPickers, (index: number): CalendarDateInfo<D> => {\n      const monthDate: D = this.dateService.addMonth(startDate, index);\n      return { date: monthDate, ...DEFAULT_DATE_OPTIONS };\n    });\n  };\n\n  public createYearPickerPagerData = (startDate: D, endDate: D, rows: number, columns: number): DateRange<D> => {\n    const numberOfYears: number = this.getNumberOfYears(startDate, endDate) + 1;\n    const numberOfYearPickers: number = Math.max(Math.ceil(numberOfYears / (rows * columns)), 1);\n\n    return range(numberOfYearPickers, (index: number): CalendarDateInfo<D> => {\n      const yearDate: D = this.dateService.addYear(startDate, index * rows * columns);\n      return { date: yearDate, ...DEFAULT_DATE_OPTIONS };\n    });\n  };\n\n  public getNumberOfMonths = (lhs: D, rhs: D): number => {\n    const numberOfYears: number = this.getNumberOfYears(lhs, rhs);\n    const numberOfMonths: number = this.dateService.getMonth(rhs) - this.dateService.getMonth(lhs);\n\n    return numberOfMonths + numberOfYears * DateService.MONTHS_IN_YEAR;\n  };\n\n  public getNumberOfYears = (lhs: D, rhs: D): number => {\n    return this.dateService.getYear(rhs) - this.dateService.getYear(lhs);\n  };\n\n  private createDates(activeMonth: D, options: CalendarDateOptions, dateRange?: CalendarRange<D>): DateBatch<D> {\n    let days: DateRange<D> = this.createDateRangeForMonth(activeMonth, options);\n\n    if (dateRange) {\n      days = this.withRangedDates(days, dateRange);\n    }\n\n    const startOfWeekDayDiff: number = this.getStartOfWeekDayDiff(activeMonth);\n\n    return batch(days, DateService.DAYS_IN_WEEK, startOfWeekDayDiff);\n  }\n\n  private withRangedDates(days: DateRange<D>, calendarRange: CalendarRange<D>): DateRange<D> {\n    if (calendarRange.startDate && !calendarRange.endDate) {\n      return this.withRangedStartDates(days, calendarRange.startDate);\n    }\n\n    if (calendarRange.startDate && calendarRange.endDate) {\n      return this.withRangedStartEndDates(days, calendarRange.startDate, calendarRange.endDate);\n    }\n\n    return days;\n  }\n\n  private withRangedStartDates(days: DateRange<D>, startDate): DateRange<D> {\n    return days.map((day: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n      const isSameStartDate: boolean = this.dateService.compareDatesSafe(day.date, startDate) === 0;\n      return isSameStartDate ? { ...day, range: true } : day;\n    });\n  }\n\n  private withRangedStartEndDates(days: DateRange<D>, startDate: D, endDate: D): DateRange<D> {\n    return days.map((day: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n      const isSameStartDate: boolean = this.dateService.compareDatesSafe(day.date, startDate) === 0;\n      const isSameEndDate: boolean = this.dateService.compareDatesSafe(day.date, endDate) === 0;\n\n      if (isSameStartDate || isSameEndDate) {\n        return { ...day, range: true };\n      } else {\n        const isInRange: boolean = this.dateService.isBetween(day.date, startDate, endDate);\n        return { ...day, range: isInRange };\n      }\n    });\n  }\n\n  private withBoundingMonths(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    let withBoundingMonths: DateBatch<D> = weeks;\n\n    if (this.isShouldAddPrevBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addPrevBoundingMonth(withBoundingMonths, activeMonth);\n    }\n\n    if (this.isShouldAddNextBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addNextBoundingMonth(withBoundingMonths, activeMonth);\n    }\n\n    return withBoundingMonths;\n  }\n\n  private addPrevBoundingMonth(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    const firstWeek: DateRange<D> = weeks.shift();\n    const numberOfBoundingDates: number = DateService.DAYS_IN_WEEK - firstWeek.length;\n    firstWeek.unshift(...this.createPrevBoundingDays(activeMonth, numberOfBoundingDates));\n\n    return [firstWeek, ...weeks];\n  }\n\n  private addNextBoundingMonth(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    const lastWeek: DateRange<D> = weeks.pop();\n    const numberOfBoundingDates: number = DateService.DAYS_IN_WEEK - lastWeek.length;\n    lastWeek.push(...this.createNextBoundingDays(activeMonth, numberOfBoundingDates));\n\n    return [...weeks, lastWeek];\n  }\n\n  private createPrevBoundingDays(activeMonth: D, numberOfBoundingDates: number): DateRange<D> {\n    const month: D = this.dateService.addMonth(activeMonth, -1);\n    const daysInMonth: number = this.dateService.getNumberOfDaysInMonth(month);\n\n    return this.createDateRangeForMonth(month, DEFAULT_DATE_OPTIONS)\n      .slice(daysInMonth - numberOfBoundingDates)\n      .map((date: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n        return { ...date, bounding: true };\n      });\n  }\n\n  private createNextBoundingDays(activeMonth: D, numberOfBoundingDates: number): DateRange<D> {\n    const month: D = this.dateService.addMonth(activeMonth, 1);\n\n    return this.createDateRangeForMonth(month, DEFAULT_DATE_OPTIONS)\n      .slice(0, numberOfBoundingDates)\n      .map((date: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n        return { ...date, bounding: true };\n      });\n  }\n\n  private getStartOfWeekDayDiff(date: D): number {\n    const startOfMonth: D = this.dateService.getMonthStart(date);\n\n    return this.getWeekStartDiff(startOfMonth);\n  }\n\n  private getWeekStartDiff(date: D): number {\n    return (\n      DateService.DAYS_IN_WEEK\n      - this.dateService.getFirstDayOfWeek()\n      + this.dateService.getDayOfWeek(date)\n    ) % DateService.DAYS_IN_WEEK;\n  }\n\n  private isShouldAddPrevBoundingMonth(weeks: DateBatch<D>): boolean {\n    return weeks[0].length < DateService.DAYS_IN_WEEK;\n  }\n\n  private isShouldAddNextBoundingMonth(weeks: DateBatch<D>): boolean {\n    return weeks[weeks.length - 1].length < DateService.DAYS_IN_WEEK;\n  }\n\n  private createDateRangeForMonth(monthDate: D, options: CalendarDateOptions): DateRange<D> {\n    const daysInMonth: number = this.dateService.getNumberOfDaysInMonth(monthDate);\n\n    return range(daysInMonth, (i: number): CalendarDateInfo<D> => {\n      const year: number = this.dateService.getYear(monthDate);\n      const month: number = this.dateService.getMonth(monthDate);\n      const date: D = this.dateService.createDate(year, month, i + 1);\n\n      return { date, ...options };\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\n\nexport type DividerProps = StyledComponentProps & ViewProps;\nexport type DividerElement = React.ReactElement<DividerProps>;\n\nclass DividerComponent extends React.Component<DividerProps> {\n\n  static styledComponentName: string = 'Divider';\n\n  public render(): DividerElement {\n    const { style, themedStyle, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[themedStyle, style]}\n      />\n    );\n  }\n}\n\nexport const Divider = styled<DividerProps>(DividerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { StyleType } from '@kitten/theme';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  CalendarHeader,\n  CalendarHeaderElement,\n} from './components/calendarHeader.component';\nimport { CalendarMonthHeader } from './components/calendarMonthHeader.component';\nimport {\n  CalendarPager,\n  CalendarPagerElement,\n} from './components/calendarPager.component';\nimport {\n  CalendarPicker,\n  CalendarPickerElement,\n} from './components/picker/calendarPicker.component';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport {\n  CalendarDateContent,\n  CalendarDateContentElement,\n} from './components/calendarDateContent.component';\nimport {\n  CalendarDateInfo,\n  CalendarViewMode,\n  CalendarViewModes,\n} from './type';\nimport { DateService } from './service/date.service';\nimport { NativeDateService } from './service/nativeDate.service';\nimport {\n  CalendarDataService,\n  DateBatch,\n} from './service/calendarData.service';\nimport { Divider } from '../divider/divider.component';\n\nexport interface BaseCalendarProps<D> extends ViewProps {\n  min?: D;\n  max?: D;\n  dateService?: DateService<D>;\n  boundingMonth?: boolean;\n  startView?: CalendarViewMode;\n  title?: (date: D, viewMode: CalendarViewMode) => string;\n  todayTitle?: (date: D) => string;\n  filter?: (date: D) => boolean;\n  renderFooter?: () => React.ReactElement<any>;\n  renderDay?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement<any>;\n  renderMonth?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement<any>;\n  renderYear?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement<any>;\n  themedStyle?: StyleType;\n}\n\ninterface State<D> {\n  viewMode: CalendarViewMode;\n  visibleDate: D;\n}\n\nexport type BaseCalendarElement<D> = React.ReactElement<BaseCalendarProps<D>>;\n\nconst PICKER_ROWS: number = 4;\nconst PICKER_COLUMNS: number = 3;\nconst VIEWS_IN_PICKER: number = PICKER_ROWS * PICKER_COLUMNS;\n\nconst FORMAT_DAY: string = 'D';\nconst FORMAT_MONTH: string = 'MMM';\nconst FORMAT_YEAR: string = 'YYYY';\nconst FORMAT_HEADER_DATE: string = 'MMM YYYY';\nconst FORMAT_HEADER_MONTH: string = 'YYYY';\nconst FORMAT_HEADER_YEAR: string = 'YYYY';\n\nexport abstract class BaseCalendarComponent<D, P> extends React.Component<BaseCalendarProps<D> & P, State<D>> {\n\n  static defaultProps = {\n    dateService: new NativeDateService(),\n    boundingMonth: true,\n    startView: CalendarViewModes.DATE,\n  };\n\n  public state: State<D> = {\n    viewMode: this.props.startView,\n    visibleDate: this.dateService.getMonthStart(this.getSelectedDate()),\n  };\n\n  protected abstract onDaySelect(item: any): void;\n\n  protected abstract isDaySelected(date: CalendarDateInfo<D>): boolean;\n\n  protected abstract getSelectedDate(): D;\n\n  protected abstract getDayPickerData(date: CalendarDateInfo<D>): DateBatch<D>;\n\n  protected abstract shouldUpdateDayElement(props: CalendarPickerCellProps<D>,\n                                            nextProps: CalendarPickerCellProps<D>): boolean;\n\n  protected dataService: CalendarDataService<D> = new CalendarDataService(this.dateService);\n\n  protected get dateService(): DateService<D> {\n    return this.props.dateService;\n  }\n\n  private get min(): D {\n    return this.props.min || this.dateService.getYearStart(this.dateService.today());\n  }\n\n  private get max(): D {\n    return this.props.max || this.dateService.getYearEnd(this.dateService.today());\n  }\n\n  private calendarDayPagerRef: React.RefObject<CalendarPager<D>> = React.createRef();\n  private calendarYearPagerRef: React.RefObject<CalendarPager<D>> = React.createRef();\n\n  public scrollToToday = (): void => {\n    this.setState({\n      viewMode: CalendarViewModes.DATE,\n      visibleDate: this.dateService.today(),\n    });\n  };\n\n  private onSelect = (item: CalendarDateInfo<D>): void => {\n    this.onDaySelect(item);\n  };\n\n  private onMonthSelect = (date: CalendarDateInfo<D>): void => {\n    const nextVisibleDate: D = this.dateService.createDate(\n      this.dateService.getYear(this.state.visibleDate),\n      this.dateService.getMonth(date.date),\n      this.dateService.getDate(this.state.visibleDate),\n    );\n\n    this.setState({\n      viewMode: this.state.viewMode.pickNext(),\n      visibleDate: nextVisibleDate,\n    });\n  };\n\n  private onYearSelect = (date: CalendarDateInfo<D>): void => {\n    const nextVisibleDate: D = this.dateService.createDate(\n      this.dateService.getYear(date.date),\n      this.dateService.getMonth(this.state.visibleDate),\n      this.dateService.getDate(this.state.visibleDate),\n    );\n\n    this.setState({\n      viewMode: this.state.viewMode.pickNext(),\n      visibleDate: nextVisibleDate,\n    });\n  };\n\n  private onDayPickerPagerSelect = (index: number): void => {\n    const yearStart: D = this.dateService.getYearStart(this.min);\n    this.setState({\n      visibleDate: this.dateService.addMonth(yearStart, index),\n    });\n  };\n\n  private onYearPickerPagerSelect = (index: number): void => {\n    const yearStart: D = this.dateService.getYearStart(this.min);\n    this.setState({\n      visibleDate: this.dateService.addYear(yearStart, index * VIEWS_IN_PICKER),\n    });\n  };\n\n  private onPickerNavigationPress = (): void => {\n    this.setState({\n      viewMode: this.state.viewMode.navigationNext(),\n    });\n  };\n\n  private onCalendarPagerLeft = (): void => {\n    this.onCalendarPagerMove(-1);\n  };\n\n  private onCalendarPagerRight = (): void => {\n    this.onCalendarPagerMove(1);\n  };\n\n  private onCalendarPagerMove = (step: number): void => {\n    const ref: React.RefObject<CalendarPager<D>> = this.getCurrentPagerRef();\n    const index: number = this.getCalendarPagerIndex();\n\n    this.onCalendarPagerMoveStart(ref, index, step);\n  };\n\n  private onCalendarPagerMoveStart = (ref: React.RefObject<CalendarPager<D>>,\n                                      index: number,\n                                      step: number): void => {\n\n    ref.current.scrollToIndex({\n      index: index + step,\n      animated: true,\n    });\n  };\n\n  private shouldUpdateDayItem = (props: CalendarPickerCellProps<D>,\n                                 nextProps: CalendarPickerCellProps<D>): boolean => {\n\n    return this.shouldUpdateDayElement(props, nextProps);\n  };\n\n  public getCalendarStyle = (source: StyleType): StyleType => {\n    return {\n      container: {\n        paddingVertical: source.paddingVertical,\n        borderColor: source.borderColor,\n        borderWidth: source.borderWidth,\n        borderRadius: source.borderRadius,\n        maxWidth: source.maxWidth,\n        maxHeight: source.maxHeight,\n      },\n      headerContainer: {\n        paddingHorizontal: source.headerPaddingHorizontal,\n        paddingVertical: source.headerPaddingVertical,\n      },\n      title: {\n        fontSize: source.titleFontSize,\n        fontWeight: source.titleFontWeight,\n        lineHeight: source.titleLineHeight,\n        color: source.titleColor,\n        fontFamily: source.titleFontFamily,\n      },\n      icon: {\n        width: source.iconWidth,\n        height: source.iconHeight,\n        tintColor: source.iconTintColor,\n      },\n      divider: {\n        marginVertical: source.dividerMarginVertical,\n      },\n      daysHeaderContainer: {\n        marginHorizontal: source.rowMarginHorizontal,\n      },\n      row: {\n        minHeight: source.rowMinHeight,\n        marginHorizontal: source.rowMarginHorizontal,\n      },\n    };\n  };\n\n  private getWeekdayStyle = (source: StyleType): StyleType => {\n    return {\n      fontSize: source.weekdayTextFontSize,\n      fontWeight: source.weekdayTextFontWeight,\n      lineHeight: source.weekdayTextLineHeight,\n      color: source.weekdayTextColor,\n      fontFamily: source.weekdayTextFontFamily,\n    };\n  };\n\n  private getIsDaySelected = (date: CalendarDateInfo<D>): boolean => {\n    return this.isDaySelected(date);\n  };\n\n  private isMonthSelected = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameMonthSafe(date.date, this.getSelectedDate());\n  };\n\n  private isYearSelected = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameYearSafe(date.date, this.getSelectedDate());\n  };\n\n  public isDayDisabled = (date: CalendarDateInfo<D>): boolean => {\n    return !this.isDateFitsBounds(date) || this.isDateFitsFilter(date);\n  };\n\n  private isMonthDisabled = (date: CalendarDateInfo<D>): boolean => {\n    return !this.isDateFitsBounds(date) || this.isDateFitsFilter(date);\n  };\n\n  private isYearDisabled = (date: CalendarDateInfo<D>): boolean => {\n    return !this.isDateFitsBounds(date) || this.isDateFitsFilter(date);\n  };\n\n  public isDayToday = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameDaySafe(date.date, this.dateService.today());\n  };\n\n  private isMonthToday = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameMonthSafe(date.date, this.dateService.today());\n  };\n\n  private isYearToday = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameYearSafe(date.date, this.dateService.today());\n  };\n\n  private isDateFitsFilter = (date: CalendarDateInfo<D>): boolean => {\n    return this.props.filter && !this.props.filter(date.date) || false;\n  };\n\n  private isDateFitsBounds = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isBetweenIncludingSafe(date.date, this.min, this.max);\n  };\n\n  private isDayPickerInViewPort = (index: number): boolean => {\n    const visibleDayPickerIndex: number = this.dataService.getNumberOfMonths(this.min, this.state.visibleDate);\n\n    return index === visibleDayPickerIndex || Math.abs(index - visibleDayPickerIndex) === 1;\n  };\n\n  private isYearPickerInViewPort = (index: number): boolean => {\n    const numberOfYears: number = this.dataService.getNumberOfYears(this.min, this.state.visibleDate);\n    const visibleYearPickerIndex: number = Math.floor(numberOfYears / VIEWS_IN_PICKER);\n\n    return index === visibleYearPickerIndex || Math.abs(index - visibleYearPickerIndex) === 1;\n  };\n\n  private createHeaderTitle = (date: D, viewMode: CalendarViewMode): string => {\n    switch (viewMode) {\n      case CalendarViewModes.DATE:\n        return this.dateService.format(date, FORMAT_HEADER_DATE);\n      case CalendarViewModes.MONTH: {\n        return this.dateService.format(date, FORMAT_HEADER_MONTH);\n      }\n      case CalendarViewModes.YEAR: {\n        const minDateFormat: string = this.dateService.format(this.min, FORMAT_HEADER_YEAR);\n        const maxDateFormat: string = this.dateService.format(this.max, FORMAT_HEADER_YEAR);\n\n        return `${minDateFormat} - ${maxDateFormat}`;\n      }\n    }\n  };\n\n  private getCalendarPagerIndex = (): number => {\n    switch (this.state.viewMode.id) {\n      case CalendarViewModes.DATE.id:\n        return this.dataService.getNumberOfMonths(this.min, this.state.visibleDate);\n      case CalendarViewModes.YEAR.id:\n        return Math.floor(this.dataService.getNumberOfYears(this.min, this.state.visibleDate) / VIEWS_IN_PICKER);\n    }\n  };\n\n  private getCurrentPagerRef = (): React.RefObject<CalendarPager<D>> => {\n    switch (this.state.viewMode.id) {\n      case CalendarViewModes.DATE.id:\n        return this.calendarDayPagerRef;\n      case CalendarViewModes.YEAR.id:\n        return this.calendarYearPagerRef;\n    }\n  };\n\n  private isLateralNavigationAllowed = (): boolean => {\n    const { viewMode } = this.state;\n    return viewMode.id === CalendarViewModes.DATE.id || viewMode.id === CalendarViewModes.YEAR.id;\n  };\n\n  private renderWeekdayElement = (weekday: string, index: number): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        key={index}\n        textStyle={this.getWeekdayStyle(this.props.themedStyle)}>\n        {weekday}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderDayElement = (date: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={style.container}\n        textStyle={style.text}>\n        {this.dateService.format(date.date, FORMAT_DAY)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderDayIfNeeded = (item: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    const shouldRender: boolean = !item.bounding || this.props.boundingMonth;\n\n    if (shouldRender) {\n      const renderSelector = this.props.renderDay || this.renderDayElement;\n      return renderSelector(item, style);\n    }\n\n    return null;\n  };\n\n  private renderMonthElement = (date: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={[style.container, styles.monthCell]}\n        textStyle={style.text}>\n        {this.dateService.format(date.date, FORMAT_MONTH)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderYearElement = (date: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={[style.container, styles.yearCell]}\n        textStyle={style.text}>\n        {this.dateService.format(date.date, FORMAT_YEAR)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderDayPickerElement = (date: CalendarDateInfo<D>, index: number): CalendarPickerElement<D> => {\n    const { row } = this.getCalendarStyle(this.props.themedStyle);\n\n    return (\n      <CalendarPicker\n        key={index}\n        category='day'\n        data={this.getDayPickerData(date)}\n        rowStyle={row}\n        onSelect={this.onSelect}\n        isItemSelected={this.getIsDaySelected}\n        isItemDisabled={this.isDayDisabled}\n        isItemToday={this.isDayToday}\n        shouldItemUpdate={this.shouldUpdateDayItem}\n        renderItem={this.renderDayIfNeeded}\n      />\n    );\n  };\n\n  private renderDayPickerPagerElement = (date: D): React.ReactElement<ViewProps> => {\n    const { themedStyle } = this.props;\n    const { divider, daysHeaderContainer } = this.getCalendarStyle(themedStyle);\n    const visibleDayPickerIndex: number = this.dataService.getNumberOfMonths(this.min, this.state.visibleDate);\n\n    return (\n      <React.Fragment>\n        <CalendarMonthHeader\n          style={daysHeaderContainer}\n          data={this.dateService.getDayOfWeekNames()}>\n          {this.renderWeekdayElement}\n        </CalendarMonthHeader>\n        <Divider style={divider}/>\n        <CalendarPager\n          ref={this.calendarDayPagerRef}\n          selectedIndex={visibleDayPickerIndex}\n          data={this.dataService.createDayPickerPagerData(this.min, this.max)}\n          onSelect={this.onDayPickerPagerSelect}\n          shouldLoadComponent={this.isDayPickerInViewPort}>\n          {this.renderDayPickerElement}\n        </CalendarPager>\n      </React.Fragment>\n    );\n  };\n\n  private renderMonthPickerElement = (date: D): CalendarPagerElement<D> => {\n    const { row } = this.getCalendarStyle(this.props.themedStyle);\n\n    return (\n      <CalendarPicker\n        category='month'\n        data={this.dataService.createMonthPickerData(date, PICKER_ROWS, PICKER_COLUMNS)}\n        rowStyle={row}\n        onSelect={this.onMonthSelect}\n        isItemSelected={this.isMonthSelected}\n        isItemDisabled={this.isMonthDisabled}\n        isItemToday={this.isMonthToday}\n        renderItem={this.props.renderMonth || this.renderMonthElement}\n      />\n    );\n  };\n\n  private renderYearPickerElement = (date: CalendarDateInfo<D>, index: number): React.ReactElement<ViewProps> => {\n    const { row } = this.getCalendarStyle(this.props.themedStyle);\n\n    return (\n      <CalendarPicker\n        key={index}\n        category='year'\n        data={this.dataService.createYearPickerData(date.date, PICKER_ROWS, PICKER_COLUMNS)}\n        rowStyle={row}\n        onSelect={this.onYearSelect}\n        isItemSelected={this.isYearSelected}\n        isItemDisabled={this.isYearDisabled}\n        isItemToday={this.isYearToday}\n        renderItem={this.props.renderYear || this.renderYearElement}\n      />\n    );\n  };\n\n  private renderYearPickerPagerElement = (date: D): CalendarPagerElement<D> => {\n    const numberOfYears: number = this.dataService.getNumberOfYears(this.min, this.state.visibleDate);\n    const visibleYearPickerIndex: number = Math.floor(numberOfYears / VIEWS_IN_PICKER);\n\n    return (\n      <CalendarPager\n        ref={this.calendarYearPagerRef}\n        selectedIndex={visibleYearPickerIndex}\n        data={this.dataService.createYearPickerPagerData(this.min, this.max, PICKER_ROWS, PICKER_COLUMNS)}\n        onSelect={this.onYearPickerPagerSelect}\n        shouldLoadComponent={this.isYearPickerInViewPort}>\n        {this.renderYearPickerElement}\n      </CalendarPager>\n    );\n  };\n\n  private renderPickerElement = (date: D): React.ReactElement<ViewProps> => {\n    switch (this.state.viewMode.id) {\n      case CalendarViewModes.DATE.id:\n        return this.renderDayPickerPagerElement(date);\n      case CalendarViewModes.MONTH.id:\n        return this.renderMonthPickerElement(date);\n      case CalendarViewModes.YEAR.id:\n        return this.renderYearPickerPagerElement(date);\n    }\n  };\n\n  private renderCalendarFooter = (): React.ReactElement<any> => {\n    const { renderFooter } = this.props;\n\n    return renderFooter && renderFooter();\n  };\n\n  private renderCalendarHeader = (): CalendarHeaderElement => {\n    const { themedStyle, title } = this.props;\n    const { headerContainer, title: titleStyle, icon } = this.getCalendarStyle(themedStyle);\n\n    const titleSelector = title || this.createHeaderTitle;\n\n    return (\n      <CalendarHeader\n        style={headerContainer}\n        title={titleSelector(this.state.visibleDate, this.state.viewMode)}\n        titleStyle={titleStyle}\n        iconStyle={icon}\n        lateralNavigationAllowed={this.isLateralNavigationAllowed()}\n        onTitlePress={this.onPickerNavigationPress}\n        onLeft={this.onCalendarPagerLeft}\n        onRight={this.onCalendarPagerRight}\n      />\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, themedStyle, ...restProps } = this.props;\n    const { container } = this.getCalendarStyle(themedStyle);\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, container, style]}>\n        {this.renderCalendarHeader()}\n        {this.renderPickerElement(this.state.visibleDate)}\n        {this.renderCalendarFooter()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  monthCell: {\n    aspectRatio: 0.25 * DateService.DAYS_IN_WEEK,\n  },\n  yearCell: {\n    aspectRatio: 0.25 * DateService.DAYS_IN_WEEK,\n  },\n});\n","import React from 'react';\nimport {\n  BaseCalendarComponent,\n  BaseCalendarProps,\n} from './baseCalendar.component';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport { CalendarDateInfo } from './type';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport { DateBatch } from './service/calendarData.service';\n\nexport interface ComponentProps<D> {\n  date?: D;\n  onSelect: (date: D) => void;\n}\n\nexport type CalendarProps<D> = ComponentProps<D> & BaseCalendarProps<D> & StyledComponentProps;\nexport type CalendarElement<D> = React.ReactElement<CalendarProps<D>>;\n\n/**\n * Styled `Calendar` component.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {D} date - Date which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => string} todayTitle - Defines the title for today's date.\n *\n * @property {(date: D) => boolean} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderYear - Should return the content of year cell.\n *\n * @overview-example CalendarSimpleUsage\n *\n * @overview-example CalendarBoundingMonth\n *\n * @overview-example CalendarFilter\n *\n * @overview-example CalendarCustomLocale\n *\n * @example CalendarMoment\n *\n * @example CalendarCustomDay\n */\nexport class CalendarComponent<D> extends BaseCalendarComponent<D, CalendarProps<D>> {\n\n  static styledComponentName: string = 'Calendar';\n\n  // BaseCalendarComponent\n\n  public onDaySelect(date: CalendarDateInfo<D>): void {\n    const { onSelect } = this.props;\n\n    if (onSelect) {\n      onSelect(date.date);\n    }\n  }\n\n  public getDayPickerData(date: CalendarDateInfo<D>): DateBatch<D> {\n    return this.dataService.createDayPickerData(date.date);\n  }\n\n  public getSelectedDate(): D {\n    return this.props.date || this.dateService.today();\n  }\n\n  public isDaySelected(date: CalendarDateInfo<D>): boolean {\n    return this.dateService.isSameDaySafe(date.date, this.getSelectedDate());\n  }\n\n  public shouldUpdateDayElement(props: CalendarPickerCellProps<D>,\n                                nextProps: CalendarPickerCellProps<D>): boolean {\n\n    const dateChanged: boolean = this.dateService.compareDatesSafe(props.date.date, nextProps.date.date) !== 0;\n\n    if (dateChanged) {\n      return true;\n    }\n\n    const selectionChanged: boolean = props.selected !== nextProps.selected;\n    const disablingChanged: boolean = props.disabled !== nextProps.disabled;\n\n    const value: boolean = selectionChanged || disablingChanged;\n\n    if (value) {\n      return true;\n    }\n\n    return props.theme !== nextProps.theme;\n  }\n}\n\nexport const Calendar = styled(CalendarComponent);\n","import { DateService } from './date.service';\nimport {\n  CalendarDateInfo,\n  CalendarRange,\n} from '../type';\n\nexport class RangeDateService<D> {\n\n  private dateService: DateService<D>;\n\n  constructor(dateService: DateService<D>) {\n    this.dateService = dateService;\n  }\n\n  public createRange(range: CalendarRange<D>, date: CalendarDateInfo<D>): CalendarRange<D> {\n    switch (true) {\n      case (!range.startDate && !range.endDate):\n        return { startDate: date.date, endDate: null };\n      case (range.startDate && !range.endDate):\n        return this.createRangeForStart(range, date);\n      case (range.startDate !== null && range.endDate !== null):\n        return this.createRangeForStartEnd(date);\n      default:\n        return range;\n    }\n  }\n\n  private createRangeForStart(range: CalendarRange<D>, date: CalendarDateInfo<D>): CalendarRange<D> {\n    if (this.dateService.compareDatesSafe(date.date, range.startDate) === 1) {\n      return { startDate: range.startDate, endDate: date.date };\n    } else if (this.dateService.compareDatesSafe(date.date, range.startDate) === -1) {\n      return { startDate: date.date, endDate: range.startDate };\n    } else {\n      return range;\n    }\n  }\n\n  private createRangeForStartEnd(date: CalendarDateInfo<D>): CalendarRange<D> {\n    return { startDate: date.date, endDate: null};\n  }\n}\n","import React from 'react';\nimport {\n  BaseCalendarComponent,\n  BaseCalendarProps,\n} from './baseCalendar.component';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport {\n  CalendarDateInfo,\n  CalendarRange,\n} from './type';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport { DateBatch } from './service/calendarData.service';\nimport { RangeDateService } from './service/rangeDate.service';\n\nexport interface ComponentProps<D> {\n  range: CalendarRange<D>;\n  onSelect: (range: CalendarRange<D>) => void;\n}\n\nexport type RangeCalendarProps<D> = ComponentProps<D> & BaseCalendarProps<D> & StyledComponentProps;\nexport type RangeCalendarElement<D> = React.ReactElement<RangeCalendarProps<D>>;\n\n/**\n * Styled `RangeCalendar` component.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {CalendarRange<D>} range - Range which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => string} todayTitle - Defines the title for today's date.\n *\n * @property {(date: D) => ReactElement<any>} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderYear - Should return the content of year cell.\n *\n * @overview-example RangeCalendarSimpleUsage\n */\nexport class RangeCalendarComponent<D> extends BaseCalendarComponent<D, RangeCalendarProps<D>> {\n\n  static styledComponentName: string = 'Calendar';\n\n  private rangeDateService: RangeDateService<D> = new RangeDateService(this.dateService);\n\n  // BaseCalendarComponent\n\n  protected onDaySelect(date: CalendarDateInfo<D>): void {\n    const { range, onSelect } = this.props;\n\n    const calendarRange: CalendarRange<D> = this.rangeDateService.createRange(range, date);\n    onSelect && onSelect(calendarRange);\n  }\n\n  protected getSelectedDate(): D {\n    return this.dateService.today();\n  }\n\n  protected isDaySelected(date: CalendarDateInfo<D>): boolean {\n    return false;\n  }\n\n  protected shouldUpdateDayElement(props: CalendarPickerCellProps<D>,\n                                nextProps: CalendarPickerCellProps<D>): boolean {\n\n    const dateChanged: boolean = this.dateService.compareDatesSafe(props.date.date, nextProps.date.date) !== 0;\n\n    if (dateChanged) {\n      return true;\n    }\n\n    const selectionChanged: boolean = props.selected !== nextProps.selected;\n    const disablingChanged: boolean = props.disabled !== nextProps.disabled;\n    const rangeChanged: boolean = props.range !== nextProps.range;\n    const rangeStartPlaceChanged: boolean = props.firstRangeItem !== nextProps.firstRangeItem;\n    const rangeEndPlaceChanged: boolean = props.lastRangeItem !== nextProps.lastRangeItem;\n\n    const shouldUpdate: boolean =\n      selectionChanged\n      || disablingChanged\n      || rangeChanged\n      || rangeStartPlaceChanged\n      || rangeEndPlaceChanged;\n\n    if (shouldUpdate) {\n      return true;\n    }\n\n    return props.theme !== nextProps.theme;\n  }\n\n  protected getDayPickerData(date: CalendarDateInfo<D>): DateBatch<D> {\n    return this.dataService.createDayPickerData(date.date, this.props.range);\n  }\n}\n\nexport const RangeCalendar = styled(RangeCalendarComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  Insets,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { CheckMark } from '../support/components';\nimport { isValidString } from '../support/services';\n\ntype IconElement = React.ReactElement<ViewProps>;\n\ninterface ComponentProps {\n  textStyle?: StyleProp<TextStyle>;\n  text?: string;\n  checked?: boolean;\n  indeterminate?: boolean;\n  status?: string;\n  onChange?: (checked: boolean, indeterminate: boolean) => void;\n}\n\nexport type CheckBoxProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type CheckBoxElement = React.ReactElement<CheckBoxProps>;\n\n/**\n * Styled `CheckBox` component.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Determines whether component is checked.`\n * Default is `false`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning`, `danger`, `basic` or `control`.\n * Default is `basic`.\n *\n * @property {string} text - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(checked: boolean) => void} onChange - Fires on checkbox value change.\n *\n * @property TouchableOpacityProps\n *\n * @property StyledComponentProps\n *\n * @overview-example CheckboxSimpleUsage\n *\n * @overview-example CheckboxStatus\n *\n * @overview-example CheckboxText\n *\n * @example CheckboxIndeterminate\n *\n * @example CheckboxInlineStyling\n */\nclass CheckBoxComponent extends React.Component<CheckBoxProps> {\n\n  static styledComponentName: string = 'CheckBox';\n\n  private onPress = () => {\n    this.props.dispatch([]);\n\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked, false);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent) => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent) => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconBorderRadius,\n      iconTintColor,\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: {},\n      highlightContainer: {},\n      selectContainer: containerParameters,\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        borderRadius: iconBorderRadius,\n        backgroundColor: iconTintColor,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n    };\n  };\n\n  private createHitSlopInsets = (style: StyleProp<ViewStyle>): Insets => {\n    const { width } = StyleSheet.flatten(style);\n\n    // @ts-ignore: `width` is restricted to be a number\n    const value: number = 40 - width;\n\n    return {\n      left: value,\n      top: value,\n      right: value,\n      bottom: value,\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    const { text, textStyle } = this.props;\n\n    return (\n      <Text style={[style, styles.text, textStyle]}>{text}</Text>\n    );\n  };\n\n  private renderSelectIconElement = (style: ViewStyle): IconElement => {\n    return (\n      <CheckMark style={[style, styles.icon]}/>\n    );\n  };\n\n  private renderIndeterminateIconElement = (style: ViewStyle): IconElement => {\n    return (\n      <View style={[style, styles.icon]}/>\n    );\n  };\n\n  private renderIconElement = (style: ViewStyle): IconElement => {\n    if (this.props.indeterminate) {\n      return this.renderIndeterminateIconElement(style);\n    } else {\n      return this.renderSelectIconElement(style);\n    }\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { text } = this.props;\n\n    return [\n      this.renderIconElement(style.icon),\n      isValidString(text) && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, disabled, text, ...derivedProps } = this.props;\n\n    const {\n      container,\n      highlightContainer,\n      highlight,\n      selectContainer,\n      ...componentStyle\n    } = this.getComponentStyle(themedStyle);\n\n    const selectContainerStyle: StyleProp<ViewStyle> = [selectContainer, styles.selectContainer];\n    const hitSlopInsets: Insets = this.createHitSlopInsets(selectContainerStyle);\n\n    const [iconElement, textElement] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <TouchableOpacity\n        style={[container, styles.container, style]}\n        activeOpacity={1.0}\n        disabled={disabled}\n        hitSlop={hitSlopInsets}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <View style={[highlightContainer, styles.highlightContainer]}>\n          <View style={[highlight, styles.highlight]}/>\n          <TouchableOpacity\n            activeOpacity={1.0}\n            {...derivedProps}\n            disabled={disabled}\n            style={selectContainerStyle}\n            onPress={this.onPress}\n            onPressIn={this.onPressIn}\n            onPressOut={this.onPressOut}>\n            {iconElement}\n          </TouchableOpacity>\n        </View>\n        {textElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  highlightContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  highlight: {\n    position: 'absolute',\n  },\n  icon: {},\n  text: {},\n});\n\nexport const CheckBox = styled<CheckBoxProps>(CheckBoxComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  FlexStyle,\n  StyleProp,\n  StyleSheet,\n} from 'react-native';\nimport { I18nLayoutService } from '../support/services';\n\nexport class Point {\n\n  readonly x: number;\n  readonly y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  static zero(): Point {\n    return new Point(0, 0);\n  }\n}\n\nexport class Size {\n\n  readonly width: number;\n  readonly height: number;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  static zero(): Size {\n    return new Size(0, 0);\n  }\n}\n\nexport class Frame {\n\n  readonly origin: Point;\n  readonly size: Size;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    this.origin = new Point(x, y);\n    this.size = new Size(width, height);\n  }\n\n  /**\n   * Creates new frame aligned to left of other\n   */\n  public leftOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x - this.size.width,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to top of other\n   */\n  public topOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y - this.size.height,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to right of other\n   */\n  public rightOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x + other.size.width,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to bottom of other\n   */\n  public bottomOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y + other.size.height,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame centered horizontally to other\n   */\n  public centerHorizontalOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x + (other.size.width - this.size.width) / 2,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame centered vertically to other\n   */\n  public centerVerticalOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y + (other.size.height - this.size.height) / 2,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  static zero(): Frame {\n    return Frame.from(Point.zero(), Size.zero());\n  }\n\n  static from(point: Point, size: Size): Frame {\n    return new Frame(point.x, point.y, size.width, size.height);\n  }\n}\n\nexport interface OffsetValue {\n  rawValue: string;\n\n  applyToRect(rect: OffsetRect, value: number): OffsetRect;\n}\n\nexport class OffsetRect {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n\n  static zero(): OffsetRect {\n    return { left: 0, top: 0, right: 0, bottom: 0 };\n  }\n}\n\nexport class Offsets {\n\n  static MARGIN: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'margin';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return {\n        left: value,\n        top: value,\n        right: value,\n        bottom: value,\n      };\n    }\n  };\n\n  static MARGIN_HORIZONTAL: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginHorizontal';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, left: value, right: value };\n    }\n  };\n\n  static MARGIN_VERTICAL: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginVertical';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, top: value, bottom: value };\n    }\n  };\n\n  static MARGIN_LEFT: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginLeft';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, left: value };\n    }\n  };\n\n  static MARGIN_TOP: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginTop';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, top: value };\n    }\n  };\n\n  static MARGIN_RIGHT: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginRight';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, right: value };\n    }\n  };\n\n  static MARGIN_BOTTOM: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginBottom';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, bottom: value };\n    }\n  };\n\n  static find(source: StyleProp<FlexStyle>): OffsetRect {\n    const keys: string[] = [\n      Offsets.MARGIN.rawValue,\n      Offsets.MARGIN_HORIZONTAL.rawValue,\n      Offsets.MARGIN_VERTICAL.rawValue,\n      Offsets.MARGIN_LEFT.rawValue,\n      Offsets.MARGIN_TOP.rawValue,\n      Offsets.MARGIN_RIGHT.rawValue,\n      Offsets.MARGIN_BOTTOM.rawValue,\n    ];\n\n    const flatStyle: FlexStyle = StyleSheet.flatten(source) || {};\n\n    return Object.keys(flatStyle).filter((key: string) => {\n      return keys.includes(key);\n    }).reduce((acc: OffsetRect, key: string) => {\n      const value: number = flatStyle[key];\n      const offsetValue: OffsetValue | undefined = Offsets.parseString(key);\n      return offsetValue ? offsetValue.applyToRect(acc, value) : acc;\n    }, OffsetRect.zero());\n  }\n\n  private static parseString(rawValue: string, fallback?: OffsetValue): OffsetValue | undefined {\n    switch (rawValue) {\n      case Offsets.MARGIN.rawValue:\n        return Offsets.MARGIN;\n      case Offsets.MARGIN_HORIZONTAL.rawValue:\n        return Offsets.MARGIN_HORIZONTAL;\n      case Offsets.MARGIN_VERTICAL.rawValue:\n        return Offsets.MARGIN_VERTICAL;\n      case Offsets.MARGIN_LEFT.rawValue:\n        return Offsets.MARGIN_LEFT;\n      case Offsets.MARGIN_TOP.rawValue:\n        return Offsets.MARGIN_TOP;\n      case Offsets.MARGIN_RIGHT.rawValue:\n        return Offsets.MARGIN_RIGHT;\n      case Offsets.MARGIN_BOTTOM.rawValue:\n        return Offsets.MARGIN_BOTTOM;\n      default:\n        return fallback;\n    }\n  }\n}\n\nexport class PlacementOptions {\n  source: Frame = Frame.zero();\n  other: Frame = Frame.zero();\n  bounds: Frame = Frame.zero();\n  offsets: OffsetRect = OffsetRect.zero();\n}\n\nexport interface PopoverPlacement {\n  rawValue: string;\n\n  frame(options: PlacementOptions): Frame;\n\n  flex(): FlexPlacement;\n\n  parent(): PopoverPlacement;\n\n  reverse(): PopoverPlacement;\n\n  family(): PopoverPlacement[];\n\n  fits(frame: Frame, other: Frame): boolean;\n}\n\nexport interface FlexPlacement {\n  direction: 'column' | 'row' | 'column-reverse' | 'row-reverse';\n  alignment: 'flex-start' | 'flex-end' | 'center';\n}\n\nexport class PopoverPlacements {\n\n  static LEFT: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue: string = 'left';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.leftOf(options.other).centerVerticalOf(options.other);\n\n      const x: number = I18nLayoutService.select(\n        origin.x + options.offsets.left,\n        options.bounds.size.width - size.width - (origin.x + options.offsets.right),\n      );\n\n      return new Frame(\n        x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.LEFT,\n        PopoverPlacements.LEFT_START,\n        PopoverPlacements.LEFT_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsStart(frame, other) && fitsTop(frame, other) && fitsBottom(frame, other);\n    }\n  };\n\n  static LEFT_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue: string = 'left start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y - (options.other.size.height - size.height) / 2 + options.offsets.top,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static LEFT_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'left end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y + (options.other.size.height - size.height) / 2 - options.offsets.bottom,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static TOP: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.topOf(options.other).centerHorizontalOf(options.other);\n\n\n      const x: number = I18nLayoutService.select(\n        origin.x,\n        options.bounds.size.width - (origin.x + size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y + options.offsets.top,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.TOP,\n        PopoverPlacements.TOP_START,\n        PopoverPlacements.TOP_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsTop(frame, other) && fitsLeft(frame, other) && fitsRight(frame, other);\n    }\n  };\n\n  static TOP_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x - (options.other.size.width - size.width) / 2 + options.offsets.left,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static TOP_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x + (options.other.size.width - size.width) / 2 - options.offsets.right,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static RIGHT: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.rightOf(options.other).centerVerticalOf(options.other);\n\n      const x: number = I18nLayoutService.select(\n        origin.x - options.offsets.right,\n        options.bounds.size.width - size.width - (origin.x - options.offsets.right),\n      );\n\n      return new Frame(\n        x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.RIGHT,\n        PopoverPlacements.RIGHT_START,\n        PopoverPlacements.RIGHT_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsEnd(frame, other) && fitsTop(frame, other) && fitsBottom(frame, other);\n    }\n  };\n\n  static RIGHT_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y - (options.other.size.height - size.height) / 2 + options.offsets.top,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static RIGHT_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y + (options.other.size.height - size.height) / 2 - options.offsets.bottom,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static BOTTOM: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.bottomOf(options.other).centerHorizontalOf(options.other);\n\n      const x: number = I18nLayoutService.select(\n        origin.x,\n        options.bounds.size.width - (origin.x + size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y - options.offsets.bottom,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.BOTTOM,\n        PopoverPlacements.BOTTOM_START,\n        PopoverPlacements.BOTTOM_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsBottom(frame, other) && fitsLeft(frame, other) && fitsRight(frame, other);\n    }\n  };\n\n  static BOTTOM_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x - (options.other.size.width - size.width) / 2 + options.offsets.left,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static BOTTOM_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x + (options.other.size.width - size.width) / 2 - options.offsets.right,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static parse(value: string | PopoverPlacement, fallback?: PopoverPlacement): PopoverPlacement | undefined {\n    return PopoverPlacements.typeOf(value) ? value : PopoverPlacements.parseString(value, fallback);\n  }\n\n  private static parseString(rawValue: string, fallback?: PopoverPlacement): PopoverPlacement | undefined {\n    switch (rawValue) {\n      case PopoverPlacements.LEFT.rawValue:\n        return PopoverPlacements.LEFT;\n      case PopoverPlacements.TOP.rawValue:\n        return PopoverPlacements.TOP;\n      case PopoverPlacements.RIGHT.rawValue:\n        return PopoverPlacements.RIGHT;\n      case PopoverPlacements.BOTTOM.rawValue:\n        return PopoverPlacements.BOTTOM;\n      case PopoverPlacements.LEFT_START.rawValue:\n        return PopoverPlacements.LEFT_START;\n      case PopoverPlacements.LEFT_END.rawValue:\n        return PopoverPlacements.LEFT_END;\n      case PopoverPlacements.TOP_START.rawValue:\n        return PopoverPlacements.TOP_START;\n      case PopoverPlacements.TOP_END.rawValue:\n        return PopoverPlacements.TOP_END;\n      case PopoverPlacements.RIGHT_START.rawValue:\n        return PopoverPlacements.RIGHT_START;\n      case PopoverPlacements.RIGHT_END.rawValue:\n        return PopoverPlacements.RIGHT_END;\n      case PopoverPlacements.BOTTOM_START.rawValue:\n        return PopoverPlacements.BOTTOM_START;\n      case PopoverPlacements.BOTTOM_END.rawValue:\n        return PopoverPlacements.BOTTOM_END;\n      default:\n        return fallback;\n    }\n  }\n\n  private static typeOf(value: any): value is PopoverPlacement {\n    const { rawValue } = (<PopoverPlacement>value);\n\n    return rawValue !== undefined;\n  }\n}\n\nconst fitsStart = (frame: Frame, other: Frame): boolean => {\n  return I18nLayoutService.select(fitsLeft, fitsRight)(frame, other);\n};\n\nconst fitsEnd = (frame: Frame, other: Frame): boolean => {\n  return I18nLayoutService.select(fitsRight, fitsLeft)(frame, other);\n};\n\nconst fitsLeft = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.x >= other.origin.x;\n};\n\nconst fitsRight = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.x + frame.size.width <= other.size.width;\n};\n\nconst fitsTop = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.y >= other.origin.y;\n};\n\nconst fitsBottom = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.y + frame.size.height <= other.size.height;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport {\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\nimport { Arrow } from '../support/components';\nimport { I18nLayoutService } from '../support/services';\n\ninterface ComponentProps {\n  placement?: string | PopoverPlacement;\n  indicatorOffset?: number;\n  indicatorStyle?: StyleProp<ViewStyle>;\n}\n\nconst PLACEMENT_DEFAULT: PopoverPlacement = PopoverPlacements.TOP;\n\nexport type PopoverViewProps = ViewProps & ComponentProps;\nexport type PopoverViewElement = React.ReactElement<PopoverViewProps>;\n\nexport class PopoverView extends React.Component<PopoverViewProps> {\n\n  static defaultProps: Partial<PopoverViewProps> = {\n    placement: PLACEMENT_DEFAULT.rawValue,\n    indicatorOffset: 8,\n  };\n\n  private getComponentStyle = (source: StyleProp<ViewStyle>, placement: PopoverPlacement): StyleType => {\n    const derivedIndicatorStyle = StyleSheet.flatten(this.props.indicatorStyle);\n\n    const { direction, alignment } = placement.flex();\n\n    const isVertical: boolean = direction.startsWith('column');\n    const isStart: boolean = alignment.endsWith('start');\n    const isEnd: boolean = alignment.endsWith('end');\n    const isReverse: boolean = direction.endsWith('reverse');\n\n    // Rotate indicator by 90 deg if we have `row` direction (left/right placement)\n    // Rotate it again by 180 if we have `row-reverse` (bottom/right placement)\n    const indicatorPrimaryRotate: number = isVertical ? 180 : 90;\n    const indicatorSecondaryRotate: number = isReverse ? 0 : 180;\n\n    // Translate container by half of `indicatorWidth`. Exactly half (because it has a square shape)\n    // Reverse if needed\n\n    // @ts-ignore: indicatorWidth type is always number\n    let containerTranslate: number = isVertical ? 0 : derivedIndicatorStyle.width / 2;\n    containerTranslate = isReverse ? containerTranslate : -containerTranslate;\n\n    // Translate indicator by passed `indicatorOffset`\n    // Reverse if needed\n\n    let indicatorTranslate: number = isVertical ? -this.props.indicatorOffset : this.props.indicatorOffset;\n    indicatorTranslate = isReverse ? -indicatorTranslate : indicatorTranslate;\n    const i18nVerticalIndicatorTranslate = I18nLayoutService.select(indicatorTranslate, -indicatorTranslate);\n    indicatorTranslate = isVertical ? i18nVerticalIndicatorTranslate : indicatorTranslate;\n\n    const containerStyle: ViewStyle = I18nLayoutService.toI18nStyle({\n      flexDirection: direction,\n      transform: [\n        { translateX: containerTranslate },\n      ],\n    });\n\n    const contentStyle: ViewStyle = {\n      backgroundColor: 'black',\n      transform: [\n        { translateX: containerTranslate },\n      ],\n    };\n\n    const indicatorStyle: ViewStyle = {\n      transform: [\n        { rotate: `${indicatorPrimaryRotate}deg` },\n        { rotate: `${indicatorSecondaryRotate}deg` },\n\n        // Translate indicator \"to start\" if we have `-start` alignment\n        // Or translate it \"to end\" if we have `-end` alignment\n        { translateX: isStart ? -indicatorTranslate : 0 },\n        { translateX: isEnd ? indicatorTranslate : 0 },\n      ],\n      ...derivedIndicatorStyle,\n      ...styles.indicator,\n    };\n\n    return {\n      container: {\n        ...containerStyle,\n        alignItems: alignment,\n      },\n      content: contentStyle,\n      indicator: indicatorStyle,\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, indicatorStyle, placement: rawPlacement, children, ...derivedProps } = this.props;\n    const placement: PopoverPlacement = PopoverPlacements.parse(rawPlacement, PLACEMENT_DEFAULT);\n\n    const { container, indicator, content } = this.getComponentStyle(style, placement);\n\n    return (\n      <View\n        {...derivedProps}\n        style={[container, styles.container]}>\n        <Arrow style={[indicator, styles.indicator, indicatorStyle]}/>\n        <View\n          style={[content, styles.content, style]}>\n          {children}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-start',\n  },\n  content: {\n    justifyContent: 'center',\n  },\n  indicator: {},\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  findNodeHandle,\n  UIManager,\n  View,\n  ViewProps,\n  Dimensions,\n  ScaledSize,\n} from 'react-native';\nimport { Frame } from './type';\n\nexport type MeasuringElement = React.ReactElement<MeasuringElementProps>;\nexport type MeasuringElementProps = { tag: React.ReactText } & any;\nexport type MeasuringNode = React.ReactElement<MeasureNodeProps>;\nexport type MeasuringNodeProps = MeasureNodeProps;\n\nexport type MeasuredElementProps = MeasuringElementProps & { frame: Frame };\nexport type MeasuredElement = React.ReactElement<MeasuredElementProps>;\n\nexport interface MeasureResult {\n  [tag: string]: Frame;\n}\n\nexport interface MeasureElementProps {\n  onResult: (result: MeasuredElement) => void;\n  children: MeasuringElement;\n}\n\nexport interface MeasureNodeProps {\n  onResult: (result: MeasureResult) => void;\n  children: MeasuringElement | MeasuringElement[];\n}\n\n/**\n * Measures child element size and it's screen position asynchronously.\n * Returns measure result in `onResult` callback.\n *\n * Usage:\n *\n * const onMeasure = (element: ElementToMeasure): void => {\n *   const { x, y, width, height } = element.props.frame;\n *   ...\n * };\n *\n * <MeasureElement onResult={this.onMeasure}>\n *   <ElementToMeasure tag='@measure/measure-me!'/>\n * </MeasureElement>\n */\nexport const MeasureElement = (props: MeasureElementProps): MeasuringElement => {\n\n  const ref: React.RefObject<any> = React.createRef();\n\n  const { children, onResult } = props;\n\n  const bindToWindow = (frame: Frame, window: ScaledSize): Frame => {\n    if (frame.origin.x < window.width) {\n      return frame;\n    }\n\n    const boundFrame: Frame = new Frame(\n      frame.origin.x - window.width,\n      frame.origin.y,\n      frame.size.width,\n      frame.size.height,\n    );\n\n    return bindToWindow(boundFrame, window);\n  };\n\n  const measureSelf = () => {\n    const node: number = findNodeHandle(ref.current);\n\n    UIManager.measureInWindow(node, (x: number, y: number, w: number, h: number) => {\n      const window: ScaledSize = Dimensions.get('window');\n      const frame: Frame = bindToWindow(new Frame(x, y, w, h), window);\n\n      const measuredElement: MeasuredElement = React.cloneElement(children, { frame });\n\n      onResult(measuredElement);\n    });\n  };\n\n  return React.cloneElement(children, {\n    ref,\n    onLayout: measureSelf,\n  });\n};\n\n/**\n * Measures passed child elements size and it's screen position asynchronously.\n * Returns measure result in `onResult` callback.\n *\n * Does the same as `MeasureElement` but calls `onResult` after all children are measured.\n *\n * Usage:\n *\n * const onMeasure = (result: MeasureResult): void => {\n *   const { [0]: firstElementFrame, [1]: secondElementFrame } = result;\n *   const { x, y, width, height } = firstElementFrame;\n *   ...\n * };\n *\n * <MeasureNode onResult={this.onMeasure}>\n *   <ElementToMeasure tag={0}/>\n *   <ElementToMeasure tag={1}/>\n * </MeasureNode>\n */\nexport const MeasureNode = (props: MeasuringNodeProps): MeasuringNode => {\n\n  const result: MeasureResult = {};\n\n  const { children, onResult } = props;\n\n  const onChildMeasure = (element: MeasuredElement) => {\n    const { tag, frame } = element.props;\n\n    result[tag] = frame;\n\n    if (Object.keys(result).length === React.Children.count(children)) {\n      onResult(result);\n    }\n  };\n\n  const renderMeasuringElement = (element: MeasuringElement, index: number): MeasuringElement => {\n    return (\n      <MeasureElement\n        key={index}\n        onResult={onChildMeasure}>\n        {element}\n      </MeasureElement>\n    );\n  };\n\n  const renderChildren = (): MeasuringElement[] => {\n    return React.Children.map(children, renderMeasuringElement);\n  };\n\n  return (\n    <React.Fragment>\n      {renderChildren()}\n    </React.Fragment>\n  );\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Frame,\n  PlacementOptions,\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\n\nconst PLACEMENT_FAMILIES: string[] = [\n  PopoverPlacements.BOTTOM.rawValue,\n  PopoverPlacements.TOP.rawValue,\n  PopoverPlacements.LEFT.rawValue,\n  PopoverPlacements.RIGHT.rawValue,\n];\n\nexport class PopoverPlacementService {\n\n  public find(preferredValue: PopoverPlacement, options: PlacementOptions): PopoverPlacement {\n    const placement: PopoverPlacement = this.findRecursive(preferredValue, PLACEMENT_FAMILIES, options);\n\n    return placement || preferredValue;\n  }\n\n  private findRecursive(placement: PopoverPlacement, families: string[], options: PlacementOptions): PopoverPlacement {\n    const oneOfCurrentFamily: PopoverPlacement = this.findFromFamily(placement, options);\n\n    if (oneOfCurrentFamily) {\n      return oneOfCurrentFamily;\n    }\n\n    const oneOfReversedFamily: PopoverPlacement = this.findFromFamily(placement.reverse(), options);\n\n    if (oneOfReversedFamily) {\n      return oneOfReversedFamily;\n    }\n\n    delete families[families.indexOf(placement.parent().rawValue)];\n    delete families[families.indexOf(placement.reverse().parent().rawValue)];\n\n    const firstTruthy: string = families.filter(Boolean)[0];\n\n    if (firstTruthy) {\n      const nextPlacement: PopoverPlacement = PopoverPlacements.parse(firstTruthy);\n\n      return this.findRecursive(nextPlacement, families, options);\n    }\n\n    return null;\n  }\n\n  private findFromFamily(placement: PopoverPlacement, options: PlacementOptions): PopoverPlacement {\n    const preferredFrame: Frame = placement.frame(options);\n\n    if (placement.fits(preferredFrame, options.bounds)) {\n      return placement;\n    }\n\n    return placement.family().find((familyValue: PopoverPlacement): boolean => {\n      const familyFrame = familyValue.frame(options);\n\n      return familyValue.fits(familyFrame, options.bounds);\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Dimensions,\n  ScaledSize,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ModalService,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  PopoverView,\n  PopoverViewProps,\n} from './popoverView.component';\nimport {\n  MeasuredElement,\n  MeasureNode,\n  MeasureResult,\n  MeasuringElement,\n  MeasuringElementProps,\n  MeasuringNode,\n} from './measure.component';\nimport {\n  Frame,\n  Offsets,\n  PlacementOptions,\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\nimport { PopoverPlacementService } from './placement.service';\nimport { ModalPresentingBased } from '../support/typings';\n\ntype ContentElement = React.ReactElement<any>;\ntype ChildElement = React.ReactElement<any>;\n\ninterface ComponentProps extends PopoverViewProps, ModalPresentingBased {\n  content: ContentElement;\n  children: ChildElement;\n  visible?: boolean;\n}\n\nexport type PopoverProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type PopoverElement = React.ReactElement<PopoverProps>;\n\nconst WINDOW: ScaledSize = Dimensions.get('window');\nconst WINDOW_BOUNDS: Frame = new Frame(0, 0, WINDOW.width, WINDOW.height);\n\nconst TAG_CHILD: number = 0;\nconst TAG_CONTENT: number = 1;\nconst PLACEMENT_DEFAULT: PopoverPlacement = PopoverPlacements.BOTTOM;\n\n/**\n * Displays content in a `Modal` when users focus on or tap an element. Also supports automatic placement.\n *\n * @extends React.Component\n *\n * @property {React.ReactElement<any>} content - Determines the content of the popover.\n *\n * @property {React.ReactElement<any>} children - Determines the element \"above\" which popover will be shown.\n *\n * @property {boolean} visible - Determines whether popover is visible or not.\n *\n * @property {string | PopoverPlacement} placement - Determines the placement of the popover.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Default is `bottom`.\n *\n * @property {number} indicatorOffset - Determines the offset of indicator (arrow).\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of indicator (arrow).\n *\n * @property ViewProps\n *\n * @property ModalPresentingBased\n *\n * @property StyledComponentProps\n *\n * @overview-example PopoverSimpleUsage\n *\n * @overview-example PopoverPlacement\n */\nexport class PopoverComponent extends React.Component<PopoverProps> {\n\n  static styledComponentName: string = 'Popover';\n\n  static defaultProps: Partial<PopoverProps> = {\n    placement: PLACEMENT_DEFAULT.rawValue,\n    visible: false,\n    allowBackdrop: true,\n    onBackdropPress: () => null,\n  };\n\n  private popoverId: string;\n  private placementService: PopoverPlacementService = new PopoverPlacementService();\n  private popoverPlacement: PopoverPlacement;\n\n  public componentDidUpdate(prevProps: PopoverProps) {\n    this.handleVisibility(prevProps);\n  }\n\n  private handleVisibility = (prevProps: PopoverProps): void => {\n    if (prevProps.visible !== this.props.visible) {\n      if (this.props.visible) {\n        // Toggles re-measuring. This is needed for dynamic containers like ScrollView\n        this.setState({ layout: undefined });\n      } else {\n        this.popoverId = ModalService.hide(this.popoverId);\n      }\n    } else if (prevProps.visible && this.props.visible) {\n      this.updatePopoverElement();\n    }\n  };\n\n  private updatePopoverElement = (): void => {\n    const element: ContentElement = this.renderPopoverElement(this.props.content, this.popoverPlacement);\n\n    const popoverElement: ContentElement = React.cloneElement(element, {\n      style: [element.props.style, styles.popoverVisible],\n    });\n    this.popoverId && ModalService.update(this.popoverId, popoverElement);\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      indicatorWidth,\n      indicatorHeight,\n      indicatorBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      indicator: {\n        width: indicatorWidth,\n        height: indicatorHeight,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private onMeasure = (layout: MeasureResult) => {\n    if (this.props.visible) {\n      const placementOptions: PlacementOptions = this.createPlacementOptions(layout);\n      const popoverPlacement = this.placementService.find(this.popoverPlacement, placementOptions);\n\n      this.popoverId = this.showPopoverModal(popoverPlacement, placementOptions);\n    }\n  };\n\n  private createPlacement = (value: string | PopoverPlacement): PopoverPlacement => {\n    return PopoverPlacements.parse(value, PLACEMENT_DEFAULT);\n  };\n\n  private createPlacementOptions = (layout: MeasureResult): PlacementOptions => {\n    const { children } = this.props;\n\n    return {\n      source: layout[TAG_CONTENT],\n      other: layout[TAG_CHILD],\n      bounds: WINDOW_BOUNDS,\n      offsets: Offsets.find(children.props.style),\n    };\n  };\n\n  private showPopoverModal = (placement: PopoverPlacement, options: PlacementOptions): string => {\n    const popoverFrame: Frame = placement.frame(options);\n    const popoverElement: MeasuredElement = this.renderPopoverElement(this.props.content, placement);\n\n    const positionStyle: ViewStyle = {\n      left: popoverFrame.origin.x,\n      top: popoverFrame.origin.y,\n    };\n\n    const positionedPopoverElement: React.ReactElement<ModalPresentingBased> = React.cloneElement(popoverElement, {\n      style: [styles.popoverVisible, positionStyle],\n    });\n\n    return ModalService.show(positionedPopoverElement, {\n      allowBackdrop: this.props.allowBackdrop,\n      onBackdropPress: this.props.onBackdropPress,\n    });\n  };\n\n  private renderPopoverElement = (children: ContentElement, placement: PopoverPlacement): ContentElement => {\n    const { style: derivedStyle, themedStyle, indicatorStyle, ...derivedProps } = this.props;\n    const { container, indicator } = this.getComponentStyle(themedStyle);\n\n    const measuringProps: MeasuringElementProps = { tag: TAG_CONTENT };\n\n    return (\n      <View\n        {...measuringProps}\n        key={TAG_CONTENT}\n        style={[styles.popover, styles.popoverInvisible]}>\n        <PopoverView\n          {...derivedProps}\n          style={[container, derivedStyle]}\n          indicatorStyle={[indicator, styles.indicator, indicatorStyle]}\n          placement={placement.reverse().rawValue}>\n          {children}\n        </PopoverView>\n      </View>\n    );\n  };\n\n  private renderChildElement = (source: ChildElement): MeasuringElement => {\n    const measuringProps: MeasuringElementProps = { tag: TAG_CHILD };\n\n    return (\n      <View\n        {...measuringProps}\n        key={TAG_CHILD}\n        style={styles.child}>\n        {source}\n      </View>\n    );\n  };\n\n  private renderMeasuringElement = (...children: MeasuringElement[]): MeasuringNode => {\n    return (\n      <MeasureNode\n        onResult={this.onMeasure}>\n        {children}\n      </MeasureNode>\n    );\n  };\n\n  public render(): React.ReactNode {\n    if (this.props.visible) {\n      this.popoverPlacement = this.createPlacement(this.props.placement);\n      const popoverElement: ContentElement = this.renderPopoverElement(this.props.content, this.popoverPlacement);\n      const childElement: ChildElement = this.renderChildElement(this.props.children);\n\n      return this.renderMeasuringElement(childElement, popoverElement);\n    }\n\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  popover: {\n    position: 'absolute',\n  },\n  popoverInvisible: {\n    opacity: 0,\n  },\n  popoverVisible: {\n    opacity: 1,\n  },\n  indicator: {},\n  child: {},\n});\n\nexport const Popover = styled<PopoverProps>(PopoverComponent);\n","import React from 'react';\nimport {\n  ImageStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ImageProps,\n  StyleSheet,\n  GestureResponderEvent,\n} from 'react-native';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { Popover } from '../popover/popover.component';\nimport { BaseCalendarProps } from '../calendar/baseCalendar.component';\nimport { NativeDateService } from '../calendar/service/nativeDate.service';\nimport { CalendarElement } from '../calendar/calendar.component';\nimport { RangeCalendarElement } from '../calendar/rangeCalendar.component';\nimport {\n  Interaction,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { Dimensions } from 'react-native';\n\nconst FULL_DATE_FORMAT_STRING: string = 'DD/MM/YYYY';\n\ninterface State {\n  visible: boolean;\n}\n\nexport interface ComponentProps {\n  icon?: (style: ImageStyle) => React.ReactElement<ImageProps>;\n}\n\nexport type DatepickerProps<D> =\n  ComponentProps &\n  StyledComponentProps &\n  TouchableOpacityProps &\n  BaseCalendarProps<D>;\n\nexport abstract class BaseDatepickerComponent<D, P> extends React.Component<DatepickerProps<D> & P, State> {\n\n  static defaultProps = {\n    dateService: new NativeDateService(),\n  };\n\n  public state: State = {\n    visible: false,\n  };\n\n  protected abstract getComponentTitle(): string;\n\n  protected abstract renderCalendar(): CalendarElement<D> | RangeCalendarElement<D>;\n\n  protected formatDateToString(date: D): string {\n    return this.props.dateService.format(date, FULL_DATE_FORMAT_STRING);\n  }\n\n  private getComponentStyles = (style: StyleType): StyleType => {\n    const {\n      popoverMarginHorizontal,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textFontFamily,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      ...containerStyles\n    } = style;\n\n    return {\n      container: containerStyles,\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        tintColor: iconTintColor,\n      },\n      text: {\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n        fontFamily: textFontFamily,\n      },\n      popover: {\n        indent: popoverMarginHorizontal,\n      },\n    };\n  };\n\n  private onPressIn = (event: GestureResponderEvent) => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent) => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private toggleVisible = (): void => {\n    const visible: boolean = !this.state.visible;\n\n    this.setState({ visible }, this.dispatchActive);\n  };\n\n  private dispatchActive = (): void => {\n    const { visible } = this.state;\n    if (visible) {\n      this.props.dispatch([Interaction.ACTIVE]);\n    } else {\n      this.props.dispatch([]);\n    }\n  };\n\n  private renderIcon = (style: StyleType): React.ReactElement<ImageProps> => {\n    const { icon } = this.props;\n\n    return icon && icon(style);\n  };\n\n  private renderText = (style: StyleType): TextElement => {\n    return (\n      <Text style={style}>\n        {this.getComponentTitle()}\n      </Text>\n    );\n  };\n\n  private renderControl = (): React.ReactElement<TouchableOpacityProps> => {\n    const { themedStyle, disabled, style } = this.props;\n    const { container, icon, text } = this.getComponentStyles(themedStyle);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        disabled={disabled}\n        style={[container, styles.container, style]}\n        onPress={this.toggleVisible}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        {this.renderText(text)}\n        {this.renderIcon(icon)}\n      </TouchableOpacity>\n    );\n  };\n\n  public render(): React.ReactNode {\n    const { themedStyle } = this.props;\n    const { popover } = this.getComponentStyles(themedStyle);\n\n    const popoverStyle: StyleType = {\n      width: Dimensions.get('window').width - popover.indent,\n      maxWidth: Dimensions.get('window').width - popover.indent,\n    };\n\n    return (\n      <Popover\n        style={popoverStyle}\n        visible={this.state.visible}\n        content={this.renderCalendar()}\n        onBackdropPress={this.toggleVisible}>\n        {this.renderControl()}\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n});\n\n","import React from 'react';\nimport { styled } from '@kitten/theme';\nimport { BaseDatepickerComponent } from './baseDatepicker.component';\nimport {\n  CalendarElement,\n  Calendar,\n  CalendarProps,\n} from '../calendar/calendar.component';\n\n/**\n * Styled `Datepicker` component.\n * Renders `Calendar` component in the `Popover`.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {(style: ImageStyle) => React.ReactElement<ImageProps>} icon - Determines the icon of the component.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {D} date - Date which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => string} todayTitle - Defines the title for today's date.\n *\n * @property {(date: D) => ReactElement<any>} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderYear - Should return the content of year cell.\n *\n * @property TouchableOpacityProps\n *\n * @property StyledComponentProps\n *\n * @overview-example DatepickerSimpleUsage\n *\n * @overview-example DatepickerWithIcon\n *\n * @overview-example DatepickerBoundingMonth\n *\n * @overview-example DatepickerFilter\n *\n * @example DatepickerCustomDay\n *\n * @example DatepickerCustomLocale\n *\n * @example DatepickerMoment\n */\nexport class DatepickerComponent<D> extends BaseDatepickerComponent<D, CalendarProps<D>> {\n\n  static styledComponentName: string = 'Datepicker';\n\n  protected getComponentTitle(): string {\n    const { date } = this.props;\n\n    if (date) {\n      return this.formatDateToString(date);\n    } else {\n      return 'dd/mm/yyyy';\n    }\n  }\n\n  protected renderCalendar(): CalendarElement<D> {\n    return (\n      <Calendar {...this.props}/>\n    );\n  }\n}\n\nexport const Datepicker = styled(DatepickerComponent);\n","import React from 'react';\nimport { styled } from '@kitten/theme';\nimport { BaseDatepickerComponent } from './baseDatepicker.component';\nimport {\n  RangeCalendar,\n  RangeCalendarProps,\n  RangeCalendarElement,\n} from '../calendar/rangeCalendar.component';\n\n/**\n * Styled `RangeDatepicker` component.\n * Renders `RangeCalendar` component in the `Popover`.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {(style: ImageStyle) => React.ReactElement<ImageProps>} icon - Determines the icon of the component.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {D} date - Date which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => string} todayTitle - Defines the title for today's date.\n *\n * @property {(date: D) => ReactElement<any>} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderYear - Should return the content of year cell.\n *\n * @property TouchableOpacityProps\n *\n * @property StyledComponentProps\n *\n * @overview-example RangeDatepickerSimpleUsage\n */\nexport class RangeDatepickerComponent<D> extends BaseDatepickerComponent<D, RangeCalendarProps<D>> {\n\n  static styledComponentName: string = 'Datepicker';\n\n  protected getComponentTitle(): string {\n    const { range } = this.props;\n    const { startDate, endDate } = range;\n\n    if (startDate || endDate) {\n      const start: string = startDate ? this.formatDateToString(startDate) : '';\n      const end: string = endDate ? this.formatDateToString(endDate) : '';\n\n      return `${start} - ${end}`;\n    } else {\n      return 'dd/mm/yyyy';\n    }\n  }\n\n  protected renderCalendar(): RangeCalendarElement<D> {\n    return (\n      <RangeCalendar {...this.props}/>\n    );\n  }\n}\n\nexport const RangeDatepicker = styled(RangeDatepickerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  FlatList,\n  FlatListProps,\n  ListRenderItemInfo,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { ListItemProps } from './listItem.component';\n\n// this is basically needed to avoid generics in required props\ntype ItemType = any;\ntype ListItemElement = React.ReactElement<any>;\ntype RenderItemProp = (info: ListRenderItemInfo<ItemType>, style: StyleType) => ListItemElement;\n\ninterface ComponentProps {\n  renderItem: RenderItemProp;\n}\n\nexport type ListProps = StyledComponentProps & FlatListProps<ItemType> & ComponentProps;\nexport type ListElement = React.ReactElement<ListProps>;\n\nexport interface BaseScrollParams {\n  animated?: boolean;\n}\n\nexport interface ViewScrollParams {\n  viewOffset?: number;\n  viewPosition?: number;\n}\n\nexport interface ScrollToIndexParams extends BaseScrollParams, ViewScrollParams {\n  index: number;\n}\n\nexport interface ScrollToOffsetParams extends BaseScrollParams {\n  offset: number;\n}\n\n/**\n * `List` component is a performant interface for rendering simple, flat lists. Extends `FlatList`. Renders list of\n * `ListItem` components or custom content.\n *\n * @extends React.Component\n *\n * @property {(info: ListRenderItemInfo<ItemT>, style: StyleType) => React.ReactElement<any>} renderItem - Takes an\n * item from data and renders it into the list.\n *\n * @property FlatListProps<ItemType>\n *\n * @property StyledComponentProps\n *\n * @overview-example ListSimpleUsage\n *\n * @overview-example ListCompositeItem\n *\n * @example ListInlineStyling\n * ```\n */\nexport class ListComponent extends React.Component<ListProps> {\n\n  static styledComponentName: string = 'List';\n\n  private listRef: React.RefObject<FlatList<ItemType>> = React.createRef();\n\n  public scrollToEnd = (params?: BaseScrollParams) => {\n    this.listRef.current.scrollToEnd(params);\n  };\n\n  public scrollToIndex = (params: ScrollToIndexParams) => {\n    this.listRef.current.scrollToIndex(params);\n  };\n\n  public scrollToOffset(params: ScrollToOffsetParams) {\n    this.listRef.current.scrollToOffset(params);\n  }\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    return {\n      container: source,\n      item: {},\n    };\n  };\n\n  private getItemStyle = (source: StyleType, index: number): ViewStyle => {\n    const { item } = source;\n\n    return item;\n  };\n\n  private keyExtractor = (item: ItemType, index: number): string => {\n    return index.toString();\n  };\n\n  private renderItem = (info: ListRenderItemInfo<ItemType>): ListItemElement => {\n    const itemStyle: StyleType = this.getItemStyle(this.props.themedStyle, info.index);\n    const itemElement: React.ReactElement<ListItemProps> = this.props.renderItem(info, itemStyle);\n\n    return React.cloneElement(itemElement, {\n      style: [itemStyle, styles.item, itemElement.props.style],\n      index: info.index,\n    });\n  };\n\n  public render(): React.ReactElement<FlatListProps<ItemType>> {\n    const { style, themedStyle, ...derivedProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    return (\n      <FlatList\n        {...derivedProps}\n        ref={this.listRef}\n        style={[componentStyle.container, styles.container, style]}\n        keyExtractor={this.keyExtractor}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  item: {},\n});\n\nexport const List = styled<ListProps>(ListComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ImageProps,\n  TouchableOpacity,\n  GestureResponderEvent,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { TouchableIndexedProps } from '../support/typings/type';\nimport { allWithPrefix } from '../support/services';\n\ntype IconElement = React.ReactElement<ImageProps>;\n\nexport interface MenuItemType {\n  title: string;\n  disabled?: boolean;\n  subItems?: MenuItemType[];\n  titleStyle?: StyleProp<TextStyle>;\n  menuIndex?: number;\n  icon?: (style: StyleType) => IconElement;\n  accessory?: (style: StyleType) => IconElement;\n}\n\ninterface ComponentProps extends MenuItemType {\n  selected?: boolean;\n}\n\nexport type MenuItemProps = StyledComponentProps & ComponentProps & TouchableIndexedProps;\nexport type MenuItemElement = React.ReactElement<MenuItemProps>;\n\n/**\n * `MenuItem` is a support component for `Menu`.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the ListItem.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} accessory - Determines the accessory of the\n * component.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines the icon of the component.\n *\n * @property {MenuItemType[]} subItems - Determines the sub-items of the MenuItem.\n *\n * @property {(index: number, event: GestureResponderEvent) => void} onPress - Emits when component is pressed.\n *\n * @property StyledComponentProps\n *\n * @property TouchableTypeReturningProps<MenuItemType>\n * */\n\nclass MenuItemComponent extends React.Component<MenuItemProps> {\n\n  static styledComponentName: string = 'MenuItem';\n\n  private onPress = (event: GestureResponderEvent) => {\n    const { onPress, menuIndex } = this.props;\n\n    if (onPress) {\n      onPress(menuIndex, event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent) => {\n    const { onPressIn, menuIndex, dispatch } = this.props;\n\n    dispatch([Interaction.ACTIVE]);\n\n    if (onPressIn) {\n      onPressIn(menuIndex, event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent) => {\n    const { onPressOut, menuIndex, dispatch } = this.props;\n\n    dispatch([]);\n\n    if (onPressOut) {\n      onPressOut(menuIndex, event);\n    }\n  };\n\n  private onLongPress = (event: GestureResponderEvent) => {\n    const { onLongPress, menuIndex } = this.props;\n\n    if (onLongPress) {\n      onLongPress(menuIndex, event);\n    }\n  };\n\n  private getComponentStyles = (style: StyleType): StyleType => {\n    const {\n      paddingHorizontal,\n      paddingVertical,\n      backgroundColor,\n    } = style;\n    const titleStyles: StyleType = allWithPrefix(style, 'title');\n    const indicatorStyles: StyleType = allWithPrefix(style, 'indicator');\n    const iconStyles: StyleType = allWithPrefix(style, 'icon');\n    const accessoryStyle: StyleType = allWithPrefix(style, 'accessory');\n\n    return {\n      container: {\n        paddingHorizontal: paddingHorizontal,\n        paddingVertical: paddingVertical,\n        backgroundColor: backgroundColor,\n      },\n      title: {\n        marginHorizontal: titleStyles.titleMarginHorizontal,\n        fontFamily: titleStyles.titleFontFamily,\n        fontSize: titleStyles.titleFontSize,\n        fontWeight: titleStyles.titleFontWeight,\n        lineHeight: titleStyles.titleLineHeight,\n        color: titleStyles.titleColor,\n      },\n      indicator: {\n        width: indicatorStyles.indicatorWidth,\n        backgroundColor: indicatorStyles.indicatorBackgroundColor,\n      },\n      icon: {\n        width: iconStyles.iconWidth,\n        height: iconStyles.iconHeight,\n        marginHorizontal: iconStyles.iconMarginHorizontal,\n        tintColor: iconStyles.iconTintColor,\n      },\n    };\n  };\n\n  private renderIcon = (style: StyleType): IconElement => {\n    const { icon } = this.props;\n\n    return icon(style);\n  };\n\n  private renderTitle = (style: StyleType): TextElement => {\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text style={[style, titleStyle]}>{title}</Text>\n    );\n  };\n\n  private renderAccessory = (style: StyleType): IconElement => {\n    const { accessory } = this.props;\n\n    return accessory(style);\n  };\n\n  private renderComponentChildren = (style: StyleType): [IconElement, TextElement, IconElement] => {\n    const { title, icon, accessory } = this.props;\n\n    return [\n      icon && this.renderIcon(style.icon),\n      title && this.renderTitle(style.title),\n      accessory && this.renderAccessory(style.icon),\n    ];\n  };\n\n  public render(): React.ReactNode {\n    const { themedStyle, style, ...restProps } = this.props;\n    const { container, indicator, ...restStyles } = this.getComponentStyles(themedStyle);\n    const [iconElement, textElement, accessoryElement] = this.renderComponentChildren(restStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...restProps}\n        style={[styles.container, container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n        onLongPress={this.onLongPress}>\n        <View style={[styles.indicator, indicator]}/>\n        <View style={styles.subContainer}>\n          {iconElement}\n          {textElement}\n        </View>\n        {accessoryElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  subContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  indicator: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 2,\n  },\n});\n\nexport const MenuItem = styled<MenuItemProps>(MenuItemComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  TouchableOpacityProps,\n  GestureResponderEvent,\n  View,\n  Animated,\n  StyleSheet,\n  ImageProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  MenuItem,\n  MenuItemType,\n  MenuItemElement,\n} from './menuItem.component';\nimport {\n  MeasureNode,\n  MeasureResult,\n  MeasureNodeProps,\n  MeasuringElementProps,\n} from '../popover/measure.component';\nimport { Chevron } from '../support/components';\nimport { DividerElement } from '../divider/divider.component';\n\ninterface ComponentProps {\n  item: MenuItemType;\n  selectedIndex: number;\n  divider?: DividerElement;\n  onSelect?: (index: number, event?: GestureResponderEvent) => void;\n}\n\ninterface ComponentState {\n  subItemsVisible: boolean;\n  subItemsHeight: number;\n}\n\nexport type SubMenuProps = ComponentProps & StyledComponentProps & TouchableOpacityProps;\nexport type SubMenuElement = React.ReactElement<SubMenuProps>;\ntype OnPressHandler = (index: number, event?: GestureResponderEvent) => void;\ntype IconElement = React.ReactElement<ImageProps>;\n\nconst MAIN_ITEM_KEY: string = 'Main Item';\nconst DIVIDER_ELEMENT_KEY: string = 'Divider';\nconst SUB_ITEMS_MEASURE_TAG: string = 'Sub Items';\n\nclass SubMenuComponent extends React.Component<SubMenuProps, ComponentState> {\n\n  static styledComponentName: string = 'SubMenu';\n\n  public state: ComponentState = {\n    subItemsVisible: false,\n    subItemsHeight: 0,\n  };\n\n  private subItemsAnimation: Animated.Value = new Animated.Value(0);\n  private iconAnimation: Animated.Value = new Animated.Value(-180);\n\n  public componentDidUpdate(prevProps: SubMenuProps, prevState: ComponentState): void {\n    if (prevState.subItemsVisible !== this.state.subItemsVisible) {\n      if (this.state.subItemsVisible) {\n        this.subItemsExpandAnimate(this.state.subItemsHeight);\n        this.animateIcon(0);\n      } else {\n        this.subItemsExpandAnimate(0);\n        this.animateIcon(-180);\n      }\n    }\n  }\n\n  private subItemsExpandAnimate = (toValue: number): void => {\n    Animated.spring(this.subItemsAnimation, {\n      toValue: toValue,\n    }).start();\n  };\n\n  private animateIcon = (toValue: number): void => {\n    Animated.timing(this.iconAnimation, {\n      toValue: toValue,\n      duration: 200,\n    }).start();\n  };\n\n  private onMainItemPress = (): void => {\n    const subItemsVisible: boolean = !this.state.subItemsVisible;\n\n    this.setState({ subItemsVisible });\n  };\n\n  private onSubItemPress = (index: number, event: GestureResponderEvent): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(index, event);\n    }\n  };\n\n  private getComponentStyles = (style: StyleType): StyleType => {\n    return {\n      subContainer: {\n        paddingHorizontal: style.subItemsPaddingHorizontal,\n      },\n    };\n  };\n\n  private onSubMenuMeasure = (result: MeasureResult): void => {\n    const subItemsHeight: number = result[SUB_ITEMS_MEASURE_TAG].size.height;\n\n    this.setState({ subItemsHeight });\n  };\n\n  private getIsSelected = (item: MenuItemType): boolean => {\n    const { selectedIndex } = this.props;\n\n    return selectedIndex === item.menuIndex;\n  };\n\n  private isMainItemDividerExist = (): boolean => {\n    const { divider } = this.props;\n    const { subItemsVisible } = this.state;\n\n    return subItemsVisible && divider !== null;\n  };\n\n  private isSubItemDividerExist = (item: MenuItemType, index: number): boolean => {\n    const { divider } = this.props;\n\n    return (index !== item.subItems.length - 1) && (divider !== null);\n  };\n\n  private renderDivider = (): DividerElement => {\n    const { divider } = this.props;\n\n    return divider && React.cloneElement(divider, {\n      key: DIVIDER_ELEMENT_KEY,\n    });\n  };\n\n  private renderMainItemAccessory = (style: StyleType): IconElement => {\n    const rotateInterpolate = this.iconAnimation.interpolate({\n      inputRange: [-180, 0],\n      outputRange: ['-180deg', '0deg'],\n    });\n    const animatedStyle: StyleType = { transform: [{ rotate: rotateInterpolate }] };\n\n    return (\n      <Chevron\n        style={[style, animatedStyle]}\n        isAnimated={true}\n      />\n    );\n  };\n\n  private renderMenuItem = (item: MenuItemType,\n                            isMainItem: boolean,\n                            index: number | string): MenuItemElement => {\n\n    const onPressHandler: OnPressHandler = isMainItem ? this.onMainItemPress : this.onSubItemPress;\n    const mainMenuItemAccessory = isMainItem ? this.renderMainItemAccessory : null;\n\n    return (\n      <MenuItem\n        {...item}\n        key={index}\n        accessory={mainMenuItemAccessory}\n        onPress={onPressHandler}\n      />\n    );\n  };\n\n  private renderSubItemsInvisible = (subItems: React.ReactNode): React.ReactElement<MeasureNodeProps> => {\n    const measuringProps: MeasuringElementProps = { tag: SUB_ITEMS_MEASURE_TAG };\n\n    return (\n      <MeasureNode onResult={this.onSubMenuMeasure}>\n        {[\n          <View\n            {...measuringProps}\n            pointerEvents='none'\n            key={SUB_ITEMS_MEASURE_TAG}\n            style={styles.invisibleMenu}>\n            {subItems}\n          </View>,\n        ]}\n      </MeasureNode>\n    );\n  };\n\n  private renderSubItems = (): React.ReactNode => {\n    const { item, themedStyle, divider } = this.props;\n\n    return item.subItems.map((sub: MenuItemType, index: number) => {\n      const { subContainer } = this.getComponentStyles(themedStyle);\n      const isSelected: boolean = this.getIsSelected(sub);\n\n      const element: MenuItemElement = React.cloneElement(this.renderMenuItem(sub, false, index), {\n        style: subContainer,\n        selected: isSelected,\n      });\n      const dividerElement: DividerElement = this.isSubItemDividerExist(item, index) ?\n        this.renderDivider() : null;\n\n      return (\n        <React.Fragment key={index}>\n          {element}\n          {dividerElement}\n        </React.Fragment>\n      );\n    });\n  };\n\n  private renderComponentChildren = (): React.ReactNodeArray => {\n    const { item } = this.props;\n\n    return [\n      this.renderMenuItem(item, true, MAIN_ITEM_KEY),\n      this.renderSubItems(),\n      this.isMainItemDividerExist() ? this.renderDivider() : null,\n    ];\n  };\n\n  public render(): React.ReactNode {\n    const { subItemsVisible } = this.state;\n    const [mainItem, subItems, divider] = this.renderComponentChildren();\n    const invisibleSubs: React.ReactElement<MeasureNodeProps> = this.renderSubItemsInvisible(subItems);\n\n    const animatedStyle: StyleType = { height: this.subItemsAnimation };\n\n    return (\n      <React.Fragment>\n        {mainItem}\n        {divider}\n        <Animated.View style={animatedStyle}>\n          {subItemsVisible && subItems}\n        </Animated.View>\n        {invisibleSubs}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  invisibleMenu: {\n    opacity: 0,\n    position: 'absolute',\n  },\n});\n\nexport const SubMenu = styled<SubMenuProps>(SubMenuComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { MenuItemType } from './menuItem.component';\n\n/**\n * Support service for the menu component. Can be expanded.\n */\n\nexport class MenuService {\n\n  /**\n   * Makes custom indexes for the MenuItems array for proper handling group items.\n   *\n   * @param {ReadonlyArray<MenuItemType>} data\n   * @returns {MenuItemType[]} pack by name\n   */\n  public setIndexes(data: ReadonlyArray<MenuItemType>): MenuItemType[] {\n    let tempIndex: number = 0;\n    return data.map((item: MenuItemType) => {\n      if (!item.subItems || item.subItems.length === 0) {\n        item.menuIndex = tempIndex;\n        tempIndex = tempIndex + 1;\n      } else {\n        item.subItems = item.subItems.map((sub: MenuItemType) => {\n          sub.menuIndex = tempIndex;\n          tempIndex = tempIndex + 1;\n          return sub;\n        });\n      }\n      return item;\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ListRenderItemInfo,\n  GestureResponderEvent,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport {\n  List,\n  ListProps,\n} from '../list/list.component';\nimport {\n  Divider,\n  DividerElement,\n} from '../divider/divider.component';\nimport {\n  MenuItem,\n  MenuItemType,\n  MenuItemElement,\n  MenuItemProps,\n} from './menuItem.component';\nimport { SubMenu } from './subMenu.component';\nimport { MenuService } from './menu.service';\n\ninterface ComponentProps {\n  selectedIndex?: number;\n  onSelect: (index: number, event?: GestureResponderEvent) => void;\n}\n\nexport type MenuProps = StyledComponentProps & ComponentProps & Omit<ListProps, 'renderItem'>;\nexport type MenuElement = React.ReactElement<MenuProps>;\n\n/**\n * `Menu` renders vertical list of `MenuItems`.\n *\n * @extends React.Component\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default` or `noDivider`.\n * Default is `default`.\n *\n * @property {MenuItemType[]} data - Determines menu items.\n *\n * @property {number} selectedIndex - The index of selected item.\n *\n * @property {(index: number, event?: GestureResponderEvent) => void} onSelect - Fires when\n * selected item is changed.\n *\n * @property Omit<ListProps, 'renderItem'>\n *\n * @property StyledComponentProps\n *\n * @overview-example MenuSimpleUsage\n *\n * @overview-example MenuAppearance\n *\n * @overview-example MenuWithSubMenu\n *\n * @example MenuWithIcons\n *\n * @example MenuInlineStyling\n */\nclass MenuComponent extends React.Component<MenuProps> {\n\n  static styledComponentName: string = 'Menu';\n\n  private service: MenuService = new MenuService();\n\n  private onSelect = (selectedIndex: number, event: GestureResponderEvent): void => {\n    const { onSelect } = this.props;\n\n    if (onSelect) {\n      onSelect(selectedIndex, event);\n    }\n  };\n\n  private isDividerAbsent = (): boolean => {\n    const { appearance } = this.props;\n\n    return appearance !== 'noDivider';\n  };\n\n  private areThereSubItems = (item: MenuItemProps): boolean => {\n    return item.subItems && item.subItems.length !== 0;\n  };\n\n  private getIsSelected = (item: MenuItemType): boolean => {\n    const { selectedIndex } = this.props;\n\n    return selectedIndex === item.menuIndex;\n  };\n\n  private renderMenuItem = (info: ListRenderItemInfo<MenuItemProps>): MenuItemElement => {\n    const { selectedIndex } = this.props;\n    const isSelected: boolean = this.getIsSelected(info.item);\n\n    return this.areThereSubItems(info.item) ? (\n      <SubMenu\n        item={info.item}\n        selectedIndex={selectedIndex}\n        divider={this.renderDivider()}\n        onSelect={this.onSelect}\n      />\n    ) : (\n      <MenuItem\n        {...info.item}\n        selected={isSelected}\n        onPress={this.onSelect}\n      />\n    );\n  };\n\n  private renderDivider = (): DividerElement => {\n    return this.isDividerAbsent() && (\n      <Divider/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    const { appearance, data, ...restProps } = this.props;\n    const items: MenuItemType[] = this.service.setIndexes(data);\n\n    return (\n      <List\n        ItemSeparatorComponent={this.renderDivider}\n        renderItem={this.renderMenuItem}\n        data={items}\n        {...restProps}\n      />\n    );\n  }\n}\n\nexport const Menu = styled<MenuProps>(MenuComponent);\n","import React from 'react';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport {\n  Menu,\n  MenuElement,\n  MenuProps,\n} from '../menu/menu.component';\nimport { MenuItemType } from '../menu/menuItem.component';\n\nexport type DrawerHeaderElement = React.ReactElement<any>;\nexport type DrawerFooterElement = React.ReactElement<any>;\n\ninterface ComponentProps {\n  header?: () => DrawerHeaderElement;\n  footer?: () => DrawerFooterElement;\n}\n\nexport type DrawerProps = StyledComponentProps & ComponentProps & MenuProps;\nexport type DrawerElement = React.ReactElement<DrawerProps>;\n\n/**\n * Styled `Navigation Drawer` component. The principle of rendering a `Drawer` is the same as a rendering a List.\n *\n * @extends React.Component\n *\n * @property {MenuItemType[]} data - Determines the items displayed in drawer menu.\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default` or `noDivider`.\n * Default is `default`.\n *\n * @property {() => DrawerHeaderElement} header - Determines the function to render a header. Optional.\n *\n * @property {() => DrawerFooterElement} footer - Determines the function to render a footer. Optional.\n *\n * @property {(index: number, event: GestureResponderEvent) => void} onSelect - Determines the function to handle\n * menu item press.\n *\n * @property ListProps\n *\n * @overview-example DrawerSimpleUsage\n *\n * @overview-example DrawerWithIcons\n *\n * @overview-example DrawerHeader\n *\n * @overview-example DrawerFooter\n *\n * @overview-example Using with React Navigation\n *\n * ```\n * import React from 'react';\n * import { SafeAreaView } from 'react-navigation';\n * import { createDrawerNavigator } from 'react-navigation-drawer';\n * import { Dashboard, Messages, Settings } from './path-to/screen-components'; // <-- Import screen components\n *\n * class DrawerNavigation extends React.Component {\n *\n *   constructor(props) {\n *     super(props);\n *     this.drawerData = props.items.map(this.createDrawerItem);\n *   }\n *\n *   onRouteSelect = (index) => {\n *     const { [index]: route } = this.drawerData;\n *     this.props.navigation.navigate(route.title);\n *   };\n *\n *   createDrawerItem = ({ routeName }) => ({\n *     title: routeName,\n *   });\n *\n *   render() {\n *     return (\n *       <SafeAreaView>\n *         <Drawer data={this.drawerData} onSelect={this.onRouteSelect}/>\n *       </SafeAreaView>\n *     );\n *   }\n * }\n *\n * export const DrawerNavigator = createDrawerNavigator({\n *   Dashboard: Dashboard,\n *   Messages: Messages,\n *   Settings: Settings,\n * }, {\n *   contentComponent: DrawerNavigation,\n * });\n * ```\n *\n * @example DrawerCustomHeader\n *\n * @example DrawerNotificationBadgeItem\n */\nclass DrawerComponent extends React.Component<DrawerProps> {\n\n  static styledComponentName: string = 'Drawer';\n\n  private renderHeader = (): DrawerHeaderElement => {\n    const { header } = this.props;\n\n    return header();\n  };\n\n  private renderFooter = (): DrawerFooterElement => {\n    const { footer } = this.props;\n\n    return footer();\n  };\n\n  private renderMenu = (): MenuElement => {\n    const { style, header, footer, themedStyle, ...restProps } = this.props;\n\n    return (\n      <Menu\n        style={themedStyle}\n        showsVerticalScrollIndicator={false}\n        bounces={false}\n        {...restProps}\n      />\n    );\n  };\n\n  private renderComponentChildren = (): [DrawerHeaderElement, MenuElement, DrawerFooterElement] => {\n    const { header, footer } = this.props;\n\n    return [\n      header && this.renderHeader(),\n      this.renderMenu(),\n      footer && this.renderFooter(),\n    ];\n  };\n\n  public render(): React.ReactNode {\n    const [header, menu, footer] = this.renderComponentChildren();\n\n    return (\n      <React.Fragment>\n        {header}\n        {menu}\n        {footer}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const Drawer = styled<DrawerProps>(DrawerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { TouchableIndexedProps } from '../support/typings';\nimport { isValidString } from '../support/services';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype AccessoryElement = React.ReactElement<any>;\ntype IconProp = (style: StyleType, index: number) => IconElement;\ntype AccessoryProp = (style: StyleType, index: number) => AccessoryElement;\n\ninterface ListDerivedProps {\n  index?: number;\n}\n\ninterface TemplateBaseProps {\n  icon?: IconProp;\n  accessory?: AccessoryProp;\n}\n\ninterface TemplateTitleProps extends TemplateBaseProps {\n  title: string;\n  description?: string;\n  titleStyle?: StyleProp<TextStyle>;\n}\n\ninterface TemplateDescriptionProps extends TemplateBaseProps {\n  title?: string;\n  description: string;\n  descriptionStyle?: StyleProp<TextStyle>;\n}\n\ninterface CustomContentProps {\n  children?: React.ReactNode;\n}\n\ntype ComponentProps = (TemplateTitleProps | TemplateDescriptionProps | CustomContentProps) & ListDerivedProps;\n\nexport type ListItemProps = StyledComponentProps & TouchableIndexedProps & ComponentProps;\nexport type ListItemElement = React.ReactElement<ListItemProps>;\n\n/**\n * `ListItem` is a support component for `List`.\n * The key feature of wrapping custom list items into `ListItem` component is that it automatically\n * picks background color fitting to current theme and responds to touches with feedback.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the ListItem.\n *\n * @property {string} description - Determines the description of the ListItem's title.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {StyleProp<TextStyle>} descriptionStyle - Customizes description style.\n *\n * @property {React.ReactNode} children - Determines React Children of the component.\n *\n * @property {(style: StyleType, index: number) => React.ReactElement<any>} accessory - Determines the accessory of the\n * component.\n *\n * @property {(style: StyleType, index: number) => React.ReactElement<ImageProps>} icon - Determines the icon of the\n * component.\n *\n * @property {(index: number, event: GestureResponderEvent) => React.ReactElement<ImageProps>} onPress - Emits when\n * component is pressed.\n *\n * @overview-example ListItemSimpleUsage\n *\n * @overview-example ListItemWithIcon\n *\n * @overview-example ListItemWithAccessory\n *\n * @example ListItemWithExternalIcon\n *\n * @example ListItemInlineStyling\n */\nexport class ListItemComponent extends React.Component<ListItemProps> {\n\n  static styledComponentName: string = 'ListItem';\n\n  private onPress = (event: GestureResponderEvent) => {\n    if (this.props.onPress) {\n      this.props.onPress(this.props.index, event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent) => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(this.props.index, event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent) => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(this.props.index, event);\n    }\n  };\n\n  private onLongPress = (event: GestureResponderEvent) => {\n    if (this.props.onLongPress) {\n      this.props.onLongPress(this.props.index, event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      titleMarginHorizontal,\n      titleFontFamily,\n      titleFontSize,\n      titleLineHeight,\n      titleFontWeight,\n      titleColor,\n      descriptionFontFamily,\n      descriptionFontSize,\n      descriptionFontWeight,\n      descriptionLineHeight,\n      descriptionColor,\n      descriptionMarginHorizontal,\n      accessoryMarginHorizontal,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      contentContainer: {},\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      title: {\n        marginHorizontal: titleMarginHorizontal,\n        fontFamily: titleFontFamily,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight,\n        fontWeight: titleFontWeight,\n        color: titleColor,\n      },\n      description: {\n        color: descriptionColor,\n        fontFamily: descriptionFontFamily,\n        fontSize: descriptionFontSize,\n        fontWeight: descriptionFontWeight,\n        lineHeight: descriptionLineHeight,\n        marginHorizontal: descriptionMarginHorizontal,\n      },\n      accessory: {\n        marginHorizontal: accessoryMarginHorizontal,\n      },\n    };\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    // @ts-ignore: will be not executed if `icon` prop is provided\n    const { index, icon } = this.props;\n\n    const iconElement: IconElement = icon(style, index);\n\n    return React.cloneElement(iconElement, {\n      key: 0,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderContentElement = (style: StyleType): React.ReactElement<ViewProps> => {\n    const { contentContainer, ...contentStyles } = style;\n    const [titleElement, descriptionElement] = this.renderContentElementChildren(contentStyles);\n\n    return (\n      <View\n        key={1}\n        style={[contentContainer, styles.contentContainer]}>\n        {titleElement}\n        {descriptionElement}\n      </View>\n    );\n  };\n\n  private renderTitleElement = (style: StyleType): TextElement => {\n    // @ts-ignore: will be not executed if `title` property is provided\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text\n        key={2}\n        style={[style, styles.title, titleStyle]}>\n        {title}\n      </Text>\n    );\n  };\n\n  private renderDescriptionElement = (style: StyleType): TextElement => {\n    // @ts-ignore: will be not executed if `description` property is provided\n    const { description, descriptionStyle } = this.props;\n\n    return (\n      <Text\n        key={3}\n        style={[style, styles.description, descriptionStyle]}>\n        {description}\n      </Text>\n    );\n  };\n\n  private renderAccessoryElement = (style: StyleType): AccessoryElement => {\n    // @ts-ignore: will be not executed if `accessory` property is provided\n    const { index, accessory } = this.props;\n\n    const accessoryElement: AccessoryElement = accessory(style, index);\n\n    return React.cloneElement(accessoryElement, {\n      key: 4,\n      style: [style, styles.accessory, accessoryElement.props.style],\n    });\n  };\n\n  private renderContentElementChildren = (style: StyleType): React.ReactNodeArray => {\n    // @ts-ignore: will be not executed if any of properties below is provided\n    const { title, description } = this.props;\n\n    return [\n      isValidString(title) && this.renderTitleElement(style.title),\n      isValidString(description) && this.renderDescriptionElement(style.description),\n    ];\n  };\n\n  private renderTemplateChildren = (style: StyleType): React.ReactNodeArray => {\n    // @ts-ignore: following props could not be provided\n    const { icon, title, description, accessory } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      (title || description) && this.renderContentElement(style),\n      accessory && this.renderAccessoryElement(style.accessory),\n    ];\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNode => {\n    const { children } = this.props;\n\n    return children ? children : this.renderTemplateChildren(style);\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, ...derivedProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    const componentChildren: React.ReactNode = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...derivedProps}\n        style={[container, styles.container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n        onLongPress={this.onLongPress}>\n        {componentChildren}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  icon: {},\n  title: {\n    textAlign: 'left',\n  },\n  description: {\n    textAlign: 'left',\n  },\n  accessory: {},\n});\n\nexport const ListItem = styled<ListItemProps>(ListItemComponent);\n","import React from 'react';\nimport {\n  ListItem,\n  ListItemProps,\n  ListItemElement,\n} from '../list/listItem.component';\n\nexport type DrawerHeaderFooterProps = Partial<ListItemProps>;\nexport type DrawerHeaderFooterElement = ListItemElement;\n\n/**\n * `DrawerHeaderFooter` is a support component for `Drawer`.\n * Designed to be used as Header or Footer of `Drawer`.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the DrawerHeaderFooter.\n *\n * @property {string} description - Determines the description of the DrawerHeaderFooter's title.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {StyleProp<TextStyle>} descriptionStyle - Customizes description style.\n *\n * @property {React.ReactNode} children - Determines React Children of the component.\n *\n * @property {(style: StyleType, index: number) => React.ReactElement<any>} accessory - Determines the accessory of the\n * component.\n *\n * @property {(style: StyleType, index: number) => React.ReactElement<ImageProps>} icon - Determines the icon of the\n * component.\n *\n * @property {(index: number, event: GestureResponderEvent) => React.ReactElement<ImageProps>} onPress - Emits when\n * component is pressed.\n *\n * @overview-example DrawerHeaderFooterSimpleUsage\n *\n * @overview-example DrawerHeaderFooterWithAccessory\n *\n * @example DrawerHeaderFooterWithExternalSourceIcon\n *\n * @example DrawerHeaderFooterInlineStyling\n */\nexport class DrawerHeaderFooter extends React.Component<DrawerHeaderFooterProps> {\n\n  public render(): DrawerHeaderFooterElement {\n    return (\n      <ListItem {...this.props} />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewProps,\n  View,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextProps,\n} from '../text/text.component';\nimport { CheckBox } from '../checkbox/checkbox.component';\nimport { TouchableTypeReturningProps } from '../support/typings';\n\ntype TextElement = React.ReactElement<TextProps>;\ntype DefaultItemElement = React.ReactElement<TouchableOpacityProps>;\ntype MultiSelectItemElement = React.ReactElement<ViewProps>;\n\nexport interface SelectOptionType {\n  text: string;\n  textStyle?: TextStyle;\n  disabled?: boolean;\n  items?: SelectOptionType[];\n}\n\nexport interface ComponentProps {\n  item: SelectOptionType;\n  selected?: boolean;\n  indeterminate?: boolean;\n  multiSelect?: boolean;\n}\n\nexport type SelectOptionProps = ComponentProps & StyledComponentProps & TouchableTypeReturningProps<SelectOptionType>;\nexport type SelectOptionElement = React.ReactElement<SelectOptionProps>;\n\nclass SelectOptionComponent extends React.Component<SelectOptionProps> {\n\n  static styledComponentName: string = 'SelectOption';\n\n  private onPress = (event: GestureResponderEvent) => {\n    const { item, onPress } = this.props;\n\n    this.props.dispatch([]);\n    onPress(item, event);\n  };\n\n  private onMultiSelectItemPress = (value: boolean): void => {\n    this.onPress(null);\n  };\n\n  private onPressIn = (event: GestureResponderEvent) => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(this.props.item, event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent) => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(this.props.item, event);\n    }\n  };\n\n  private onLongPress = (event: GestureResponderEvent) => {\n    if (this.props.onLongPress) {\n      this.props.onLongPress(this.props.item, event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textColor,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textMarginHorizontal,\n      multiSelectBackgroundColor,\n      multiSelectTextColor,\n      ...containerStyles\n    } = source;\n\n    return {\n      container: containerStyles,\n      multiSelectContainer: {\n        ...containerStyles,\n        backgroundColor: multiSelectBackgroundColor,\n      },\n      text: {\n        color: textColor,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        marginHorizontal: textMarginHorizontal,\n      },\n      multiSelectText: {\n        color: multiSelectTextColor,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        marginHorizontal: textMarginHorizontal,\n      },\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    const { item } = this.props;\n\n    return (\n      <Text style={[style, styles.text, item.textStyle]}>\n        {item.text}\n      </Text>\n    );\n  };\n\n  private renderDefaultItem = (): DefaultItemElement => {\n    const { themedStyle, style, item, ...restProps } = this.props;\n    const { container, text } = this.getComponentStyle(themedStyle);\n    const textElement: TextElement = this.renderTextElement(text);\n\n    return (\n      <TouchableOpacity\n        {...restProps}\n        activeOpacity={1.0}\n        style={[styles.container, container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n        onLongPress={this.onLongPress}>\n        {textElement}\n      </TouchableOpacity>\n    );\n  };\n\n  private renderMultiSelectItem = (): MultiSelectItemElement => {\n    const {\n      disabled,\n      item,\n      themedStyle,\n      selected,\n      style,\n      indeterminate,\n      ...restProps\n    } = this.props;\n    const { multiSelectContainer, multiSelectText } = this.getComponentStyle(themedStyle);\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, multiSelectContainer, style]}>\n        <CheckBox\n          text={item.text}\n          textStyle={[multiSelectText, item.textStyle]}\n          disabled={disabled}\n          checked={selected}\n          indeterminate={indeterminate}\n          onChange={this.onMultiSelectItemPress}\n        />\n      </View>\n    );\n  };\n\n  public render(): React.ReactNode {\n    const { multiSelect } = this.props;\n\n    return multiSelect ? this.renderMultiSelectItem() : this.renderDefaultItem();\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {},\n  text: {},\n});\n\nexport const SelectOption = styled<SelectOptionProps>(SelectOptionComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ListRenderItemInfo,\n  View,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  SelectOption,\n  SelectOptionElement,\n  SelectOptionProps,\n  SelectOptionType,\n} from './selectOption.component';\nimport { SelectionStrategy } from './selection.strategy';\n\ninterface ComponentProps {\n  multiSelect?: boolean;\n  strategy: SelectionStrategy;\n  renderItem?: (item: ListRenderItemInfo<SelectOptionType>) => React.ReactElement<any>;\n}\n\ninterface MainItemStatus {\n  selected: boolean;\n  indeterminate: boolean;\n}\n\nexport type SelectGroupOptionProps = ComponentProps & Partial<SelectOptionProps> & StyledComponentProps;\nexport type SelectGroupOptionElement = React.ReactElement<SelectGroupOptionProps>;\n\nclass SelectGroupOptionComponent extends React.Component<SelectGroupOptionProps> {\n\n  static styledComponentName: string = 'SelectGroupOption';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      itemPaddingHorizontal,\n      ...containerStyles\n    } = source;\n\n    return {\n      container: containerStyles,\n      item: {\n        paddingHorizontal: itemPaddingHorizontal,\n      },\n    };\n  };\n\n  private getMainItemStatus = (subItemsSelectedStatusArray: boolean[]): MainItemStatus => {\n    const someSelected: boolean = subItemsSelectedStatusArray\n      .some((item: boolean) => item === true);\n    const everySelected: boolean = subItemsSelectedStatusArray\n      .every((item: boolean) => item === true);\n\n    switch (true) {\n      case (someSelected && !everySelected):\n        return { selected: true, indeterminate: true };\n      case  !someSelected:\n        return { selected: false, indeterminate: false };\n      case everySelected:\n        return { selected: true, indeterminate: false };\n    }\n  };\n\n  private renderSubItem = (option: SelectOptionType, index: number): SelectOptionElement => {\n    const { item, renderItem, strategy, ...restProps } = this.props;\n    const returningOption: ListRenderItemInfo<SelectOptionType> = {\n      item: option,\n      index: index,\n      separators: null,\n    };\n    const selected: boolean = strategy.isSelected(option);\n\n    return renderItem ? renderItem(returningOption) : (\n      <SelectOption\n        {...restProps}\n        selected={selected}\n        item={option}\n      />\n    );\n  };\n\n  private renderSubItemsElements = (): SelectOptionElement[] => {\n    const { item, themedStyle } = this.props;\n    const { item: itemStyle } = this.getComponentStyle(themedStyle);\n\n    return item.items\n      .map((option: SelectOptionType, index: number) => {\n        const element: SelectOptionElement = this.renderSubItem(option, index);\n\n        return React.cloneElement(element, {\n          ...option,\n          style: [element.props.style, itemStyle],\n          key: index,\n        });\n      });\n  };\n\n  private renderMultiSelectMainElement = (subItemsElements: SelectOptionElement[]): SelectOptionElement => {\n    const { item, ...restProps } = this.props;\n    const subItemsSelectedStatusArray: boolean[] = subItemsElements\n      .map((subItem: SelectOptionElement) => subItem.props.selected);\n    const itemStatus: MainItemStatus = this.getMainItemStatus(subItemsSelectedStatusArray);\n\n    return (\n      <SelectOption\n        {...restProps}\n        {...itemStatus}\n        item={item}\n      />\n    );\n  };\n\n  private renderDefaultMainElement = (): SelectOptionElement => {\n    const { item } = this.props;\n\n    return (\n      <SelectOption\n        disabled={true}\n        item={item}\n      />\n    );\n  };\n\n  private renderMainElement = (subItemsElements: SelectOptionElement[]): SelectOptionElement => {\n    const { multiSelect } = this.props;\n\n    return multiSelect ? this.renderMultiSelectMainElement(subItemsElements) : this.renderDefaultMainElement();\n  };\n\n  public render(): SelectGroupOptionElement {\n    const { themedStyle } = this.props;\n    const { container } = this.getComponentStyle(themedStyle);\n    const subItemsElements: SelectOptionElement[] = this.renderSubItemsElements();\n    const mainElement: SelectOptionElement = this.renderMainElement(subItemsElements);\n\n    return (\n      <View style={container}>\n        {mainElement}\n        {subItemsElements}\n      </View>\n    );\n  }\n}\n\nexport const SelectGroupOption = styled<SelectGroupOptionProps>(SelectGroupOptionComponent);\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  ListRenderItemInfo,\n  GestureResponderEvent,\n} from 'react-native';\nimport {\n  List,\n  ListProps,\n} from '../list/list.component';\nimport {\n  SelectOption,\n  SelectOptionType,\n  SelectOptionElement,\n} from './selectOption.component';\nimport {\n  SelectGroupOption,\n  SelectGroupOptionElement,\n} from './selectGroupOption.component';\nimport { SelectionStrategy } from './selection.strategy';\n\ntype DefaultMenuItemElement = SelectOptionElement | SelectGroupOptionElement;\ntype MenuItemElement = DefaultMenuItemElement | React.ReactElement<any>;\n\nexport interface ComponentProps {\n  data: SelectOptionType[];\n  multiSelect?: boolean;\n  strategy: SelectionStrategy;\n  renderItem?: (item: ListRenderItemInfo<SelectOptionType>) => React.ReactElement<any>;\n  onSelect: (option: SelectOptionType, event?: GestureResponderEvent) => void;\n}\n\nexport type SelectOptionsListProps = Partial<ListProps> & ComponentProps;\nexport type SelectOptionsListElement = React.ReactElement<SelectOptionsListProps>;\n\nexport class SelectOptionsList extends React.Component<SelectOptionsListProps> {\n\n  private areThereSubItems = (dropdownItem: SelectOptionType): boolean => {\n    const { items } = dropdownItem;\n\n    return items && items.length !== 0;\n  };\n\n  private onSelect = (option: SelectOptionType, event?: GestureResponderEvent): void => {\n    this.props.onSelect(option, event);\n  };\n\n  private renderDefaultItem = (info: ListRenderItemInfo<SelectOptionType>): DefaultMenuItemElement => {\n    const { renderItem, multiSelect, strategy } = this.props;\n    const selected: boolean = strategy.isSelected(info.item);\n\n    return this.areThereSubItems(info.item) ? (\n      <SelectGroupOption\n        {...info}\n        strategy={strategy}\n        multiSelect={multiSelect}\n        renderItem={renderItem}\n        onPress={this.onSelect}\n      />\n    ) : (\n      <SelectOption\n        {...info}\n        disabled={info.item.disabled}\n        selected={selected}\n        multiSelect={multiSelect}\n        onPress={this.onSelect}\n      />\n    );\n  };\n\n  private renderItem = (info: ListRenderItemInfo<SelectOptionType>): MenuItemElement => {\n    const { renderItem } = this.props;\n\n    return renderItem ? renderItem(info) : this.renderDefaultItem(info);\n  };\n\n  public render(): SelectOptionsListElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <List\n        {...restProps}\n        style={[styles.container, style]}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n","import { SelectOptionType } from './selectOption.component';\n\nexport interface SelectionStrategy {\n  selectedOption: SelectOptionType | SelectOptionType[];\n  isSelected: (item: SelectOptionType) => boolean;\n  select: (option: SelectOptionType, callback?: () => void) => SelectOptionType | SelectOptionType[];\n  getPlaceholder: (placeholder: string) => string;\n}\n\nexport class MultiSelectStrategy implements SelectionStrategy {\n\n  public selectedOption: SelectOptionType[];\n\n  constructor(options: SelectOptionType | SelectOptionType[]) {\n    if (Array.isArray(options)) {\n      this.selectedOption = options;\n    }\n  }\n\n  public select(option: SelectOptionType, callback?: () => void): SelectOptionType[] {\n    const subOptionsExist: boolean = this.areThereSubOptions(option);\n\n    if (subOptionsExist) {\n      this.selectOptionWithSubOptions(option);\n    } else {\n      this.selectDefaultOption(option);\n    }\n\n    return this.selectedOption;\n  }\n\n  private selectDefaultOption(option: SelectOptionType): void {\n    const optionAlreadyExist: boolean = this.selectedOption\n      .some((item: SelectOptionType) => {\n        return item === option;\n      });\n    if (optionAlreadyExist) {\n      this.removeOption(option);\n    } else {\n      this.selectedOption.push(option);\n    }\n  }\n\n  private selectOptionWithSubOptions(option: SelectOptionType): void {\n    const subOptionsAlreadyExist: boolean = this.selectedOption\n      .some((item: SelectOptionType) => {\n        return option.items\n          .some((subItem: SelectOptionType) => {\n            return subItem === item;\n          });\n      });\n\n    if (subOptionsAlreadyExist) {\n      option.items.forEach((subItem: SelectOptionType) => this.removeOption(subItem));\n    } else {\n      const enabledItems: SelectOptionType[] = option.items\n        .filter((item: SelectOptionType) => {\n          return !item.disabled;\n        });\n      this.selectedOption = this.selectedOption.concat(enabledItems);\n    }\n  }\n\n  public getPlaceholder(placeholder: string): string {\n    if (this.isSelectedOptionExist()) {\n      return this.selectedOption\n        .map((item: SelectOptionType) => {\n          return item && item.text;\n        })\n        .join(', ');\n    } else {\n      return placeholder;\n    }\n  }\n\n  public isSelected(item: SelectOptionType): boolean {\n    return this.selectedOption\n      .some((option: SelectOptionType) => {\n        return option === item;\n      });\n  }\n\n  private isSelectedOptionExist(): boolean {\n    return this.selectedOption && this.selectedOption.length !== 0;\n  }\n\n  private removeOption(option: SelectOptionType): void {\n    const index: number = this.selectedOption\n      .findIndex((item: SelectOptionType) => {\n        return item === option;\n      });\n    if (index !== -1) {\n      this.selectedOption.splice(index, 1);\n    }\n  }\n\n  private areThereSubOptions(option: SelectOptionType): boolean {\n    return option.items && option.items.length !== 0;\n  }\n}\n\nexport class SingleSelectStrategy implements SelectionStrategy {\n\n  public selectedOption: SelectOptionType;\n\n  constructor(options: SelectOptionType | SelectOptionType[]) {\n    if (!Array.isArray(options)) {\n      this.selectedOption = options;\n    }\n  }\n\n  public select(option: SelectOptionType, callback?: () => void): SelectOptionType {\n    this.selectedOption = option;\n\n    if (callback) {\n      callback();\n    }\n\n    return this.selectedOption;\n  }\n\n  public getPlaceholder(placeholder: string): string {\n    if (this.selectedOption) {\n      return this.selectedOption.text;\n    } else {\n      return placeholder;\n    }\n  }\n\n  public isSelected(item: SelectOptionType): boolean {\n    if (this.hasOptionSubItems(item)) {\n      return item.items.some((option: SelectOptionType) => {\n        return this.isSelected(option);\n      });\n    } else {\n      return this.selectedOption === item;\n    }\n  }\n\n  private hasOptionSubItems(option: SelectOptionType): boolean {\n    return option.items && option.items.length !== 0;\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  StyleProp,\n  View,\n  ViewStyle,\n  ListRenderItemInfo,\n  Animated,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { Popover } from '../popover/popover.component';\nimport {\n  SelectOptionsList,\n  SelectOptionsListElement,\n} from './selectOptionsList.component';\nimport { SelectOptionType } from './selectOption.component';\nimport {\n  MeasureNode,\n  MeasureResult,\n  MeasuringElementProps,\n} from '../popover/measure.component';\nimport {\n  SelectionStrategy,\n  MultiSelectStrategy,\n  SingleSelectStrategy,\n} from './selection.strategy';\nimport {\n  allWithPrefix,\n  isValidString,\n} from '../support/services';\nimport { Chevron } from '../support/components';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype ControlElement = React.ReactElement<TouchableOpacityProps>;\ntype IconProp = (style: ImageStyle, visible: boolean) => IconElement;\ntype SelectChildren = [SelectOptionsListElement, TextElement, ControlElement];\n\nexport type SelectOption = Array<SelectOptionType> | SelectOptionType;\n\nconst MEASURED_CONTROL_TAG: string = 'Control';\n\ninterface ComponentProps {\n  data: SelectOptionType[];\n  multiSelect?: boolean;\n  selectedOption?: SelectOption;\n  textStyle?: StyleProp<TextStyle>;\n  placeholder?: string;\n  placeholderStyle?: StyleProp<TextStyle>;\n  label?: string;\n  labelStyle?: StyleProp<TextStyle>;\n  controlStyle?: StyleProp<ViewStyle>;\n  icon?: IconProp;\n  onSelect: (option: SelectOption, event?: GestureResponderEvent) => void;\n  status?: string;\n  renderItem?: (item: ListRenderItemInfo<SelectOptionType>) => React.ReactElement<any>;\n}\n\nexport type SelectProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type SelectElement = React.ReactElement<SelectProps>;\n\ninterface State {\n  visible: boolean;\n  optionsListWidth: number;\n}\n\n/**\n * Styled `Select` component.\n *\n * @extends React.Component\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning` or `danger`.\n *\n * @property {boolean} multiSelect - Determines `multi-select` behavior of the Select component.\n *\n * @property {SelectOption} selectedOption - Determines selected option of the Select.\n * Can be `SelectOptionType` or `SelectOptionType[]` It depends on `multiSelect` property.\n *\n * @property {SelectOptionType[]} data - Determines items of the Select component.\n *\n * @property {(option: SelectOption, event?: GestureResponderEvent) => void} onSelect - Fires on option selection.\n * Returns selected option/options.\n *\n * @property {(item: ListRenderItemInfo<SelectOptionType>) => React.ReactElement<any>} renderItem - Property for\n * rendering custom select items.\n *\n * @property {StyleProp<TextStyle>} label - Determines the `label` of the component.\n *\n * @property {StyleProp<TextStyle>} placeholder - Determines the `placeholder` of the component.\n * By default is `Select Option`.\n *\n * @property {StyleProp<TextStyle>} labelStyle - Determines the style of the `label`.\n *\n * @property {StyleProp<TextStyle>} placeholderStyle - Determines the style of the `placeholder`.\n *\n * @property {StyleProp<TextStyle>} textStyle - Determines the style of the selected option/options text.\n *\n * @property {StyleProp<ViewStyle>} controlStyle - Determines the style of `control`.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines icon of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property TouchableOpacityProps\n *\n * @property StyledComponentProps\n *\n * @overview-example SelectSimpleUsage\n *\n * @overview-example SelectStatus\n *\n * @overview-example SelectMultiSelect\n *\n * @overview-example SelectWithGroups\n *\n * @example SelectCustomIcon\n *\n * @example SelectInlineStyling\n */\nclass SelectComponent extends React.Component<SelectProps, State> {\n\n  static styledComponentName: string = 'Select';\n  static defaultProps: Partial<SelectProps> = {\n    placeholder: 'Select Option',\n    multiSelect: false,\n  };\n\n  public state: State = {\n    visible: false,\n    optionsListWidth: 0,\n  };\n\n  private strategy: SelectionStrategy;\n  private iconAnimation: Animated.Value;\n\n  constructor(props: SelectProps) {\n    super(props);\n    this.strategy = this.createSelectionStrategy();\n    this.iconAnimation = new Animated.Value(-180);\n  }\n\n  public componentDidUpdate(): void {\n    this.strategy = this.createSelectionStrategy();\n  }\n\n  private onPress = (event: GestureResponderEvent) => {\n    this.props.dispatch([]);\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n    this.setVisibility();\n  };\n\n  private onPressIn = (event: GestureResponderEvent) => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent) => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private onItemSelect = (option: SelectOptionType, event: GestureResponderEvent): void => {\n    const { onSelect } = this.props;\n\n    onSelect(this.strategy.select(option, this.setVisibility));\n  };\n\n  private onControlMeasure = (result: MeasureResult): void => {\n    const width: number = result[MEASURED_CONTROL_TAG].size.width;\n\n    this.setState({ optionsListWidth: width });\n  };\n\n  private createSelectionStrategy = (): SelectionStrategy => {\n    const { multiSelect, selectedOption } = this.props;\n\n    return multiSelect ? new MultiSelectStrategy(selectedOption) : new SingleSelectStrategy(selectedOption);\n  };\n\n  private setVisibility = (): void => {\n    const visible: boolean = !this.state.visible;\n\n    this.setState({ visible }, this.handleVisibleChange);\n  };\n\n  private handleVisibleChange = (): void => {\n    this.dispatchActive();\n    this.startIconAnimation();\n  };\n\n  private dispatchActive = (): void => {\n    const { visible } = this.state;\n    if (visible) {\n      this.props.dispatch([Interaction.ACTIVE]);\n    } else {\n      this.props.dispatch([]);\n    }\n  };\n\n  private startIconAnimation = (): void => {\n    const { visible } = this.state;\n    if (visible) {\n      this.animateIcon(0);\n    } else {\n      this.animateIcon(-180);\n    }\n  };\n\n  private animateIcon = (toValue: number): void => {\n    Animated.timing(this.iconAnimation, {\n      toValue: toValue,\n      duration: 200,\n    }).start();\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      backgroundColor,\n      borderColor,\n      borderWidth,\n      minHeight,\n      minWidth,\n      paddingHorizontal,\n      paddingVertical,\n      borderRadius,\n    } = source;\n    const iconStyles: StyleType = allWithPrefix(source, 'icon');\n    const textStyles: StyleType = allWithPrefix(source, 'text');\n    const placeholderStyles: StyleType = allWithPrefix(source, 'placeholder');\n    const optionsListStyles: StyleType = allWithPrefix(source, 'optionsList');\n    const labelStyle: StyleType = allWithPrefix(source, 'label');\n    const outlineStyles: StyleType = allWithPrefix(source, 'outline');\n\n    return {\n      control: {\n        backgroundColor: backgroundColor,\n        borderColor: borderColor,\n        borderWidth: borderWidth,\n        minHeight: minHeight,\n        minWidth: minWidth,\n        paddingHorizontal: paddingHorizontal,\n        paddingVertical: paddingVertical,\n        borderRadius: borderRadius,\n      },\n      icon: {\n        height: iconStyles.iconHeight,\n        width: iconStyles.iconWidth,\n        marginHorizontal: iconStyles.iconMarginHorizontal,\n        tintColor: iconStyles.iconTintColor,\n      },\n      text: {\n        color: textStyles.textColor,\n        fontFamily: textStyles.textFontFamily,\n        fontSize: textStyles.textFontSize,\n        fontWeight: textStyles.textFontWeight,\n        lineHeight: textStyles.textLineHeight,\n        marginHorizontal: textStyles.textMarginHorizontal,\n      },\n      placeholder: {\n        color: placeholderStyles.placeholderColor,\n        fontFamily: placeholderStyles.placeholderFontFamily,\n        fontSize: placeholderStyles.placeholderFontSize,\n        fontWeight: placeholderStyles.placeholderFontWeight,\n        lineHeight: placeholderStyles.placeholderLineHeight,\n        marginHorizontal: placeholderStyles.placeholderMarginHorizontal,\n      },\n      outline: {\n        backgroundColor: outlineStyles.outlineBackgroundColor,\n        padding: outlineStyles.outlinePadding,\n        borderRadius: outlineStyles.outlineBorderRadius,\n      },\n      optionsList: {\n        maxHeight: optionsListStyles.optionsListMaxHeight,\n        borderRadius: optionsListStyles.optionsListBorderRadius,\n        borderColor: optionsListStyles.optionsListBorderColor,\n        borderWidth: optionsListStyles.optionsListBorderWidth,\n      },\n      label: {\n        color: labelStyle.labelColor,\n        marginBottom: labelStyle.labelMarginBottom,\n      },\n    };\n  };\n\n  private renderLabelElement = (style: TextStyle): TextElement => {\n    const { label, labelStyle } = this.props;\n\n    return (\n      <Text style={[style, styles.label, labelStyle]}>\n        {label}\n      </Text>\n    );\n  };\n\n  private renderDefaultIconElement = (style: ImageStyle): IconElement => {\n    const rotateInterpolate = this.iconAnimation.interpolate({\n      inputRange: [-180, 0],\n      outputRange: ['-180deg', '0deg'],\n    });\n    const animatedStyle: StyleType = { transform: [{ rotate: rotateInterpolate }] };\n\n    return (\n      <Chevron\n        style={[style, animatedStyle]}\n        isAnimated={true}\n      />\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const { icon } = this.props;\n    const { visible } = this.state;\n\n    if (icon) {\n      return icon(style, visible);\n    } else {\n      return this.renderDefaultIconElement(style);\n    }\n  };\n\n  private renderTextElement = (valueStyle: TextStyle, placeholderStyle: TextStyle): TextElement => {\n    const { placeholder, textStyle } = this.props;\n    const value: string = this.strategy.getPlaceholder(placeholder);\n    const style: TextStyle = placeholder === value ? placeholderStyle : valueStyle;\n\n    return (\n      <Text\n        style={[style, styles.text, textStyle]}\n        numberOfLines={1}\n        ellipsizeMode='tail'>\n        {value}\n      </Text>\n    );\n  };\n\n  private renderOptionsListElement = (style: StyleType): SelectOptionsListElement => {\n    const { appearance, selectedOption, ...restProps } = this.props;\n    const additionalOptionsListStyle: StyleType = { width: this.state.optionsListWidth };\n\n    return (\n      <SelectOptionsList\n        {...restProps}\n        strategy={this.strategy}\n        key={0}\n        style={[styles.optionsList, style, additionalOptionsListStyle]}\n        bounces={false}\n        onSelect={this.onItemSelect}\n      />\n    );\n  };\n\n  private renderControlChildren = (style: StyleType): [IconElement, TextElement] => {\n    return [\n      this.renderIconElement(style.icon),\n      this.renderTextElement(style.text, style.placeholder),\n    ];\n  };\n\n  private renderControlElement = (): ControlElement => {\n    const { themedStyle, controlStyle, ...restProps } = this.props;\n    const { control, outline, ...childrenStyles } = this.getComponentStyle(themedStyle);\n    const [iconElement, textElement] = this.renderControlChildren(childrenStyles);\n\n    const measuringProps: MeasuringElementProps = { tag: MEASURED_CONTROL_TAG };\n\n    return (\n      <MeasureNode onResult={this.onControlMeasure}>\n        {[\n          <TouchableOpacity\n            {...restProps}\n            {...measuringProps}\n            key={MEASURED_CONTROL_TAG}\n            activeOpacity={1.0}\n            style={[styles.control, control, controlStyle]}\n            onPress={this.onPress}\n            onPressIn={this.onPressIn}\n            onPressOut={this.onPressOut}>\n            {textElement}\n            {iconElement}\n          </TouchableOpacity>,\n        ]}\n      </MeasureNode>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): SelectChildren => {\n    const { label } = this.props;\n\n    return [\n      this.renderOptionsListElement(style.optionsList),\n      isValidString(label) && this.renderLabelElement(style.label),\n      this.renderControlElement(),\n    ];\n  };\n\n  public render(): SelectElement {\n    const { themedStyle, style } = this.props;\n    const { visible, optionsListWidth } = this.state;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n    const [optionsListElement, labelElement, controlElement] = this.renderComponentChildren(componentStyle);\n    const additionalOptionsListStyle: StyleType = { maxWidth: optionsListWidth };\n\n    return (\n      <View style={style}>\n        {labelElement}\n        <View style={[styles.outline, componentStyle.outline]}>\n          <Popover\n            visible={visible}\n            content={optionsListElement}\n            style={additionalOptionsListStyle}\n            indicatorStyle={styles.indicator}\n            onBackdropPress={this.setVisibility}>\n            {controlElement}\n          </Popover>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  control: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  text: {\n    flex: 1,\n  },\n  icon: {},\n  label: {},\n  indicator: {\n    width: 0,\n    height: 6,\n  },\n  optionsList: {\n    flexGrow: 0,\n  },\n  outlineContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  outline: {\n    justifyContent: 'center',\n  },\n});\n\nexport const Select = styled<SelectProps>(SelectComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport {\n  IconPack,\n  IconProvider,\n} from './type';\n\nfunction throwPackNotFoundError(name: string) {\n  const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n  const message: string = [\n    `\\nIcon: Icon Pack '${name}' is not registered`,\n    'Using UI Kitten components is only possible with configuring ApplicationProvider.',\n    `📖 Documentation: ${docRoot}/guides/setting-up-icons`,\n  ].join('\\n');\n\n  throw Error(message);\n}\n\nfunction throwIconNotFoundError(name: string, pack: string) {\n  const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n  const message: string = [\n    `\\nIcon: '${name}' icon is not registered in pack '${pack}'.`,\n    'Check icon name or consider switching icon pack.',\n    `📖 Documentation: ${docRoot}/guides/setting-up-icons`,\n  ].join('\\n');\n\n  throw Error(message);\n}\n\nexport interface RegisteredIcon<T> {\n  name: string;\n  pack: string;\n  icon: IconProvider<T>;\n}\n\ntype IconProps = any;\n\n/**\n * This service allows to register multiple icon packs to use them later within\n * `<Icon/>` component.\n */\nclass RegistryService {\n\n  protected packs: Map<string, IconPack<IconProps>> = new Map();\n  protected defaultPack: string;\n\n  /**\n   * Registers multiple icon packs and sets the first one as default if there is no default packs\n   *\n   * @param {IconPack[]} packs - array of icon packs\n   */\n  public register<T>(...packs: IconPack<T>[]) {\n    packs.forEach((pack: IconPack<IconProps>) => {\n      this.registerIconPack(pack);\n    });\n  }\n\n  /**\n   * Sets pack as default\n   *\n   * @param {string} name\n   * @throws {Error} if pack is nor registered\n   */\n  public setDefaultIconPack(name: string) {\n    if (!this.packs.has(name)) {\n      throwPackNotFoundError(name);\n    }\n\n    this.defaultPack = name;\n  }\n\n  /**\n   * @param {string} name\n   * @returns {IconPack} pack by name\n   */\n  public getIconPack<T>(name: string): IconPack<T> {\n    return this.packs.get(name);\n  }\n\n  /**\n   * @param {string} name - icon name\n   * @param {string} pack - pack name\n   * @throws {Error} if requested icon pack is not registered\n   * @returns {RegisteredIcon} - registered icon of a requested/default pack\n   */\n  public getIcon<T>(name: string, pack?: string): RegisteredIcon<T> {\n    const iconsPack: IconPack<T> = pack ? this.getPackOrThrow(pack) : this.getDefaultPack();\n\n    return {\n      name,\n      pack: iconsPack.name,\n      icon: this.getIconFromPack(name, iconsPack),\n    };\n  }\n\n  /**\n   * Registers single icon pack\n   *\n   * @param {IconPack} pack - icon pack to register\n   */\n  protected registerIconPack<T>(pack: IconPack<T>) {\n    this.packs.set(pack.name, pack);\n  }\n\n  protected getPackOrThrow<T>(name: string): IconPack<T> {\n    const pack: IconPack<IconProps> = this.packs.get(name);\n\n    if (!pack) {\n      throwPackNotFoundError(name);\n    }\n\n    return pack;\n  }\n\n  protected getDefaultPack<T>(): IconPack<T> {\n    return this.getIconPack(this.defaultPack);\n  }\n\n  protected getIconFromPack<T>(name: string, pack: IconPack<T>, shouldThrow = true): IconProvider<T> {\n    if (shouldThrow && !pack.icons[name]) {\n      throwIconNotFoundError(name, pack.name);\n    }\n\n    return pack.icons[name];\n  }\n}\n\nexport const IconRegistryService = new RegistryService();\n","import React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport {\n  getIconAnimation,\n  IconAnimation,\n  IconAnimationRegistry,\n} from './iconAnimation';\nimport {\n  IconRegistryService,\n  RegisteredIcon,\n} from './service/iconRegistry.service';\nimport { AnimationConfig } from '../animation';\n\ninterface ComponentProps {\n  name: string;\n  pack?: string;\n  animation?: keyof IconAnimationRegistry;\n  animationConfig?: AnimationConfig;\n}\n\n// This is basically needed to avoid generics in required props\n// In general, could be SVGProps if using @ui-kitten/eva-icons or ImageProps if using Image.\ntype WrappedElementProps = any;\nexport type IconProps<T = WrappedElementProps> = ComponentProps & T;\nexport type IconElement<T = WrappedElementProps> = React.ReactElement<IconProps<T>>;\n\n/**\n * `Icon` component with animation support. Allows to render any ReactElement registered for a specific name.\n * Starting from UI Kitten 4.2, there is `@ui-kitten/eva-icons` module\n * that renders any icon from eva-icons package in `svg` format.\n * It allows easily use icons in any component that has `icon` prop\n *\n * @extends React.Component\n *\n * @method {(callback?: Animated.EndCallback) => void} startAnimation - Toggle animation to start.\n *\n * @method {() => void} stopAnimation - Toggle animation to stop.\n *\n * @property {string} name - Name of registered icon.\n *\n * @property {string} pack - Name of icon pack that is able to provide an icon for specified name.\n *\n * @property {string} animation - Animation name. Available `zoom`, `pulse` and `shake`. Default is `zoom`.\n *\n * @property {AnimationConfig} animationConfig - Determines animation config. Extends `Animated.AnimationConfig`.\n *\n * @overview-example IconSimpleUsage\n *\n * @overview-example IconWithinButton\n *\n * @overview-example IconWithinInput\n *\n * @overview-example IconExternalSource\n *\n * @overview-example IconAnimation\n *\n * @example IconAnimationInfinite\n *\n * @example IconInlineStyling\n */\nexport class Icon<T> extends React.Component<IconProps<T>> {\n\n  static defaultProps: Partial<IconProps> = {\n    animation: 'zoom',\n  };\n\n  private readonly animation: IconAnimation;\n\n  constructor(props: IconProps<T>) {\n    super(props);\n    this.animation = getIconAnimation(props.animation, props.animationConfig);\n  }\n\n  public componentWillUnmount() {\n    this.animation.release();\n  }\n\n  public startAnimation = (callback?: Animated.EndCallback) => {\n    this.animation.start(callback);\n  };\n\n  public stopAnimation = () => {\n    this.animation.stop();\n  };\n\n  private getComponentStyle = (): StyleProp<ViewStyle> => {\n    return this.animation.toProps();\n  };\n\n  public render(): React.ReactElement<T> {\n    const { name, pack, ...restProps } = this.props;\n    const registeredIcon: RegisteredIcon<T> = IconRegistryService.getIcon(name, pack);\n\n    return (\n      <Animated.View {...this.getComponentStyle()}>\n        {registeredIcon.icon.toReactElement(restProps as T)}\n      </Animated.View>\n    );\n  }\n}\n","import { ViewStyle } from 'react-native';\nimport {\n  Animation,\n  PulseAnimation,\n  ShakeAnimation,\n  ZoomAnimation,\n  AnimationConfig,\n} from '../animation';\n\nexport type IconAnimation = Animation<any, ViewStyle>;\n\nexport interface IconAnimationRegistry {\n  zoom: IconAnimation;\n  pulse: IconAnimation;\n  shake: IconAnimation;\n}\n\nexport function getIconAnimation(animation?: keyof IconAnimationRegistry,\n                                 config?: AnimationConfig): IconAnimation {\n\n  switch (animation) {\n    case 'zoom':\n      return new ZoomAnimation(config);\n    case 'pulse':\n      return new PulseAnimation(config);\n    case 'shake':\n      return new ShakeAnimation(config);\n  }\n}\n","import React from 'react';\nimport { IconRegistryService } from './service/iconRegistry.service';\nimport { IconPack } from './service/type';\n\ntype IconsProp = IconPack<any> | IconPack<any>[];\n\nexport interface IconRegistryProps {\n  icons: IconsProp;\n  defaultIcons?: string;\n}\n\nexport type IconRegistryElement = React.ReactElement<IconRegistryProps>;\n\n/**\n * Icon Registry component. Registers one or more icon packs for later usage in `<Icon/>` component.\n * Renders nothing, but should be added as a child of an Application Root.\n *\n * @extends React.Component\n *\n * @property {IconPack<any> | IconPack<any>[]} icons - Icon packs to register.\n * @property {string} defaultIcons - Name of an icon pack that is used by default.\n *\n * @overview-example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { mapping, light as lightTheme } from '@eva-design/eva';\n * import { ApplicationProvider, IconRegistry, Layout, Text } from 'react-native-ui-kitten';\n * import { EvaIconsPack } from '@ui-kitten/eva-icons'; // <-- Make sure it is installed. npm i @ui-kitten/eva-icons\n *\n * export default class App extends React.Component {\n *   render() {\n *     return (\n *       <React.Fragment>\n *         <IconRegistry icons={EvaIconsPack}/>\n *         <ApplicationProvider mapping={mapping} theme={lightTheme}>\n *           <Layout style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n *             <Text>Welcome to UI Kitten</Text>\n *           </Layout>\n *         </ApplicationProvider>\n *       <React.Fragment>\n *     );\n *   }\n * }\n * ```\n */\nexport class IconRegistry extends React.Component<IconRegistryProps> {\n\n  static defaultProps: Partial<IconRegistryProps> = {\n    icons: [],\n  };\n\n  private findDefaultIconPack = (packs: IconPack<any>[], name: string): IconPack<any> => {\n    const requestedPackIndex: number = packs.findIndex((pack: IconPack<any>): boolean => {\n      return pack.name === name;\n    });\n\n    return packs[Math.max(0, requestedPackIndex)];\n  };\n\n  private registerIcons = (source: IconsProp, defaultPack: string) => {\n    const packs: IconPack<any>[] = Array.isArray(source) ? source : [source];\n    const defaultIconPack: IconPack<any> = this.findDefaultIconPack(packs, defaultPack);\n\n    IconRegistryService.register(...packs);\n    IconRegistryService.setDefaultIconPack(defaultIconPack.name);\n  };\n\n  public render(): React.ReactNode {\n    const { icons, defaultIcons } = this.props;\n    this.registerIcons(icons, defaultIcons);\n\n    return null;\n  }\n}\n","export const TextStyleProps: string[] = [\n\n  // TextStyle\n\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'lineHeight',\n  'textAlign',\n  'textAlign',\n  'textDecorationLine',\n  'textDecorationStyle',\n  'textDecorationColor',\n  'textShadowColor',\n  'textShadowColor',\n  'textShadowOffset',\n  'textShadowRadius',\n\n  // TextStyleIOS\n\n  'textTransform',\n  'writingDirection',\n\n  // TextStyleAndroid\n\n  'textAlignVertical',\n  'includeFontPadding',\n];\n\nexport const FlexStyleProps: string[] = [\n  'alignContent',\n  'alignItems',\n  'alignSelf',\n  'aspectRatio',\n  'borderBottomWidth',\n  'borderEndWidth',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderStartWidth',\n  'borderTopWidth',\n  'borderWidth',\n  'bottom',\n  'display',\n  'end',\n  'flex',\n  'flexBasis',\n  'flexDirection',\n  'flexGrow',\n  'flexShrink',\n  'flexWrap',\n  'height',\n  'justifyContent',\n  'left',\n  'margin',\n  'marginBottom',\n  'marginEnd',\n  'marginHorizontal',\n  'marginLeft',\n  'marginRight',\n  'marginStart',\n  'marginTop',\n  'marginVertical',\n  'maxHeight',\n  'maxWidth',\n  'minHeight',\n  'minWidth',\n  'overflow',\n  'padding',\n  'paddingBottom',\n  'paddingEnd',\n  'paddingHorizontal',\n  'paddingLeft',\n  'paddingRight',\n  'paddingStart',\n  'paddingTop',\n  'paddingVertical',\n  'position',\n  'right',\n  'start',\n  'top',\n  'width',\n  'zIndex',\n\n  // ios\n\n  'direction',\n];\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextInput,\n  TextInputProps,\n  TextStyle,\n  TouchableWithoutFeedback,\n  TouchableWithoutFeedbackProps,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport {\n  allWithRest,\n  isValidString,\n} from '../support/services';\nimport {\n  FlexStyleProps,\n  InputFocusEvent,\n} from '../support/typings';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: StyleType) => IconElement;\n\ninterface ComponentProps {\n  status?: string;\n  size?: string;\n  disabled?: boolean;\n  label?: string;\n  caption?: string;\n  captionIcon?: IconProp;\n  icon?: IconProp;\n  textStyle?: StyleProp<TextStyle>;\n  labelStyle?: StyleProp<TextStyle>;\n  captionTextStyle?: StyleProp<TextStyle>;\n  onIconPress?: (event: GestureResponderEvent) => void;\n}\n\nexport type InputProps = StyledComponentProps & TextInputProps & ComponentProps;\nexport type InputElement = React.ReactElement<InputProps>;\n\n/**\n * Styled `Input` component.\n *\n * @extends React.Component\n *\n * @method {() => void} focus - Requests focus for the given input or view. The exact behavior triggered\n * will depend on the platform and type of view.\n *\n * @method {() => void} blur - Removes focus from an input or view. This is the opposite of `focus()`.\n *\n * @method {() => boolean} isFocused - Returns if the input is currently focused.\n *\n * @method {() => void} clear - Removes all text from the input.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning` or `danger`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `large`, `medium` or `small`.\n * Default is `medium`.\n *\n * @property {string} label - Determines label of the component.\n *\n * @property {StyleProp<TextStyle>} labelStyle - Customizes label style.\n *\n * @property {string} caption - Determines caption of the component.\n *\n * @property {StyleProp<TextStyle>} captionStyle - Customizes caption style.\n *\n * @property {string} placeholder - Determines placegolder of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines icon of the component.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} captionIcon - Determines caption icon.\n *\n * @property TextInputProps\n *\n * @property StyledComponentProps\n *\n * @overview-example InputSimpleUsage\n *\n * @overview-example InputStatus\n *\n * @overview-example InputSize\n *\n * @overview-example InputWithIcon\n *\n * @overview-example InputWithLabel\n *\n * @overview-example InputWithCaption\n *\n * @example InputInlineStyling\n *\n * @example InputWithExternalSourceIcon\n */\nexport class InputComponent extends React.Component<InputProps> {\n\n  static styledComponentName: string = 'Input';\n\n  private textInputRef: React.RefObject<TextInput> = React.createRef();\n\n  public focus = () => {\n    this.textInputRef.current.focus();\n  };\n\n  public blur = () => {\n    this.textInputRef.current.blur();\n  };\n\n  public isFocused = (): boolean => {\n    return this.textInputRef.current.isFocused();\n  };\n\n  public clear = () => {\n    this.textInputRef.current.clear();\n  };\n\n  private onFocus = (event: InputFocusEvent) => {\n    this.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  };\n\n  private onBlur = (event: InputFocusEvent) => {\n    this.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  };\n\n  private onIconPress = (event: GestureResponderEvent) => {\n    if (this.props.onIconPress) {\n      this.props.onIconPress(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const flatStyles: ViewStyle = StyleSheet.flatten(this.props.style);\n    const { rest: inputContainerStyle, ...containerStyle } = allWithRest(flatStyles, FlexStyleProps);\n\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      placeholderColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      labelColor,\n      labelFontSize,\n      labelLineHeight,\n      labelMarginBottom,\n      labelFontWeight,\n      captionMarginTop,\n      captionColor,\n      captionFontSize,\n      captionLineHeight,\n      captionFontWeight,\n      captionIconWidth,\n      captionIconHeight,\n      captionIconMarginRight,\n      captionIconTintColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerStyle,\n      inputContainer: {\n        ...containerParameters,\n        ...inputContainerStyle,\n      },\n      captionContainer: {\n        marginTop: captionMarginTop,\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        // FIXME: RN issue (https://github.com/facebook/react-native/issues/7823)\n        // lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      placeholder: {\n        color: placeholderColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      label: {\n        color: labelColor,\n        fontSize: labelFontSize,\n        lineHeight: labelLineHeight,\n        marginBottom: labelMarginBottom,\n        fontWeight: labelFontWeight,\n      },\n      captionIcon: {\n        width: captionIconWidth,\n        height: captionIconHeight,\n        tintColor: captionIconTintColor,\n        marginRight: captionIconMarginRight,\n      },\n      captionLabel: {\n        fontSize: captionFontSize,\n        fontWeight: captionFontWeight,\n        lineHeight: captionLineHeight,\n        color: captionColor,\n      },\n    };\n  };\n\n  private renderIconTouchableElement = (style: StyleType): React.ReactElement<TouchableWithoutFeedbackProps> => {\n    const iconElement: IconElement = this.renderIconElement(style);\n\n    return (\n      <TouchableWithoutFeedback onPress={this.onIconPress}>\n        {iconElement}\n      </TouchableWithoutFeedback>\n    );\n  };\n\n  private renderIconElement = (style: StyleType): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 0,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderLabelElement = (style: TextStyle): TextElement => {\n    return (\n      <Text\n        key={1}\n        style={[style, styles.label, this.props.labelStyle]}>\n        {this.props.label}\n      </Text>\n    );\n  };\n\n  private renderCaptionElement = (style: TextStyle): TextElement => {\n    return (\n      <Text\n        key={2}\n        style={[style, styles.captionLabel, this.props.captionTextStyle]}>\n        {this.props.caption}\n      </Text>\n    );\n  };\n\n  private renderCaptionIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.captionIcon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 3,\n      style: [style, styles.captionIcon, iconElement.props.style],\n    });\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon, label, captionIcon, caption } = this.props;\n\n    return [\n      icon && this.renderIconTouchableElement(style.icon),\n      isValidString(label) && this.renderLabelElement(style.label),\n      isValidString(caption) && this.renderCaptionElement(style.captionLabel),\n      captionIcon && this.renderCaptionIconElement(style.captionIcon),\n    ];\n  };\n\n  public render(): React.ReactElement<TextInputProps> {\n    const { themedStyle, textStyle, disabled, ...restProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const [\n      iconElement,\n      labelElement,\n      captionElement,\n      captionIconElement,\n    ] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <View style={[componentStyle.container, styles.container]}>\n        {labelElement}\n        <View style={[componentStyle.inputContainer, styles.inputContainer]}>\n          <TextInput\n            ref={this.textInputRef}\n            {...restProps}\n            style={[componentStyle.text, styles.text, textStyle]}\n            placeholderTextColor={componentStyle.placeholder.color}\n            editable={!disabled}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n          />\n          {iconElement}\n        </View>\n        <View style={[componentStyle.captionContainer, styles.captionContainer]}>\n          {captionIconElement}\n          {captionElement}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n  },\n  captionContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  text: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: 'auto',\n  },\n  placeholder: {},\n  icon: {},\n  label: {\n    textAlign: 'left',\n  },\n  captionIcon: {},\n  captionLabel: {\n    textAlign: 'left',\n  },\n});\n\nexport const Input = styled<InputProps>(InputComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\n\ninterface ComponentProps {\n  level?: string;\n  children?: React.ReactNode;\n}\n\nexport type LayoutProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type LayoutElement = React.ReactElement<LayoutProps>;\n\n/**\n * `Layout` container component. Behaves like React Native `View`.\n * The key feature of using `Layout` instead of `View` is that\n * it automatically picks background color fitting to current theme.\n *\n * @extends React.Component\n *\n * @property {string} level - Determines background color level of component.\n * Can be `level='1'`, `level='2'`, `level='3'` or `level='4'`.\n *\n * @property {React.ReactElement<any> | React.ReactElement<any>[]} children - Determines the children of the component.\n *\n * @property ViewProps\n *\n * @property StyledComponentProps\n *\n * @overview-example LayoutSimpleUsage\n *\n * @overview-example LayoutLevel\n *\n * @example LayoutInlineStyling\n */\nexport class LayoutComponent extends React.Component<LayoutProps> {\n\n  static styledComponentName: string = 'Layout';\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, themedStyle, ...derivedProps } = this.props;\n\n    return (\n      <View\n        {...derivedProps}\n        style={[themedStyle, style]}\n      />\n    );\n  }\n}\n\nexport const Layout = styled<LayoutProps>(LayoutComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleSheet,\n  Dimensions,\n  ViewStyle,\n  StyleProp,\n} from 'react-native';\nimport {\n  ModalService,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  MeasureNode,\n  MeasureNodeProps,\n  MeasuringElementProps,\n  MeasureResult,\n} from '../popover/measure.component';\nimport { Size } from '../popover/type';\nimport { ModalPresentingBased } from '../support/typings';\n\nconst { width: screenWidth, height: screenHeight } = Dimensions.get('screen');\nconst TAG_CHILD: string = 'Modal';\nconst initialContentSize: Size = { width: 0, height: 0 };\nexport const baseModalTestId: string = '@modal/base';\n\ntype ChildElement = React.ReactElement<any>;\ntype ChildrenProp = ChildElement | ChildElement[];\n\ninterface ComponentProps {\n  visible: boolean;\n  children: ChildrenProp;\n  backdropStyle?: StyleProp<ViewStyle>;\n}\n\nexport type ModalProps = ViewProps & ComponentProps & ModalPresentingBased;\nexport type ModalElement = React.ReactElement<ModalProps>;\n\n/**\n * `Modal` component is a wrapper than presents content above an enclosing view.\n *\n * @extends React.Component\n *\n * @property {boolean} visible - Determines whether component is visible. By default is false.\n *\n * @property {React.ReactElement<any> | React.ReactElement<any>[]} children -\n * Determines component's children.\n *\n * @property {boolean} allowBackdrop - Determines whether user can tap on back-drop.\n * Default is `false`.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Determines the style of backdrop.\n *\n * @property {() => void} onBackdropPress - Determines component's behavior when the user is\n * tapping on back-drop.\n *\n * @property ViewProps\n *\n * @overview-example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Button, Modal, Text, Layout } from 'react-native-ui-kitten';\n *\n * export class ModalShowcase extends React.Component {\n *\n *   state = {\n *     modalVisible: false,\n *   };\n *\n *   setModalVisible = () => {\n *     const modalVisible = !this.state.modalVisible;\n *     this.setState({ modalVisible });\n *   };\n *\n *   renderModalElement = () => {\n *     return (\n *       <Layout\n *         level='3'\n *         style={styles.modalContainer}>\n *         <Text>This is modal</Text>\n *         <Button onPress={this.setModalVisible}>Hide Modal</Button>\n *       </Layout>\n *     );\n *   };\n *\n *   render() {\n *     return (\n *       <Layout style={styles.container}>\n *         <Button onPress={this.setModalVisible}>Show Modal</Button>\n *         <Modal visible={this.state.modalVisible}>\n *           {this.renderModalElement()}\n *         </Modal>\n *       </Layout>\n *     );\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     padding: 16,\n *   },\n *   modalContainer: {\n *     width: 200,\n *     height: 200,\n *     justifyContent: 'center',\n *     alignItems: 'center',\n *   },\n * });\n * ```\n *\n * @overview-example With Backdrop\n *\n * ```\n * import React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Button, Modal, Text, Layout } from 'react-native-ui-kitten';\n *\n * export class ModalShowcase extends React.Component {\n *\n *   state = {\n *     modalVisible: false,\n *   };\n *\n *   setModalVisible = () => {\n *     const modalVisible: boolean = !this.state.modalVisible;\n *     this.setState({ modalVisible });\n *   };\n *\n *   renderModalElement = () => {\n *     return (\n *       <Layout\n *         level='3'\n *         style={styles.modalContainer}>\n *         <Text>This is modal</Text>\n *         <Button onPress={this.setModalVisible}>Hide Modal</Button>\n *       </Layout>\n *     );\n *   };\n *\n *   render() {\n *     return (\n *       <Layout style={styles.container}>\n *         <Button onPress={this.setModalVisible}>Show Modal</Button>\n *         <Modal\n *           allowBackdrop={true}\n *           backdropStyle={{ backgroundColor: 'black', opacity: 0.5 }}\n *           onBackdropPress={this.setModalVisible}\n *           visible={this.state.modalVisible}>\n *           {this.renderModalElement()}\n *         </Modal>\n *       </View>\n *     );\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     padding: 16,\n *   },\n *   modalContainer: {\n *     width: 200,\n *     height: 200,\n *     justifyContent: 'center',\n *     alignItems: 'center',\n *   },\n * });\n * ```\n */\nexport class Modal extends React.Component<ModalProps> {\n\n  static defaultProps: Partial<ModalProps> = {\n    allowBackdrop: false,\n    onBackdropPress: () => null,\n  };\n\n  private contentSize: Size = initialContentSize;\n  private id: string = '';\n\n  public componentDidUpdate(prevProps: ModalProps): void {\n    if (prevProps.visible !== this.props.visible) {\n      this.handleVisibility(this.props);\n    } else if (prevProps.visible && this.props.visible) {\n      const element: React.ReactElement = this.renderModal();\n      ModalService.update(this.id, element.props.children);\n    }\n  }\n\n  private handleVisibility = (props: ModalProps): void => {\n    const { allowBackdrop, onBackdropPress } = this.props;\n\n    if (props.visible) {\n      const element: React.ReactElement = this.renderModal();\n      this.id = ModalService.show(element, { allowBackdrop, onBackdropPress });\n    } else {\n      ModalService.hide(this.id);\n      this.id = '';\n    }\n  };\n\n  private getAbsoluteRelatedStyle = (): StyleType => {\n    const { width, height } = this.contentSize;\n\n    return {\n      top: (screenHeight - height) / 2,\n      left: (screenWidth - width) / 2,\n    };\n  };\n\n  private onMeasure = (result: MeasureResult): void => {\n    this.contentSize = result[TAG_CHILD].size;\n  };\n\n  private renderBaseModal = (): React.ReactElement<ViewProps> => {\n    const { style, children, ...restProps } = this.props;\n    const absoluteRelatedStyle: StyleType = this.getAbsoluteRelatedStyle();\n    const measuringProps: MeasuringElementProps = { tag: TAG_CHILD };\n\n    return (\n      <View\n        {...restProps}\n        {...measuringProps}\n        testID={baseModalTestId}\n        key={TAG_CHILD}\n        style={[styles.container, absoluteRelatedStyle, style]}>\n        {children}\n      </View>\n    );\n  };\n\n  private renderModal = (): React.ReactElement => {\n    const { backdropStyle } = this.props;\n    const modal: React.ReactElement<ViewProps> = this.renderBaseModal();\n\n    return backdropStyle ? (\n      <React.Fragment>\n        <View\n          pointerEvents='box-none'\n          style={[styles.backdrop, backdropStyle]}/>\n        {modal}\n      </React.Fragment>\n    ) : modal;\n  };\n\n  private renderMeasureNode = (): React.ReactElement<MeasureNodeProps> => {\n    const modal: React.ReactElement = this.renderBaseModal();\n    const measureStyledModal: React.ReactElement = React.cloneElement(modal, {\n      style: [modal.props.style, styles.hiddenModal],\n      key: TAG_CHILD,\n      pointerEvents: 'none',\n    });\n\n    return (\n      <MeasureNode onResult={this.onMeasure}>\n        {[measureStyledModal]}\n      </MeasureNode>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return this.renderMeasureNode();\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n  },\n  backdrop: {\n    position: 'absolute',\n    width: screenWidth,\n    height: screenHeight,\n  },\n  hiddenModal: {\n    opacity: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Menu,\n  MenuElement,\n  MenuProps,\n} from '../menu/menu.component';\nimport { MenuItemType } from '../menu/menuItem.component';\nimport {\n  Popover,\n  PopoverProps,\n} from '../popover/popover.component';\nimport {\n  ModalPresentingBased,\n  Override,\n} from '../support/typings';\n\ntype PopoverContentProps = Omit<PopoverProps, 'content'>;\nexport type OverflowMenuItemType = Omit<MenuItemType, 'subItems'>;\n\ninterface ComponentProps extends PopoverContentProps, ModalPresentingBased {\n  children: React.ReactElement<any>;\n}\n\ntype MenuBasedProps = Override<MenuProps, { data: OverflowMenuItemType[] }>;\n\nexport type OverflowMenuProps = & StyledComponentProps & ComponentProps & MenuBasedProps;\nexport type OverflowMenuElement = React.ReactElement<OverflowMenuProps>;\n\n/**\n * `OverflowMenu` renders vertical list of menu items in a modal.\n *\n * @extends React.Component\n *\n * @property {React.ReactElement<any>} children - Determines the element above\n * which the menu will be rendered.\n *\n * @property {boolean} visible - determines the visibility of the component.\n *\n * @property {OverflowMenuItemType[]} data - Determines menu items.\n *\n * @property {number} selectedIndex - Determines the index of currently selected item.\n *\n * @property {(index: number, event: GestureResponderEvent) => void} onSelect - Fires when selected item is changed.\n *\n * @property Omit<PopoverProps, 'content'>\n *\n * @property Override<MenuProps, { data: OverflowMenuItemType[] }>\n *\n * @property ModalPresentingBased\n *\n * @property StyledComponentProps\n *\n * @overview-example OverflowMenuSimpleUsage\n *\n * @overview-example OverflowMenuWithIcons\n *\n * @example OverflowMenuWithDisabledItems\n *\n * @example OverflowMenuWithoutDivider\n *\n * @example OverflowMenuExternalSourceIcons\n */\nclass OverflowMenuComponent extends React.Component<OverflowMenuProps> {\n\n  static styledComponentName: string = 'OverflowMenu';\n\n  static defaultProps: Partial<OverflowMenuProps> = {\n    indicatorOffset: 12,\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      indicatorBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      indicator: {\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private renderPopoverContentElement = (style: StyleType): MenuElement => {\n    const { themedStyle, indicatorStyle, children, data, ...restProps } = this.props;\n\n    return (\n      <Menu\n        {...restProps}\n        data={data}\n        style={[styles.menu, style]}\n        initialNumToRender={data.length}\n        bounces={false}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    const { themedStyle, style, indicatorStyle, children, appearance, ...restProps } = this.props;\n    const { container, indicator } = this.getComponentStyle(themedStyle);\n\n    const contentElement: MenuElement = this.renderPopoverContentElement(container);\n\n    return (\n      <Popover\n        {...restProps}\n        style={[styles.container, style]}\n        indicatorStyle={[indicator, indicatorStyle]}\n        content={contentElement}>\n        {children}\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  menu: {\n    flexGrow: 0,\n  },\n});\n\nexport const OverflowMenu = styled<OverflowMenuProps>(OverflowMenuComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  Insets,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ninterface ComponentProps {\n  textStyle?: StyleProp<TextStyle>;\n  text?: string;\n  checked?: boolean;\n  status?: string;\n  onChange?: (selected: boolean) => void;\n}\n\nexport type RadioProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type RadioElement = React.ReactElement<RadioProps>;\n\n/**\n * Styled `Radio` component.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Determines whether component is checked.\n * Default is `false`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning`, `danger`, basic` or `control`.\n * Default is `basic`.\n *\n * @property {string} text - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(selected: boolean) => void} onChange - Triggered on onChange value.\n *\n * @property TouchableOpacityProps\n *\n * @property StyledComponentProps\n *\n * @overview-example RadioSimpleUsage\n *\n * @overview-example RadioStatus\n *\n * @overview-example RadioWithText\n *\n * @example RadioInlineStyling\n */\nexport class RadioComponent extends React.Component<RadioProps> {\n\n  static styledComponentName: string = 'Radio';\n\n  private onPress = () => {\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent) => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent) => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconBorderRadius,\n      iconTintColor,\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: {},\n      highlightContainer: {},\n      selectContainer: containerParameters,\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        borderRadius: iconBorderRadius,\n        backgroundColor: iconTintColor,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n    };\n  };\n\n  private createHitSlopInsets = (style: StyleProp<ViewStyle>): Insets => {\n    const flatStyle: ViewStyle = StyleSheet.flatten(style);\n\n    // @ts-ignore `width` is restricted to be a number\n    const value: number = 40 - flatStyle.width;\n\n    return {\n      left: value,\n      top: value,\n      right: value,\n      bottom: value,\n    };\n  };\n\n  private renderTextElement = (style: StyleType): TextElement => {\n    const { text, textStyle } = this.props;\n\n    return (\n      <Text\n        key={0}\n        style={[style, styles.text, textStyle]}>\n        {text}\n      </Text>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { text } = this.props;\n\n    return [\n      isValidString(text) && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { style, themedStyle, disabled, ...derivedProps } = this.props;\n\n    const {\n      container,\n      highlightContainer,\n      selectContainer,\n      icon,\n      highlight,\n      ...componentStyles\n    } = this.getComponentStyle(themedStyle);\n\n    const selectContainerStyle: StyleProp<ViewStyle> = [selectContainer, styles.selectContainer];\n    const hitSlopInsets: Insets = this.createHitSlopInsets(selectContainerStyle);\n\n    const [textElement] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        style={[container, styles.container, style]}\n        activeOpacity={1.0}\n        disabled={disabled}\n        hitSlop={hitSlopInsets}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <View style={[highlightContainer, styles.highlightContainer]}>\n          <View style={[highlight, styles.highlight]}/>\n          <TouchableOpacity\n            activeOpacity={1.0}\n            {...derivedProps}\n            disabled={disabled}\n            style={selectContainerStyle}\n            onPress={this.onPress}\n            onPressIn={this.onPressIn}\n            onPressOut={this.onPressOut}>\n            <View style={[icon, styles.icon]}/>\n          </TouchableOpacity>\n        </View>\n        {textElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  highlightContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  icon: {},\n  highlight: {\n    position: 'absolute',\n  },\n  text: {},\n});\n\nexport const Radio = styled<RadioProps>(RadioComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { RadioElement } from '../radio/radio.component';\n\ntype ChildrenProp = RadioElement | RadioElement[];\n\ninterface ComponentProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  onChange?: (index: number) => void;\n}\n\nexport type RadioGroupProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type RadioGroupElement = React.ReactElement<RadioGroupProps>;\n\n/**\n * Renders a group of `Radio` buttons.\n *\n * @extends React.Component\n *\n * @property {React.ReactElement<RadioProps> | React.ReactElement<RadioProps>[]} children -\n * Determines radio buttons in group.\n *\n * @property {number} selectedIndex - Determines the index of selected button\n *\n * @property {(index: number) => void} onChange - Fires when selected radio is changed.\n *\n * @property ViewProps\n *\n * @property StyledComponentProps\n *\n * @overview-example RadioGroupSimpleUsage\n */\nclass RadioGroupComponent extends React.Component<RadioGroupProps> {\n\n  static styledComponentName: string = 'RadioGroup';\n\n  static defaultProps: Partial<RadioGroupProps> = {\n    selectedIndex: -1,\n  };\n\n  private onRadioChange = (index: number) => {\n    if (this.props.onChange) {\n      this.props.onChange(index);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    return {\n      container: source,\n    };\n  };\n\n  private renderRadioElement = (element: RadioElement, index: number): RadioElement => {\n    return React.cloneElement(element, {\n      key: index,\n      checked: this.props.selectedIndex === index,\n      onChange: () => this.onRadioChange(index),\n    });\n  };\n\n  private renderRadioElements = (source: RadioElement | RadioElement[]): RadioElement[] => {\n    return React.Children.map(source, this.renderRadioElement);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, children, ...derivedProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const radioElements: RadioElement[] = this.renderRadioElements(children);\n\n    return (\n      <View\n        {...derivedProps}\n        style={[componentStyle.container, styles.container, style]}>\n        {radioElements}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n\nexport const RadioGroup = styled<RadioGroupProps>(RadioGroupComponent);\n","import {\n  Animated,\n  Easing,\n  EasingFunction,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from '../animation/animation';\n\nconst PI: number = 180;\nconst PI2: number = 360;\nconst OFFSET_MIN: number = PI / 12;\nconst OFFSET_MAX: number = PI / 6;\n\nconst BaseBezierEasing: EasingFunction = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n\nconst StartArcEasing: EasingFunction = (progress: number): number => {\n  return -PI + OFFSET_MIN + (PI - OFFSET_MAX) * BaseBezierEasing(progress);\n};\n\nconst EndArcEasing: EasingFunction = (progress: number): number => {\n  return PI2 - OFFSET_MIN + (-PI + OFFSET_MAX) * BaseBezierEasing(progress);\n};\n\nconst DEFAULT_CONFIG: SpinnerAnimationConfig = {\n  duration: 2400,\n  easing: Easing.linear,\n  cycles: -1,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface SpinnerAnimationStyle {\n  container: ViewStyle;\n  start: ViewStyle;\n  end: ViewStyle;\n}\n\nexport type SpinnerAnimationConfig = AnimationConfig & TimingAnimationConfig;\n\n/**\n * Animates a Spinner in a Material Design way.\n *\n * Thanks these guys for open sourcing the algorithm: https://github.com/n4kz/react-native-indicators\n */\nexport class SpinnerAnimation extends Animation<SpinnerAnimationConfig, SpinnerAnimationStyle> {\n\n  private animationValue: Animated.Value;\n  private animationFrames: number[];\n  private arcSize: number;\n\n  protected get animation(): Animated.CompositeAnimation {\n    return Animated.timing(this.animationValue, { toValue: 1.0, ...this.config });\n  }\n\n  constructor(arcSize: number, config?: SpinnerAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.arcSize = arcSize;\n    this.animationValue = new Animated.Value(0);\n    this.animationFrames = this.createFrameRange(this.config.duration);\n  }\n\n  public start(callback?: Animated.EndCallback) {\n    // reset animation value before the next animation cycle\n    this.animationValue.setValue(0);\n    super.start(callback);\n  }\n\n  public stop() {\n    super.stop();\n    this.animationValue.setValue(0);\n  }\n\n  /**\n   * @returns {SpinnerAnimationStyle} - an object that contains container, start and end arcs transform styles.\n   */\n  public toProps(): SpinnerAnimationStyle {\n    const containerInterpolation: Animated.AnimatedInterpolation = this.createContainerInterpolation();\n    const startArcInterpolation: Animated.AnimatedInterpolation = this.createArcInterpolation(StartArcEasing);\n    const endArcInterpolation: Animated.AnimatedInterpolation = this.createArcInterpolation(EndArcEasing);\n\n    return {\n      container: this.toStyleTransformProp(containerInterpolation),\n      start: this.toStyleTransformProp(startArcInterpolation),\n      end: this.toStyleTransformProp(endArcInterpolation, {\n        transform: [{ translateY: -this.arcSize / 2 }],\n      }),\n    };\n  }\n\n  /**\n   * @param {number} duration - animation duration.\n   * @returns an array of frames fitted into animation.\n   */\n  private createFrameRange = (duration: number): number[] => {\n    const numberOfFrames: number = 60 * duration / 1000;\n\n    return new Array(numberOfFrames).fill(0);\n  };\n\n  private createContainerInterpolation = (): Animated.AnimatedInterpolation => {\n    return this.animationValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [\n        this.toDegValue(OFFSET_MAX + OFFSET_MIN),\n        this.toDegValue((2 * PI2 + OFFSET_MAX + OFFSET_MIN)),\n      ],\n    });\n  };\n\n  private createArcInterpolation = (easing: EasingFunction): Animated.AnimatedInterpolation => {\n    return this.animationValue.interpolate({\n      inputRange: this.createArcInterpolationInputRange(),\n      outputRange: this.createArcInterpolationOutputRange(easing),\n    });\n  };\n\n  /**\n   * Maps the animation frames into initial animation values specific for each frame.\n   *\n   * @returns a container interpolation input range in a numeric format.\n   */\n  private createArcInterpolationInputRange = (): number[] => {\n    return this.animationFrames.map((item: number, frame: number): number => {\n      return frame / (this.animationFrames.length - 1);\n    });\n  };\n\n  /**\n   * Maps the animation frames into a final animation values specific for each frame.\n   *\n   * @param {(progress: number) => number} easing - Easing function specific for the arc.\n   * @returns an arc interpolation end values eased with an `easing` function in a StyleSheet degree format.\n   */\n  private createArcInterpolationOutputRange = (easing: EasingFunction): string[] => {\n    return this.animationFrames.map((item: number, frame: number): string => {\n      const progress: number = 2 * frame / (this.animationFrames.length - 1);\n      const boundedProgress: number = Math.min(2.0 - progress, progress);\n\n      return this.toDegValue(easing(boundedProgress));\n    });\n  };\n\n  /**\n   * @param {Animated.AnimatedInterpolation} rotate - animated rotation animationValue.\n   * @param {ViewStyle} source - initial StyleSheet object.\n   * @returns a final StyleSheet object with a `rotate` animation value.\n   */\n  private toStyleTransformProp = (rotate: Animated.AnimatedInterpolation, source: ViewStyle = {}): ViewStyle => {\n    const transform = [...(source.transform || []), { rotate }];\n\n    // @ts-ignore: AnimatedInterpolation does not fit RotateTransform type declaration\n    return { ...source, transform };\n  };\n\n  /**\n   * @param {number} source - degrees in a numeric format.\n   * @returns degrees in a StyleSheet format.\n   */\n  private toDegValue = (source: number): string => {\n    return `${source}deg`;\n  };\n}\n","import React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport {\n  SpinnerAnimation,\n  SpinnerAnimationStyle,\n} from './animation';\n// TODO: Frame, Point, Size types should be refactored to common types\nimport { Size } from '../popover/type';\n\ninterface ArcElementStyle {\n  container: ViewStyle;\n  arc: ViewStyle;\n  overflow?: ViewStyle;\n}\n\ninterface ComponentProps extends ViewProps {\n  animating?: boolean;\n  size?: string;\n  status?: string;\n}\n\nexport type SpinnerProps = StyledComponentProps & ComponentProps;\nexport type SpinnerElement = React.ReactElement<SpinnerProps>;\n\n/**\n * Styled `Spinner` component. Designed to be used as `ActivityIndicator` component\n *\n * @extends React.Component\n *\n * @property {boolean} animating - Determines whether component is animating. Default is `true`.\n *\n * @property {string} size - Determines the the component.\n * Can be `giant`, `large`, `medium`, `small` or `tiny`.\n * Default is `medium`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning`, `danger` or `alternative`.\n * Default is `primary`.\n *\n * @overview-example SpinnerSimpleUsage\n *\n * @overview-example SpinnerSizes\n *\n * @overview-example SpinnerStatuses\n *\n * @example SpinnerDataLoading\n */\nexport class SpinnerComponent extends React.PureComponent<SpinnerProps> {\n\n  static styledComponentName: string = 'Spinner';\n\n  static defaultProps: Partial<SpinnerProps> = {\n    animating: true,\n  };\n\n  private animation: SpinnerAnimation = new SpinnerAnimation(this.containerSize.height);\n\n  private get containerSize(): Size {\n    const { width, height } = StyleSheet.flatten([this.props.themedStyle, this.props.style]);\n    // @ts-ignore: width and height are restricted to be a number\n    return new Size(width, height);\n  }\n\n  public componentDidMount() {\n    if (this.props.animating) {\n      this.startAnimation();\n    }\n  }\n\n  public componentDidUpdate(prevProps: SpinnerProps) {\n    const animatingChanged: boolean = this.props.animating !== prevProps.animating;\n\n    if (animatingChanged && this.props.animating) {\n      this.startAnimation();\n    }\n\n    if (animatingChanged && !this.props.animating) {\n      this.stopAnimation();\n    }\n  }\n\n  public componentWillUnmount() {\n    this.animation.release();\n  }\n\n  private startAnimation = () => {\n    this.animation.start();\n  };\n\n  private stopAnimation = () => {\n    this.animation.stop();\n  };\n\n  private getComponentStyle = (source: SpinnerAnimationStyle) => {\n    const start: ArcElementStyle = {\n      container: source.container,\n      arc: source.start,\n    };\n\n    const end: ArcElementStyle = {\n      container: source.container,\n      arc: source.end,\n      overflow: { top: this.containerSize.height / 2 },\n    };\n\n    return { start, end };\n  };\n\n  private renderArcElement = (style: ArcElementStyle, size: Size): React.ReactElement<ViewProps> => {\n    const arcSize: Size = new Size(size.width, size.height / 2);\n\n    return (\n      <Animated.View style={[style.container, styles.absolute, size]}>\n        <View style={[styles.noOverflow, style.overflow, arcSize]}>\n          <Animated.View style={[style.arc, size]}>\n            <View style={[styles.noOverflow, arcSize]}>\n              <View style={[this.props.themedStyle, this.props.style]}/>\n            </View>\n          </Animated.View>\n        </View>\n      </Animated.View>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const containerSize: Size = this.containerSize;\n    const { start, end } = this.getComponentStyle(this.animation.toProps());\n\n    return (\n      <View style={containerSize}>\n        {this.renderArcElement(start, containerSize)}\n        {this.renderArcElement(end, containerSize)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  absolute: StyleSheet.absoluteFillObject,\n  noOverflow: {\n    overflow: 'hidden',\n  },\n});\n\nexport const Spinner = styled<SpinnerProps>(SpinnerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { TabElement } from './tab.component';\nimport { TabIndicator } from '../support/components';\n\ntype ChildrenProp = TabElement | TabElement[];\n\ninterface ComponentProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  onSelect?: (index: number) => void;\n}\n\nexport type TabBarProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type TabBarElement = React.ReactElement<TabBarProps>;\n\n/**\n * The `TabBar` component that manages `Tab` components.\n *\n * @extends React.Component\n *\n * @property {number} selectedIndex - Determines current tab index.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of selected tab indicator.\n *\n * @property {(index: number) => void} onSelect - Fires on tab select with corresponding index.\n *\n * @property {React.ReactElement<TabProps>} children - Determines tabs.\n *\n * @property ViewProps\n *\n * @property StyledComponentProps\n *\n * @overview-example TabBarSimpleUsage\n */\nexport class TabBarComponent extends React.Component<TabBarProps> {\n\n  static styledComponentName: string = 'TabBar';\n\n  static defaultProps: Partial<TabBarProps> = {\n    selectedIndex: 0,\n  };\n\n  private tabIndicatorRef: React.RefObject<TabIndicator> = React.createRef();\n\n  public scrollToIndex(params: { index: number, animated?: boolean }) {\n    const { current: tabIndicator } = this.tabIndicatorRef;\n\n    tabIndicator.scrollToIndex(params);\n  }\n\n  public scrollToOffset(params: { offset: number, animated?: boolean }) {\n    const { current: tabIndicator } = this.tabIndicatorRef;\n\n    tabIndicator.scrollToOffset(params);\n  }\n\n  private onTabSelect = (index: number) => {\n    if (this.props.onSelect) {\n      this.props.onSelect(index);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      indicatorHeight,\n      indicatorBorderRadius,\n      indicatorBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      item: {},\n      indicator: {\n        height: indicatorHeight,\n        borderRadius: indicatorBorderRadius,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private isTabSelected = (index: number): boolean => {\n    const { selectedIndex } = this.props;\n\n    return index === selectedIndex;\n  };\n\n  private renderTabElement = (element: TabElement, index: number): TabElement => {\n    return React.cloneElement(element, {\n      key: index,\n      style: [styles.item, element.props.style],\n      selected: this.isTabSelected(index),\n      onSelect: () => this.onTabSelect(index),\n    });\n  };\n\n  private renderTabElements = (source: ChildrenProp): TabElement[] => {\n    return React.Children.map(source, this.renderTabElement);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, indicatorStyle, selectedIndex, children, ...derivedProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const tabElements: TabElement[] = this.renderTabElements(children);\n\n    return (\n      <React.Fragment>\n        <View\n          {...derivedProps}\n          style={[componentStyle.container, styles.container, style]}>\n          {tabElements}\n        </View>\n        <TabIndicator\n          ref={this.tabIndicatorRef}\n          style={[componentStyle.indicator, styles.indicator, indicatorStyle]}\n          selectedPosition={selectedIndex}\n          positions={tabElements.length}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  item: {\n    flex: 1,\n  },\n  indicator: {},\n});\n\nexport const TabBar = styled<TabBarProps>(TabBarComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { TabElement } from './tab.component';\nimport { TabBar } from './tabBar.component';\nimport { ViewPager } from '../viewPager/viewPager.component';\n\ntype TabContentElement = React.ReactElement<any>;\ntype ChildrenProp = TabElement | TabElement[];\n\nclass TabViewChildElement {\n  tab: TabElement;\n  content: TabContentElement;\n}\n\nclass TabViewChildren {\n  tabs: TabElement[] = [];\n  content: TabContentElement[] = [];\n}\n\ninterface ComponentProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  tabBarStyle?: StyleProp<ViewStyle>;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  shouldLoadComponent?: (index: number) => boolean;\n  onOffsetChange?: (offset: number) => void;\n  onSelect?: (index: number) => void;\n}\n\nexport type TabViewProps = ViewProps & ComponentProps;\nexport type TabViewElement = React.ReactElement<TabViewProps>;\n\n/**\n * `TabView` is a dynamic tabset component. Allows flipping through the tab \"pages\".\n *\n * @extends React.Component\n **\n * @property {number} selectedIndex - Determines current tab index.\n *\n * @property {StyleProp<ViewStyle>} tabBarStyle - Determines style TabBar component.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of selected tab indicator.\n *\n * @property {(index: number) => void} onSelect - Fires on \"page\" select with corresponding index.\n *\n * @property {TabElement | TabElement[]} children - Determines children of the component.\n *\n * @property {(index: number) => boolean} shouldLoadComponent - Determines loading behavior particular page and can be\n * used for lazy loading.\n *\n * @property {(offset: number) => void} onOffsetChange - Fires on scroll event with current scroll offset.\n *\n * @property ViewProps\n *\n * @overview-example TabViewSimpleUsage\n *\n * @overview-example TabViewLazyLoading\n *\n * @example TabViewInlineStyling\n */\nexport class TabView extends React.Component<TabViewProps> {\n\n  static defaultProps: Partial<TabViewProps> = {\n    selectedIndex: 0,\n  };\n\n  private viewPagerRef: React.RefObject<ViewPager> = React.createRef();\n  private tabBarRef: React.RefObject<any> = React.createRef();\n\n  private onBarSelect = (index: number) => {\n    const { current: viewPager } = this.viewPagerRef;\n\n    viewPager.scrollToIndex({\n      index,\n      animated: true,\n    });\n  };\n\n  private onPagerOffsetChange = (offset: number) => {\n    const { current: tabBar } = this.tabBarRef;\n    const tabCount: number = React.Children.count(tabBar.props.children);\n\n    tabBar.scrollToOffset({ offset: offset / tabCount });\n  };\n\n  private onPagerSelect = (selectedIndex: number) => {\n    if (this.props.onSelect) {\n      this.props.onSelect(selectedIndex);\n    }\n  };\n\n  private renderComponentChild = (element: TabElement, index: number): TabViewChildElement => {\n    return {\n      tab: React.cloneElement(element, { key: index }),\n      content: element.props.children,\n    };\n  };\n\n  private renderComponentChildren = (source: ChildrenProp): TabViewChildren => {\n    return React.Children.toArray(source).reduce((acc: TabViewChildren, element: TabElement, index: number) => {\n      const { tab, content } = this.renderComponentChild(element, index);\n      return {\n        tabs: [...acc.tabs, tab],\n        content: [...acc.content, content],\n      };\n    }, new TabViewChildren());\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, selectedIndex, children, tabBarStyle, indicatorStyle, ...derivedProps } = this.props;\n\n    const { tabs, content } = this.renderComponentChildren(children);\n\n    return (\n      <React.Fragment>\n        <TabBar\n          style={tabBarStyle}\n          ref={this.tabBarRef}\n          selectedIndex={selectedIndex}\n          indicatorStyle={indicatorStyle}\n          onSelect={this.onBarSelect}>\n          {tabs}\n        </TabBar>\n        <ViewPager\n          ref={this.viewPagerRef}\n          {...derivedProps}\n          style={[styles.container, style]}\n          selectedIndex={selectedIndex}\n          shouldLoadComponent={this.props.shouldLoadComponent}\n          onOffsetChange={this.onPagerOffsetChange}\n          onSelect={this.onPagerSelect}>\n          {content}\n        </ViewPager>\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n  ImageStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: ImageStyle) => React.ReactElement<ImageProps>;\ntype ContentElement = React.ReactElement<any>;\n\ninterface ComponentProps {\n  title?: string;\n  titleStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  selected?: boolean;\n  onSelect?: (selected: boolean) => void;\n  children?: ContentElement;\n}\n\nexport type TabProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type TabElement = React.ReactElement<TabProps>;\n\n/**\n * `Tab` component is a part of `TabBar` or `TabView` component.\n * `TabView` Tabs should be wrapped in `TabBar` or `TabView` to provide usable component.\n * See usage examples at `TabView` component documentation.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the component.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Determines style of the title.\n *\n * @property {React.ReactElement<any>} children - Determines content of the tab.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines icon of the component.\n *\n * @property {boolean} selected - Determines tab selection state.\n *\n * @property {(selected: boolean) => void} onSelect = Fires on onSelect event.\n *\n * @property TouchableOpacityProps\n *\n * @property StyledComponentProps\n *\n * @overview-example TabSimpleUsage\n *\n * @overview-example TabWithIcon\n *\n * @example TabWithExternalSourceIcon\n *\n * @example TabInlineStyling\n */\nexport class TabComponent extends React.Component<TabProps> {\n\n  static styledComponentName: string = 'Tab';\n\n  static defaultProps: Partial<TabProps> = {\n    selected: false,\n  };\n\n  private onPress = () => {\n    if (this.props.onSelect) {\n      this.props.onSelect(!this.props.selected);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textMarginVertical,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconMarginVertical,\n      iconTintColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginVertical: iconMarginVertical,\n        tintColor: iconTintColor,\n      },\n      title: {\n        marginVertical: textMarginVertical,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n    };\n  };\n\n  private renderTitleElement = (style: TextStyle): TextElement => {\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text\n        key={1}\n        style={[style, styles.title, titleStyle]}>\n        {title}\n      </Text>\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: React.ReactElement<ImageProps> = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 2,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { title, icon } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      isValidString(title) && this.renderTitleElement(style.title),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, ...derivedProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    const [iconElement, titleElement] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...derivedProps}\n        style={[container, styles.container, style]}\n        onPress={this.onPress}>\n        {iconElement}\n        {titleElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  icon: {},\n  title: {},\n});\n\nexport const Tab = styled<TabProps>(TabComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  PanResponder,\n  PanResponderCallbacks,\n  PanResponderGestureState,\n  PanResponderInstance,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { CheckMark } from '../support/components';\nimport { I18nLayoutService } from '../support/services';\n\ninterface ComponentProps {\n  checked?: boolean;\n  disabled?: boolean;\n  status?: string;\n  size?: string;\n  text?: string;\n  textStyle?: StyleProp<TextStyle>;\n  onChange?: (checked: boolean) => void;\n}\n\nexport type ToggleProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type ToggleElement = React.ReactElement<ToggleProps>;\n\n/**\n * Styled `Toggle` component.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Determines whether component is checked.\n * Default is `false`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning`, `danger`, `basic` or `control`.\n * Default is `basic`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `giant`, `large`, `medium`, `small`, or `tiny`.\n * Default is `medium`.\n *\n * @property {string} text - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(checked: boolean) => void} onChange - Fires when selection state is changed.\n *\n * @property TouchableOpacityProps\n *\n * @property StyledComponentProps\n *\n * @overview-example ToggleSimpleUsage\n *\n * @overview-example ToggleStatus\n *\n * @overview-example ToggleSize\n *\n * @overview-example ToggleWithText\n *\n * @example ToggleInlineStyling\n */\nexport class ToggleComponent extends React.Component<ToggleProps> implements PanResponderCallbacks {\n\n  static styledComponentName: string = 'Toggle';\n\n  private panResponder: PanResponderInstance;\n  private thumbWidthAnimation: Animated.Value;\n  private thumbTranslateAnimation: Animated.Value;\n  private ellipseScaleAnimation: Animated.Value;\n  private thumbTranslateAnimationActive: boolean;\n\n  constructor(props: ToggleProps) {\n    super(props);\n\n    const { checked, themedStyle } = props;\n\n    this.thumbWidthAnimation = new Animated.Value(themedStyle.thumbWidth);\n    this.thumbTranslateAnimation = new Animated.Value(0);\n    this.ellipseScaleAnimation = new Animated.Value(checked ? 0.01 : 1.0);\n    this.thumbTranslateAnimationActive = false;\n\n    this.panResponder = PanResponder.create(this);\n  }\n\n  public onStartShouldSetPanResponder = (): boolean => {\n    return true;\n  };\n\n  public onStartShouldSetPanResponderCapture = (): boolean => {\n    return true;\n  };\n\n  public onMoveShouldSetPanResponder = (): boolean => {\n    return true;\n  };\n\n  public onMoveShouldSetPanResponderCapture = (): boolean => {\n    return true;\n  };\n\n  public onPanResponderTerminationRequest = (): boolean => {\n    return false;\n  };\n\n  public onPanResponderGrant = () => {\n    const { checked, disabled, themedStyle } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    this.onPressIn();\n\n    if (this.thumbTranslateAnimationActive) {\n      this.thumbTranslateAnimationActive = false;\n      this.stopAnimations();\n      return;\n    }\n\n    this.animateThumbWidth(themedStyle.thumbWidth * 1.2);\n    this.animateEllipseScale(checked ? 1 : 0.01);\n  };\n\n  public onPanResponderMove: () => boolean = (): boolean => {\n    return true;\n  };\n\n  public onPanResponderRelease = (e: GestureResponderEvent, gestureState: PanResponderGestureState) => {\n    const { checked, disabled, themedStyle } = this.props;\n\n    if (!disabled) {\n      if ((!checked && gestureState.dx > -5) || (checked && gestureState.dx < 5)) {\n        this.toggle(this.onPress);\n      } else {\n        this.animateEllipseScale(checked ? 0.01 : 1);\n      }\n    }\n\n    this.animateThumbWidth(themedStyle.thumbWidth);\n    this.onPressOut();\n  };\n\n  private onPressIn = () => {\n    this.props.dispatch([Interaction.ACTIVE]);\n  };\n\n  private onPressOut = () => {\n    this.props.dispatch([]);\n  };\n\n  private onPress = () => {\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { style, checked, disabled } = this.props;\n\n    const {\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      thumbWidth,\n      thumbHeight,\n      thumbBorderRadius,\n      thumbBackgroundColor,\n      textMarginHorizontal,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textFontFamily,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      offsetValue,\n      backgroundColor,\n      borderColor,\n      ...containerParameters\n    } = source;\n\n    const interpolatedBackgroundColor: Animated.AnimatedDiffClamp = this.getInterpolatedColor(\n      backgroundColor,\n      borderColor,\n    );\n\n    const thumbScale: Animated.AnimatedDiffClamp = this.animateThumbScale(offsetValue);\n\n    return {\n      toggleContainer: {},\n      ellipseContainer: {\n        borderColor: borderColor,\n        backgroundColor: interpolatedBackgroundColor,\n        ...containerParameters,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n      ellipse: {\n        width: containerParameters.width - (containerParameters.borderWidth * 2),\n        height: containerParameters.height - (containerParameters.borderWidth * 2),\n        borderRadius: (source.height - (source.borderWidth * 2)) / 2,\n        backgroundColor: interpolatedBackgroundColor,\n        transform: [{ scale: checked ? thumbScale : this.ellipseScaleAnimation }],\n      },\n      thumb: {\n        alignSelf: checked ? 'flex-end' : 'flex-start',\n        width: this.thumbWidthAnimation,\n        height: thumbHeight,\n        borderRadius: thumbBorderRadius,\n        backgroundColor: thumbBackgroundColor,\n        elevation: disabled ? 0 : 5,\n        transform: [{ translateX: this.thumbTranslateAnimation }],\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        fontFamily: textFontFamily,\n        color: textColor,\n      },\n      icon: {\n        width: source.iconWidth,\n        height: source.iconHeight,\n        backgroundColor: iconTintColor,\n      },\n    };\n  };\n\n  private animateThumbTranslate = (value: number, callback: () => void = () => null) => {\n    this.thumbTranslateAnimationActive = true;\n\n    Animated.timing(this.thumbTranslateAnimation, {\n      toValue: I18nLayoutService.select(value, -value),\n      duration: 150,\n      easing: Easing.linear,\n    }).start(() => {\n      this.thumbTranslateAnimationActive = false;\n      callback();\n    });\n  };\n\n  private animateThumbWidth = (value: number, callback: () => void = () => null) => {\n    Animated.timing(this.thumbWidthAnimation, {\n      toValue: value,\n      duration: 150,\n      easing: Easing.linear,\n    }).start(callback);\n  };\n\n  private animateEllipseScale = (value: number, callback: () => void = () => null) => {\n    Animated.timing(this.ellipseScaleAnimation, {\n      toValue: value,\n      duration: 200,\n      easing: Easing.linear,\n    }).start(callback);\n  };\n\n  private animateThumbScale = (value: number): Animated.AnimatedDiffClamp => {\n    return this.thumbTranslateAnimation.interpolate({\n      inputRange: [-value, 0],\n      outputRange: [1, 0.01],\n    });\n  };\n\n  private stopAnimations = () => {\n    const value: number = this.props.checked ? 0.01 : 1;\n\n    this.thumbTranslateAnimation.stopAnimation();\n    this.ellipseScaleAnimation.stopAnimation();\n    this.thumbWidthAnimation.stopAnimation();\n\n    this.ellipseScaleAnimation.setValue(value);\n  };\n\n  private toggle = (callback = (nextValue: boolean) => null) => {\n    const { checked, themedStyle } = this.props;\n\n    const value: number = checked ? -themedStyle.offsetValue : themedStyle.offsetValue;\n\n    this.animateThumbTranslate(value, () => {\n      this.thumbTranslateAnimation.setValue(0);\n      callback(!checked);\n    });\n\n    this.animateThumbWidth(this.props.themedStyle.thumbWidth);\n  };\n\n  private getInterpolatedColor = (startColor: string, endColor: string): Animated.AnimatedDiffClamp => {\n    const { checked, themedStyle } = this.props;\n\n    return this.thumbTranslateAnimation.interpolate({\n      inputRange: checked ? [-themedStyle.offsetValue, 0] : [0, themedStyle.offsetValue],\n      outputRange: [startColor, endColor],\n    });\n  };\n\n  private renderTextElement = (style: StyleType): TextElement => {\n    return (\n      <Text style={[style, this.props.textStyle]}>\n        {this.props.text}\n      </Text>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    return [\n      this.props.text && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, disabled, checked, ...restProps } = this.props;\n\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n    const [textElement] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <View\n        {...restProps}\n        {...this.panResponder.panHandlers}\n        style={[styles.container, style]}>\n        <View style={[componentStyle.toggleContainer, styles.toggleContainer]}>\n          <View style={[componentStyle.highlight, styles.highlight]}/>\n          <Animated.View style={[componentStyle.ellipseContainer, styles.ellipseContainer]}>\n            <Animated.View style={[componentStyle.ellipse, styles.ellipse]}/>\n            <Animated.View style={[componentStyle.thumb, styles.thumb]}>\n              <CheckMark\n                style={componentStyle.icon}\n                isAnimated={true}\n              />\n            </Animated.View>\n          </Animated.View>\n        </View>\n        {textElement}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  toggleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  ellipseContainer: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    overflow: 'hidden',\n  },\n  ellipse: {\n    alignSelf: 'center',\n    position: 'absolute',\n  },\n  highlight: {\n    alignSelf: 'center',\n    position: 'absolute',\n  },\n  thumb: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport const Toggle = styled<ToggleProps>(ToggleComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport {\n  Popover,\n  PopoverProps,\n} from '../popover/popover.component';\nimport { ModalPresentingBased } from '../support/typings';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: StyleType) => IconElement;\ntype WrappingElement = React.ReactElement<any>;\n\ntype PopoverContentProps = Omit<PopoverProps, 'content'>;\n\ninterface ComponentProps extends PopoverContentProps, ModalPresentingBased {\n  text: string;\n  textStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  children: WrappingElement;\n}\n\nexport type TooltipProps = StyledComponentProps & ComponentProps;\nexport type TooltipElement = React.ReactElement<TooltipProps>;\n\n/**\n * `Tooltip` displays informative text when users focus on or tap an element.\n *\n * @extends React.Component\n *\n * @property {string} text - Determines the text of the tooltip\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines icon of the component.\n *\n * @property {React.ReactElement<any>} children - Determines the element \"above\" which popover will be shown.\n *\n * @property {boolean} visible - Determines whether popover is visible or not.\n *\n * @property {string | PopoverPlacement} placement - Determines the placement of the popover.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Default is `bottom`.\n *\n * @property {number} indicatorOffset - Determines the offset of indicator (arrow).\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of indicator (arrow).\n *\n * @property ViewProps\n *\n * @property ModalPresentingBased\n *\n * @property StyledComponentProps\n *\n * @overview-example TooltipSimpleUsage\n *\n * @overview-example TooltipWithIcon\n *\n * @overview-example TooltipPlacement\n *\n * @example TooltipWithExternalSourceIcon\n *\n * @example TooltipInlineStyling\n */\nexport class TooltipComponent extends React.Component<TooltipProps> {\n\n  static styledComponentName: string = 'Tooltip';\n\n  static defaultProps: Partial<TooltipProps> = {\n    indicatorOffset: 8,\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      indicatorBackgroundColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      textMarginHorizontal,\n      textFontSize,\n      textFontFamily,\n      textLineHeight,\n      textColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      content: {},\n      indicator: {\n        backgroundColor: indicatorBackgroundColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        color: textColor,\n      },\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    const { text, textStyle } = this.props;\n\n    return (\n      <Text\n        key={1}\n        style={[style, styles.text, textStyle]}>\n        {text}\n      </Text>\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 0,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderContentElementChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      this.renderTextElement(style.text),\n    ];\n  };\n\n  private renderPopoverContentElement = (style: StyleType): React.ReactElement<ViewProps> => {\n    const { content, ...childrenStyle } = style;\n\n    const contentChildren: React.ReactNode = this.renderContentElementChildren(childrenStyle);\n\n    return (\n      <View style={[content, styles.content]}>\n        {contentChildren}\n      </View>\n    );\n  };\n\n  public render(): React.ReactElement<PopoverProps> {\n    const { themedStyle, style, indicatorStyle, children, ...derivedProps } = this.props;\n    const { container, indicator, ...componentStyle } = this.getComponentStyle(themedStyle);\n\n    const contentElement: TextElement = this.renderPopoverContentElement(componentStyle);\n\n    return (\n      <Popover\n        {...derivedProps}\n        style={[container, styles.container, style]}\n        indicatorStyle={[indicator, indicatorStyle]}\n        content={contentElement}>\n        {children}\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  content: {\n    flexDirection: 'row',\n  },\n  indicator: {},\n  icon: {},\n  text: {\n    alignSelf: 'center',\n  },\n});\n\nexport const Tooltip = styled<TooltipProps>(TooltipComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { TopNavigationActionElement } from './topNavigationAction.component';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ntype ActionElementProp = TopNavigationActionElement | TopNavigationActionElement[];\ntype AlignmentProp = 'start' | 'center';\n\ninterface ComponentProps {\n  title?: string;\n  titleStyle?: StyleProp<TextStyle>;\n  subtitle?: string;\n  subtitleStyle?: StyleProp<TextStyle>;\n  alignment?: AlignmentProp;\n  leftControl?: TopNavigationActionElement;\n  rightControls?: ActionElementProp;\n}\n\nexport type TopNavigationProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type TopNavigationElement = React.ReactElement<TopNavigationProps>;\n\n/**\n * `TopNavigation` component is designed to be a Navigation Bar.\n * Can be used for navigation.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the component.\n *\n * @property {string} subtitle - Determines the subtitle of the component.\n *\n * @property {string} alignment - Determines the alignment of the component.\n * Can be `center` or `start`.\n *\n * @property {React.ReactElement<TopNavigationActionProps>} leftControl - Determines the left control\n * of the component.\n *\n * @property {React.ReactElement<TopNavigationActionProps>[]} rightControls - Determines the right controls\n * of the component.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes text style of title.\n *\n * @property {StyleProp<TextStyle>} subtitleStyle - Customizes text style of subtitle.\n *\n * @property ViewProps\n *\n * @property StyledComponentProps\n *\n * @overview-example TopNavigationSimpleUsage\n *\n * @overview-example TopNavigationActions\n *\n * @overview-example TopNavigationAlignments\n *\n * @overview-example TopNavigationWithMenu\n *\n * @example TopNavigationInlineStyling\n */\nexport class TopNavigationComponent extends React.Component<TopNavigationProps> {\n\n  static styledComponentName: string = 'TopNavigation';\n\n  private getAlignmentDependentStyles = (alignment: AlignmentProp): StyleType | null => {\n    if (alignment === 'center') {\n      return {\n        container: styles.containerCentered,\n        titleContainer: styles.titleContainerCentered,\n      };\n    }\n\n    return {\n      rightControlsContainer: styles.rightControlsContainerStart,\n    };\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      titleTextAlign,\n      titleFontFamily,\n      titleFontSize,\n      titleLineHeight,\n      titleFontWeight,\n      titleColor,\n      subtitleTextAlign,\n      subtitleFontFamily,\n      subtitleFontSize,\n      subtitleLineHeight,\n      subtitleFontWeight,\n      subtitleColor,\n      ...containerParameters\n    } = source;\n\n\n    return {\n      container: containerParameters,\n      titleContainer: {},\n      title: {\n        textAlign: titleTextAlign,\n        fontFamily: titleFontFamily,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight,\n        fontWeight: titleFontWeight,\n        color: titleColor,\n      },\n      subtitle: {\n        textAlign: subtitleTextAlign,\n        fontFamily: subtitleFontFamily,\n        fontSize: subtitleFontSize,\n        color: subtitleColor,\n        fontWeight: subtitleFontWeight,\n        lineHeight: subtitleLineHeight,\n      },\n      leftControlContainer: {},\n      rightControlsContainer: {},\n    };\n  };\n\n  private renderTextElement = (text: string, style: StyleProp<TextStyle>): TextElement => {\n    return (\n      <Text style={style}>\n        {text}\n      </Text>\n    );\n  };\n\n  private renderActionElements(source: ActionElementProp): TopNavigationActionElement[] {\n    return React.Children.map(source, (element: TopNavigationActionElement, index: number) => {\n      return React.cloneElement(element, {\n        key: index,\n        appearance: this.props.appearance,\n      });\n    });\n  }\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const {\n      title,\n      subtitle,\n      leftControl,\n      rightControls,\n      titleStyle,\n      subtitleStyle,\n    } = this.props;\n\n    return [\n      isValidString(title) && this.renderTextElement(title, [style.title, styles.title, titleStyle]),\n      isValidString(subtitle) && this.renderTextElement(subtitle, [style.subtitle, styles.subtitle, subtitleStyle]),\n      leftControl && this.renderActionElements(leftControl),\n      rightControls && this.renderActionElements(rightControls),\n    ];\n  };\n\n  public render(): React.ReactNode {\n    const { themedStyle, style, alignment, ...restProps } = this.props;\n\n    const {\n      container,\n      leftControlContainer,\n      titleContainer,\n      rightControlsContainer,\n      ...componentStyles\n    } = this.getComponentStyle(themedStyle);\n\n    const alignmentStyles: StyleType = this.getAlignmentDependentStyles(alignment);\n\n    const [\n      titleElement,\n      subtitleElement,\n      leftControlElement,\n      rightControlElements,\n    ] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <View\n        style={[container, styles.container, alignmentStyles.container, style]}\n        {...restProps}>\n        <View style={[leftControlContainer, styles.leftControlContainer]}>\n          {leftControlElement}\n        </View>\n        <View style={[titleContainer, styles.titleContainer, alignmentStyles.titleContainer]}>\n          {titleElement}\n          {subtitleElement}\n        </View>\n        <View style={[rightControlsContainer, styles.rightControlsContainer, alignmentStyles.rightControlsContainer]}>\n          {rightControlElements}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  containerCentered: {\n    justifyContent: 'space-between',\n  },\n  titleContainer: {},\n  titleContainerCentered: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {},\n  subtitle: {},\n  leftControlContainer: {\n    flexDirection: 'row',\n    zIndex: 1,\n  },\n  rightControlsContainer: {\n    flexDirection: 'row',\n    zIndex: 1,\n  },\n  rightControlsContainerStart: {\n    flex: 1,\n    justifyContent: 'flex-end',\n  },\n});\n\nexport const TopNavigation = styled<TopNavigationProps>(TopNavigationComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  Insets,\n  StyleProp,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: StyleType) => IconElement;\n\ninterface ComponentProps {\n  icon: IconProp;\n}\n\nexport type TopNavigationActionProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type TopNavigationActionElement = React.ReactElement<TopNavigationActionProps>;\n\n/**\n * The `TopNavigationAction` component is a part of the `TopNavigation` component.\n * `TopNavigationActions` should be used in `TopNavigation` to provide usable component.\n * See usage examples at `TopNavigation` component documentation.\n *\n * @extends React.Component\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines the icon of the tab.\n *\n * @property TouchableOpacityProps\n *\n * @property StyledComponentProps\n *\n * @overview-example TopNavigationActionSimpleUsage\n *\n * @example TopNavigationActionExternalSourceIcon\n *\n * @example TopNavigationActionInlineStyling\n */\nclass TopNavigationActionComponent extends React.Component<TopNavigationActionProps> {\n\n  static styledComponentName: string = 'TopNavigationAction';\n\n  private onPress = (event: GestureResponderEvent) => {\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent) => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent) => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      iconTintColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n    } = source;\n\n    return {\n      container: {\n        marginHorizontal: iconMarginHorizontal,\n      },\n      icon: {\n        tintColor: iconTintColor,\n        width: iconWidth,\n        height: iconHeight,\n        ...styles.icon,\n      },\n    };\n  };\n\n  private createHitSlopInsets = (iconStyle: StyleProp<ImageStyle>): Insets => {\n    const flatStyle: ImageStyle = StyleSheet.flatten(iconStyle);\n\n    // @ts-ignore: `width` is restricted to be a number\n    const value: number = 40 - flatStyle.width;\n\n    return {\n      left: value,\n      top: value,\n      right: value,\n      bottom: value,\n    };\n  };\n\n  private renderIconElement = (style: StyleType): IconElement => {\n    return this.props.icon(style);\n  };\n\n  public render(): React.ReactNode {\n    const { themedStyle, style, icon, ...touchableProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const hitSlopInsets: Insets = this.createHitSlopInsets(componentStyle.icon);\n\n    const iconElement: IconElement = this.renderIconElement(componentStyle.icon);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        hitSlop={hitSlopInsets}\n        {...touchableProps}\n        style={[componentStyle.container, styles.container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        {iconElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  icon: {},\n});\n\nexport const TopNavigationAction = styled<TopNavigationActionProps>(TopNavigationActionComponent);\n","import React from 'react';\nimport {\n  Avatar,\n  AvatarElement,\n  AvatarProps,\n} from '@kitten/ui';\n\nexport const AvatarShowcase = (props?: AvatarProps): AvatarElement => {\n  return (\n    <Avatar\n      {...props}\n      source={{ uri: 'https://cdn.vox-cdn.com/uploads/chorus_asset/file/7790309/cena.jpg' }}\n    />\n  );\n};\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from '../common/type';\n\nconst giantAvatar: ComponentShowcaseItem = {\n  title: 'Giant',\n  props: {\n    size: 'giant',\n  },\n};\n\nconst largeAvatar: ComponentShowcaseItem = {\n  title: 'Large',\n  props: {\n    size: 'large',\n  },\n};\n\nconst mediumAvatar: ComponentShowcaseItem = {\n  title: 'Medium',\n  props: {\n    size: 'medium',\n  },\n};\n\nconst smallAvatar: ComponentShowcaseItem = {\n  title: 'Small',\n  props: {\n    size: 'small',\n  },\n};\n\nconst tinyAvatar: ComponentShowcaseItem = {\n  title: 'Tiny',\n  props: {\n    size: 'tiny',\n  },\n};\n\nconst roundAvatar: ComponentShowcaseItem = {\n  title: 'Round',\n  props: {\n    shape: 'round',\n  },\n};\n\nconst roundedAvatar: ComponentShowcaseItem = {\n  title: 'Rounded',\n  props: {\n    shape: 'rounded',\n  },\n};\n\nconst squareAvatar: ComponentShowcaseItem = {\n  title: 'Square',\n  props: {\n    shape: 'square',\n  },\n};\n\nconst shapeSection: ComponentShowcaseSection = {\n  title: 'Shape',\n  items: [\n    roundAvatar,\n    roundedAvatar,\n    squareAvatar,\n  ],\n};\n\nconst sizeSection: ComponentShowcaseSection = {\n  title: 'Size',\n  items: [\n    giantAvatar,\n    largeAvatar,\n    mediumAvatar,\n    smallAvatar,\n    tinyAvatar,\n  ],\n};\n\nexport const avatarShowcase: ComponentShowcase = {\n  sections: [\n    sizeSection,\n    shapeSection,\n  ],\n};\n","import React from 'react';\nimport {\n  I18nManager,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Updates } from 'expo';\nimport {\n  ThemedComponentProps,\n  ThemeType,\n  withStyles,\n} from '@kitten/theme';\nimport {\n  Button,\n  CheckBox,\n  OverflowMenu,\n  OverflowMenuItemType,\n} from '@kitten/ui';\nimport {\n  ComponentShowcaseSetting,\n  ShowcaseThemes,\n} from './type';\n\ninterface ComponentProps {\n  themes?: ShowcaseThemes;\n  settings?: ComponentShowcaseSetting[];\n  onThemeSelect?: (theme: string) => void;\n  onSettingSelect?: (setting: { [prop: string]: any }) => void;\n  onReset: () => void;\n}\n\ninterface State {\n  themesMenuVisible: boolean;\n  settingsMenuVisible: boolean;\n}\n\nexport type ShowcaseSettingsProps = ThemedComponentProps & ViewProps & ComponentProps;\n\nclass ShowcaseSettingsComponent extends React.Component<ShowcaseSettingsProps, State> {\n\n  public state: State = {\n    themesMenuVisible: false,\n    settingsMenuVisible: false,\n  };\n\n  private createSettingMenuItem = (setting: ComponentShowcaseSetting): OverflowMenuItemType => {\n    return {\n      title: setting.description || `${setting.propertyName}: ${setting.value}`,\n    };\n  };\n\n  private createThemeMenuItem = (theme: string): OverflowMenuItemType => {\n    return {\n      title: theme,\n    };\n  };\n\n  private onThemeSelect = (index: number) => {\n    const { [index]: theme } = Object.keys(this.props.themes);\n\n    this.props.onThemeSelect(theme);\n    this.setState({ themesMenuVisible: false });\n  };\n\n  private onResetButtonPress = () => {\n    this.props.onReset();\n  };\n\n  private onSettingSelect = (index: number) => {\n    const { [index]: setting } = this.props.settings;\n\n    this.props.onSettingSelect({\n      [setting.propertyName]: setting.value,\n    });\n    this.setState({ settingsMenuVisible: false });\n  };\n\n  private createThemesMenuItems = (): OverflowMenuItemType[] => {\n    if (this.props.themes) {\n      return Object.keys(this.props.themes).map(this.createThemeMenuItem);\n    }\n  };\n\n  private createSettingsMenuItems = (): OverflowMenuItemType[] => {\n    if (this.props.settings) {\n      return this.props.settings.map(this.createSettingMenuItem);\n    }\n\n    return [];\n  };\n\n  private toggleThemesMenu = () => {\n    const themesMenuVisible: boolean = !this.state.themesMenuVisible;\n\n    this.setState({ themesMenuVisible });\n  };\n\n  private toggleSettingsMenu = () => {\n    const settingsMenuVisible: boolean = !this.state.settingsMenuVisible;\n\n    this.setState({ settingsMenuVisible });\n  };\n\n  private toggleRtl = () => {\n    I18nManager.forceRTL(!I18nManager.isRTL);\n    I18nManager.allowRTL(I18nManager.isRTL);\n    Updates.reload();\n  };\n\n  public render(): React.ReactNode {\n    const { style, themedStyle } = this.props;\n\n    return (\n      <View style={[themedStyle.container, style]}>\n        <OverflowMenu\n          placement='bottom start'\n          visible={this.state.themesMenuVisible}\n          onSelect={this.onThemeSelect}\n          data={this.createThemesMenuItems()}\n          onBackdropPress={this.toggleThemesMenu}>\n          <Button\n            size='small'\n            disabled={!this.props.themes}\n            onPress={this.toggleThemesMenu}>\n            THEMES\n          </Button>\n        </OverflowMenu>\n        <OverflowMenu\n          placement='bottom start'\n          visible={this.state.settingsMenuVisible}\n          onSelect={this.onSettingSelect}\n          data={this.createSettingsMenuItems()}\n          onBackdropPress={this.toggleSettingsMenu}>\n          <Button\n            size='small'\n            disabled={!this.props.settings}\n            onPress={this.toggleSettingsMenu}>\n            SETTINGS\n          </Button>\n        </OverflowMenu>\n        <Button\n          size='small'\n          disabled={!this.props.settings}\n          onPress={this.onResetButtonPress}>\n          RESET\n        </Button>\n        <CheckBox\n          checked={I18nManager.isRTL}\n          onChange={this.toggleRtl}\n          text='RTL'\n        />\n      </View>\n    );\n  }\n}\n\nexport const ShowcaseSettings = withStyles(ShowcaseSettingsComponent, (theme: ThemeType) => ({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    paddingVertical: 16,\n    backgroundColor: theme['background-basic-color-2'],\n  },\n}));\n","import React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  ThemedComponentProps,\n  ThemeType,\n  withStyles,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextProps,\n} from '@kitten/ui';\nimport { ComponentShowcaseItem } from './type';\n\ninterface ComponentProps {\n  item: ComponentShowcaseItem;\n  renderItem: (props: any) => React.ReactElement<any>;\n}\n\nexport type ShowcaseItemProps = ThemedComponentProps & ViewProps & ComponentProps;\n\nclass ShowcaseItemComponent extends React.Component<ShowcaseItemProps> {\n\n  private renderElement = (): React.ReactElement<any> => {\n    const { themedStyle, item, renderItem } = this.props;\n\n    const element: React.ReactElement<any> = renderItem(item.props);\n\n    return React.cloneElement(element, {\n      style: [themedStyle.element, element.props.style],\n    });\n  };\n\n  private renderTitleElement = (): React.ReactElement<TextProps> => {\n    const { themedStyle, item } = this.props;\n\n    return (\n      <Text\n        appearance='hint'\n        style={themedStyle.titleLabel}>\n        {item.title}\n      </Text>\n    );\n  };\n\n  public render(): React.ReactNode {\n    const { style, themedStyle, item } = this.props;\n\n    const titleElement: React.ReactElement<TextProps> = item.title && this.renderTitleElement();\n    const showcaseElement: React.ReactElement<any> = this.renderElement();\n\n    return (\n      <View style={[themedStyle.container, style]}>\n        {titleElement}\n        {showcaseElement}\n      </View>\n    );\n  }\n}\n\nexport const ShowcaseItem = withStyles(ShowcaseItemComponent, (theme: ThemeType) => ({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  titleLabel: {\n    minWidth: 128,\n    fontSize: 13,\n    textAlign: 'left',\n  },\n  element: {},\n}));\n","import React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  ThemedComponentProps,\n  ThemeType,\n  withStyles,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextProps,\n} from '@kitten/ui';\nimport {\n  ShowcaseItem,\n  ShowcaseItemProps,\n} from './showcaseItem.component';\nimport {\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from './type';\n\ninterface ComponentProps {\n  section: ComponentShowcaseSection;\n  renderItem: (props: any) => React.ReactElement<any>;\n}\n\nexport type ShowcaseSectionProps = ThemedComponentProps & ViewProps & ComponentProps;\n\nclass ShowcaseSectionComponent extends React.Component<ShowcaseSectionProps> {\n\n  private renderItem = (item: ComponentShowcaseItem, index: number): React.ReactElement<ShowcaseItemProps> => {\n    const { themedStyle, renderItem } = this.props;\n\n    return (\n      <ShowcaseItem\n        key={index}\n        style={themedStyle.item}\n        item={item}\n        renderItem={renderItem}\n      />\n    );\n  };\n\n  private renderTitleElement = (): React.ReactElement<TextProps> => {\n    const { themedStyle, section } = this.props;\n\n    return (\n      <Text style={themedStyle.titleLabel}>\n        {section.title}\n      </Text>\n    );\n  };\n\n  public render(): React.ReactNode {\n    const { style, themedStyle, section } = this.props;\n\n    const titleElement: React.ReactElement<TextProps> = section.title && this.renderTitleElement();\n\n    return (\n      <View style={[themedStyle.container, style]}>\n        {titleElement}\n        {section.items.map(this.renderItem)}\n      </View>\n    );\n  }\n}\n\nexport const ShowcaseSection = withStyles(ShowcaseSectionComponent, (theme: ThemeType) => ({\n  container: {},\n  titleLabel: {\n    marginVertical: 8,\n    fontSize: 20,\n    lineHeight: 28,\n    textAlign: 'left',\n  },\n  item: {\n    marginVertical: 8,\n  },\n}));\n","import React from 'react';\nimport {\n  ScrollView,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ThemedComponentProps,\n  ThemeType,\n  withStyles,\n} from '@kitten/theme';\nimport {\n  ShowcaseSection,\n  ShowcaseSectionProps,\n} from './showcaseSection.component';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseSection,\n} from './type';\n\ninterface ComponentProps {\n  showcase: ComponentShowcase;\n  settings?: { [prop: string]: any };\n  renderItem: (props: any) => React.ReactElement<any>;\n}\n\nexport type ShowcaseProps = ThemedComponentProps & ComponentProps;\n\ntype ListItemElement = React.ReactElement<ShowcaseSectionProps>;\n\nclass ShowcaseComponent extends React.Component<ShowcaseProps> {\n\n  private renderShowcaseElement = (props: any): React.ReactElement<any> => {\n    return this.props.renderItem({\n      ...props,\n      ...this.props.settings,\n    });\n  };\n\n  private renderSectionElement = (item: ComponentShowcaseSection): ListItemElement => {\n    return (\n      <ShowcaseSection\n        section={item}\n        renderItem={this.renderShowcaseElement}\n      />\n    );\n  };\n\n  private renderSectionItem = (item: ComponentShowcaseSection, index: number): ListItemElement => {\n    const { themedStyle, showcase } = this.props;\n\n    const listItemElement: ListItemElement = this.renderSectionElement(item);\n\n    const borderStyle: ViewStyle | null = index === showcase.sections.length - 1 ? null : themedStyle.itemBorder;\n\n    return React.cloneElement(listItemElement, {\n      key: index,\n      style: [themedStyle.item, borderStyle, listItemElement.props.style],\n    });\n  };\nO;\n  public render(): React.ReactNode {\n    const { themedStyle, showcase } = this.props;\n\n    return (\n      <ScrollView\n        style={themedStyle.container}\n        bounces={false}>\n        {showcase.sections.map(this.renderSectionItem)}\n      </ScrollView>\n    );\n  }\n}\n\nexport const Showcase = withStyles(ShowcaseComponent, (theme: ThemeType) => {\n  return {\n    container: {\n      flex: 1,\n      backgroundColor: theme['background-basic-color-1'],\n    },\n    item: {\n      paddingHorizontal: 24,\n      paddingVertical: 16,\n    },\n    itemBorder: {\n      borderBottomWidth: 1,\n      borderBottomColor: theme['border-basic-color-3'],\n    },\n  };\n});\n\n","import {\n  dark,\n  light,\n} from '@eva-design/eva';\nimport { ThemeType } from '@kitten/theme';\n\nexport interface ThemeRegistry {\n  'Eva Light': ThemeType;\n  'Eva Dark': ThemeType;\n}\n\nexport type ThemeKey = keyof ThemeRegistry;\n\nexport const themes: ThemeRegistry = {\n  'Eva Light': light,\n  'Eva Dark': dark,\n};\n","import React from 'react';\nimport { ThemeKey } from './registry';\n\nexport interface ThemeContextType {\n  name: ThemeKey;\n  toggleTheme: (theme: ThemeKey) => void;\n}\n\nconst initialValue: ThemeContextType = {\n  name: 'Eva Light',\n  toggleTheme: (theme: ThemeKey) => {},\n};\n\nexport const ThemeContext: React.Context<ThemeContextType> = React.createContext(initialValue);\n","import React from 'react';\nimport {\n  ScrollViewProps,\n  View,\n} from 'react-native';\nimport { ShowcaseSettings } from './showcaseSettings.component';\nimport { Showcase } from './showcase.component';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseSetting,\n} from './type';\nimport {\n  ThemeContext,\n  themes,\n} from '../../../themes';\nimport { StyleType } from '@kitten/theme';\n\ninterface ContainerProps {\n  style?: StyleType;\n  showcase: ComponentShowcase;\n  settings?: ComponentShowcaseSetting[];\n  renderItem: (props: any) => React.ReactElement<any>;\n}\n\ninterface State {\n  settings: { [prop: string]: any };\n}\n\nexport class ShowcaseContainer extends React.Component<ContainerProps, State> {\n\n  public state: State = {\n    settings: {},\n  };\n\n  private onSelectSetting = (selectedSettings: { [prop: string]: any }) => {\n    const settings: { [prop: string]: any } = { ...this.state.settings, ...selectedSettings };\n\n    this.setState({ settings });\n  };\n\n  private onResetSettings = () => {\n    const settings = {};\n\n    this.setState({ settings });\n  };\n\n  private renderContent = ({ toggleTheme }): React.ReactElement<ScrollViewProps> => {\n    const { showcase, settings, renderItem, children, style } = this.props;\n\n    return (\n      <View style={[{ flex: 1 }, style]}>\n        <ShowcaseSettings\n          themes={themes}\n          settings={settings}\n          onSettingSelect={this.onSelectSetting}\n          onThemeSelect={toggleTheme}\n          onReset={this.onResetSettings}\n        />\n        {children}\n        <Showcase\n          showcase={showcase}\n          renderItem={renderItem}\n          settings={this.state.settings}\n        />\n      </View>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ThemeContext.Consumer>\n        {this.renderContent}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  AvatarProps,\n  AvatarElement,\n} from '@kitten/ui';\nimport { AvatarShowcase } from './avatarShowcase.component';\nimport { avatarShowcase } from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class AvatarContainer extends React.Component {\n\n  private renderItem = (props: AvatarProps): AvatarElement => {\n    return (\n      <AvatarShowcase {...props}/>\n    );\n  };\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={avatarShowcase}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationElement,\n  BottomNavigationProps,\n} from '@kitten/ui';\n\ninterface State {\n  selectedIndex: number;\n}\n\nexport class BottomNavigationShowcase extends React.Component<BottomNavigationProps, State> {\n\n  public state: State = {\n    selectedIndex: 0,\n  };\n\n  private onSelect = (selectedIndex: number) => {\n    this.setState({ selectedIndex });\n  };\n\n  public render(): BottomNavigationElement {\n    return (\n      <BottomNavigation\n        {...this.props}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Image,\n  ImageProps,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport { BottomNavigationTab } from '@kitten/ui';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst Icon = (style: StyleType): React.ReactElement<ImageProps> => {\n  return (\n    <Image source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}/>\n  );\n};\n\nconst titleBottomNavigation: ComponentShowcaseItem = {\n  props: {\n    children: [\n      <BottomNavigationTab title='Tab 1'/>,\n      <BottomNavigationTab title='Tab 2'/>,\n      <BottomNavigationTab title='Tab 3'/>,\n    ],\n  },\n};\n\nconst iconBottomNavigation: ComponentShowcaseItem = {\n  props: {\n    children: [\n      <BottomNavigationTab icon={Icon}/>,\n      <BottomNavigationTab icon={Icon}/>,\n      <BottomNavigationTab icon={Icon}/>,\n    ],\n  },\n};\n\nconst iconTitleBottomNavigation: ComponentShowcaseItem = {\n  props: {\n    children: [\n      <BottomNavigationTab icon={Icon} title='Tab 1'/>,\n      <BottomNavigationTab icon={Icon} title='Tab 2'/>,\n      <BottomNavigationTab icon={Icon} title='Tab 3'/>,\n    ],\n  },\n};\n\nconst titleSection: ComponentShowcaseSection = {\n  title: 'Title',\n  items: [\n    titleBottomNavigation,\n  ],\n};\n\nconst iconSection: ComponentShowcaseSection = {\n  title: 'Icon',\n  items: [\n    iconBottomNavigation,\n  ],\n};\n\nconst iconTitleSection: ComponentShowcaseSection = {\n  title: 'Icon Title',\n  items: [\n    iconTitleBottomNavigation,\n  ],\n};\n\nexport const bottomNavigationShowcase: ComponentShowcase = {\n  sections: [\n    titleSection,\n    iconSection,\n    iconTitleSection,\n  ],\n};\n\nexport const bottomNavigationSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'appearance',\n    value: 'noIndicator',\n    description: 'No Indicator',\n  },\n];\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  BottomNavigationElement,\n  BottomNavigationProps,\n} from '@kitten/ui';\nimport { BottomNavigationShowcase } from './bottomNavigationShowcase.component';\nimport {\n  bottomNavigationSettings,\n  bottomNavigationShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class BottomNavigationContainer extends React.Component {\n\n  private renderItem = (props: BottomNavigationProps): BottomNavigationElement => {\n    return (\n      <BottomNavigationShowcase\n        {...props}\n        style={[styles.component, props.style]}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={bottomNavigationShowcase}\n        settings={bottomNavigationSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n  },\n});\n\n","import React from 'react';\nimport {\n  Button,\n  ButtonElement,\n  ButtonProps,\n} from '@kitten/ui';\n\nexport const ButtonShowcase = (props?: ButtonProps): ButtonElement => {\n  return (\n    <Button\n      {...props}>\n      BUTTON\n    </Button>\n  );\n};\n","import React from 'react';\nimport {\n  Image,\n  ImageProps,\n} from 'react-native';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\nimport { StyleType } from '@kitten/theme';\nimport { Icon } from '@kitten/ui';\n\nconst IconElement = (style: StyleType): React.ReactElement<ImageProps> => (\n  <Icon name='star' {...style}/>\n);\n\nconst defaultButton: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst disabledButton: ComponentShowcaseItem = {\n  title: 'Disabled',\n  props: {\n    disabled: true,\n  },\n};\n\nconst leftIconButton: ComponentShowcaseItem = {\n  title: 'Left Icon',\n  props: {\n    icon: IconElement,\n  },\n};\n\nconst rightIconButton: ComponentShowcaseItem = {\n  title: 'Right Icon',\n  props: {\n    icon: IconElement,\n    style: {\n      flexDirection: 'row-reverse',\n    },\n  },\n};\n\nconst disabledIconButton: ComponentShowcaseItem = {\n  title: 'Disabled',\n  props: {\n    icon: IconElement,\n    disabled: true,\n  },\n};\n\nconst giantButton: ComponentShowcaseItem = {\n  title: 'Giant',\n  props: {\n    size: 'giant',\n  },\n};\n\nconst largeButton: ComponentShowcaseItem = {\n  title: 'Large',\n  props: {\n    size: 'large',\n  },\n};\n\nconst mediumButton: ComponentShowcaseItem = {\n  title: 'Medium',\n  props: {\n    size: 'medium',\n  },\n};\n\nconst smallButton: ComponentShowcaseItem = {\n  title: 'Small',\n  props: {\n    size: 'small',\n  },\n};\n\nconst tinyButton: ComponentShowcaseItem = {\n  title: 'Tiny',\n  props: {\n    size: 'tiny',\n  },\n};\nconst textSection: ComponentShowcaseSection = {\n  title: 'Text',\n  items: [\n    defaultButton,\n    disabledButton,\n  ],\n};\n\nconst iconSection: ComponentShowcaseSection = {\n  title: 'Icon',\n  items: [\n    leftIconButton,\n    rightIconButton,\n    disabledIconButton,\n  ],\n};\n\nconst sizeSection: ComponentShowcaseSection = {\n  title: 'Size',\n  items: [\n    giantButton,\n    largeButton,\n    mediumButton,\n    smallButton,\n    tinyButton,\n  ],\n};\n\nexport const buttonShowcase: ComponentShowcase = {\n  sections: [\n    textSection,\n    iconSection,\n    sizeSection,\n  ],\n};\n\nexport const buttonSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'appearance',\n    value: 'filled',\n  },\n  {\n    propertyName: 'appearance',\n    value: 'outline',\n  },\n  {\n    propertyName: 'appearance',\n    value: 'ghost',\n  },\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n  {\n    propertyName: 'status',\n    value: 'control',\n  },\n  {\n    propertyName: 'status',\n    value: 'basic',\n  },\n];\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ButtonElement,\n  ButtonProps,\n} from '@kitten/ui';\nimport { ButtonShowcase } from './buttonShowcase.component';\nimport {\n  buttonShowcase,\n  buttonSettings,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class ButtonContainer extends React.Component {\n\n  private renderItem = (props: ButtonProps): ButtonElement => {\n    return (\n      <ButtonShowcase\n        {...props}\n        style={[styles.component, props.style]}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={buttonShowcase}\n        settings={buttonSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n  },\n});\n\n","import React from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  ButtonGroupElement,\n  ButtonGroupProps,\n} from '@kitten/ui';\n\nexport const ButtonGroupShowcase = (props?: ButtonGroupProps): ButtonGroupElement => {\n  return (\n    <ButtonGroup {...props}>\n      <Button>L</Button>\n      <Button>M</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n  );\n};\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst defaultButtonGroup: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst giantButtonGroup: ComponentShowcaseItem = {\n  title: 'Giant',\n  props: {\n    size: 'giant',\n  },\n};\n\nconst largeButtonGroup: ComponentShowcaseItem = {\n  title: 'Large',\n  props: {\n    size: 'large',\n  },\n};\n\nconst mediumButtonGroup: ComponentShowcaseItem = {\n  title: 'Medium',\n  props: {\n    size: 'medium',\n  },\n};\n\nconst smallButtonGroup: ComponentShowcaseItem = {\n  title: 'Small',\n  props: {\n    size: 'small',\n  },\n};\n\nconst tinyButtonGroup: ComponentShowcaseItem = {\n  title: 'Tiny',\n  props: {\n    size: 'tiny',\n  },\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultButtonGroup,\n  ],\n};\n\nconst sizeSection: ComponentShowcaseSection = {\n  title: 'Size',\n  items: [\n    giantButtonGroup,\n    largeButtonGroup,\n    mediumButtonGroup,\n    smallButtonGroup,\n    tinyButtonGroup,\n  ],\n};\n\nexport const buttonGroupShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n    sizeSection,\n  ],\n};\n\nexport const buttonGroupSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'appearance',\n    value: 'filled',\n  },\n  {\n    propertyName: 'appearance',\n    value: 'outline',\n  },\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n  {\n    propertyName: 'status',\n    value: 'control',\n  },\n  {\n    propertyName: 'status',\n    value: 'basic',\n  },\n];\n","import React from 'react';\nimport {\n  ButtonGroupElement,\n  ButtonGroupProps,\n} from '@kitten/ui';\nimport { ButtonGroupShowcase } from './buttonGroupShowcase.component';\nimport {\n  buttonGroupSettings,\n  buttonGroupShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class ButtonGroupContainer extends React.Component {\n\n  private renderItem = (props: ButtonGroupProps): ButtonGroupElement => {\n    return (\n      <ButtonGroupShowcase {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={buttonGroupShowcase}\n        settings={buttonGroupSettings}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  CheckBox,\n  CheckBoxElement,\n  CheckBoxProps,\n} from '@kitten/ui';\n\ninterface CheckBoxShowcaseComponentState {\n  checked: boolean;\n  indeterminate: boolean;\n}\n\nclass CheckBoxShowcaseComponent extends React.Component<CheckBoxProps, CheckBoxShowcaseComponentState> {\n\n  static defaultProps: CheckBoxProps = {\n    checked: true,\n    indeterminate: false,\n  };\n\n  public state: CheckBoxShowcaseComponentState = {\n    checked: this.props.checked,\n    indeterminate: this.props.indeterminate,\n  };\n\n  private onChange = (checked: boolean, indeterminate: boolean) => {\n    this.setState({ checked, indeterminate });\n  };\n\n  public render(): CheckBoxElement {\n    return (\n      <CheckBox\n        {...this.props}\n        checked={this.state.checked}\n        indeterminate={this.state.indeterminate}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nexport const CheckBoxShowcase = (props?: CheckBoxProps): CheckBoxElement => {\n  return (\n    <CheckBoxShowcaseComponent {...props}/>\n  );\n};\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst checkedCheckBox: ComponentShowcaseItem = {\n  title: 'Checked',\n  props: {\n    checked: true,\n  },\n};\n\nconst uncheckedCheckBox: ComponentShowcaseItem = {\n  title: 'Unchecked',\n  props: {\n    checked: false,\n  },\n};\n\nconst indeterminateCheckBox: ComponentShowcaseItem = {\n  title: 'Indeterminate',\n  props: {\n    indeterminate: true,\n  },\n};\n\nconst disabledCheckBox: ComponentShowcaseItem = {\n  title: 'Disabled',\n  props: {\n    disabled: true,\n  },\n};\n\nconst textCheckBox: ComponentShowcaseItem = {\n  title: 'Text',\n  props: {\n    text: 'Place your text',\n  },\n};\n\nconst textDisabledCheckBox: ComponentShowcaseItem = {\n  title: 'Disabled Text',\n  props: {\n    disabled: true,\n    text: 'Place your text',\n  },\n};\n\nconst stateSection: ComponentShowcaseSection = {\n  title: 'State',\n  items: [\n    checkedCheckBox,\n    uncheckedCheckBox,\n    indeterminateCheckBox,\n    disabledCheckBox,\n  ],\n};\n\nconst accessoriesSection: ComponentShowcaseSection = {\n  title: 'Accessories',\n  items: [\n    textCheckBox,\n    textDisabledCheckBox,\n  ],\n};\n\nexport const checkboxShowcase: ComponentShowcase = {\n  sections: [\n    stateSection,\n    accessoriesSection,\n  ],\n};\n\nexport const checkboxSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n  {\n    propertyName: 'status',\n    value: 'control',\n  },\n  {\n    propertyName: 'status',\n    value: 'basic',\n  },\n];\n","import React from 'react';\nimport {\n  CheckBoxElement,\n  CheckBoxProps,\n} from '@kitten/ui';\nimport { CheckBoxShowcase } from './checkboxShowcase.component';\nimport {\n  checkboxSettings,\n  checkboxShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class CheckBoxContainer extends React.Component {\n\n  private renderItem = (props: CheckBoxProps): CheckBoxElement => {\n    return (\n      <CheckBoxShowcase {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={checkboxShowcase}\n        settings={checkboxSettings}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Button,\n  ButtonProps,\n} from '@kitten/ui';\n\nexport const DrawerShowcase = (props?: ButtonProps): React.ReactElement<ButtonProps> => {\n  return (\n    <Button\n      {...props}>\n      TOGGLE DRAWER\n    </Button>\n  );\n};\n","import React from 'react';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from '../common/type';\n\n\nconst defaultDrawer: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultDrawer,\n  ],\n};\n\nexport const drawerShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n  ],\n};\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { NavigationScreenProps } from 'react-navigation';\nimport { DrawerProps } from '@kitten/ui';\nimport { DrawerShowcase } from './drawerShowcase.component';\nimport { drawerShowcase } from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class DrawerContainer extends React.Component<NavigationScreenProps> {\n\n  private toggleDrawer = () => {\n    this.props.navigation.toggleDrawer();\n  };\n\n  private renderItem = (props: DrawerProps): React.ReactElement<DrawerProps> => {\n    return (\n      <DrawerShowcase\n        {...props}\n        style={[styles.component, props.style]}\n        onPress={this.toggleDrawer}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={drawerShowcase}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n  },\n});\n\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst defaultIcon: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst zoomIcon: ComponentShowcaseItem = {\n  title: 'Zoom',\n  props: {\n    animation: 'zoom',\n  },\n};\n\nconst pulseIcon: ComponentShowcaseItem = {\n  title: 'Pulse',\n  props: {\n    animation: 'pulse',\n  },\n};\n\nconst shakeIcon: ComponentShowcaseItem = {\n  title: 'Shake',\n  props: {\n    animation: 'shake',\n  },\n};\n\nconst infiniteExample: ComponentShowcaseItem = {\n  title: 'Infinite',\n  props: {\n    animation: 'shake',\n    animationConfig: {\n      cycles: -1,\n    },\n  },\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultIcon,\n  ],\n};\n\nconst animationSection: ComponentShowcaseSection = {\n  title: 'Animations',\n  items: [\n    zoomIcon,\n    pulseIcon,\n    shakeIcon,\n  ],\n};\n\nconst infiniteSection: ComponentShowcaseSection = {\n  title: 'Infinite Animation',\n  items: [\n    infiniteExample,\n  ],\n};\n\nexport const iconShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n    animationSection,\n    infiniteSection,\n  ],\n};\n\nexport const iconSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'pack',\n    value: 'eva',\n  },\n  {\n    propertyName: 'pack',\n    value: 'ant',\n  },\n  {\n    propertyName: 'pack',\n    value: 'feather',\n  },\n  {\n    propertyName: 'pack',\n    value: 'font-awesome',\n  },\n  {\n    propertyName: 'pack',\n    value: 'material',\n  },\n  {\n    propertyName: 'pack',\n    value: 'material-community',\n  },\n];\n","import React from 'react';\nimport { ViewProps } from 'react-native';\nimport {\n  Icon,\n  IconProps,\n  Input,\n} from '@kitten/ui';\nimport { StyleType } from '@kitten/theme';\n\ninterface State {\n  iconName: string;\n}\n\nconst DEFAULT_ICON: string = 'star';\n\nexport class IconShowcase extends React.Component<IconProps, State> {\n\n  private iconRef: React.RefObject<Icon<any>> = React.createRef();\n  private animationTimeout: NodeJS.Timeout;\n\n  public state: State = {\n    iconName: DEFAULT_ICON,\n  };\n\n  public componentDidMount() {\n    this.animationTimeout = setTimeout(this.startAnimation, 500);\n  }\n\n  public componentWillUnmount() {\n    clearTimeout(this.animationTimeout);\n  }\n\n  private onInputChangeText = (text: string) => {\n    this.state.iconName = text.length > 0 ? text : DEFAULT_ICON;\n  };\n\n  private onInputBlur = () => {\n    this.iconRef.current.startAnimation();\n  };\n\n  private startAnimation = () => {\n    this.iconRef.current.startAnimation();\n  };\n\n  private renderIcon = (style: StyleType) => {\n    return (\n      <Icon\n        ref={this.iconRef}\n        name={this.state.iconName}\n        {...this.props}\n        {...style}\n      />\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    return (\n      <Input\n        style={{ flex: 1 }}\n        placeholder='Type icon name'\n        autoCapitalize='none'\n        autoCorrect={false}\n        caption='Unfocus to change icon'\n        captionIcon={this.renderIcon}\n        icon={this.renderIcon}\n        onChangeText={this.onInputChangeText}\n        onBlur={this.onInputBlur}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { IconProps } from '@kitten/ui';\nimport {\n  iconSettings,\n  iconShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\nimport { IconShowcase } from './iconShowcase.component';\n\nexport class IconContainer extends React.Component {\n\n  private renderItem = (props: IconProps): React.ReactElement<IconProps> => {\n    return (\n      <IconShowcase {...props} />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={iconShowcase}\n        settings={iconSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\n","import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Calendar,\n  CalendarElement,\n  CalendarProps,\n  Button,\n  Divider,\n} from '@kitten/ui';\nimport { CalendarComponent } from '@kitten/ui/calendar/calendar.component';\n\ninterface State {\n  date: Date;\n}\n\ninterface ComponentProps {\n  withFooter?: boolean;\n}\n\ntype Props = ComponentProps & CalendarProps<Date>;\n\nexport class CalendarShowcase extends React.Component<Props, State> {\n\n  static defaultProps: Partial<Props> = {\n    withFooter: false,\n  };\n\n  private calendarRef: React.RefObject<CalendarComponent<Date>> = React.createRef();\n\n  public state: State = {\n    date: this.props.date,\n  };\n\n  private onSelect = (date: Date) => {\n    this.setState({ date });\n  };\n\n  private onTodayPress = (): void => {\n    this.calendarRef.current.scrollToToday();\n  };\n\n  private renderFooterElement = (): React.ReactElement<any> => {\n    return (\n      <React.Fragment>\n        <Divider style={styles.footerDivider}/>\n        <View style={styles.footerContainer}>\n          <Button onPress={this.onTodayPress}>\n            Today\n          </Button>\n        </View>\n      </React.Fragment>\n    );\n  };\n\n  private renderFooter = (): React.ReactElement<any> => {\n    const { withFooter } = this.props;\n\n    return withFooter && this.renderFooterElement();\n  };\n\n  public render(): CalendarElement<Date> {\n    return (\n      <Calendar\n        {...this.props}\n        ref={this.calendarRef}\n        date={this.state.date}\n        renderFooter={this.renderFooter}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  footerContainer: {\n    paddingHorizontal: 8,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  footerDivider: {\n    marginVertical: 12,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  DateService,\n  TranslationWidth,\n} from 'react-native-ui-kitten';\n// @ts-ignore\nimport _moment, {\n  default as _rollupMoment,\n  Moment,\n} from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\nexport class MomentDateService extends DateService<Moment> {\n\n  protected localeData: {\n    firstDayOfWeek: number,\n    defaultFormat: string,\n    months: { [key: string]: string[] },\n    days: { [key: string]: string[] },\n  };\n\n  constructor(locale: string = 'en') {\n    super();\n    this.setLocale(locale);\n  }\n\n  public setLocale(locale: string) {\n    super.setLocale(locale);\n    this.setMomentLocaleData(locale);\n  }\n\n  public addDay(date: Moment, days: number): Moment {\n    return this.clone(date).add({ days });\n  }\n\n  public addMonth(date: Moment, months: number): Moment {\n    return this.clone(date).add({ months });\n  }\n\n  public addYear(date: Moment, years: number): Moment {\n    return this.clone(date).add({ years });\n  }\n\n  public clone(date: Moment): Moment {\n    return date.clone().locale(this.locale);\n  }\n\n  public compareDates(date1: Moment, date2: Moment): number {\n    return this.getYear(date1) - this.getYear(date2) ||\n      this.getMonth(date1) - this.getMonth(date2) ||\n      this.getDate(date1) - this.getDate(date2);\n  }\n\n  public createDate(year: number, month: number, date: number): Moment {\n    return moment.utc([year, month, date]);\n  }\n\n  public format(date: Moment, format: string): string {\n    if (date) {\n      return date.format(format || this.localeData.defaultFormat);\n    }\n\n    return '';\n  }\n\n  public getDate(date: Moment): number {\n    return this.clone(date).date();\n  }\n\n  public getDayOfWeek(date: Moment): number {\n    return this.clone(date).day();\n  }\n\n  public getDayOfWeekNames(style: TranslationWidth = TranslationWidth.SHORT): string[] {\n    return this.localeData.days[style];\n  }\n\n  public getFirstDayOfWeek(): number {\n    return this.localeData.firstDayOfWeek;\n  }\n\n  public getMonth(date: Moment): number {\n    return this.clone(date).month();\n  }\n\n  public getMonthEnd(date: Moment): Moment {\n    return this.clone(date).endOf('month');\n  }\n\n  public getMonthName(date: Moment, style: TranslationWidth = TranslationWidth.SHORT): string {\n    const month: number = this.getMonth(date);\n\n    return this.getMonthNameByIndex(month, style);\n  }\n\n  public getMonthNameByIndex(month: number, style: TranslationWidth = TranslationWidth.SHORT): string {\n    return this.localeData.months[style][month];\n  }\n\n  public getMonthStart(date: Moment): Moment {\n    return this.clone(date).startOf('month');\n  }\n\n  public getNumberOfDaysInMonth(date: Moment): number {\n    return this.clone(date).daysInMonth();\n  }\n\n  public getYear(date: Moment): number {\n    return this.clone(date).year();\n  }\n\n  public getYearEnd(date: Moment): Moment {\n    return this.clone(date).endOf('year');\n  }\n\n  public getYearStart(date: Moment): Moment {\n    return this.clone(date).startOf('year');\n  }\n\n  public isSameDay(date1: Moment, date2: Moment): boolean {\n    return this.isSameMonth(date1, date2) && this.getDate(date1) === this.getDate(date2);\n  }\n\n  public isSameMonth(date1: Moment, date2: Moment): boolean {\n    return this.isSameYear(date1, date2) && this.getMonth(date1) === this.getMonth(date2);\n  }\n\n  public isSameYear(date1: Moment, date2: Moment): boolean {\n    return this.getYear(date1) === this.getYear(date2);\n  }\n\n  public isValidDateString(date: string, format: string): boolean {\n    return moment(date, format).isValid();\n  }\n\n  public parse(date: string, format: string): Moment {\n    return moment(date, format);\n  }\n\n  public today(): Moment {\n    return moment();\n  }\n\n  public getId(): string {\n    return 'moment';\n  }\n\n  protected setMomentLocaleData(locale: string) {\n    const momentLocaleData = moment.localeData(locale);\n\n    this.localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      defaultFormat: momentLocaleData.longDateFormat('L'),\n      months: {\n        [TranslationWidth.SHORT]: momentLocaleData.monthsShort(),\n        [TranslationWidth.LONG]: momentLocaleData.months(),\n      },\n      days: {\n        [TranslationWidth.SHORT]: momentLocaleData.weekdaysShort(),\n        [TranslationWidth.LONG]: momentLocaleData.weekdays(),\n      },\n    };\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  I18nConfig,\n  NativeDateService,\n} from 'react-native-ui-kitten';\n// @ts-ignore\nimport dateFnsParse, { default as rollupParse } from 'date-fns/parse';\n// @ts-ignore\nimport dateFnsFormat, { default as rollupFormat } from 'date-fns/format';\n\nconst parse = rollupParse || dateFnsParse;\nconst formatDate = rollupFormat || dateFnsFormat;\n\nexport interface DateFnsOptions {\n  format: string;\n  parseOptions: {};\n  formatOptions: {};\n}\n\nexport class DateFnsService extends NativeDateService {\n\n  protected options: Partial<DateFnsOptions> = {\n    format: `DD/MM/YYYY`,\n  };\n\n  constructor(locale: string = 'en', i18n?: I18nConfig, options?: DateFnsOptions) {\n    super(locale, i18n);\n    this.options = options || this.options;\n  }\n\n  public format(date: Date, format: string): string {\n    if (date) {\n      return formatDate(date, format || this.options.format, this.options.formatOptions);\n    }\n\n    return '';\n  }\n\n  public parse(date: string, format: string): Date {\n    // Parse format is not supported in current version of date-fns\n    return this.parseDate(date);\n  }\n\n  private parseDate(date: string): Date {\n    return parse(date);\n  }\n\n  public getId(): string {\n    return 'date-fns';\n  }\n}\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport { Text } from '@kitten/ui';\n\nexport const CalendarCustomItem = (date: Date, style: StyleType): React.ReactElement<ViewProps> => {\n\n  const value: number = 100 * date.getDate() + Math.pow(date.getDate(), 2);\n\n  return (\n    <View\n      style={[styles.container, style.container]}>\n      <Text style={style.text}>{`${date.getDate()}`}</Text>\n      <Text style={[style.text, styles.value]}>{`${value}$`}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: 'normal',\n  },\n});\n","import moment from 'moment';\nimport { CalendarViewModes } from '@kitten/ui';\nimport { MomentDateService } from '@ui-kitten/moment';\nimport { DateFnsService } from '@ui-kitten/date-fns';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from '../common/type';\nimport { CalendarCustomItem } from './calendarCustomItem.component';\n\nconst now: Date = new Date();\n\nconst defaultCalendar: ComponentShowcaseItem = {\n  props: {\n    min: new Date(now.getFullYear() - 12, 0, 1),\n    max: new Date(now.getFullYear() + 12, 0, 1),\n    withFooter: true,\n  },\n};\n\nconst momentCalendar: ComponentShowcaseItem = {\n  props: {\n    date: moment(),\n    dateService: new MomentDateService(),\n  },\n};\n\nconst dateFnsCalendar: ComponentShowcaseItem = {\n  props: {\n    date: now,\n    dateService: new DateFnsService(),\n  },\n};\n\nconst startViewCalendar: ComponentShowcaseItem = {\n  props: {\n    startView: CalendarViewModes.MONTH,\n  },\n};\n\nconst lowerBoundCalendar: ComponentShowcaseItem = {\n  props: {\n    min: now,\n    max: now,\n  },\n};\n\nconst higherBoundCalendar: ComponentShowcaseItem = {\n  props: {\n    min: new Date(now.getFullYear() - 12, 0, 1),\n    max: new Date(now.getFullYear() + 12, 0, 1),\n  },\n};\n\nconst boundingCalendar: ComponentShowcaseItem = {\n  props: {\n    ...defaultCalendar.props,\n    boundingMonth: true,\n  },\n};\n\nconst customItemCalendar: ComponentShowcaseItem = {\n  props: {\n    ...defaultCalendar.props,\n    renderDay: CalendarCustomItem,\n  },\n};\n\nconst customTitlesCalendar: ComponentShowcaseItem = {\n  props: {\n    ...defaultCalendar.props,\n    title: (date: Date): string => {\n      return 'MODE';\n    },\n    todayTitle: (date: Date): string => {\n      return 'TODAY';\n    },\n  },\n};\n\nconst filterCalendar: ComponentShowcaseItem = {\n  props: {\n    ...defaultCalendar.props,\n    filter: (date: Date): boolean => {\n      return date.getDay() !== 0 && date.getDay() !== 6;\n    },\n  },\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultCalendar,\n  ],\n};\n\nconst momentSection: ComponentShowcaseSection = {\n  title: 'Moment',\n  items: [\n    momentCalendar,\n  ],\n};\n\nconst dateFnsSection: ComponentShowcaseSection = {\n  title: 'Date FNS',\n  items: [\n    dateFnsCalendar,\n  ],\n};\n\nconst startViewSection: ComponentShowcaseSection = {\n  title: 'Start View',\n  items: [\n    startViewCalendar,\n  ],\n};\n\nconst lowerBoundedSection: ComponentShowcaseSection = {\n  title: 'Lower Bounds',\n  items: [\n    lowerBoundCalendar,\n  ],\n};\n\nconst higherBoundedSection: ComponentShowcaseSection = {\n  title: 'Higher Bounds',\n  items: [\n    higherBoundCalendar,\n  ],\n};\n\nconst boundingMonthSection: ComponentShowcaseSection = {\n  title: 'Bounding Month',\n  items: [\n    boundingCalendar,\n  ],\n};\n\nconst customItemSection: ComponentShowcaseSection = {\n  title: 'Custom Day',\n  items: [\n    customItemCalendar,\n  ],\n};\n\nconst customTitlesSection: ComponentShowcaseSection = {\n  title: 'Custom Titles',\n  items: [\n    customTitlesCalendar,\n  ],\n};\n\nconst filterSection: ComponentShowcaseSection = {\n  title: 'Filter',\n  items: [\n    filterCalendar,\n  ],\n};\n\nexport const calendarShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n    // momentSection,\n    // dateFnsSection,\n    // startViewSection,\n    // lowerBoundedSection,\n    // higherBoundedSection,\n    // boundingMonthSection,\n    // filterSection,\n    // customTitlesSection,\n  ],\n};\n","import React from 'react';\nimport { CalendarProps } from '@kitten/ui';\nimport { ShowcaseContainer } from '../common/showcase.container';\nimport { CalendarShowcase } from './calendarShowcase.component';\nimport { calendarShowcase } from './type';\n\nexport class CalendarContainer extends React.Component {\n\n  private renderItem = (props: CalendarProps<Date>): React.ReactElement<CalendarProps<Date>> => {\n    return (\n      <CalendarShowcase style={{flex: 1}} {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={calendarShowcase}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Input,\n  InputElement,\n  InputProps,\n} from '@kitten/ui';\n\nexport const InputShowcase = (props?: InputProps): InputElement => {\n  return (\n    <Input\n      {...props}\n      placeholder='Place your Text'\n    />\n  );\n};\n","import React from 'react';\nimport { StyleType } from '@kitten/theme';\nimport { Icon } from '@kitten/ui';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\n\nconst defaultInput: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst disabledInput: ComponentShowcaseItem = {\n  title: 'Disabled',\n  props: {\n    disabled: true,\n  },\n};\n\nconst iconInput: ComponentShowcaseItem = {\n  title: 'Icon',\n  props: {\n    icon: (style: StyleType) => (\n      <Icon name='star' {...style} />\n    ),\n  },\n};\n\nconst labelInput: ComponentShowcaseItem = {\n  title: 'Label',\n  props: {\n    label: 'Place your text',\n  },\n};\n\nconst captionInput: ComponentShowcaseItem = {\n  title: 'Caption',\n  props: {\n    caption: 'Place your text',\n  },\n};\n\nconst captionIconInput: ComponentShowcaseItem = {\n  title: 'Caption Icon',\n  props: {\n    caption: 'Place your text',\n    captionIcon: (style: StyleType) => (\n      <Icon name='star' {...style} />\n    ),\n  },\n};\n\nconst stateSection: ComponentShowcaseSection = {\n  title: 'State',\n  items: [\n    defaultInput,\n    disabledInput,\n  ],\n};\n\nconst accessoriesSection: ComponentShowcaseSection = {\n  title: 'Accessories',\n  items: [\n    iconInput,\n    labelInput,\n    captionInput,\n    captionIconInput,\n  ],\n};\n\nexport const inputShowcase: ComponentShowcase = {\n  sections: [\n    stateSection,\n    accessoriesSection,\n  ],\n};\n\nexport const inputSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n  {\n    propertyName: 'size',\n    value: 'small',\n  },\n  {\n    propertyName: 'size',\n    value: 'medium',\n  },\n  {\n    propertyName: 'size',\n    value: 'large',\n  },\n];\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  InputElement,\n  InputProps,\n} from '@kitten/ui';\nimport { InputShowcase } from './inputShowcase.component';\nimport {\n  inputSettings,\n  inputShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class InputContainer extends React.Component {\n\n  private renderItem = (props: InputProps): InputElement => {\n    return (\n      <InputShowcase\n        style={styles.component}\n        {...props}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={inputShowcase}\n        settings={inputSettings}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport {\n  Layout,\n  LayoutElement,\n  LayoutProps,\n} from '@kitten/ui';\n\nexport const LayoutShowcase = (props?: LayoutProps): LayoutElement => {\n  return (\n    <Layout {...props}/>\n  );\n};\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst defaultLayout: ComponentShowcaseItem = {\n  props: {},\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultLayout,\n  ],\n};\n\nexport const layoutShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n  ],\n};\n\nexport const layoutSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'level',\n    value: '1',\n    description: 'level 1',\n  },\n  {\n    propertyName: 'level',\n    value: '2',\n    description: 'level 2',\n  },\n  {\n    propertyName: 'level',\n    value: '3',\n    description: 'level 3',\n  },\n  {\n    propertyName: 'level',\n    value: '4',\n    description: 'level 4',\n  },\n];\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  LayoutElement,\n  LayoutProps,\n} from '@kitten/ui';\nimport { LayoutShowcase } from './layoutShowcase.component';\nimport {\n  layoutShowcase,\n  layoutSettings,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class LayoutContainer extends React.Component {\n\n  private renderItem = (props: LayoutProps): LayoutElement => {\n    return (\n      <LayoutShowcase\n        {...props}\n        style={[styles.component, props.style]}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={layoutShowcase}\n        settings={layoutSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n    height: 256,\n  },\n});\n\n","import React from 'react';\nimport {\n  ListProps,\n  List,\n  ListElement,\n} from '@kitten/ui';\n\nexport const ListShowcase = (props?: ListProps): ListElement => {\n  return (\n    <List {...props}/>\n  );\n};\n","import React from 'react';\nimport {\n  Image,\n  ImageProps,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport {\n  CheckBox,\n  CheckBoxProps,\n  Icon,\n  ListItem,\n  ListItemElement,\n  ListItemProps,\n} from '@kitten/ui';\n\nexport const ListItemShowcase = (props?: ListItemProps): ListItemElement => {\n  return (\n    <ListItem {...props}/>\n  );\n};\n\nexport const ListItemIconShowcase = (props?: ListItemProps): ListItemElement => {\n\n  const IconElement = (style: StyleType, index: number): React.ReactElement<ImageProps> => (\n    <Icon name='star' {...style}/>\n  );\n\n  return (\n    <ListItem {...props} icon={IconElement}/>\n  );\n};\n\nexport const ListItemAccessoryShowcase = (props?: ListItemProps): ListItemElement => {\n\n  const AccessoryElement = (style: StyleType, index: number): React.ReactElement<CheckBoxProps> => (\n    <CheckBox checked={index % 2 === 0}/>\n  );\n\n  return (\n    <ListItem {...props} accessory={AccessoryElement}/>\n  );\n};\n\nexport const ListItemIconAccessoryShowcase = (props?: ListItemProps): ListItemElement => {\n\n  const IconElement = (style: StyleType, index: number): React.ReactElement<ImageProps> => (\n    <Icon name='star' {...style}/>\n  );\n\n  const AccessoryElement = (style: StyleType, index: number): React.ReactElement<CheckBoxProps> => (\n    <CheckBox checked={index % 2 === 0}/>\n  );\n\n  return (\n    <ListItem {...props} icon={IconElement} accessory={AccessoryElement}/>\n  );\n};\n","import React from 'react';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\nimport { ListRenderItemInfo } from 'react-native';\nimport { ListItemProps } from '@kitten/ui';\nimport {\n  ListItemAccessoryShowcase,\n  ListItemIconAccessoryShowcase,\n  ListItemIconShowcase,\n  ListItemShowcase,\n} from './listItemShowcase.component';\n\ninterface ListData {\n  title: string;\n  description: string;\n}\n\nconst data: ListData[] = new Array(42).fill(  {\n  title: 'Title',\n  description: 'Description',\n});\n\nconst renderListItem = (info: ListRenderItemInfo<ListData>): React.ReactElement<ListItemProps> => {\n  return (\n    <ListItemShowcase {...info.item}/>\n  );\n};\n\nconst renderIconListItem = (info: ListRenderItemInfo<ListData>): React.ReactElement<ListItemProps> => {\n  return (\n    <ListItemIconShowcase {...info.item}/>\n  );\n};\n\nconst renderAccessoryListItem = (info: ListRenderItemInfo<ListData>): React.ReactElement<ListItemProps> => {\n  return (\n    <ListItemAccessoryShowcase {...info.item}/>\n  );\n};\n\nconst renderIconAccessoryListItem = (info: ListRenderItemInfo<ListData>): React.ReactElement<ListItemProps> => {\n  return (\n    <ListItemIconAccessoryShowcase {...info.item}/>\n  );\n};\n\nexport const defaultList: ComponentShowcaseItem = {\n  props: {\n    data: data,\n    renderItem: renderListItem,\n  },\n};\n\nexport const defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultList,\n  ],\n};\n\nexport const listShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n  ],\n};\n\nexport const listSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'renderItem',\n    value: renderIconListItem,\n    description: 'icon',\n  },\n  {\n    propertyName: 'renderItem',\n    value: renderAccessoryListItem,\n    description: 'accessory',\n  },\n  {\n    propertyName: 'renderItem',\n    value: renderIconAccessoryListItem,\n    description: 'icon accessory',\n  },\n];\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ListElement,\n  ListProps,\n} from '@kitten/ui';\nimport { ListShowcase } from './listShowcase';\nimport {\n  listSettings,\n  listShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class ListContainer extends React.Component {\n\n  private renderItem = (props: ListProps): ListElement => {\n    return (\n      <ListShowcase\n        {...props}\n        style={[styles.component, props.style]}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={listShowcase}\n        settings={listSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n  },\n});\n\n","import React from 'react';\nimport {\n  Menu,\n  MenuProps,\n  MenuElement,\n} from '@kitten/ui';\n\ninterface State {\n  selectedIndex: number;\n}\n\nexport class MenuShowcase extends React.Component<MenuProps, State> {\n\n  public state: State = {\n    selectedIndex: null,\n  };\n\n  private onSelect = (selectedIndex: number): void => {\n    this.setState({ selectedIndex });\n  };\n\n  public render(): MenuElement {\n    return (\n      <Menu\n        {...this.props}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Image,\n  ImageProps,\n} from 'react-native';\nimport { MenuItemType } from '@kitten/ui';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\nimport { StyleType } from '@kitten/theme';\n\nconst Icon = (style: StyleType): React.ReactElement<ImageProps> => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}\n  />\n);\n\nconst defaultMenuItems: MenuItemType[] = [\n  { title: 'Item 1' },\n  { title: 'Item 2' },\n  { title: 'Item 3' },\n];\n\nconst withIconMenuItems: MenuItemType[] = [\n  {\n    title: 'Item 1',\n    icon: Icon,\n  },\n  {\n    title: 'Item 2',\n    icon: Icon,\n  },\n  {\n    title: 'Item 3',\n    icon: Icon,\n  },\n];\n\nconst withDisabledItemMenuItems: MenuItemType[] = [\n  {\n    title: 'Item 1',\n    icon: Icon,\n  },\n  {\n    title: 'Item 2',\n    icon: Icon,\n    disabled: true,\n  },\n  {\n    title: 'Item 3',\n    icon: Icon,\n  },\n];\n\nconst withGroupsMenuItems: MenuItemType[] = [\n  {\n    title: 'Item 1',\n    icon: Icon,\n  },\n  {\n    title: 'Item 2',\n    icon: Icon,\n    subItems: [\n      {\n        title: 'Item 21',\n        icon: Icon,\n        disabled: true,\n      },\n      {\n        title: 'Item 22',\n        icon: Icon,\n      },\n      {\n        title: 'Item 23',\n        icon: Icon,\n      },\n    ],\n  },\n  {\n    title: 'Item 3',\n    icon: Icon,\n  },\n];\n\nconst defaultMenu: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {\n    data: defaultMenuItems,\n  },\n};\n\nconst withIconsMenu: ComponentShowcaseItem = {\n  title: 'Icon',\n  props: {\n    data: withIconMenuItems,\n  },\n};\n\nconst withDisabledItemMenu: ComponentShowcaseItem = {\n  title: 'Disabled Item',\n  props: {\n    data: withDisabledItemMenuItems,\n  },\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultMenu,\n    withIconsMenu,\n    withDisabledItemMenu,\n  ],\n};\n\nconst withGroupsMenu: ComponentShowcaseItem = {\n  title: 'Groups',\n  props: {\n    data: withGroupsMenuItems,\n  },\n};\n\nconst withGroupsSection: ComponentShowcaseSection = {\n  title: 'With Groups',\n  items: [\n    withGroupsMenu,\n  ],\n};\n\nexport const menuShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n    withGroupsSection,\n  ],\n};\n\nexport const menuSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'appearance',\n    value: 'default',\n  },\n  {\n    propertyName: 'appearance',\n    value: 'noDivider',\n  },\n];\n","import React from 'react';\nimport {\n  MenuProps,\n  MenuElement,\n} from '@kitten/ui';\nimport { ShowcaseContainer } from '../common/showcase.container';\nimport { MenuShowcase } from './menuShowcase.component';\nimport {\n  menuShowcase,\n  menuSettings,\n} from './type';\n\nexport class MenuContainer extends React.Component {\n\n  private renderItem = (props: MenuProps): MenuElement => {\n    return (\n      <MenuShowcase{...props} />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={menuShowcase}\n        settings={menuSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n","import React from 'react';\nimport { ViewProps } from 'react-native';\nimport {\n  Button,\n  Popover,\n  PopoverElement,\n  PopoverProps,\n  Text,\n} from '@kitten/ui';\n\ninterface State {\n  popoverVisible: boolean;\n}\n\nexport class PopoverShowcase extends React.Component<PopoverProps, State> {\n\n  public state: State = {\n    popoverVisible: false,\n  };\n\n  private togglePopover = () => {\n    const popoverVisible: boolean = !this.state.popoverVisible;\n\n    this.setState({ popoverVisible });\n  };\n\n  private renderPopoverContent = (): React.ReactElement<ViewProps> => {\n    return (\n      <Text>\n        Hi! I'm Popover!\n      </Text>\n    );\n  };\n\n  public render(): PopoverElement {\n    return (\n      <Popover\n        {...this.props}\n        visible={this.state.popoverVisible}\n        content={this.renderPopoverContent()}\n        onBackdropPress={this.togglePopover}>\n        <Button onPress={this.togglePopover}>SHOW POPOVER</Button>\n      </Popover>\n    );\n  }\n}\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst defaultPopover: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  items: [\n    defaultPopover,\n  ],\n};\n\nexport const popoverShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n  ],\n};\n\nexport const popoverSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'placement',\n    value: 'left',\n  },\n  {\n    propertyName: 'placement',\n    value: 'left start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'left end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom end',\n  },\n];\n","import React from 'react';\nimport {\n  PopoverElement,\n  PopoverProps,\n} from '@kitten/ui';\nimport { PopoverShowcase } from './popoverShowcase.component';\nimport {\n  popoverShowcase,\n  popoverSettings,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class PopoverContainer extends React.Component {\n\n  private renderItem = (props: PopoverProps): PopoverElement => {\n    return (\n      <PopoverShowcase {...props} />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={popoverShowcase}\n        settings={popoverSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\n","import React from 'react';\nimport {\n  Radio,\n  RadioElement,\n  RadioProps,\n} from '@kitten/ui';\n\ninterface RadioShowcaseComponentState {\n  checked: boolean;\n}\n\nclass RadioShowcaseComponent extends React.Component<RadioProps, RadioShowcaseComponentState> {\n\n  static defaultProps: RadioProps = {\n    checked: true,\n  };\n\n  public state: RadioShowcaseComponentState = {\n    checked: this.props.checked,\n  };\n\n  private onChange = (checked: boolean) => {\n    this.setState({ checked });\n  };\n\n  public render(): RadioElement {\n    return (\n      <Radio\n        {...this.props}\n        checked={this.state.checked}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nexport const RadioShowcase = (props?: RadioProps): RadioElement => {\n  return (\n    <RadioShowcaseComponent {...props}/>\n  );\n};\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst checkedRadio: ComponentShowcaseItem = {\n  title: 'Checked',\n  props: {\n    checked: true,\n  },\n};\n\nconst uncheckedRadio: ComponentShowcaseItem = {\n  title: 'Unchecked',\n  props: {\n    checked: false,\n  },\n};\n\nconst disabledCheckedRadio: ComponentShowcaseItem = {\n  title: 'Disabled Checked',\n  props: {\n    checked: true,\n    disabled: true,\n  },\n};\n\nconst disabledUncheckedRadio: ComponentShowcaseItem = {\n  title: 'Disabled Unchecked',\n  props: {\n    checked: false,\n    disabled: true,\n  },\n};\n\nconst textRadio: ComponentShowcaseItem = {\n  title: 'Text',\n  props: {\n    text: 'Place your text',\n  },\n};\n\nconst textDisabledRadio: ComponentShowcaseItem = {\n  title: 'Text Disabled',\n  props: {\n    disabled: true,\n    text: 'Place your text',\n  },\n};\n\nconst stateSection: ComponentShowcaseSection = {\n  title: 'State',\n  items: [\n    checkedRadio,\n    uncheckedRadio,\n    disabledCheckedRadio,\n    disabledUncheckedRadio,\n  ],\n};\n\nconst accessoriesSection: ComponentShowcaseSection = {\n  title: 'Accessories',\n  items: [\n    textRadio,\n    textDisabledRadio,\n  ],\n};\n\nexport const radioShowcase: ComponentShowcase = {\n  sections: [\n    stateSection,\n    accessoriesSection,\n  ],\n};\n\nexport const radioSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n  {\n    propertyName: 'status',\n    value: 'control',\n  },\n  {\n    propertyName: 'status',\n    value: 'basic',\n  },\n  {\n    propertyName: 'checked',\n    value: true,\n  },\n];\n","import React from 'react';\nimport {\n  RadioElement,\n  RadioProps,\n} from '@kitten/ui';\nimport { RadioShowcase } from './radioShowcase.component';\nimport {\n  radioSettings,\n  radioShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class RadioContainer extends React.Component {\n\n  private renderItem = (props: RadioProps): RadioElement => {\n    return (\n      <RadioShowcase {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={radioShowcase}\n        settings={radioSettings}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Radio,\n  RadioGroup,\n  RadioGroupElement,\n  RadioGroupProps,\n} from '@kitten/ui';\n\ninterface State {\n  selectedIndex: number;\n}\n\nexport class RadioGroupShowcase extends React.Component<RadioGroupProps, State> {\n\n  public state: State = {\n    selectedIndex: 0,\n  };\n\n  private onChange = (selectedIndex: number) => {\n    this.setState({ selectedIndex });\n  };\n\n  public render(): RadioGroupElement {\n    return (\n      <RadioGroup\n        selectedIndex={this.state.selectedIndex}\n        onChange={this.onChange}>\n        <Radio text='Option 1'/>\n        <Radio text='Option 2'/>\n        <Radio text='Option 3'/>\n      </RadioGroup>\n    );\n  }\n}\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from '../common/type';\n\nconst filledButtonGroup: ComponentShowcaseItem = {\n  title: 'Filled',\n  props: {\n    appearance: 'filled',\n  },\n};\n\nconst outlineButtonGroup: ComponentShowcaseItem = {\n  title: 'Outline',\n  props: {\n    appearance: 'outline',\n  },\n};\n\nconst giantButtonGroup: ComponentShowcaseItem = {\n  title: 'Giant',\n  props: {\n    size: 'giant',\n  },\n};\n\nconst largeButtonGroup: ComponentShowcaseItem = {\n  title: 'Large',\n  props: {\n    size: 'large',\n  },\n};\n\nconst mediumButtonGroup: ComponentShowcaseItem = {\n  title: 'Medium',\n  props: {\n    size: 'medium',\n  },\n};\n\nconst smallButtonGroup: ComponentShowcaseItem = {\n  title: 'Small',\n  props: {\n    size: 'small',\n  },\n};\n\nconst tinyButtonGroup: ComponentShowcaseItem = {\n  title: 'Tiny',\n  props: {\n    size: 'tiny',\n  },\n};\n\nconst appearanceSection: ComponentShowcaseSection = {\n  title: 'Appearance',\n  items: [\n    filledButtonGroup,\n    outlineButtonGroup,\n  ],\n};\n\nexport const radioGroupShowcase: ComponentShowcase = {\n  sections: [\n    appearanceSection,\n  ],\n};\n","import React from 'react';\nimport {\n  RadioGroupElement,\n  RadioGroupProps,\n} from '@kitten/ui';\nimport { RadioGroupShowcase } from './radioGroupShowcase.component';\nimport { radioGroupShowcase } from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class RadioGroupContainer extends React.Component {\n\n  private renderItem = (props: RadioGroupProps): RadioGroupElement => {\n    return (\n      <RadioGroupShowcase {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={radioGroupShowcase}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  Spinner,\n  SpinnerProps,\n  SpinnerElement,\n} from '@kitten/ui';\n\nexport const SpinnerShowcase = (props?: SpinnerProps): SpinnerElement => {\n  if (props.status === 'white') {\n    return WhiteSpinner(props);\n  } else {\n    return DefaultSpinner(props);\n  }\n};\n\nconst DefaultSpinner = (props?: SpinnerProps): SpinnerElement => {\n  return (\n    <Spinner {...props} />\n  );\n};\n\nconst WhiteSpinner = (props?: SpinnerProps): React.ReactElement<ViewProps> => {\n  return (\n    <View style={styles.blackSpinnerContainer}>\n      <Spinner {...props} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  blackSpinnerContainer: {\n    width: 40,\n    height: 40,\n    backgroundColor: '#7f7e82',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst giantSpinner: ComponentShowcaseItem = {\n  title: 'Giant',\n  props: {\n    size: 'giant',\n  },\n};\n\nconst largeSpinner: ComponentShowcaseItem = {\n  title: 'Large',\n  props: {\n    size: 'large',\n  },\n};\n\nconst mediumSpinner: ComponentShowcaseItem = {\n  title: 'Medium',\n  props: {\n    size: 'medium',\n  },\n};\n\nconst smallSpinner: ComponentShowcaseItem = {\n  title: 'Small',\n  props: {\n    size: 'small',\n  },\n};\n\nconst tinySpinner: ComponentShowcaseItem = {\n  title: 'Tiny',\n  props: {\n    size: 'tiny',\n  },\n};\n\nconst primarySpinner: ComponentShowcaseItem = {\n  title: 'Primary',\n  props: {\n    status: 'primary',\n  },\n};\n\nconst successSpinner: ComponentShowcaseItem = {\n  title: 'Success',\n  props: {\n    status: 'success',\n  },\n};\n\nconst infoSpinner: ComponentShowcaseItem = {\n  title: 'Info',\n  props: {\n    status: 'info',\n  },\n};\n\nconst warningSpinner: ComponentShowcaseItem = {\n  title: 'Warning',\n  props: {\n    status: 'warning',\n  },\n};\n\nconst dangerSpinner: ComponentShowcaseItem = {\n  title: 'Danger',\n  props: {\n    status: 'danger',\n  },\n};\n\nconst alternativeSpinner: ComponentShowcaseItem = {\n  title: 'Alternative',\n  props: {\n    status: 'alternative',\n  },\n};\n\nconst sizeSection: ComponentShowcaseSection = {\n  title: 'Size',\n  items: [\n    giantSpinner,\n    largeSpinner,\n    mediumSpinner,\n    smallSpinner,\n    tinySpinner,\n  ],\n};\n\nconst statusSection: ComponentShowcaseSection = {\n  title: 'Status',\n  items: [\n    primarySpinner,\n    successSpinner,\n    infoSpinner,\n    warningSpinner,\n    dangerSpinner,\n    alternativeSpinner,\n  ],\n};\n\nexport const spinnerShowcase: ComponentShowcase = {\n  sections: [\n    sizeSection,\n    statusSection,\n  ],\n};\n\nexport const spinnerSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'animating',\n    value: true,\n  },\n  {\n    propertyName: 'animating',\n    value: false,\n  },\n];\n\n","import React from 'react';\nimport {\n  SpinnerProps,\n  SpinnerElement,\n} from '@kitten/ui';\nimport { SpinnerShowcase } from './spinnerShowcase.component';\nimport {\n  spinnerSettings,\n  spinnerShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class SpinnerContainer extends React.Component {\n\n  private renderItem = (props: SpinnerProps): SpinnerElement => {\n    return (\n      <SpinnerShowcase {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={spinnerShowcase}\n        settings={spinnerSettings}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  TabView,\n  TabViewElement,\n  TabViewProps,\n} from '@kitten/ui';\n\ninterface State {\n  selectedIndex: number;\n}\n\nexport class TabViewShowcase extends React.Component<TabViewProps, State> {\n\n  public state: State = {\n    selectedIndex: 0,\n  };\n\n  private onSelect = (selectedIndex: number) => {\n    this.setState({ selectedIndex });\n  };\n\n  public render(): TabViewElement {\n    return (\n      <TabView\n        {...this.props}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Image,\n  ImageProps,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport {\n  Tab,\n  Text,\n  Layout,\n} from '@kitten/ui';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from '../common/type';\n\nconst Icon = (style: StyleType): React.ReactElement<ImageProps> => {\n  return (\n    <Image source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}/>\n  );\n};\n\nconst titleBottomNavigation: ComponentShowcaseItem = {\n  props: {\n    children: [\n      <Tab title='Tab 1'>\n        <Layout>\n          <Text>Tab 1</Text>\n        </Layout>\n      </Tab>,\n      <Tab title='Tab 2'>\n        <Layout>\n          <Text>Tab 2</Text>\n        </Layout>\n      </Tab>,\n      <Tab title='Tab 3'>\n        <Layout>\n          <Text>Tab 3</Text>\n        </Layout>\n      </Tab>,\n    ],\n  },\n};\n\nconst iconBottomNavigation: ComponentShowcaseItem = {\n  props: {\n    children: [\n      <Tab icon={Icon}>\n        <Layout>\n          <Text>Tab 1</Text>\n        </Layout>\n      </Tab>,\n      <Tab icon={Icon}>\n        <Layout>\n          <Text>Tab 2</Text>\n        </Layout>\n      </Tab>,\n      <Tab icon={Icon}>\n        <Layout>\n          <Text>Tab 3</Text>\n        </Layout>\n      </Tab>,\n    ],\n  },\n};\n\nconst iconTitleBottomNavigation: ComponentShowcaseItem = {\n  props: {\n    children: [\n      <Tab icon={Icon} title='Tab 1'>\n        <Layout>\n          <Text>Tab 1</Text>\n        </Layout>\n      </Tab>,\n      <Tab icon={Icon} title='Tab 2'>\n        <Layout>\n          <Text>Tab 2</Text>\n        </Layout>\n      </Tab>,\n      <Tab icon={Icon} title='Tab 3'>\n        <Layout>\n          <Text>Tab 3</Text>\n        </Layout>\n      </Tab>,\n    ],\n  },\n};\n\nconst titleSection: ComponentShowcaseSection = {\n  title: 'Title',\n  items: [\n    titleBottomNavigation,\n  ],\n};\n\nconst iconSection: ComponentShowcaseSection = {\n  title: 'Icon',\n  items: [\n    iconBottomNavigation,\n  ],\n};\n\nconst iconTitleSection: ComponentShowcaseSection = {\n  title: 'Icon Title',\n  items: [\n    iconTitleBottomNavigation,\n  ],\n};\n\nexport const tabViewShowcase: ComponentShowcase = {\n  sections: [\n    titleSection,\n    iconSection,\n    iconTitleSection,\n  ],\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  TabViewElement,\n  TabViewProps,\n} from '@kitten/ui';\nimport { TabViewShowcase } from './tabViewShowcase.component';\nimport { tabViewShowcase } from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class TabViewContainer extends React.Component {\n\n  private renderItem = (props: TabViewProps): TabViewElement => {\n    return (\n      <TabViewShowcase\n        {...props}\n        style={[styles.component, props.style]}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={tabViewShowcase}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n  },\n});\n\n","import React from 'react';\nimport {\n  Button,\n  Tooltip,\n  TooltipElement,\n  TooltipProps,\n} from '@kitten/ui';\n\ninterface State {\n  tooltipVisible: boolean;\n}\n\nexport class TooltipShowcase extends React.Component<TooltipProps, State> {\n\n  public state: State = {\n    tooltipVisible: false,\n  };\n\n  private toggleTooltip = () => {\n    const tooltipVisible: boolean = !this.state.tooltipVisible;\n\n    this.setState({ tooltipVisible });\n  };\n\n  public render(): TooltipElement {\n    return (\n      <Tooltip\n        {...this.props}\n        visible={this.state.tooltipVisible}\n        text='Hi! I am Tooltip!'\n        onBackdropPress={this.toggleTooltip}>\n        <Button onPress={this.toggleTooltip}>SHOW TOOLTIP</Button>\n      </Tooltip>\n    );\n  }\n}\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst defaultTooltip: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  items: [\n    defaultTooltip,\n  ],\n};\n\nexport const tooltipShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n  ],\n};\n\nexport const tooltipSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'placement',\n    value: 'left',\n  },\n  {\n    propertyName: 'placement',\n    value: 'left start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'left end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom end',\n  },\n];\n","import React from 'react';\nimport {\n  TooltipElement,\n  TooltipProps,\n} from '@kitten/ui';\nimport { TooltipShowcase } from './tooltipShowcase.component';\nimport {\n  tooltipShowcase,\n  tooltipSettings,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class TooltipContainer extends React.Component {\n\n  private renderItem = (props: TooltipProps): TooltipElement => {\n    return (\n      <TooltipShowcase {...props} />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={tooltipShowcase}\n        settings={tooltipSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\n","import React from 'react';\nimport {\n  Text,\n  TextElement,\n  TextProps,\n} from '@kitten/ui';\n\nexport const TextShowcase = (props?: TextProps): TextElement => {\n  return (\n    <Text\n      {...props}>\n      Text\n    </Text>\n  );\n};\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst h1Text: ComponentShowcaseItem = {\n  title: 'H1 Headline',\n  props: {\n    category: 'h1',\n  },\n};\n\nconst h2Text: ComponentShowcaseItem = {\n  title: 'H2 Headline',\n  props: {\n    category: 'h2',\n  },\n};\n\nconst h3Text: ComponentShowcaseItem = {\n  title: 'H3 Headline',\n  props: {\n    category: 'h3',\n  },\n};\n\nconst h4Text: ComponentShowcaseItem = {\n  title: 'H4 Headline',\n  props: {\n    category: 'h4',\n  },\n};\n\nconst h5Text: ComponentShowcaseItem = {\n  title: 'H5 Headline',\n  props: {\n    category: 'h5',\n  },\n};\n\nconst h6Text: ComponentShowcaseItem = {\n  title: 'H6 Headline',\n  props: {\n    category: 'h6',\n  },\n};\n\nconst s1Text: ComponentShowcaseItem = {\n  title: 'S1 Subtitle',\n  props: {\n    category: 's1',\n  },\n};\n\nconst s2Text: ComponentShowcaseItem = {\n  title: 'S2 Subtitle',\n  props: {\n    category: 's2',\n  },\n};\n\nconst p1Text: ComponentShowcaseItem = {\n  title: 'P1 Paragraph',\n  props: {\n    category: 'p1',\n  },\n};\n\nconst p2Text: ComponentShowcaseItem = {\n  title: 'P2 Paragraph',\n  props: {\n    category: 'p2',\n  },\n};\n\nconst c1Text: ComponentShowcaseItem = {\n  title: 'C1 Caption',\n  props: {\n    category: 'c1',\n  },\n};\n\nconst c2Text: ComponentShowcaseItem = {\n  title: 'C2 Caption',\n  props: {\n    category: 'c2',\n  },\n};\n\nconst labelText: ComponentShowcaseItem = {\n  title: 'Label',\n  props: {\n    category: 'label',\n  },\n};\n\nconst categorySection: ComponentShowcaseSection = {\n  title: 'Category',\n  items: [\n    h1Text,\n    h2Text,\n    h3Text,\n    h4Text,\n    h5Text,\n    h6Text,\n    s1Text,\n    s2Text,\n    p1Text,\n    p2Text,\n    c1Text,\n    c2Text,\n    labelText,\n  ],\n};\n\nexport const textShowcase: ComponentShowcase = {\n  sections: [\n    categorySection,\n  ],\n};\n\nexport const textSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'appearance',\n    value: 'alternative',\n  },\n  {\n    propertyName: 'appearance',\n    value: 'hint',\n  },\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n];\n","import React from 'react';\nimport {\n  TextElement,\n  TextProps,\n} from '@kitten/ui';\nimport { TextShowcase } from './textShowcase.component';\nimport {\n  textSettings,\n  textShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class TextContainer extends React.Component {\n\n  private renderItem = (props: TextProps): TextElement => {\n    return (\n      <TextShowcase {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={textShowcase}\n        settings={textSettings}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Toggle,\n  ToggleElement,\n  ToggleProps,\n} from '@kitten/ui';\n\ninterface ToggleShowcaseComponentState {\n  checked: boolean;\n}\n\nclass ToggleShowcaseComponent extends React.Component<ToggleProps, ToggleShowcaseComponentState> {\n\n  static defaultProps: ToggleProps = {\n    checked: true,\n  };\n\n  public state: ToggleShowcaseComponentState = {\n    checked: this.props.checked,\n  };\n\n  private onChange = (checked: boolean) => {\n    this.setState({ checked });\n  };\n\n  public render(): React.ReactElement<ToggleProps> {\n    return (\n      <Toggle\n        {...this.props}\n        checked={this.state.checked}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nexport const ToggleShowcase = (props?: ToggleProps): ToggleElement => {\n  return (\n    <ToggleShowcaseComponent {...props}/>\n  );\n};\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst leftTitleToggle: ComponentShowcaseItem = {\n  title: 'Right',\n  props: {\n    text: 'Place your text',\n  },\n};\n\nconst rightTitleToggle: ComponentShowcaseItem = {\n  title: 'Left',\n  props: {\n    style: { flexDirection: 'row-reverse' },\n    text: 'Place your text',\n  },\n};\n\nconst checkedToggle: ComponentShowcaseItem = {\n  title: 'Checked',\n  props: {\n    checked: true,\n  },\n};\n\nconst uncheckedToggle: ComponentShowcaseItem = {\n  title: 'Unchecked',\n  props: {\n    checked: false,\n  },\n};\n\nconst disabledUncheckedToggle: ComponentShowcaseItem = {\n  title: 'Disabled Unchecked',\n  props: {\n    checked: false,\n    disabled: true,\n  },\n};\n\nconst disabledCheckedToggle: ComponentShowcaseItem = {\n  title: 'Disabled Checked',\n  props: {\n    checked: true,\n    disabled: true,\n  },\n};\n\nconst titleSection: ComponentShowcaseSection = {\n  title: 'Title',\n  items: [\n    leftTitleToggle,\n    rightTitleToggle,\n  ],\n};\n\nconst stateSection: ComponentShowcaseSection = {\n  title: 'State',\n  items: [\n    checkedToggle,\n    uncheckedToggle,\n    disabledCheckedToggle,\n    disabledUncheckedToggle,\n  ],\n};\n\nexport const toggleShowcase: ComponentShowcase = {\n  sections: [\n    stateSection,\n    titleSection,\n  ],\n};\n\nexport const toggleSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n  {\n    propertyName: 'status',\n    value: 'control',\n  },\n  {\n    propertyName: 'status',\n    value: 'basic',\n  },\n];\n","import React from 'react';\nimport {\n  ToggleElement,\n  ToggleProps,\n} from '@kitten/ui';\nimport { ToggleShowcase } from './toggleShowcase.component';\nimport {\n  toggleSettings,\n  toggleShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class ToggleContainer extends React.Component {\n\n  private renderItem = (props: ToggleProps): ToggleElement => {\n    return (\n      <ToggleShowcase {...props} />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={toggleShowcase}\n        settings={toggleSettings}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Image,\n  ImageProps,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport {\n  Icon,\n  TopNavigationAction,\n} from '@kitten/ui';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst RightControlIcon = (style: StyleType): React.ReactElement<ImageProps> => {\n  return (\n    <Icon name='star'{...style} />\n  );\n};\n\nconst rightControlsTopNavigation: ComponentShowcaseItem = {\n  props: {\n    title: 'Title',\n    subtitle: 'Subtitle',\n    leftControl: <TopNavigationAction icon={RightControlIcon}/>,\n    rightControls: [\n      <TopNavigationAction icon={RightControlIcon}/>,\n      <TopNavigationAction icon={RightControlIcon}/>,\n    ],\n  },\n};\n\nconst leftControlTopNavigation: ComponentShowcaseItem = {\n  props: {\n    title: 'Title',\n    subtitle: 'Subtitle',\n    leftControl: <TopNavigationAction icon={RightControlIcon}/>,\n  },\n};\n\nconst subtitleTopNavigation: ComponentShowcaseItem = {\n  props: {\n    title: 'Title',\n    subtitle: 'Subtitle',\n  },\n};\n\nconst titleTopNavigation: ComponentShowcaseItem = {\n  props: {\n    title: 'Title',\n  },\n};\n\nconst rightControlsSection: ComponentShowcaseSection = {\n  title: 'Right Controls',\n  items: [\n    rightControlsTopNavigation,\n  ],\n};\n\nconst leftControlSection: ComponentShowcaseSection = {\n  title: 'Left Control',\n  items: [\n    leftControlTopNavigation,\n  ],\n};\n\nconst subtitleSection: ComponentShowcaseSection = {\n  title: 'Subtitle',\n  items: [\n    subtitleTopNavigation,\n  ],\n};\n\nconst titleSection: ComponentShowcaseSection = {\n  title: 'Title',\n  items: [\n    titleTopNavigation,\n  ],\n};\n\nexport const topNavigationShowcase: ComponentShowcase = {\n  sections: [\n    titleSection,\n    subtitleSection,\n    leftControlSection,\n    rightControlsSection,\n  ],\n};\n\nexport const topNavigationSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'appearance',\n    value: 'default',\n  },\n  {\n    propertyName: 'appearance',\n    value: 'control',\n  },\n  {\n    propertyName: 'alignment',\n    value: 'start',\n  },\n  {\n    propertyName: 'alignment',\n    value: 'center',\n  },\n];\n","import React from 'react';\nimport {\n  TopNavigation,\n  TopNavigationElement,\n  TopNavigationProps,\n} from '@kitten/ui';\n\nexport const TopNavigationShowcase = (props?: TopNavigationProps): TopNavigationElement => {\n\n  return (\n    <TopNavigation{...props}/>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  TopNavigationElement,\n  TopNavigationProps,\n} from '@kitten/ui';\nimport {\n  topNavigationSettings,\n  topNavigationShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\nimport { TopNavigationShowcase } from './topNavigationShowcase.component';\n\nexport class TopNavigationContainer extends React.Component {\n\n  private renderItem = (props: TopNavigationProps): TopNavigationElement => {\n    return (\n      <TopNavigationShowcase\n        {...props}\n        style={[styles.component, props.style]}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={topNavigationShowcase}\n        settings={topNavigationSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n  },\n});\n\n","import React from 'react';\nimport {\n  OverflowMenu,\n  OverflowMenuProps,\n  OverflowMenuElement,\n  Button,\n} from '@kitten/ui';\n\ninterface State {\n  menuVisible: boolean;\n  selectedMenuIndex: number;\n}\n\nexport class OverflowMenuShowcase extends React.Component<OverflowMenuProps, State> {\n\n  public state: State = {\n    menuVisible: false,\n    selectedMenuIndex: null,\n  };\n\n  private toggleMenu = () => {\n    const menuVisible: boolean = !this.state.menuVisible;\n\n    this.setState({ menuVisible });\n  };\n\n  private onSelect = (selectedMenuIndex: number): void => {\n    this.setState({ selectedMenuIndex }, this.toggleMenu);\n  };\n\n  public render(): OverflowMenuElement {\n    const { menuVisible, selectedMenuIndex } = this.state;\n\n    return (\n      <OverflowMenu\n        {...this.props}\n        visible={menuVisible}\n        selectedIndex={selectedMenuIndex}\n        onSelect={this.onSelect}\n        onBackdropPress={this.toggleMenu}>\n        <Button onPress={this.toggleMenu}>\n          Show\n        </Button>\n      </OverflowMenu>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\nimport { OverflowMenuItemType } from '@kitten/ui';\nimport { Image, ImageProps } from 'react-native';\nimport { StyleType } from '@kitten/theme';\n\nconst Icon = (style: StyleType): React.ReactElement<ImageProps> => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}\n  />\n);\n\nconst defaultMenuItems: OverflowMenuItemType[] = [\n  { title: 'Item 1' },\n  { title: 'Item 2' },\n  { title: 'Item 3' },\n];\n\nconst withIconMenuItems: OverflowMenuItemType[] = [\n  {\n    title: 'Item 1',\n    icon: Icon,\n  },\n  {\n    title: 'Item 2',\n    icon: Icon,\n  },\n  {\n    title: 'Item 3',\n    icon: Icon,\n  },\n];\n\nconst withDisabledItemMenuItems: OverflowMenuItemType[] = [\n  {\n    title: 'Item 1',\n    icon: Icon,\n  },\n  {\n    title: 'Item 2',\n    icon: Icon,\n    disabled: true,\n  },\n  {\n    title: 'Item 3',\n    icon: Icon,\n  },\n];\n\nconst defaultOverflowMenu: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {\n    data: defaultMenuItems,\n  },\n};\n\nconst withIcons: ComponentShowcaseItem = {\n  title: 'Icon',\n  props: {\n    data: withIconMenuItems,\n  },\n};\n\nconst withDisabledItem: ComponentShowcaseItem = {\n  title: 'Icon',\n  props: {\n    data: withDisabledItemMenuItems,\n  },\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  items: [\n    defaultOverflowMenu,\n    withIcons,\n    withDisabledItem,\n  ],\n};\n\nexport const overflowMenuShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n  ],\n};\n\nexport const overflowMenuSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'appearance',\n    value: 'default',\n  },\n  {\n    propertyName: 'appearance',\n    value: 'noDivider',\n  },\n  {\n    propertyName: 'placement',\n    value: 'left',\n  },\n  {\n    propertyName: 'placement',\n    value: 'left start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'left end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom end',\n  },\n];\n","import React from 'react';\nimport {\n  OverflowMenuElement,\n  OverflowMenuProps,\n} from '@kitten/ui';\nimport { OverflowMenuShowcase } from './overflowMenuShowcase.component';\nimport {\n  overflowMenuShowcase,\n  overflowMenuSettings,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class OverflowMenuContainer extends React.Component {\n\n  private renderItem = (props: OverflowMenuProps): OverflowMenuElement => {\n    return (\n      <OverflowMenuShowcase {...props} />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={overflowMenuShowcase}\n        settings={overflowMenuSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\n","import React from 'react';\nimport {\n  ImageProps,\n  ImageSourcePropType,\n  View,\n} from 'react-native';\nimport {\n  Avatar,\n  Button,\n  Icon,\n  Input,\n  Layout,\n  LayoutElement,\n  Text,\n  Toggle,\n} from '@kitten/ui';\nimport {\n  StyleType,\n  ThemedComponentProps,\n  ThemeType,\n  withStyles,\n} from '@kitten/theme';\n\ninterface ComponentProps {\n  profileImage: ImageSourcePropType;\n  isDark: () => boolean;\n  setTheme: (dark: boolean) => void;\n}\n\ninterface State {\n  passwordVisible: boolean;\n}\n\ntype SampleComponentProps = ComponentProps & ThemedComponentProps;\n\nclass SampleComponent extends React.Component<SampleComponentProps, State> {\n\n\n  public state: State = {\n    passwordVisible: false,\n  };\n\n  private onPasswordIconPress = () => {\n    const passwordVisible: boolean = !this.state.passwordVisible;\n    this.setState({ passwordVisible });\n  };\n\n  private renderPasswordIcon = (style: StyleType): React.ReactElement<ImageProps> => {\n    const icon: string = this.state.passwordVisible ? 'eye' : 'eye-off';\n\n    return (\n      <Icon name={icon} {...style}/>\n    );\n  };\n\n  public render(): LayoutElement {\n    const { themedStyle, profileImage, isDark, setTheme } = this.props;\n\n    return (\n      <Layout\n        style={themedStyle.container}\n        level='4'>\n        <Layout style={themedStyle.cardContainer}>\n          <Layout\n            style={themedStyle.cardHeader}\n            level='3'>\n            <View style={themedStyle.themeToggleContainer}>\n              <Text\n                style={themedStyle.themeText}\n                category='s2'>\n                Dark Mode\n              </Text>\n              <Toggle\n                size='small'\n                checked={isDark()}\n                onChange={setTheme}\n              />\n            </View>\n            <Avatar\n              style={themedStyle.profileImage}\n              source={profileImage}\n            />\n            <View style={themedStyle.welcomeContainer}>\n              <Text category='h4'>Welcome</Text>\n              <Text category='s1'>Sign in to your account</Text>\n            </View>\n          </Layout>\n          <Layout\n            style={themedStyle.formContainer}\n            level='1'>\n            <Input\n              style={themedStyle.formInput}\n              textStyle={themedStyle.formInputBox}\n              label='Email'\n              placeholder='contact@akveo.com'\n            />\n            <Input\n              style={themedStyle.formInput}\n              textStyle={themedStyle.formInputBox}\n              secureTextEntry={!this.state.passwordVisible}\n              label='Password'\n              placeholder='********'\n              icon={this.renderPasswordIcon}\n              onIconPress={this.onPasswordIconPress}\n            />\n            <Button style={themedStyle.signInButton}>SIGN IN</Button>\n          </Layout>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport const Sample = withStyles(SampleComponent, (theme: ThemeType) => ({\n  container: {\n    flex: 1,\n    paddingHorizontal: 24,\n    paddingVertical: 24,\n  },\n  cardContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    borderRadius: 4,\n    overflow: 'hidden',\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    minWidth: 192,\n    paddingHorizontal: 24,\n  },\n  themeToggleContainer: {\n    position: 'absolute',\n    left: 16,\n    bottom: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  themeText: {\n    marginHorizontal: 8,\n  },\n  profileImage: {\n    width: 96,\n    height: 96,\n    borderWidth: 4,\n    borderColor: theme['border-basic-color-4'],\n  },\n  welcomeContainer: {\n    paddingHorizontal: 16,\n  },\n  formContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 16,\n  },\n  formInput: {\n    marginVertical: 4,\n  },\n  formInputBox: {\n    outlineWidth: 0,\n  },\n  signInButton: {\n    marginVertical: 16,\n  },\n}));\n\n","import React from 'react';\nimport { Sample } from './sample.component';\nimport {\n  ThemeContextType,\n  ThemeContext,\n  ThemeKey,\n} from '../../../themes';\nimport { ImageSourcePropType } from 'react-native';\n\nexport class SampleContainer extends React.Component {\n\n  private profileImage: ImageSourcePropType = require('../../../assets/brand-logo.png');\n\n  private isDarkTheme = (context: ThemeContextType): boolean => {\n    return context.name === 'Eva Dark';\n  };\n\n  private toggleTheme = (context: ThemeContextType, dark: boolean) => {\n    const nextTheme: ThemeKey = dark ? 'Eva Dark' : 'Eva Light';\n\n    context.toggleTheme(nextTheme);\n  };\n\n  private renderContent = (context: ThemeContextType): React.ReactNode => {\n    return (\n      <Sample\n        profileImage={this.profileImage}\n        isDark={() => this.isDarkTheme(context)}\n        setTheme={(dark: boolean) => this.toggleTheme(context, dark)}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ThemeContext.Consumer>\n        {this.renderContent}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Button,\n  Modal,\n  ModalProps,\n  Text,\n} from '@kitten/ui';\n\ninterface State {\n  modalVisible: boolean;\n}\n\nexport class ModalShowcase extends React.Component<ModalProps, State> {\n\n  public state: State = {\n    modalVisible: false,\n  };\n\n  private toggleModal = (modalVisible: boolean) => {\n    this.setState({ modalVisible });\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <View style={styles.container}>\n        <Button onPress={() => this.toggleModal(true)}>\n          Show Modal\n        </Button>\n        <Modal\n          {...this.props}\n          visible={this.state.modalVisible}\n          onBackdropPress={() => this.toggleModal(false)}>\n          <Text>Hi! This is Modal</Text>\n          <Button\n            style={styles.button}\n            onPress={() => this.toggleModal(false)}>\n            Hide me\n          </Button>\n        </Modal>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'space-between',\n  },\n  button: {\n    marginTop: 12,\n  },\n});\n","import { StyleSheet } from 'react-native';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from '../common/type';\n\nconst styles = StyleSheet.create({\n  modal: {\n    backgroundColor: '#636e80',\n    width: 200,\n    height: 200,\n    padding: 12,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 8,\n  },\n  backdropStyle: {\n    backgroundColor: 'black',\n    opacity: 0.5,\n  },\n  customModalPosition: {\n    left: 100,\n    top: 100,\n  },\n});\n\nconst defaultModal: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default Modal',\n  items: [\n    defaultModal,\n  ],\n};\n\nconst customStyledModal: ComponentShowcaseItem = {\n  title: 'Styled Modal',\n  props: {\n    style: styles.modal,\n  },\n};\n\nconst customStyledModalBackdrop: ComponentShowcaseItem = {\n  title: 'Styled Backdrop',\n  props: {\n    style: styles.modal,\n    backdropStyle: styles.backdropStyle,\n  },\n};\n\nconst customModalPosition: ComponentShowcaseItem = {\n  title: 'Custom Position',\n  props: {\n    style: [ styles.customModalPosition, styles.modal ],\n  },\n};\n\nconst customStyledSection: ComponentShowcaseSection = {\n  title: 'Styling',\n  items: [\n    customStyledModal,\n    customStyledModalBackdrop,\n    customModalPosition,\n  ],\n};\n\nconst customModalBackdropAllowed: ComponentShowcaseItem = {\n  title: 'Close On Backdrop: true',\n  props: {\n    allowBackdrop: true,\n    style: styles.modal,\n    backdropStyle: styles.backdropStyle,\n  },\n};\n\nconst customModalBackdropNotAllowed: ComponentShowcaseItem = {\n  title: 'Close On Backdrop: false',\n  props: {\n    closeOnBackdrop: false,\n    style: styles.modal,\n    backdropStyle: styles.backdropStyle,\n  },\n};\n\nconst customBackdropAllowingSection: ComponentShowcaseSection = {\n  title: 'Backdrop Closing Permissions',\n  items: [\n    customModalBackdropAllowed,\n    customModalBackdropNotAllowed,\n  ],\n};\n\nexport const modalShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n    customStyledSection,\n    customBackdropAllowingSection,\n  ],\n};\n","import React from 'react';\nimport {\n  ModalElement,\n  ModalProps,\n} from '@kitten/ui';\nimport { ModalShowcase } from './modalShowcase.component';\nimport { modalShowcase } from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class ModalContainer extends React.Component {\n\n  private renderItem = (props: ModalProps): ModalElement => {\n    return (\n      <ModalShowcase {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={modalShowcase}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Select,\n  SelectOption,\n  SelectProps,\n  SelectElement,\n} from '@kitten/ui';\n\ninterface SelectShowcaseComponentState {\n  selectedOption: SelectOption;\n}\n\nclass SelectShowcaseComponent extends React.Component<SelectProps, SelectShowcaseComponentState> {\n\n  public constructor(props: SelectProps) {\n    super(props);\n    this.state = {\n      selectedOption: props.multiSelect ? [] : null,\n    };\n  }\n\n  private setSelectedOption = (selectedOption: SelectOption): void => {\n    this.setState({ selectedOption });\n  };\n\n  public render(): SelectElement {\n    return (\n      <Select\n        {...this.props}\n        style={styles.dropdown}\n        selectedOption={this.state.selectedOption}\n        onSelect={this.setSelectedOption}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  dropdown: {\n    width: 200,\n  },\n});\n\nexport const SelectShowcase = (props: SelectProps): SelectElement => {\n  return (\n    <SelectShowcaseComponent {...props}/>\n  );\n};\n","import React from 'react';\nimport {\n  Image,\n  ImageProps,\n} from 'react-native';\nimport { SelectOptionType } from '@kitten/ui';\nimport { StyleType } from '@kitten/theme';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst iconClosedUri: string = 'https://akveo.github.io/eva-icons/fill/png/128/arrow-ios-downward.png';\nconst iconOpenedUri: string = 'https://akveo.github.io/eva-icons/fill/png/128/arrow-ios-upward.png';\n\nconst defaultSelectOption: SelectOptionType[] = [\n  { text: 'Option 1', disabled: true },\n  { text: 'Option 2' },\n  { text: 'Option 3' },\n  { text: 'Option 4' },\n  { text: 'Option 5' },\n  { text: 'Option 6' },\n  { text: 'Option 7' },\n  { text: 'Option 8' },\n];\n\nconst withGroupsSelectOption: SelectOptionType[] = [\n  { text: 'Option 1' },\n  {\n    text: 'Option 2',\n    items: [\n      { text: 'Option 21', disabled: true },\n      { text: 'Option 22' },\n      { text: 'Option 23' },\n    ],\n  },\n  { text: 'Option 3' },\n  { text: 'Option 4' },\n  { text: 'Option 5' },\n];\n\nconst renderIcon = (style: StyleType, visible: boolean): React.ReactElement<ImageProps> => {\n  const uri: string = visible ? iconOpenedUri : iconClosedUri;\n\n  return (\n    <Image\n      source={{ uri }}\n      style={style}\n    />\n  );\n};\n\nconst defaultSelect: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {\n    data: defaultSelectOption,\n  },\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default Select',\n  items: [\n    defaultSelect,\n  ],\n};\n\nconst multiSelectSelect: ComponentShowcaseItem = {\n  title: 'Multiselect',\n  props: {\n    multiSelect: true,\n    data: defaultSelectOption,\n  },\n};\n\nconst multiSelectSection: ComponentShowcaseSection = {\n  title: 'Multiselect Select',\n  items: [\n    multiSelectSelect,\n  ],\n};\n\nconst groupSelect: ComponentShowcaseItem = {\n  title: 'With Groups',\n  props: {\n    data: withGroupsSelectOption,\n  },\n};\n\nconst groupSelectMultiselect: ComponentShowcaseItem = {\n  title: 'Multiselect',\n  props: {\n    multiSelect: true,\n    data: withGroupsSelectOption,\n  },\n};\n\nconst withGroupsSection: ComponentShowcaseSection = {\n  title: 'Groups Select',\n  items: [\n    groupSelect,\n    groupSelectMultiselect,\n  ],\n};\n\nconst withIconSelect: ComponentShowcaseItem = {\n  title: 'With icon',\n  props: {\n    data: defaultSelectOption,\n    icon: renderIcon,\n    multiSelect: true,\n  },\n};\n\nconst withIconSection: ComponentShowcaseSection = {\n  title: 'With icon',\n  items: [\n    withIconSelect,\n  ],\n};\n\nconst withLabelSelect: ComponentShowcaseItem = {\n  title: 'Label',\n  props: {\n    data: defaultSelectOption,\n    icon: renderIcon,\n    label: 'Label',\n  },\n};\n\nconst withCustomPlaceholderSelect: ComponentShowcaseItem = {\n  title: 'Placeholder',\n  props: {\n    data: defaultSelectOption,\n    icon: renderIcon,\n    placeholder: 'Custom Placeholder',\n  },\n};\n\nconst customTextsSection: ComponentShowcaseSection = {\n  title: 'Texts',\n  items: [\n    withLabelSelect,\n    withCustomPlaceholderSelect,\n  ],\n};\n\nexport const selectShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n    multiSelectSection,\n    withGroupsSection,\n    withIconSection,\n    customTextsSection,\n  ],\n};\n\nexport const selectSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n];\n","import React from 'react';\nimport {\n  SelectProps,\n  SelectElement,\n} from '@kitten/ui';\nimport { ShowcaseContainer } from '../common/showcase.container';\nimport { SelectShowcase } from './selectShowcase.component';\nimport {\n  selectShowcase,\n  selectSettings,\n} from './type';\n\nexport class SelectContainer extends React.Component {\n\n  private renderItem = (props: SelectProps): SelectElement => {\n    return (\n      <SelectShowcase {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={selectShowcase}\n        settings={selectSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  DatepickerProps,\n} from '@kitten/ui';\n\ninterface State {\n  date: Date;\n}\n\nexport class DatepickerShowcase extends React.Component<DatepickerProps<Date>, State> {\n\n  public state: State = {\n    date: null,\n  };\n\n  private setDate = (date: Date): void => {\n    this.setState({ date });\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <Datepicker\n        {...this.props}\n        style={styles.datepicker}\n        date={this.state.date}\n        onSelect={this.setDate}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  datepicker: {\n    marginBottom: 20,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  RangeDatepicker,\n  DatepickerProps,\n  CalendarRange,\n} from '@kitten/ui';\n\ninterface State {\n  range: CalendarRange<Date>;\n}\n\nexport class RangeDatepickerShowcase extends React.Component<DatepickerProps<Date>, State> {\n\n  public state: State = {\n    range: {\n      startDate: null,\n      endDate: null,\n    },\n  };\n\n  private setDate = (range: CalendarRange<Date>): void => {\n    this.setState({ range });\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <RangeDatepicker\n        {...this.props}\n        style={styles.datepicker}\n        range={this.state.range}\n        onSelect={this.setDate}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  datepicker: {\n    marginBottom: 20,\n  },\n});\n","import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport { DatepickerProps } from '@kitten/ui';\nimport { ShowcaseContainer } from '../common/showcase.container';\nimport { DatepickerShowcase } from './datepickerShowcase.component';\nimport { RangeDatepickerShowcase } from './rangeDatepickerShowcase.component';\n\nexport class DatepickerContainer extends React.Component {\n\n  private renderItem = (props: DatepickerProps<Date>): React.ReactElement<DatepickerProps<Date>> => {\n    return (\n      <View/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        style={styles.container}\n        showcase={{\n          sections: [],\n        }}\n        renderItem={this.renderItem}\n      >\n        <DatepickerShowcase/>\n        <RangeDatepickerShowcase/>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n});\n","import React from 'react';\nimport {\n  RangeCalendar,\n  RangeCalendarProps,\n  CalendarElement,\n  CalendarRange,\n} from '@kitten/ui';\n\ninterface State {\n  range: CalendarRange<Date>;\n}\n\ntype Props = RangeCalendarProps<Date>;\n\nexport class RangeCalendarShowcase extends React.Component<Props, State> {\n\n  public state: State = {\n    range: {\n      startDate: null,\n      endDate: null,\n    },\n  };\n\n  private onSelect = (range: CalendarRange<Date>) => {\n    this.setState({ range });\n  };\n\n  public render(): CalendarElement<Date> {\n    return (\n      <RangeCalendar\n        {...this.props}\n        range={this.state.range}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from '../common/type';\n\nconst now: Date = new Date();\n\nconst defaultCalendar: ComponentShowcaseItem = {\n  props: {\n    min: new Date(now.getFullYear() - 12, 0, 1),\n    max: new Date(now.getFullYear() + 12, 0, 1),\n  },\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultCalendar,\n  ],\n};\n\nexport const calendarShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n  ],\n};\n","import React from 'react';\nimport { RangeCalendarProps } from '@kitten/ui';\nimport { ShowcaseContainer } from '../common/showcase.container';\nimport { RangeCalendarShowcase } from './rangeCalendarShowcase.component';\nimport { calendarShowcase } from './type';\n\nexport class RangeCalendarContainer extends React.Component {\n\n  private renderItem = (props: RangeCalendarProps<Date>): React.ReactElement<RangeCalendarProps<Date>> => {\n    return (\n      <RangeCalendarShowcase style={{flex: 1}} {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={calendarShowcase}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  ListRenderItemInfo,\n  Platform,\n} from 'react-native';\nimport { NavigationScreenProps } from 'react-navigation';\nimport { Link } from '@react-navigation/web';\nimport {\n  ThemedComponentProps,\n  ThemeType,\n  withStyles,\n} from '@kitten/theme';\nimport {\n  List,\n  ListElement,\n  ListItem,\n  ListItemElement,\n} from '@kitten/ui';\nimport { RouteType } from '../../navigation';\n\nexport const routes: RouteType[] = [\n  { name: 'Avatar' },\n  { name: 'Bottom Navigation' },\n  { name: 'Button' },\n  { name: 'Button Group' },\n  { name: 'Calendar' },\n  { name: 'Range Calendar' },\n  { name: 'Checkbox' },\n  { name: 'Datepicker' },\n  { name: 'Drawer' },\n  { name: 'Icon' },\n  { name: 'Input' },\n  { name: 'Layout' },\n  { name: 'List' },\n  { name: 'Menu' },\n  { name: 'Modal' },\n  { name: 'Overflow Menu' },\n  { name: 'Popover' },\n  { name: 'Radio' },\n  { name: 'Radio Group' },\n  { name: 'Select' },\n  { name: 'Spinner' },\n  { name: 'Tab View' },\n  { name: 'Text' },\n  { name: 'Toggle' },\n  { name: 'Tooltip' },\n  { name: 'Top Navigation' },\n  { name: 'Sample' },\n];\n\ntype Props = ThemedComponentProps & NavigationScreenProps;\n\nclass HomeScreen extends React.Component<Props> {\n\n  private onItemPressMobile = (index: number) => {\n    const { [index]: route } = routes;\n\n    this.props.navigation.navigate(route.name);\n  };\n\n  private renderWebListItem = (info: ListRenderItemInfo<RouteType>): ListItemElement => {\n    return (\n      <Link routeName={info.item.name}>\n        <ListItem title={info.item.name}/>\n      </Link>\n    );\n  };\n\n  private renderMobileListItem = (info: ListRenderItemInfo<RouteType>): ListItemElement => {\n    return (\n      <ListItem\n        title={info.item.name}\n        onPress={this.onItemPressMobile}\n      />\n    );\n  };\n\n  private renderItem = (info: ListRenderItemInfo<RouteType>): ListItemElement => {\n    return Platform.select({\n      ios: this.renderMobileListItem(info),\n      android: this.renderMobileListItem(info),\n      default: this.renderWebListItem(info),\n    });\n  };\n\n  public render(): ListElement {\n    return (\n      <List\n        style={this.props.themedStyle.container}\n        data={routes}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n\nexport default withStyles(HomeScreen, (theme: ThemeType) => ({\n  container: {\n    flex: 1,\n    backgroundColor: theme['background-basic-color-1'],\n  },\n}));\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarSimpleUsageShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarRemoteImagesShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarSizeShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar\n      style={styles.item}\n      size='tiny'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='small'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='medium'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='large'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='giant'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  item: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarShapeShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar\n      style={styles.item}\n      shape='round'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      shape='rounded'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      shape='square'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  item: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarInlineStylingShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar\n      style={styles.avatar}\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  avatar: {\n    width: 96,\n    height: 96,\n    borderRadius: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n} from 'react-native-ui-kitten';\n\nexport class BottomNavigationInlineStylingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        style={styles.bottomNavigation}\n        indicatorStyle={styles.indicator}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab title='DASHBOARD'/>\n        <BottomNavigationTab title='SETTINGS'/>\n      </BottomNavigation>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  bottomNavigation: { backgroundColor: 'white' },\n  indicator: { backgroundColor: 'black' },\n});\n","import React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n} from 'react-native-ui-kitten';\n\nexport class BottomNavigationSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab title='DASHBOARD'/>\n        <BottomNavigationTab title='SETTINGS'/>\n      </BottomNavigation>\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { BottomNavigationTab } from 'react-native-ui-kitten';\n\nexport const BottomNavigationTabInlineStylingShowcase = () => (\n  <BottomNavigationTab\n    style={styles.tab}\n    titleStyle={styles.tabTitle}\n    title='TAB 1'\n  />\n);\n\nconst styles = StyleSheet.create({\n  tab: { backgroundColor: '#EDF1F7' },\n  tabTitle: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { BottomNavigationTab } from 'react-native-ui-kitten';\n\nexport const BottomNavigationTabSimpleUsageShowcase = () => (\n  <BottomNavigationTab title='TAB 1'/>\n);\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { BottomNavigationTab } from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Image\n    style={style}\n    source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/layout.png'}}\n  />\n);\n\nexport const BottomNavigationTabWithExternalSourceIconShowcase = () => (\n  <BottomNavigationTab\n    title='DASHBOARD'\n    icon={DashboardIcon}\n  />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  BottomNavigationTab,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nexport const BottomNavigationTabWithIconShowcase = () => (\n  <BottomNavigationTab\n    title='DASHBOARD'\n    icon={DashboardIcon}\n  />\n);\n","// IMPORTANT: To use Icon component make sure to follow this guide:\n// https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n\nimport React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nconst SettingsIcon = (style) => (\n  <Icon {...style} name='settings'/>\n);\n\nexport class BottomNavigationWithIconsShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab\n          title='DASHBOARD'\n          icon={DashboardIcon}\n        />\n        <BottomNavigationTab\n          title='SETTINGS'\n          icon={SettingsIcon}\n        />\n      </BottomNavigation>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n} from 'react-native-ui-kitten';\n\nexport class BottomNavigationWithoutIndicatorShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        appearance='noIndicator'\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab title='DASHBOARD'/>\n        <BottomNavigationTab title='SETTINGS'/>\n      </BottomNavigation>\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonAppearancesShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} appearance='filled'>FILLED</Button>\n    <Button style={styles.button} appearance='outline'>OUTLINE</Button>\n    <Button style={styles.button} appearance='ghost'>GHOST</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGhostShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} appearance='ghost' status='primary'>PRIMARY</Button>\n    <Button style={styles.button} appearance='ghost' status='success'>SUCCESS</Button>\n    <Button style={styles.button} appearance='ghost' status='info'>INFO</Button>\n    <Button style={styles.button} appearance='ghost' status='warning'>WARNING</Button>\n    <Button style={styles.button} appearance='ghost' status='danger'>DANGER</Button>\n    <Button style={styles.button} appearance='ghost' status='basic'>BASIC</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonOutlineShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} appearance='outline' status='primary'>PRIMARY</Button>\n    <Button style={styles.button} appearance='outline' status='success'>SUCCESS</Button>\n    <Button style={styles.button} appearance='outline' status='info'>INFO</Button>\n    <Button style={styles.button} appearance='outline' status='warning'>WARNING</Button>\n    <Button style={styles.button} appearance='outline' status='danger'>DANGER</Button>\n    <Button style={styles.button} appearance='outline' status='basic'>BASIC</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport const ButtonWithIconShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} status='primary' icon={StarIcon}>PRIMARY</Button>\n    <Button style={styles.button} status='success' icon={StarIcon}>SUCCESS</Button>\n    <Button style={styles.button} status='danger' icon={StarIcon}/>\n    <Button style={styles.button} appearance='ghost' status='danger' icon={StarIcon}/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonSimpleUsageShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button}>ACTIVE</Button>\n    <Button style={styles.button} disabled={true}>DISABLED</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonSizeShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} size='tiny'>TINY</Button>\n    <Button style={styles.button} size='small'>SMALL</Button>\n    <Button style={styles.button} size='medium'>MEDIUM</Button>\n    <Button style={styles.button} size='large'>LARGE</Button>\n    <Button style={styles.button} size='giant'>GIANT</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonStatusShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} status='primary'>PRIMARY</Button>\n    <Button style={styles.button} status='success'>SUCCESS</Button>\n    <Button style={styles.button} status='info'>INFO</Button>\n    <Button style={styles.button} status='warning'>WARNING</Button>\n    <Button style={styles.button} status='danger'>DANGER</Button>\n    <Button style={styles.button} status='basic'>BASIC</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupAppearanceShowcase = () => (\n  <Layout style={styles.container}>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      appearance='filled'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      appearance='outline'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  buttonGroup: {\n    marginVertical: 8,\n  },\n  button: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupInlineStylingShowcase = () => (\n  <ButtonGroup style={styles.buttonGroup}>\n    <Button style={styles.button}>L</Button>\n    <Button style={styles.button}>M</Button>\n    <Button style={styles.button}>R</Button>\n  </ButtonGroup>\n);\n\nconst styles = StyleSheet.create({\n  buttonGroup: {\n    margin: 16,\n    borderRadius: 8,\n  },\n  button: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupSimpleUsageShowcase = () => (\n  <ButtonGroup style={styles.container}>\n    <Button style={styles.button}>L</Button>\n    <Button style={styles.button}>M</Button>\n    <Button style={styles.button}>R</Button>\n  </ButtonGroup>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: 16,\n  },\n  button: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupSizeShowcase = () => (\n  <Layout style={styles.container}>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='tiny'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='small'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='medium'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='large'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='giant'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  buttonGroup: {\n    marginVertical: 8,\n  },\n  button: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupStatusShowcase = () => (\n  <Layout style={styles.container}>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='primary'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='success'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='info'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='warning'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='danger'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  buttonGroup: {\n    marginBottom: 10,\n  },\n  button: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CalendarBoundingMonthShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          boundingMonth={false}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Calendar,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class CalendarCustomDayShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  renderDay = ({ date }, style) => (\n    <View\n      style={[styles.dayContainer, style.container]}>\n      <Text style={style.text}>{`${date.getDate()}`}</Text>\n      <Text style={[style.text, styles.value]}>\n        {`${100 * date.getDate() + Math.pow(date.getDate(), 2)}$`}\n      </Text>\n    </View>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          onSelect={this.onSelect}\n          renderDay={this.renderDay}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  dayContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: '400',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n  NativeDateService,\n} from 'react-native-ui-kitten';\n\nconst i18n = {\n  dayNames: {\n    short: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n    long: ['星期天', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n  },\n  monthNames: {\n    short: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    long: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n  },\n};\n\nexport class CalendarCustomLocaleShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  dateService = new NativeDateService('zh', i18n);\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CalendarFilterShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  filter = (date) => {\n    return date.getDay() !== 0 && date.getDay() !== 6;\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          onSelect={this.onSelect}\n          filter={this.filter}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n});\n","/**\n * IMPORTANT: To use Moment make sure to install Moment Date Service\n * npm i @ui-kitten/moment\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport moment from 'moment';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\nimport { MomentDateService } from '@ui-kitten/moment';\n\nexport class CalendarMomentShowcase extends React.Component {\n\n  state = {\n    date: moment(),\n  };\n\n  dateService = new MomentDateService();\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CalendarSimpleUsageShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  RangeCalendar,\n} from 'react-native-ui-kitten';\n\nexport class RangeCalendarSimpleUsageShowcase extends React.Component {\n\n  state = {\n    range: {\n      startDate: null,\n      endDate: null,\n    },\n  };\n\n  onSelect = (range) => {\n    this.setState({ range });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <RangeCalendar\n          range={this.state.range}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  CheckBox,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CheckboxSimpleUsageShowcase extends React.Component {\n\n  state = {\n    checked1: false,\n  };\n\n  onChecked1Change = (checked1) => {\n    this.setState({ checked1 });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <CheckBox\n          style={styles.checkbox}\n          text='Active'\n          checked={this.state.checked1}\n          onChange={this.onChecked1Change}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          text='Disabled'\n          disabled={true}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          text='Checked Disabled'\n          disabled={true}\n          checked={true}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  checkbox: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  CheckBox,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CheckboxStatusShowcase extends React.Component {\n\n  state = {\n    primaryChecked: false,\n    successChecked: false,\n    infoChecked: false,\n    warningChecked: false,\n    dangerChecked: false,\n    basicChecked: false,\n  };\n\n  onPrimaryChange = (primaryChecked) => {\n    this.setState({ primaryChecked });\n  };\n\n  onSuccessChange = (successChecked) => {\n    this.setState({ successChecked });\n  };\n\n  onInfoChange = (infoChecked) => {\n    this.setState({ infoChecked });\n  };\n\n  onWarningChange = (warningChecked) => {\n    this.setState({ warningChecked });\n  };\n\n  onDangerChange = (dangerChecked) => {\n    this.setState({ dangerChecked });\n  };\n\n  onBasicChange = (basicChecked) => {\n    this.setState({ basicChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <CheckBox\n          style={styles.checkbox}\n          status='primary'\n          text='Primary'\n          checked={this.state.primaryChecked}\n          onChange={this.onPrimaryChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='success'\n          text='Success'\n          checked={this.state.successChecked}\n          onChange={this.onSuccessChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='info'\n          text='Info'\n          checked={this.state.infoChecked}\n          onChange={this.onInfoChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='warning'\n          text='Warning'\n          checked={this.state.warningChecked}\n          onChange={this.onWarningChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='danger'\n          text='Danger'\n          checked={this.state.dangerChecked}\n          onChange={this.onDangerChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='basic'\n          text='Basic'\n          checked={this.state.basicChecked}\n          onChange={this.onBasicChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  checkbox: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { CheckBox } from 'react-native-ui-kitten';\n\nexport class CheckboxTextShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onCheckedChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <CheckBox\n        style={styles.checkbox}\n        checked={this.state.checked}\n        text='Place your Text'\n        onChange={this.onCheckedChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  checkbox: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { CheckBox } from 'react-native-ui-kitten';\n\nexport class CheckboxInlineStylingShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onCheckedChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <CheckBox\n        style={styles.checkbox}\n        textStyle={styles.text}\n        checked={this.state.checked}\n        text='Place your Text'\n        onChange={this.onCheckedChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  checkbox: {\n    margin: 8,\n  },\n  text: {\n    color: '#3366FF',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  CheckBox,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CheckboxIndeterminateShowcase extends React.Component {\n\n  state = {\n    mainCheckboxChecked: false,\n    mainCheckboxIndeterminate: false,\n    checkbox1Checked: false,\n    checkbox2Checked: false,\n    checkbox3Checked: false,\n  };\n\n  onMainCheckboxChange = (checked) => {\n    if (checked) {\n      this.setState({\n        checkbox1Checked: true,\n        checkbox2Checked: true,\n        checkbox3Checked: true,\n      });\n    } else {\n      this.setState({\n        checkbox1Checked: false,\n        checkbox2Checked: false,\n        checkbox3Checked: false,\n      });\n    }\n    this.setState({ mainCheckboxChecked: checked });\n  };\n\n  onCheckbox1Change = (checked) => {\n    this.setState({ checkbox1Checked: checked }, this.setMainCheckboxDependingState);\n  };\n\n  onCheckbox2Change = (checked) => {\n    this.setState({ checkbox2Checked: checked }, this.setMainCheckboxDependingState);\n  };\n\n  onCheckbox3Change = (checked) => {\n    this.setState({ checkbox3Checked: checked }, this.setMainCheckboxDependingState);\n  };\n\n  setMainCheckboxDependingState = () => {\n    const { checkbox1Checked, checkbox2Checked, checkbox3Checked } = this.state;\n    const states = [checkbox1Checked, checkbox2Checked, checkbox3Checked];\n    const someChecked = states.some((item) => item === true);\n    const everyChecked = states.every((item) => item === true);\n\n    if (someChecked && !everyChecked) {\n      this.setState({\n        mainCheckboxChecked: true,\n        mainCheckboxIndeterminate: true,\n      });\n    } else if (!someChecked && !everyChecked) {\n      this.setState({\n        mainCheckboxChecked: false,\n        mainCheckboxIndeterminate: false,\n      });\n    } else if (everyChecked) {\n      this.setState({\n        mainCheckboxChecked: true,\n        mainCheckboxIndeterminate: false,\n      });\n    }\n  };\n\n  render() {\n    const {\n      mainCheckboxChecked,\n      mainCheckboxIndeterminate,\n      checkbox1Checked,\n      checkbox2Checked,\n      checkbox3Checked,\n    } = this.state;\n\n    return (\n      <Layout style={styles.container}>\n        <CheckBox\n          style={styles.checkbox}\n          text='Main'\n          checked={mainCheckboxChecked}\n          indeterminate={mainCheckboxIndeterminate}\n          onChange={this.onMainCheckboxChange}\n        />\n        <CheckBox\n          text='Checkbox 1'\n          style={[styles.checkbox, styles.leftSpace]}\n          checked={checkbox1Checked}\n          onChange={this.onCheckbox1Change}\n        />\n        <CheckBox\n          text='Checkbox 2'\n          style={[styles.checkbox, styles.leftSpace]}\n          checked={checkbox2Checked}\n          onChange={this.onCheckbox2Change}\n        />\n        <CheckBox\n          text='Checkbox 3'\n          style={[styles.checkbox, styles.leftSpace]}\n          checked={checkbox3Checked}\n          onChange={this.onCheckbox3Change}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport const styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  checkbox: {\n    marginVertical: 4,\n  },\n  leftSpace: {\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerBoundingMonthShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          boundingMonth={false}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerCustomDayShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  renderDay = ({ date }, style) => (\n    <View\n      style={[styles.dayContainer, style.container]}>\n      <Text style={style.text}>{`${date.getDate()}`}</Text>\n      <Text style={[style.text, styles.value]}>\n        {`${100 * date.getDate() + Math.pow(date.getDate(), 2)}$`}\n      </Text>\n    </View>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          onSelect={this.onSelect}\n          renderDay={this.renderDay}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n  dayContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: '400',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerFilterShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  filter = (date) => {\n    return date.getDay() !== 0 && date.getDay() !== 6;\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          filter={this.filter}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n  NativeDateService,\n} from 'react-native-ui-kitten';\n\nconst i18n = {\n  dayNames: {\n    short: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n    long: ['星期天', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n  },\n  monthNames: {\n    short: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    long: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n  },\n};\n\nexport class DatepickerCustomLocaleShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  dateService = new NativeDateService('zh', i18n);\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","/**\n * IMPORTANT: To use Moment make sure to install Moment Date Service\n * npm i @ui-kitten/moment\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport moment from 'moment';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\nimport { MomentDateService } from '@ui-kitten/moment';\n\nexport class DatepickerMomentShowcase extends React.Component {\n\n  dateService = new MomentDateService();\n\n  state = {\n    date: moment(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerSimpleUsageShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst CalendarIcon = (style) => (\n  <Icon {...style} name='calendar'/>\n);\n\nexport class DatepickerWithIconShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          icon={CalendarIcon}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  RangeDatepicker,\n} from 'react-native-ui-kitten';\n\nexport class RangeDatepickerSimpleUsageShowcase extends React.Component {\n\n  state = {\n    range: {\n      startDate: null,\n      endDate: null,\n    },\n  };\n\n  onSelect = (range) => {\n    this.setState({ range });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <RangeDatepicker\n          range={this.state.range}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DrawerSimpleUsageShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nconst MessagesIcon = (style) => (\n  <Icon {...style} name='email'/>\n);\n\nconst SettingsIcon = (style) => (\n  <Icon {...style} name='settings'/>\n);\n\nexport class DrawerWithIconsShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard', icon: DashboardIcon },\n    { title: 'Messages', icon: MessagesIcon },\n    { title: 'Settings', icon: SettingsIcon },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  DrawerHeaderFooter,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst PersonIcon = (style) => (\n  <Icon {...style} name='person'/>\n);\n\nexport class DrawerHeaderShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  renderProfileHeader = () => (\n    <DrawerHeaderFooter\n      title='John Doe'\n      description='React Native Developer'\n      icon={PersonIcon}\n    />\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            header={this.renderProfileHeader}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { DrawerHeaderFooter } from 'react-native-ui-kitten';\n\nexport const DrawerHeaderFooterInlineStylingShowcase = () => (\n  <DrawerHeaderFooter\n    style={styles.drawerHeader}\n    titleStyle={styles.drawerHeaderTitle}\n    descriptionStyle={styles.drawerHeaderDescription}\n    title='John Doe'\n    description='React Native Developer'\n  />\n);\n\nconst styles = StyleSheet.create({\n  drawerHeader: { backgroundColor: 'black' },\n  drawerHeaderTitle: { color: 'white' },\n  drawerHeaderDescription: { color: 'gray' },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  DrawerHeaderFooter,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst ProfileIcon = (style) => (\n  <Icon {...style} name='person'/>\n);\n\nexport const DrawerHeaderFooterSimpleUsageShowcase = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    icon={ProfileIcon}\n  />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  DrawerHeaderFooter,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst LogoutIcon = (style) => (\n  <Icon {...style} name='log-out'/>\n);\n\nconst LogoutButton = (style) => (\n  <Button style={style} icon={LogoutIcon}/>\n);\n\nexport const DrawerHeaderFooterWithAccessoryShowcase = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    accessory={LogoutButton}\n  />\n);\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { DrawerHeaderFooter } from 'react-native-ui-kitten';\n\nconst ProfileIcon = (style) => (\n  <Image style={style} source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/profile.png'}}/>\n);\n\nexport const DrawerHeaderFooterWithExternalSourceIconShowcase = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    icon={ProfileIcon}\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  DrawerHeaderFooter,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DrawerFooterShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  renderFooter = () => (\n    <DrawerHeaderFooter description='Drawer Footer'/>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            footer={this.renderFooter}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class DrawerCustomHeaderShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  renderHeader = () => (\n    <Layout level='2'>\n      <Text category='h6'>Drawer Header</Text>\n    </Layout>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            header={this.renderHeader}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nconst NotificationBadge = (style) => (\n  <Layout style={[style, styles.badge]}>\n    <Text>NEW</Text>\n  </Layout>\n);\n\nexport class DrawerNotificationBadgeItemShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages', accessory: NotificationBadge },\n    { title: 'Settings' },\n    { title: 'Articles' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  badge: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 24,\n    width: 48,\n    paddingHorizontal: 24,\n    borderRadius: 12,\n    backgroundColor: 'orange',\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n *\n * Visit react-native-svg documentation for more details on styling\n * https://github.com/react-native-community/react-native-svg#common-props\n */\n\nimport React from 'react';\nimport { Icon } from 'react-native-ui-kitten';\n\nexport const IconSimpleUsageShowcase = () => (\n  <Icon name='star' width={32} height={32} fill='#3366FF' />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n} from 'react-native-ui-kitten';\n\nexport class IconWithinButtonShowcase extends React.Component {\n\n  state = {\n    liked: false,\n  };\n\n  onPress = () => {\n    const liked = !this.state.liked;\n    this.setState({ liked });\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      name={this.state.liked ? 'heart' : 'heart-outline'}\n      {...style}\n    />\n  );\n\n  render() {\n    return (\n      <Button\n        icon={this.renderIcon}\n        onPress={this.onPress}>\n        LIKE\n      </Button>\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Input,\n} from 'react-native-ui-kitten';\n\nexport class IconWithinInputShowcase extends React.Component {\n\n  state = {\n    value: '',\n    secureTextEntry: true,\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  onIconPress = () => {\n    const secureTextEntry = !this.state.secureTextEntry;\n    this.setState({ secureTextEntry });\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      {...style}\n      name={!this.state.secureTextEntry ? 'eye' : 'eye-off'}\n    />\n  );\n\n  render() {\n    return (\n      <Input\n        placeholder='Password'\n        value={this.state.value}\n        secureTextEntry={this.state.secureTextEntry}\n        onChangeText={this.onChangeText}\n        icon={this.renderIcon}\n        onIconPress={this.onIconPress}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button } from 'react-native-ui-kitten';\n\nconst RemoteBulbIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/outline/png/128/bulb-outline.png' }}\n  />\n);\n\nexport const IconExternalSourceShowcase = (props) => (\n  <Button icon={RemoteBulbIcon}>\n    Login with Facebook\n  </Button>\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n} from 'react-native-ui-kitten';\n\nexport class IconAnimationShowcase extends React.Component {\n\n  iconRef = React.createRef();\n\n  onPress = () => {\n    this.iconRef.current.startAnimation();\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      {...style}\n      ref={this.iconRef}\n      name='star'\n      animation='shake'\n    />\n  );\n\n  render() {\n    return (\n      <Button\n        icon={this.renderIcon}\n        onPress={this.onPress}>\n        START ANIMATION\n      </Button>\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n} from 'react-native-ui-kitten';\n\nexport class IconAnimationInfiniteShowcase extends React.Component {\n\n  iconRef = React.createRef();\n\n  onPress = () => {\n    this.iconRef.current.startAnimation();\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      {...style}\n      ref={this.iconRef}\n      name='star'\n      animation='shake'\n      animationConfig={{ cycles: -1 }}\n    />\n  );\n\n  render() {\n    return (\n      <Button\n        icon={this.renderIcon}\n        onPress={this.onPress}>\n        START ANIMATION\n      </Button>\n    );\n  }\n}\n","/**\n * Visit react-native-svg documentation for more details on styling\n * https://github.com/react-native-community/react-native-svg#common-props\n */\n\nimport React from 'react';\nimport { Icon } from 'react-native-ui-kitten';\n\nexport const IconInlineStylingShowcase = (props) => (\n  <Icon\n    name='github'\n    width={32}\n    height={32}\n    fill='#FF7E6D'\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputInlineStylingShowcase extends React.Component {\n\n  state = {\n    inputValue: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <Input\n        value={this.state.inputValue}\n        placeholder='Place your Text'\n        style={styles.input}\n        textStyle={styles.inputText}\n        labelStyle={styles.inputLabel}\n        captionTextStyle={styles.inputCaption}\n        onChangeText={this.onChangeText}\n        label='LABEL'\n        caption='CAPTION'\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  input: { borderRadius: 24 },\n  inputText: { color: '#3366FF' },\n  inputLabel: { color: '#3366FF' },\n  inputCaption: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Input,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class InputSimpleUsageShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Input\n          style={styles.input}\n          value={this.state.value}\n          onChangeText={this.onChangeText}\n          placeholder='Active'\n        />\n        <Input\n          style={styles.input}\n          disabled={true}\n          placeholder='Disabled'\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    paddingVertical: 8,\n    paddingHorizontal: 4,\n  },\n  input: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Input,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class InputSizeShowcase extends React.Component {\n\n  state = {\n    smallValue: '',\n    mediumValue: '',\n    largeValue: '',\n  };\n\n  onSmallTextChange = (smallValue) => {\n    this.setState({ smallValue });\n  };\n\n  onMediumTextChange = (mediumValue) => {\n    this.setState({ mediumValue });\n  };\n\n  onLargeTextChange = (largeValue) => {\n    this.setState({ largeValue });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Input\n          style={styles.input}\n          size='small'\n          placeholder='Small'\n          value={this.state.smallValue}\n          onChangeText={this.onSmallTextChange}\n        />\n        <Input\n          style={styles.input}\n          size='medium'\n          placeholder='Medium'\n          value={this.state.mediumValue}\n          onChangeText={this.onMediumTextChange}\n        />\n        <Input\n          style={styles.input}\n          size='large'\n          placeholder='Large'\n          value={this.state.largeValue}\n          onChangeText={this.onLargeTextChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  input: {\n    marginVertical: 4,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Input,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class InputStatusShowcase extends React.Component {\n\n  state = {\n    primaryValue: '',\n    successValue: '',\n    infoValue: '',\n    warningValue: '',\n    dangerValue: '',\n    basicValue: '',\n  };\n\n  onPrimaryTextChange = (primaryValue) => {\n    this.setState({ primaryValue });\n  };\n\n  onSuccessTextChange = (successValue) => {\n    this.setState({ successValue });\n  };\n\n  onInfoTextChange = (infoValue) => {\n    this.setState({ infoValue });\n  };\n\n  onWarningTextChange = (warningValue) => {\n    this.setState({ warningValue });\n  };\n\n  onDangerTextChange = (dangerValue) => {\n    this.setState({ dangerValue });\n  };\n\n  onBasicTextChange = (basicValue) => {\n    this.setState({ basicValue });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Input\n          style={styles.input}\n          status='primary'\n          placeholder='Primary'\n          value={this.state.primaryValue}\n          onChangeText={this.onPrimaryTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='success'\n          placeholder='Success'\n          value={this.state.successValue}\n          onChangeText={this.onSuccessTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='info'\n          placeholder='Info'\n          value={this.state.infoValue}\n          onChangeText={this.onInfoTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='warning'\n          placeholder='Warning'\n          value={this.state.warningValue}\n          onChangeText={this.onWarningTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='danger'\n          placeholder='Danger'\n          value={this.state.dangerValue}\n          onChangeText={this.onDangerTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='basic'\n          placeholder='Basic'\n          value={this.state.basicValue}\n          onChangeText={this.onBasicTextChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  input: {\n    marginVertical: 4,\n  },\n});\n\n","import React from 'react';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputWithCaptionShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  isValidValue = () => {\n    return this.state.value.length >= 6;\n  };\n\n  render() {\n    const isValidInputValue = this.isValidValue();\n    return (\n      <Input\n        placeholder='Place your Text'\n        status={isValidInputValue ? 'success' : 'danger'}\n        caption={isValidInputValue ? '' : 'Invalid value'}\n        value={this.state.value}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { Icon, Input } from 'react-native-ui-kitten';\n\nexport class InputWithIconShowcase extends React.Component {\n\n  state = {\n    value: '',\n    secureTextEntry: true,\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  onIconPress = () => {\n    const secureTextEntry = !this.state.secureTextEntry;\n    this.setState({ secureTextEntry });\n  };\n\n  renderIcon = (style) => {\n    const iconName = this.state.secureTextEntry ? 'eye-off' : 'eye';\n    return (\n      <Icon {...style} name={iconName}/>\n    );\n  };\n\n  render() {\n    return (\n      <Input\n        value={this.state.value}\n        placeholder='Place your Text'\n        icon={this.renderIcon}\n        secureTextEntry={this.state.secureTextEntry}\n        onIconPress={this.onIconPress}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { Icon, Input } from 'react-native-ui-kitten';\nimport { Image } from 'react-native';\n\nexport class InputWithExternalSourceIconShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  renderIcon = (style) => {\n    return (\n      <Image\n        style={style}\n        source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/eye-off.png'}}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <Input\n        value={this.state.value}\n        placeholder='Place your Text'\n        icon={this.renderIcon}\n        secureTextEntry={true}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputWithLabelShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <Input\n        label='LABEL'\n        placeholder='Place your Text'\n        value={this.state.value}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const LayoutSimpleUsageShowcase = () => {\n\n  return (\n    <Layout style={styles.container}>\n      <Text>Welcome To React Native UI Kitten!</Text>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const LayoutLevelShowcase = () => {\n\n  return (\n    <Layout style={styles.container} level='4'>\n      <Layout style={styles.container} level='3'>\n        <Layout style={styles.container} level='2'>\n          <Layout style={[styles.container, styles.contentContainer]}>\n            <Text>Welcome To React Native UI Kitten!</Text>\n          </Layout>\n        </Layout>\n      </Layout>\n    </Layout>\n\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  contentContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const LayoutInlineStylingShowcase = () => {\n\n  return (\n    <Layout style={[styles.container, styles.additionalContainerStyle]}>\n      <Text>Welcome To React Native UI Kitten!</Text>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  additionalContainerStyle: {\n    borderColor: 'red',\n    borderWidth: 2,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","/**\n * This example demonstrates how simply could be composed List Item\n * with classic layouts like icon at the left, forward button at the right, etc.\n *\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Icon,\n  List,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Title for Item',\n  description: 'Description for Item',\n};\n\nexport const ListCompositeItemShowcase = () => {\n\n  const data = new Array(8).fill(SAMPLE_DATA);\n\n  const renderItemAccessory = (style) => (\n    <Button style={style}>FOLLOW</Button>\n  );\n\n  const renderItemIcon = (style) => (\n    <Icon {...style} name='person' />\n  );\n\n  const renderItem = ({ item, index }) => (\n    <ListItem\n      title={`${item.title} ${index + 1}`}\n      description={`${item.description} ${index + 1}`}\n      icon={renderItemIcon}\n      accessory={renderItemAccessory}\n    />\n  );\n\n  return (\n    <List\n      style={styles.list}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  list: {\n    height: 150,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  List,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Title for Item',\n  description: 'Description for Item',\n};\n\nexport const ListInlineStylingShowcase = (props) => {\n\n  const data = new Array(8).fill(SAMPLE_DATA);\n\n  const renderItem = ({ item, index }) => (\n    <ListItem\n      title={`${item.title} ${index + 1}`}\n      description={`${item.description} ${index + 1}`}\n    />\n  );\n\n  return (\n    <List\n      contentContainerStyle={styles.contentContainer}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  contentContainer: { paddingHorizontal: 8 },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ListItem } from 'react-native-ui-kitten';\n\nexport const ListItemInlineStylingShowcase = (props) => (\n  <ListItem\n    style={styles.listItem}\n    titleStyle={styles.listItemTitle}\n    descriptionStyle={styles.listItemDescription}\n    title='Title'\n    description='Description'\n  />\n);\n\nconst styles = StyleSheet.create({\n  listItem: { borderRadius: 8 },\n  listItemTitle: { color: '#3366ff' },\n  listItemDescription: { color: '#2E3A59' },\n});\n","import React from 'react';\nimport { ListItem } from 'react-native-ui-kitten';\n\nexport const ListItemSimpleUsageShowcase = (props) => (\n  <ListItem title='Title' />\n);\n","import React from 'react';\nimport {\n  CheckBox,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nexport class ListItemWithAccessoryShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onCheckBoxCheckedChange = (index) => {\n    const checked = !this.state.checked;\n    this.setState({ checked });\n  };\n\n  renderAccessory = (style, index) => (\n    <CheckBox\n      style={style}\n      checked={this.state.checked}\n      onChange={() => this.onCheckBoxCheckedChange(index)}\n    />\n  );\n\n  render() {\n    return (\n      <ListItem\n        title='Title'\n        description='Description'\n        accessory={this.renderAccessory}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { ListItem } from 'react-native-ui-kitten';\n\nconst RemoteStarIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}\n  />\n);\n\nexport const ListItemWithExternalIconShowcase = (props) => (\n  <ListItem\n    title='Title'\n    description='Description'\n    icon={RemoteStarIcon}\n  />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport const ListItemWithIconShowcase = (props) => (\n  <ListItem\n    title='Title'\n    description='Description'\n    icon={StarIcon}\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  List,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Item',\n};\n\nexport const ListSimpleUsageShowcase = (props) => {\n\n  const data = new Array(8).fill(SAMPLE_DATA);\n\n  const renderItem = ({ item, index }) => (\n    <ListItem title={`${item.title} ${index + 1}`} />\n  );\n\n  return (\n    <List\n      style={styles.list}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  list: {\n    height: 150,\n  },\n});\n","import React from 'react';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Item 1' },\n    { title: 'Item 2', disabled: true },\n    { title: 'Item 3' },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuWithSubMenuShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Item 1' },\n    {\n      title: 'Item 2',\n      subItems: [\n        { title: 'Sub Item 1' },\n        { title: 'Sub Item 2' },\n      ],\n    },\n    { title: 'Item 3' },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuAppearanceShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Item 1' },\n    { title: 'Item 2' },\n    { title: 'Item 3' },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        appearance='noDivider'\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Menu,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport class MenuWithIconsShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    {\n      title: 'Item 1',\n      icon: StarIcon,\n    },\n    {\n      title: 'Item 2',\n      icon: StarIcon,\n    },\n    {\n      title: 'Item 3',\n      icon: StarIcon,\n    },\n    {\n      title: 'Item 4',\n      icon: StarIcon,\n    },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuInlineStylingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    {\n      title: 'Item 1',\n      titleStyle: styles.menuItemTitle,\n    },\n    { title: 'Item 2' },\n    {\n      title: 'Item 3',\n      titleStyle: styles.menuItemTitle,\n    },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  menuItemTitle: {\n    color: 'black',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nexport class OverflowMenuWithoutDividerShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1' },\n    { title: 'Menu Item 2' },\n    { title: 'Menu Item 3' },\n    { title: 'Menu Item 4' },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  onToggleButtonPress = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          appearance='noDivider'\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.onToggleButtonPress}>\n          <Button onPress={this.onToggleButtonPress}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport {\n  Image,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nconst RemoteStarIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}\n  />\n);\n\nexport class OverflowMenuExternalSourceIconsShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1', icon: RemoteStarIcon },\n    { title: 'Menu Item 2', icon: RemoteStarIcon },\n    { title: 'Menu Item 3', icon: RemoteStarIcon },\n    { title: 'Menu Item 4', icon: RemoteStarIcon },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  onToggleButtonPress = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.onToggleButtonPress}>\n          <Button onPress={this.onToggleButtonPress}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nexport class OverflowMenuSimpleUsageShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1' },\n    { title: 'Menu Item 2' },\n    { title: 'Menu Item 3' },\n    { title: 'Menu Item 4' },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  onToggleButtonPress = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.onToggleButtonPress}>\n          <Button onPress={this.onToggleButtonPress}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nexport class OverflowMenuWithDisabledItemsShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1' },\n    { title: 'Menu Item 2', disabled: true },\n    { title: 'Menu Item 3' },\n    { title: 'Menu Item 4' },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  onToggleButtonPress = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.onToggleButtonPress}>\n          <Button onPress={this.onToggleButtonPress}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Icon,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport class OverflowMenuWithIconsShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1', icon: StarIcon },\n    { title: 'Menu Item 2', icon: StarIcon },\n    { title: 'Menu Item 3', icon: StarIcon },\n    { title: 'Menu Item 4', icon: StarIcon },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  onToggleButtonPress = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.onToggleButtonPress}>\n          <Button onPress={this.onToggleButtonPress}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  Popover,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class PopoverSimpleUsageShowcase extends React.Component {\n\n  state = {\n    popoverVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const popoverVisible = !this.state.popoverVisible;\n    this.setState({ popoverVisible });\n  };\n\n  renderPopoverContent = () => (\n    <Layout style={styles.popoverContent}>\n      <Text>Hi! This is popover.</Text>\n    </Layout>\n  );\n\n  render() {\n    return (\n      <Popover\n        visible={this.state.popoverVisible}\n        content={this.renderPopoverContent()}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE POPOVER\n        </Button>\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  popoverContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Popover,\n  Button,\n  Text,\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class PopoverPlacementShowcase extends React.Component {\n\n  state = {\n    visible: false,\n    placement: { text: 'top' },\n  };\n\n  placements = [\n    { text: 'top' },\n    { text: 'top start' },\n    { text: 'top end' },\n    { text: 'left' },\n    { text: 'left start' },\n    { text: 'left end' },\n    { text: 'right' },\n    { text: 'right start' },\n    { text: 'right end' },\n    { text: 'bottom' },\n    { text: 'bottom start' },\n    { text: 'bottom end' },\n  ];\n\n  setVisible = () => {\n    const visible = !this.state.visible;\n\n    this.setState({ visible });\n  };\n\n  setPlacement = (placement) => {\n    this.setState({ placement });\n  };\n\n  renderPopoverContent = () => (\n    <Layout style={styles.popoverContent}>\n      <Text>Hi! This is popover.</Text>\n    </Layout>\n  );\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Select\n          label='Select Popover Placement'\n          data={this.placements}\n          selectedOption={this.state.placement}\n          onSelect={this.setPlacement}\n        />\n        <View style={styles.subContainer}>\n          <Popover\n            visible={this.state.visible}\n            placement={this.state.placement.text}\n            content={this.renderPopoverContent()}\n            onBackdropPress={this.setVisible}>\n            <Button\n              size='giant'\n              onPress={this.setVisible}>\n              SHOW POPOVER\n            </Button>\n          </Popover>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  subContainer: {\n    height: 400,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  button: {\n    width: 150,\n  },\n  popoverContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  select: {\n    position: 'absolute',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Radio,\n} from 'react-native-ui-kitten';\n\nexport class RadioSimpleUsageShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Radio\n          style={styles.radio}\n          text='Active'\n          checked={this.state.checked}\n          onChange={this.onChange}\n        />\n        <Radio\n          style={styles.radio}\n          text='Disabled'\n          disabled={true}\n        />\n        <Radio\n          style={styles.radio}\n          text='Checked Disabled'\n          checked={true}\n          disabled={true}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  radio: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n\n","import React from 'react';\nimport { Radio } from 'react-native-ui-kitten';\n\nexport class RadioWithTextShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Radio\n        text='Place your Text'\n        checked={this.state.checked}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Radio,\n} from 'react-native-ui-kitten';\n\nexport class RadioStatusShowcase extends React.Component {\n\n  state = {\n    primaryChecked: false,\n    successChecked: false,\n    infoChecked: false,\n    warningChecked: false,\n    dangerChecked: false,\n    basicChecked: false,\n  };\n\n  onPrimaryChange = (primaryChecked) => {\n    this.setState({ primaryChecked });\n  };\n\n  onSuccessChange = (successChecked) => {\n    this.setState({ successChecked });\n  };\n\n  onInfoChange = (infoChecked) => {\n    this.setState({ infoChecked });\n  };\n\n  onWarningChange = (warningChecked) => {\n    this.setState({ warningChecked });\n  };\n\n  onDangerChange = (dangerChecked) => {\n    this.setState({ dangerChecked });\n  };\n\n  onBasicChange = (basicChecked) => {\n    this.setState({ basicChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Radio\n          style={styles.radio}\n          status='primary'\n          text='Primary'\n          checked={this.state.primaryChecked}\n          onChange={this.onPrimaryChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='success'\n          text='Success'\n          checked={this.state.successChecked}\n          onChange={this.onSuccessChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='info'\n          text='Info'\n          checked={this.state.infoChecked}\n          onChange={this.onInfoChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='warning'\n          text='Warning'\n          checked={this.state.warningChecked}\n          onChange={this.onWarningChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='danger'\n          text='Danger'\n          checked={this.state.dangerChecked}\n          onChange={this.onDangerChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='basic'\n          text='Basic'\n          checked={this.state.basicChecked}\n          onChange={this.onBasicChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  radio: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Radio } from 'react-native-ui-kitten';\n\nexport class RadioInlineStylingShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Radio\n        style={styles.radio}\n        textStyle={styles.radioText}\n        checked={this.state.checked}\n        text='Place your text'\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  radio: {\n    width: 32,\n    height: 32,\n  },\n  radioText: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Radio,\n  RadioGroup,\n} from 'react-native-ui-kitten';\n\nexport class RadioGroupSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onChange = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <RadioGroup\n        style={styles.container}\n        selectedIndex={this.state.selectedIndex}\n        onChange={this.onChange}>\n        <Radio style={styles.radio} text='Option 1' />\n        <Radio style={styles.radio} text='Option 2' />\n        <Radio style={styles.radio} text='Option 3' />\n      </RadioGroup>\n    );\n  }\n}\n\nexport const styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  radio: {\n    marginVertical: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectSimpleUsageShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3', disabled: true },\n    { text: 'Option 4' },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          style={styles.select}\n          data={this.data}\n          placeholder='Active'\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n        <Select\n          style={styles.select}\n          data={this.data}\n          placeholder='Disabled'\n          disabled={true}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: 230,\n    paddingVertical: 8,\n    paddingHorizontal: 4,\n  },\n  select: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectMultiSelectShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: [],\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          multiSelect={true}\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectWithGroupsShowcase extends React.Component {\n\n  items = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    {\n      text: 'Option 3',\n      items: [\n        { text: 'SubOption 1' },\n        { text: 'SubOption 2' },\n      ],\n    },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.items}\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 280,\n    padding: 16,\n  },\n});\n\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Select,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class SelectCustomIconShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  renderIcon = (style, visible) => {\n    const iconName = visible ? 'arrow-ios-upward' : 'arrow-ios-downward';\n    return (\n      <Icon {...style} name={iconName}/>\n    );\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          selectedOption={this.state.selectedOption}\n          icon={this.renderIcon}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectStatusShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOptionPrimary: null,\n    selectedOptionSuccess: null,\n    selectedOptionInfo: null,\n    selectedOptionDanger: null,\n    selectedOptionWarning: null,\n    selectedOptionBasic: null,\n  };\n\n  onPrimarySelect = (selectedOptionPrimary) => {\n    this.setState({ selectedOptionPrimary });\n  };\n\n  onSuccessSelect = (selectedOptionSuccess) => {\n    this.setState({ selectedOptionSuccess });\n  };\n\n  onInfoSelect = (selectedOptionInfo) => {\n    this.setState({ selectedOptionInfo });\n  };\n\n  onDangerSelect = (selectedOptionDanger) => {\n    this.setState({ selectedOptionDanger });\n  };\n\n  onWarningSelect = (selectedOptionWarning) => {\n    this.setState({ selectedOptionWarning });\n  };\n\n  onBasicSelect = (selectedOptionBasic) => {\n    this.setState({ selectedOptionBasic });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          status='primary'\n          placeholder='Primary'\n          selectedOption={this.state.selectedOptionPrimary}\n          onSelect={this.onPrimarySelect}\n        />\n        <Select\n          data={this.data}\n          status='success'\n          placeholder='Success'\n          selectedOption={this.state.selectedOptionSuccess}\n          onSelect={this.onSuccessSelect}\n        />\n        <Select\n          data={this.data}\n          status='info'\n          placeholder='Info'\n          selectedOption={this.state.selectedOptionInfo}\n          onSelect={this.onInfoSelect}\n        />\n        <Select\n          data={this.data}\n          status='warning'\n          placeholder='Warning'\n          selectedOption={this.state.selectedOptionWarning}\n          onSelect={this.onWarningSelect}\n        />\n        <Select\n          data={this.data}\n          status='danger'\n          placeholder='Danger'\n          selectedOption={this.state.selectedOptionDanger}\n          onSelect={this.onDangerSelect}\n        />\n        <Select\n          data={this.data}\n          status='basic'\n          placeholder='Basic'\n          selectedOption={this.state.selectedOptionBasic}\n          onSelect={this.onBasicSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectInlineStylingShowcase extends React.Component {\n\n  private data = [\n    { text: 'Option 1' },\n    { text: 'Option 2', textStyle: styles.option2 },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          labelStyle={styles.labelStyle}\n          placeholderStyle={styles.placeholderStyle}\n          controlStyle={styles.controlStyle}\n          data={this.data}\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n  labelStyle: {\n    color: 'gray',\n  },\n  placeholderStyle: {\n    color: 'gray',\n  },\n  controlStyle: {\n    borderRadius: 8,\n  },\n  option2: {\n    color: 'red',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  List,\n  ListItem,\n  Spinner,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Title for Item',\n};\n\nexport class SpinnerDataLoadingShowcase extends React.Component {\n\n  state = {\n    data: [],\n  };\n\n  componentDidMount() {\n    setTimeout(this.loadData, 5000);\n  }\n\n  loadData = () => {\n    const data = new Array(8).fill(SAMPLE_DATA);\n    this.setState({ data });\n  };\n\n  private renderLoading = () => (\n    <View style={styles.loading}>\n      <Spinner/>\n    </View>\n  );\n\n  renderDataItem = ({ item, index }) => (\n    <ListItem title={`${item.title} ${index + 1}`}/>\n  );\n\n  renderData = () => (\n    <List\n      data={this.state.data}\n      renderItem={this.renderDataItem}\n    />\n  );\n\n  render() {\n    const isLoaded: boolean = this.state.data.length > 0;\n    return isLoaded ? this.renderData() : this.renderLoading();\n  }\n}\n\nconst styles = StyleSheet.create({\n  loading: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { Spinner } from 'react-native-ui-kitten';\n\nexport const SpinnerSimpleUsageShowcase = () => (\n  <Spinner/>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Spinner,\n} from 'react-native-ui-kitten';\n\nexport const SpinnerSizesShowcase = () => (\n  <Layout style={styles.container}>\n    <Spinner size='tiny'/>\n    <Spinner size='small'/>\n    <Spinner size='medium'/>\n    <Spinner size='large'/>\n    <Spinner size='giant'/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Spinner,\n} from 'react-native-ui-kitten';\n\nexport const SpinnerStatusesShowcase = () => (\n  <Layout style={styles.container}>\n    <Spinner status='primary'/>\n    <Spinner status='success'/>\n    <Spinner status='info'/>\n    <Spinner status='warning'/>\n    <Spinner status='danger'/>\n    <Spinner status='alternative'/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport {\n  Tab,\n  TabBar,\n} from 'react-native-ui-kitten';\n\nexport class TabBarSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onBarSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <TabBar\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onBarSelect}>\n        <Tab title='Tab 1'/>\n        <Tab title='Tab 2'/>\n        <Tab title='Tab 3'/>\n      </TabBar>\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Tab } from 'react-native-ui-kitten';\n\nexport const TabInlineStylingShowcase = (props) => (\n  <Tab\n    style={styles.tab}\n    titleStyle={styles.tabTitle}\n    title='DASHBOARD'\n  />\n);\n\nconst styles = StyleSheet.create({\n  tab: { backgroundColor: '#EDF1F7' },\n  tabTitle: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { Tab } from 'react-native-ui-kitten';\n\nexport const TabSimpleUsageShowcase = (props) => (\n  <Tab title='Tab Title' />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Tab,\n  TabView,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TabViewInlineStylingShowcase = (props) => (\n  <TabView\n    style={styles.tabView}\n    tabBarStyle={styles.tabBar}\n    indicatorStyle={styles.tabViewIndicator}>\n    <Tab title='DASHBOARD'>\n      <Text>DASHBOARD</Text>\n    </Tab>\n    <Tab title='SETTINGS'>\n      <Text>SETTINGS</Text>\n    </Tab>\n  </TabView>\n);\n\nconst styles = StyleSheet.create({\n  tabView: { backgroundColor: '#EDF1F7' },\n  tabBar: { backgroundColor: '#C5CEE0' },\n  tabViewIndicator: { backgroundColor: '#3366FF' },\n});\n","import React from 'react';\nimport {\n  Tab,\n  TabView,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class TabViewLazyLoadingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  shouldLoadTabContent = (index) => {\n    return index === this.state.selectedIndex;\n  };\n\n  render() {\n    return (\n      <TabView\n        selectedIndex={this.state.selectedIndex}\n        shouldLoadComponent={this.shouldLoadTabContent}\n        onSelect={this.onSelect}>\n        <Tab title='DASHBOARD'>\n          <Text>DASHBOARD</Text>\n        </Tab>\n        <Tab title='SETTINGS'>\n          <Text>SETTINGS</Text>\n        </Tab>\n      </TabView>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Tab,\n  TabView,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class TabViewSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <TabView\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}>\n        <Tab title='DASHBOARD'>\n          <Text>DASHBOARD</Text>\n        </Tab>\n        <Tab title='SETTINGS'>\n          <Text>SETTINGS</Text>\n        </Tab>\n      </TabView>\n    );\n  }\n}\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Tab } from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Image style={style} source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/layout.png' }}/>\n);\n\nexport const TabWithExternalSourceIconShowcase = (props) => (\n  <Tab title='DASHBOARD' icon={DashboardIcon}/>\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Tab,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nexport const TabWithIconShowcase = (props) => (\n  <Tab title='DASHBOARD' icon={DashboardIcon}/>\n);\n","import React from 'react';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TextAppearancesShowcase = () => (\n  <Layout>\n    <Text appearance='default'>Default</Text>\n    <Text appearance='alternative'>Alternative</Text>\n    <Text appearance='hint'>Hint</Text>\n  </Layout>\n);\n","import React from 'react';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TextCategoriesShowcase = () => (\n  <Layout>\n    <Text category='h1'>H1</Text>\n    <Text category='h2'>H2</Text>\n    <Text category='h3'>H3</Text>\n    <Text category='h4'>H4</Text>\n    <Text category='h5'>H5</Text>\n    <Text category='h6'>H6</Text>\n    <Text category='s1'>S1</Text>\n    <Text category='s2'>S2</Text>\n    <Text category='p1'>P1</Text>\n    <Text category='p2'>P2</Text>\n    <Text category='c1'>C1</Text>\n    <Text category='c2'>C2</Text>\n    <Text category='label'>LABEL</Text>\n  </Layout>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Text } from 'react-native-ui-kitten';\n\nexport const TextInlineStylingShowcase = () => (\n  <Text style={styles.text}>Sample Text</Text>\n);\n\nconst styles = StyleSheet.create({\n  text: {\n    color: '#3366FF',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { Text } from 'react-native-ui-kitten';\n\nexport const TextSimpleUsageShowcase = () => (\n  <Text>Sample Text</Text>\n);\n","import React from 'react';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TextStatusesShowcase = () => (\n  <Layout>\n    <Text status='primary'>Primary</Text>\n    <Text status='success'>Success</Text>\n    <Text status='info'>Info</Text>\n    <Text status='warning'>Warning</Text>\n    <Text status='danger'>Danger</Text>\n  </Layout>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Toggle,\n} from 'react-native-ui-kitten';\n\nexport class ToggleSimpleUsageShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onToggleValueChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Toggle\n          style={styles.toggle}\n          text='Active'\n          checked={this.state.checked}\n          onChange={this.onToggleValueChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          text='Disabled'\n          disabled={true}\n        />\n        <Toggle\n          style={styles.toggle}\n          text='Checked Disabled'\n          checked={true}\n          disabled={true}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  toggle: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Toggle,\n} from 'react-native-ui-kitten';\n\nexport class ToggleStatusShowcase extends React.Component {\n\n  state = {\n    primaryChecked: false,\n    successChecked: false,\n    infoChecked: false,\n    warningChecked: false,\n    dangerChecked: false,\n    basicChecked: false,\n  };\n\n  onPrimaryChange = (primaryChecked) => {\n    this.setState({ primaryChecked });\n  };\n\n  onSuccessChange = (successChecked) => {\n    this.setState({ successChecked });\n  };\n\n  onInfoChange = (infoChecked) => {\n    this.setState({ infoChecked });\n  };\n\n  onWarningChange = (warningChecked) => {\n    this.setState({ warningChecked });\n  };\n\n  onDangerChange = (dangerChecked) => {\n    this.setState({ dangerChecked });\n  };\n\n  onBasicChange = (basicChecked) => {\n    this.setState({ basicChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.primaryChecked}\n          text='Primary'\n          status='primary'\n          onChange={this.onPrimaryChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.successChecked}\n          text='Success'\n          status='success'\n          onChange={this.onSuccessChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.infoChecked}\n          text='Info'\n          status='info'\n          onChange={this.onInfoChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.warningChecked}\n          text='Warning'\n          status='warning'\n          onChange={this.onWarningChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.dangerChecked}\n          text='Danger'\n          status='danger'\n          onChange={this.onDangerChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.basicChecked}\n          text='Basic'\n          status='basic'\n          onChange={this.onBasicChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  toggle: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Toggle,\n} from 'react-native-ui-kitten';\n\nexport class ToggleSizeShowcase extends React.Component {\n\n  state = {\n    tinyChecked: false,\n    smallChecked: false,\n    mediumChecked: false,\n    largeChecked: false,\n    giantChecked: false,\n  };\n\n  onTinyChange = (tinyChecked) => {\n    this.setState({ tinyChecked });\n  };\n\n  onSmallChange = (smallChecked) => {\n    this.setState({ smallChecked });\n  };\n\n  onMediumChange = (mediumChecked) => {\n    this.setState({ mediumChecked });\n  };\n\n  onLargeChange = (largeChecked) => {\n    this.setState({ largeChecked });\n  };\n\n  onGiantChange = (giantChecked) => {\n    this.setState({ giantChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.tinyChecked}\n          text='Tiny'\n          size='tiny'\n          onChange={this.onTinyChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.smallChecked}\n          text='Small'\n          size='small'\n          onChange={this.onSmallChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.mediumChecked}\n          text='Medium'\n          size='medium'\n          onChange={this.onMediumChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.largeChecked}\n          text='Large'\n          size='large'\n          onChange={this.onLargeChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.giantChecked}\n          text='Giant'\n          size='giant'\n          onChange={this.onGiantChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  toggle: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { Toggle } from 'react-native-ui-kitten';\n\nexport class ToggleWithTextShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Toggle\n        checked={this.state.checked}\n        text='Place your Text'\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Toggle } from 'react-native-ui-kitten';\n\nexport class ToggleInlineStylingShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onToggleValueChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Toggle\n        checked={this.state.checked}\n        text='Place your Text'\n        textStyle={styles.text}\n        onChange={this.onToggleValueChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    color: '#3366FF',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nexport class TooltipInlineStylingShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        textStyle={styles.tooltipText}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tooltipText: {\n    color: 'white',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport {\n  Button,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nexport class TooltipSimpleUsageShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport { Image } from 'react-native';\nimport {\n  Button,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nconst InfoIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/info.png' }}\n  />\n);\n\nexport class TooltipWithExternalSourceIconShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        icon={InfoIcon}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nconst InfoIcon = (style) => (\n  <Icon {...style} name='info'/>\n);\n\nexport class TooltipWithIconShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        icon={InfoIcon}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Tooltip,\n  Button,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class TooltipPlacementShowcase extends React.Component {\n\n  state = {\n    visible: false,\n    placement: { text: 'top' },\n  };\n\n  placements = [\n    { text: 'top' },\n    { text: 'top start' },\n    { text: 'top end' },\n    { text: 'left' },\n    { text: 'left start' },\n    { text: 'left end' },\n    { text: 'right' },\n    { text: 'right start' },\n    { text: 'right end' },\n    { text: 'bottom' },\n    { text: 'bottom start' },\n    { text: 'bottom end' },\n  ];\n\n  setVisible = () => {\n    const visible = !this.state.visible;\n\n    this.setState({ visible });\n  };\n\n  setPlacement = (placement) => {\n    this.setState({ placement });\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Select\n          label='Select Tooltip Placement'\n          data={this.placements}\n          selectedOption={this.state.placement}\n          onSelect={this.setPlacement}\n        />\n        <View style={styles.subContainer}>\n          <Tooltip\n            visible={this.state.visible}\n            placement={this.state.placement.text}\n            text='Hi! This is tooltip.'\n            onBackdropPress={this.setVisible}>\n            <Button\n              size='giant'\n              onPress={this.setVisible}>\n              SHOW TOOLTIP\n            </Button>\n          </Tooltip>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  subContainer: {\n    height: 400,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  button: {\n    width: 150,\n  },\n  select: {\n    position: 'absolute',\n  },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { TopNavigationAction } from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Image\n    style={style}\n    source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/arrow-back.png'}}\n  />\n);\n\nexport const TopNavigationActionExternalSourceIconShowcase = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst EditIcon = (style) => (\n  <Icon {...style} name='edit' />\n);\n\nexport const TopNavigationActionInlineStylingShowcase = () => (\n  <TopNavigationAction\n    style={styles.action}\n    icon={EditIcon}\n  />\n);\n\nconst styles = StyleSheet.create({\n  action: { marginHorizontal: 4 },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nconst EditIcon = (style) => (\n  <Icon {...style} name='edit'/>\n);\n\nconst MenuIcon = (style) => (\n  <Icon {...style} name='more-vertical'/>\n);\n\nconst BackAction = (props) => (\n  <TopNavigationAction {...props} icon={BackIcon}/>\n);\n\nconst EditAction = (props) => (\n  <TopNavigationAction {...props} icon={EditIcon}/>\n);\n\nconst MenuAction = (props) => (\n  <TopNavigationAction {...props} icon={MenuIcon}/>\n);\n\nexport const TopNavigationActionsShowcase = () => {\n\n  const onBackPress = () => {\n  };\n\n  const renderLeftControl = () => (\n    <BackAction onPress={onBackPress}/>\n  );\n\n  const renderRightControls = () => [\n    <EditAction/>,\n    <MenuAction/>,\n  ];\n\n  return (\n    <TopNavigation\n      title='Application Title'\n      leftControl={renderLeftControl()}\n      rightControls={renderRightControls()}\n    />\n  );\n};\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nexport const TopNavigationActionSimpleUsageShowcase = () => (\n  <TopNavigationAction icon={BackIcon} />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Layout,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back' />\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationAlignmentsShowcase = () => (\n  <Layout>\n    <TopNavigation\n      title='Start'\n      alignment='start'\n      leftControl={BackAction()}\n    />\n    <TopNavigation\n      title='Center'\n      alignment='center'\n      leftControl={BackAction()}\n    />\n  </Layout>\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back' />\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationInlineStylingShowcase = () => (\n  <TopNavigation\n    style={styles.topNavigation}\n    title='Title'\n    subtitle='Subtitle'\n    leftControl={BackAction()}\n    titleStyle={styles.title}\n    subtitleStyle={styles.subtitle}\n  />\n);\n\nconst styles = StyleSheet.create({\n  topNavigation: { backgroundColor: '#1A2138' },\n  title: { color: '#EDF1F7' },\n  subtitle: { color: '#C5CEE0' },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back' />\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationSimpleUsageShowcase = () => (\n  <TopNavigation\n    leftControl={BackAction()}\n    title='Application Title'\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  Layout,\n  OverflowMenu,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nconst MenuIcon = (style) => (\n  <Icon {...style} name='more-vertical'/>\n);\n\nconst InfoIcon = (style) => (\n  <Icon {...style} name='info'/>\n);\n\nconst LogoutIcon = (style) => (\n  <Icon {...style} name='log-out'/>\n);\n\nexport class TopNavigationWithMenuShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n  };\n\n  menuData = [\n    { title: 'About', icon: InfoIcon },\n    { title: 'Logout', icon: LogoutIcon },\n  ];\n\n  onMenuActionPress = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  onMenuItemSelect = (index) => {\n    // Handle Item Select\n\n    this.setState({ menuVisible: false });\n  };\n\n  renderMenuAction = () => (\n    <OverflowMenu\n      visible={this.state.menuVisible}\n      data={this.menuData}\n      placement='bottom end'\n      onSelect={this.onMenuItemSelect}\n      onBackdropPress={this.onMenuActionPress}>\n      <TopNavigationAction\n        icon={MenuIcon}\n        onPress={this.onMenuActionPress}\n      />\n    </OverflowMenu>\n  );\n\n  renderBackAction = () => (\n    <TopNavigationAction icon={BackIcon} />\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <TopNavigation\n          title='Application Title'\n          leftControl={this.renderBackAction()}\n          rightControls={this.renderMenuAction()}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 192,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ViewPager,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class ViewPagerInlineStylingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <ViewPager\n        style={styles.container}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 1</Text>\n        </Layout>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 2</Text>\n        </Layout>\n      </ViewPager>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n  },\n  tab: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ViewPager,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class ViewPagerLazyLoadingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  shouldLoadComponent = (index) => {\n    return index === this.state.selectedIndex;\n  };\n\n  render() {\n    return (\n      <ViewPager\n        selectedIndex={this.state.selectedIndex}\n        shouldLoadComponent={this.shouldLoadComponent}\n        onSelect={this.onSelect}>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 1</Text>\n        </Layout>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 2</Text>\n        </Layout>\n      </ViewPager>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n  ViewPager,\n} from 'react-native-ui-kitten';\n\nexport class ViewPagerSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onIndexChange = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <ViewPager\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onIndexChange}>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 1</Text>\n        </Layout>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 2</Text>\n        </Layout>\n      </ViewPager>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ImageProps,\n} from 'react-native';\nimport {\n  DrawerItemsProps,\n  NavigationRoute,\n  SafeAreaView,\n} from 'react-navigation';\nimport {\n  Drawer,\n  DrawerHeaderElement,\n  DrawerProps,\n  MenuItemType,\n  Text,\n  DrawerHeaderFooter,\n  Icon,\n  Divider,\n} from '@kitten/ui';\nimport { StyleType } from '@kitten/theme';\nimport { DrawerFooterElement } from '@kitten/ui/drawer/drawer.component';\n\nexport class DrawerNavigation extends React.Component<DrawerItemsProps> {\n\n  private onItemSelect = (index: number) => {\n    const { [index]: selectedRoute } = this.props.items;\n    this.props.navigation.navigate(selectedRoute.routeName);\n  };\n\n  private createDrawerItem = (source: NavigationRoute): MenuItemType => {\n    return {\n      title: source.routeName,\n      accessory: this.shouldRenderBadge(source) && this.renderBadge,\n    };\n  };\n\n  private shouldRenderBadge = (source: NavigationRoute): boolean => {\n    return source.routeName === 'Drawer';\n  };\n\n  private renderBadge = (style: StyleType): React.ReactElement<any> => {\n    return (\n      <View style={[style, styles.badge]}>\n        <Text category='c2'>NEW</Text>\n      </View>\n    );\n  };\n\n  private renderIcon = (style: StyleType): React.ReactElement<ImageProps> => {\n    return (\n      <Icon name='star' {...style}/>\n    );\n  };\n\n  private renderHeader = (): DrawerHeaderElement => {\n    return (\n      <React.Fragment>\n        <DrawerHeaderFooter\n          disabled={true}\n          title='UI Kitten'\n          description='Playground Module'\n          icon={this.renderIcon}\n        />\n        <Divider/>\n      </React.Fragment>\n    );\n  };\n\n  private renderFooter = (): DrawerFooterElement => {\n    return (\n      <React.Fragment>\n        <Divider/>\n        <DrawerHeaderFooter\n          disabled={true}\n          description='Version 4.2.0'\n        />\n      </React.Fragment>\n    );\n  };\n\n  public render(): React.ReactElement<DrawerProps> {\n    const drawerItems: MenuItemType[] = this.props.items.map(this.createDrawerItem);\n\n    return (\n      <SafeAreaView style={[styles.safeArea]}>\n        <Drawer\n          header={this.renderHeader}\n          footer={this.renderFooter}\n          data={drawerItems}\n          onSelect={this.onItemSelect}\n        />\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n  },\n  badge: {\n    paddingHorizontal: 8,\n    height: 24,\n    width: 48,\n    borderRadius: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'orange',\n  },\n});\n","import React from 'react';\nimport {\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Button,\n  Layout,\n  LayoutProps,\n  OverflowMenu,\n  OverflowMenuItemType,\n  IconElement,\n  Icon,\n  Text,\n} from 'react-native-ui-kitten';\nimport {\n  ThemeContext,\n  ThemeContextType,\n  ThemeKey,\n  themes,\n} from '../../src/themes';\n\ninterface Props {\n  showcaseId: string;\n}\n\nexport type SharingHeightContainerProps = LayoutProps & Props;\n\nconst ColorPaletteIcon = (style): IconElement => (\n  <Icon {...style} name='color-palette'/>\n);\n\nexport const sharingHeightContainer = (Component: React.ComponentType,\n                                       showcaseId: string): React.ReactElement<SharingHeightContainerProps> => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const themeContext: ThemeContextType = React.useContext(ThemeContext);\n\n  const onThemesButtonPress = (): void => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const onThemeSelect = (index: number): void => {\n    const { [index]: selectedTheme } = Object.keys(themes);\n\n    themeContext.toggleTheme(selectedTheme as ThemeKey);\n    setMenuVisible(false);\n  };\n\n  const onLayout = (event: LayoutChangeEvent): void => {\n    if (Platform.OS === 'web') {\n      postLayoutChangeEvent(event);\n    }\n  };\n\n  const postLayoutChangeEvent = ({ nativeEvent }: LayoutChangeEvent): void => {\n    const layoutChangeMessage: { height: number; id: string; } = {\n      id: showcaseId,\n      height: nativeEvent.layout.height,\n    };\n    window.parent.postMessage(layoutChangeMessage, '*');\n  };\n\n  const createThemeMenuItem = (theme: ThemeKey): OverflowMenuItemType => {\n    return {\n      title: theme,\n    };\n  };\n\n  const createThemesMenuItems = (): OverflowMenuItemType[] => {\n    return Object.keys(themes).map(createThemeMenuItem);\n  };\n\n  return (\n    <Layout\n      style={styles.container}\n      onLayout={onLayout}>\n      <View style={styles.optionsContainer}>\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <Icon\n            name='alert-triangle'\n            width={18}\n            height={18}\n            fill='#FFAA00'\n          />\n          <Text\n            style={{ marginLeft: 12 }}\n            appearance='hint'\n            category='c1'>\n            Experimental Preview\n          </Text>\n        </View>\n        <OverflowMenu\n          style={{ borderColor: \"#1A2138\", borderWidth: 1 }}\n          visible={menuVisible}\n          onSelect={onThemeSelect}\n          data={createThemesMenuItems()}\n          onBackdropPress={onThemesButtonPress}>\n          <Button\n            appearance='ghost'\n            status='basic'\n            size='small'\n            icon={ColorPaletteIcon}\n            onPress={onThemesButtonPress}>\n            {themeContext.name}\n          </Button>\n        </OverflowMenu>\n      </View>\n      <Component/>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 170,\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  warningContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  warningIcon: {\n    marginRight: 12,\n  },\n});\n","import React from \"react\";\nimport { Platform } from \"react-native\";\nimport { createAppContainer, createDrawerNavigator, createStackNavigator, NavigationRouteConfigMap } from \"react-navigation\";\nimport { createBrowserApp } from \"@react-navigation/web\";\nimport { AvatarContainer, BottomNavigationContainer, ButtonContainer, ButtonGroupContainer, CheckBoxContainer, DrawerContainer, Home, InputContainer, LayoutContainer, ListContainer, ModalContainer, OverflowMenuContainer, PopoverContainer, RadioContainer, RadioGroupContainer, SampleContainer, TabViewContainer, TextContainer, ToggleContainer, TooltipContainer, TopNavigationContainer, SelectContainer, SpinnerContainer, IconContainer, MenuContainer, CalendarContainer, DatepickerContainer, RangeCalendarContainer, AvatarInlineStylingShowcase, AvatarRemoteImagesShowcase, AvatarShapeShowcase, AvatarSimpleUsageShowcase, AvatarSizeShowcase, BottomNavigationInlineStylingShowcase, BottomNavigationSimpleUsageShowcase, BottomNavigationTabInlineStylingShowcase, BottomNavigationTabSimpleUsageShowcase, BottomNavigationTabWithExternalSourceIconShowcase, BottomNavigationTabWithIconShowcase, BottomNavigationWithIconsShowcase, BottomNavigationWithoutIndicatorShowcase, ButtonAppearancesShowcase, ButtonGhostShowcase, ButtonOutlineShowcase, ButtonSimpleUsageShowcase, ButtonSizeShowcase, ButtonStatusShowcase, ButtonWithIconShowcase, ButtonGroupAppearanceShowcase, ButtonGroupInlineStylingShowcase, ButtonGroupSimpleUsageShowcase, ButtonGroupSizeShowcase, ButtonGroupStatusShowcase, CalendarBoundingMonthShowcase, CalendarCustomDayShowcase, CalendarCustomLocaleShowcase, CalendarFilterShowcase, CalendarMomentShowcase, CalendarSimpleUsageShowcase, RangeCalendarSimpleUsageShowcase, CheckboxIndeterminateShowcase, CheckboxInlineStylingShowcase, CheckboxSimpleUsageShowcase, CheckboxStatusShowcase, CheckboxTextShowcase, DatepickerBoundingMonthShowcase, DatepickerCustomDayShowcase, DatepickerCustomLocaleShowcase, DatepickerFilterShowcase, DatepickerMomentShowcase, DatepickerSimpleUsageShowcase, DatepickerWithIconShowcase, RangeDatepickerSimpleUsageShowcase, DrawerCustomHeaderShowcase, DrawerFooterShowcase, DrawerHeaderShowcase, DrawerHeaderFooterInlineStylingShowcase, DrawerHeaderFooterSimpleUsageShowcase, DrawerHeaderFooterWithAccessoryShowcase, DrawerHeaderFooterWithExternalSourceIconShowcase, DrawerNotificationBadgeItemShowcase, DrawerSimpleUsageShowcase, DrawerWithIconsShowcase, IconAnimationShowcase, IconAnimationInfiniteShowcase, IconExternalSourceShowcase, IconInlineStylingShowcase, IconSimpleUsageShowcase, IconWithinButtonShowcase, IconWithinInputShowcase, InputInlineStylingShowcase, InputSimpleUsageShowcase, InputSizeShowcase, InputStatusShowcase, InputWithCaptionShowcase, InputWithExternalSourceIconShowcase, InputWithIconShowcase, InputWithLabelShowcase, LayoutInlineStylingShowcase, LayoutLevelShowcase, LayoutSimpleUsageShowcase, ListCompositeItemShowcase, ListInlineStylingShowcase, ListItemInlineStylingShowcase, ListItemSimpleUsageShowcase, ListItemWithAccessoryShowcase, ListItemWithExternalIconShowcase, ListItemWithIconShowcase, ListSimpleUsageShowcase, MenuAppearanceShowcase, MenuInlineStylingShowcase, MenuSimpleUsageShowcase, MenuWithIconsShowcase, MenuWithSubMenuShowcase, OverflowMenuWithoutDividerShowcase, OverflowMenuExternalSourceIconsShowcase, OverflowMenuSimpleUsageShowcase, OverflowMenuWithDisabledItemsShowcase, OverflowMenuWithIconsShowcase, PopoverPlacementShowcase, PopoverSimpleUsageShowcase, RadioInlineStylingShowcase, RadioSimpleUsageShowcase, RadioStatusShowcase, RadioWithTextShowcase, RadioGroupSimpleUsageShowcase, SelectCustomIconShowcase, SelectInlineStylingShowcase, SelectMultiSelectShowcase, SelectSimpleUsageShowcase, SelectStatusShowcase, SelectWithGroupsShowcase, SpinnerDataLoadingShowcase, SpinnerSimpleUsageShowcase, SpinnerSizesShowcase, SpinnerStatusesShowcase, TabBarSimpleUsageShowcase, TabInlineStylingShowcase, TabSimpleUsageShowcase, TabViewInlineStylingShowcase, TabViewLazyLoadingShowcase, TabViewSimpleUsageShowcase, TabWithExternalSourceIconShowcase, TabWithIconShowcase, TextAppearancesShowcase, TextCategoriesShowcase, TextInlineStylingShowcase, TextSimpleUsageShowcase, TextStatusesShowcase, ToggleInlineStylingShowcase, ToggleSimpleUsageShowcase, ToggleSizeShowcase, ToggleStatusShowcase, ToggleWithTextShowcase, TooltipInlineStylingShowcase, TooltipPlacementShowcase, TooltipSimpleUsageShowcase, TooltipWithExternalSourceIconShowcase, TooltipWithIconShowcase, TopNavigationActionExternalSourceIconShowcase, TopNavigationActionInlineStylingShowcase, TopNavigationActionsShowcase, TopNavigationActionSimpleUsageShowcase, TopNavigationAlignmentsShowcase, TopNavigationInlineStylingShowcase, TopNavigationSimpleUsageShowcase, TopNavigationWithMenuShowcase, ViewPagerInlineStylingShowcase, ViewPagerLazyLoadingShowcase, ViewPagerSimpleUsageShowcase } from \"../ui/screen\";\nimport { DrawerNavigation } from \"./drawerNavigation.component\";\nimport { sharingHeightContainer } from \"./sharingHeight.container\";\n\nexport interface RouteType {\n    name: string;\n}\n\nconst routes: NavigationRouteConfigMap = {\n      ['Home']: Home,\n      ['Avatar']: AvatarContainer,\n      ['Bottom Navigation']: BottomNavigationContainer,\n      ['Button']: ButtonContainer,\n      ['Button Group']: ButtonGroupContainer,\n      ['Calendar']: CalendarContainer,\n      ['Range Calendar']: RangeCalendarContainer,\n      ['Checkbox']: CheckBoxContainer,\n      ['Drawer']: DrawerContainer,\n      ['Datepicker']: DatepickerContainer,\n      ['Icon']: IconContainer,\n      ['Input']: InputContainer,\n      ['Layout']: LayoutContainer,\n      ['List']: ListContainer,\n      ['Menu']: MenuContainer,\n      ['Modal']: ModalContainer,\n      ['Popover']: PopoverContainer,\n      ['Radio']: RadioContainer,\n      ['Radio Group']: RadioGroupContainer,\n      ['Spinner']: SpinnerContainer,\n      ['Tab View']: TabViewContainer,\n      ['Tooltip']: TooltipContainer,\n      ['Text']: TextContainer,\n      ['Toggle']: ToggleContainer,\n      ['Top Navigation']: TopNavigationContainer,\n      ['Overflow Menu']: OverflowMenuContainer,\n      ['Sample']: SampleContainer,\n      ['Select']: SelectContainer,\n    ['AvatarInlineStyling']: () => sharingHeightContainer(AvatarInlineStylingShowcase, 'AvatarInlineStyling')\n    ,['AvatarRemoteImages']: () => sharingHeightContainer(AvatarRemoteImagesShowcase, 'AvatarRemoteImages')\n    ,['AvatarShape']: () => sharingHeightContainer(AvatarShapeShowcase, 'AvatarShape')\n    ,['AvatarSimpleUsage']: () => sharingHeightContainer(AvatarSimpleUsageShowcase, 'AvatarSimpleUsage')\n    ,['AvatarSize']: () => sharingHeightContainer(AvatarSizeShowcase, 'AvatarSize')\n    ,['BottomNavigationInlineStyling']: () => sharingHeightContainer(BottomNavigationInlineStylingShowcase, 'BottomNavigationInlineStyling')\n    ,['BottomNavigationSimpleUsage']: () => sharingHeightContainer(BottomNavigationSimpleUsageShowcase, 'BottomNavigationSimpleUsage')\n    ,['BottomNavigationTabInlineStyling']: () => sharingHeightContainer(BottomNavigationTabInlineStylingShowcase, 'BottomNavigationTabInlineStyling')\n    ,['BottomNavigationTabSimpleUsage']: () => sharingHeightContainer(BottomNavigationTabSimpleUsageShowcase, 'BottomNavigationTabSimpleUsage')\n    ,['BottomNavigationTabWithExternalSourceIcon']: () => sharingHeightContainer(BottomNavigationTabWithExternalSourceIconShowcase, 'BottomNavigationTabWithExternalSourceIcon')\n    ,['BottomNavigationTabWithIcon']: () => sharingHeightContainer(BottomNavigationTabWithIconShowcase, 'BottomNavigationTabWithIcon')\n    ,['BottomNavigationWithIcons']: () => sharingHeightContainer(BottomNavigationWithIconsShowcase, 'BottomNavigationWithIcons')\n    ,['BottomNavigationWithoutIndicator']: () => sharingHeightContainer(BottomNavigationWithoutIndicatorShowcase, 'BottomNavigationWithoutIndicator')\n    ,['ButtonAppearances']: () => sharingHeightContainer(ButtonAppearancesShowcase, 'ButtonAppearances')\n    ,['ButtonGhost']: () => sharingHeightContainer(ButtonGhostShowcase, 'ButtonGhost')\n    ,['ButtonOutline']: () => sharingHeightContainer(ButtonOutlineShowcase, 'ButtonOutline')\n    ,['ButtonSimpleUsage']: () => sharingHeightContainer(ButtonSimpleUsageShowcase, 'ButtonSimpleUsage')\n    ,['ButtonSize']: () => sharingHeightContainer(ButtonSizeShowcase, 'ButtonSize')\n    ,['ButtonStatus']: () => sharingHeightContainer(ButtonStatusShowcase, 'ButtonStatus')\n    ,['ButtonWithIcon']: () => sharingHeightContainer(ButtonWithIconShowcase, 'ButtonWithIcon')\n    ,['ButtonGroupAppearance']: () => sharingHeightContainer(ButtonGroupAppearanceShowcase, 'ButtonGroupAppearance')\n    ,['ButtonGroupInlineStyling']: () => sharingHeightContainer(ButtonGroupInlineStylingShowcase, 'ButtonGroupInlineStyling')\n    ,['ButtonGroupSimpleUsage']: () => sharingHeightContainer(ButtonGroupSimpleUsageShowcase, 'ButtonGroupSimpleUsage')\n    ,['ButtonGroupSize']: () => sharingHeightContainer(ButtonGroupSizeShowcase, 'ButtonGroupSize')\n    ,['ButtonGroupStatus']: () => sharingHeightContainer(ButtonGroupStatusShowcase, 'ButtonGroupStatus')\n    ,['CalendarBoundingMonth']: () => sharingHeightContainer(CalendarBoundingMonthShowcase, 'CalendarBoundingMonth')\n    ,['CalendarCustomDay']: () => sharingHeightContainer(CalendarCustomDayShowcase, 'CalendarCustomDay')\n    ,['CalendarCustomLocale']: () => sharingHeightContainer(CalendarCustomLocaleShowcase, 'CalendarCustomLocale')\n    ,['CalendarFilter']: () => sharingHeightContainer(CalendarFilterShowcase, 'CalendarFilter')\n    ,['CalendarMoment']: () => sharingHeightContainer(CalendarMomentShowcase, 'CalendarMoment')\n    ,['CalendarSimpleUsage']: () => sharingHeightContainer(CalendarSimpleUsageShowcase, 'CalendarSimpleUsage')\n    ,['RangeCalendarSimpleUsage']: () => sharingHeightContainer(RangeCalendarSimpleUsageShowcase, 'RangeCalendarSimpleUsage')\n    ,['CheckboxIndeterminate']: () => sharingHeightContainer(CheckboxIndeterminateShowcase, 'CheckboxIndeterminate')\n    ,['CheckboxInlineStyling']: () => sharingHeightContainer(CheckboxInlineStylingShowcase, 'CheckboxInlineStyling')\n    ,['CheckboxSimpleUsage']: () => sharingHeightContainer(CheckboxSimpleUsageShowcase, 'CheckboxSimpleUsage')\n    ,['CheckboxStatus']: () => sharingHeightContainer(CheckboxStatusShowcase, 'CheckboxStatus')\n    ,['CheckboxText']: () => sharingHeightContainer(CheckboxTextShowcase, 'CheckboxText')\n    ,['DatepickerBoundingMonth']: () => sharingHeightContainer(DatepickerBoundingMonthShowcase, 'DatepickerBoundingMonth')\n    ,['DatepickerCustomDay']: () => sharingHeightContainer(DatepickerCustomDayShowcase, 'DatepickerCustomDay')\n    ,['DatepickerCustomLocale']: () => sharingHeightContainer(DatepickerCustomLocaleShowcase, 'DatepickerCustomLocale')\n    ,['DatepickerFilter']: () => sharingHeightContainer(DatepickerFilterShowcase, 'DatepickerFilter')\n    ,['DatepickerMoment']: () => sharingHeightContainer(DatepickerMomentShowcase, 'DatepickerMoment')\n    ,['DatepickerSimpleUsage']: () => sharingHeightContainer(DatepickerSimpleUsageShowcase, 'DatepickerSimpleUsage')\n    ,['DatepickerWithIcon']: () => sharingHeightContainer(DatepickerWithIconShowcase, 'DatepickerWithIcon')\n    ,['RangeDatepickerSimpleUsage']: () => sharingHeightContainer(RangeDatepickerSimpleUsageShowcase, 'RangeDatepickerSimpleUsage')\n    ,['DrawerCustomHeader']: () => sharingHeightContainer(DrawerCustomHeaderShowcase, 'DrawerCustomHeader')\n    ,['DrawerFooter']: () => sharingHeightContainer(DrawerFooterShowcase, 'DrawerFooter')\n    ,['DrawerHeader']: () => sharingHeightContainer(DrawerHeaderShowcase, 'DrawerHeader')\n    ,['DrawerHeaderFooterInlineStyling']: () => sharingHeightContainer(DrawerHeaderFooterInlineStylingShowcase, 'DrawerHeaderFooterInlineStyling')\n    ,['DrawerHeaderFooterSimpleUsage']: () => sharingHeightContainer(DrawerHeaderFooterSimpleUsageShowcase, 'DrawerHeaderFooterSimpleUsage')\n    ,['DrawerHeaderFooterWithAccessory']: () => sharingHeightContainer(DrawerHeaderFooterWithAccessoryShowcase, 'DrawerHeaderFooterWithAccessory')\n    ,['DrawerHeaderFooterWithExternalSourceIcon']: () => sharingHeightContainer(DrawerHeaderFooterWithExternalSourceIconShowcase, 'DrawerHeaderFooterWithExternalSourceIcon')\n    ,['DrawerNotificationBadgeItem']: () => sharingHeightContainer(DrawerNotificationBadgeItemShowcase, 'DrawerNotificationBadgeItem')\n    ,['DrawerSimpleUsage']: () => sharingHeightContainer(DrawerSimpleUsageShowcase, 'DrawerSimpleUsage')\n    ,['DrawerWithIcons']: () => sharingHeightContainer(DrawerWithIconsShowcase, 'DrawerWithIcons')\n    ,['IconAnimation']: () => sharingHeightContainer(IconAnimationShowcase, 'IconAnimation')\n    ,['IconAnimationInfinite']: () => sharingHeightContainer(IconAnimationInfiniteShowcase, 'IconAnimationInfinite')\n    ,['IconExternalSource']: () => sharingHeightContainer(IconExternalSourceShowcase, 'IconExternalSource')\n    ,['IconInlineStyling']: () => sharingHeightContainer(IconInlineStylingShowcase, 'IconInlineStyling')\n    ,['IconSimpleUsage']: () => sharingHeightContainer(IconSimpleUsageShowcase, 'IconSimpleUsage')\n    ,['IconWithinButton']: () => sharingHeightContainer(IconWithinButtonShowcase, 'IconWithinButton')\n    ,['IconWithinInput']: () => sharingHeightContainer(IconWithinInputShowcase, 'IconWithinInput')\n    ,['InputInlineStyling']: () => sharingHeightContainer(InputInlineStylingShowcase, 'InputInlineStyling')\n    ,['InputSimpleUsage']: () => sharingHeightContainer(InputSimpleUsageShowcase, 'InputSimpleUsage')\n    ,['InputSize']: () => sharingHeightContainer(InputSizeShowcase, 'InputSize')\n    ,['InputStatus']: () => sharingHeightContainer(InputStatusShowcase, 'InputStatus')\n    ,['InputWithCaption']: () => sharingHeightContainer(InputWithCaptionShowcase, 'InputWithCaption')\n    ,['InputWithExternalSourceIcon']: () => sharingHeightContainer(InputWithExternalSourceIconShowcase, 'InputWithExternalSourceIcon')\n    ,['InputWithIcon']: () => sharingHeightContainer(InputWithIconShowcase, 'InputWithIcon')\n    ,['InputWithLabel']: () => sharingHeightContainer(InputWithLabelShowcase, 'InputWithLabel')\n    ,['LayoutInlineStyling']: () => sharingHeightContainer(LayoutInlineStylingShowcase, 'LayoutInlineStyling')\n    ,['LayoutLevel']: () => sharingHeightContainer(LayoutLevelShowcase, 'LayoutLevel')\n    ,['LayoutSimpleUsage']: () => sharingHeightContainer(LayoutSimpleUsageShowcase, 'LayoutSimpleUsage')\n    ,['ListCompositeItem']: () => sharingHeightContainer(ListCompositeItemShowcase, 'ListCompositeItem')\n    ,['ListInlineStyling']: () => sharingHeightContainer(ListInlineStylingShowcase, 'ListInlineStyling')\n    ,['ListItemInlineStyling']: () => sharingHeightContainer(ListItemInlineStylingShowcase, 'ListItemInlineStyling')\n    ,['ListItemSimpleUsage']: () => sharingHeightContainer(ListItemSimpleUsageShowcase, 'ListItemSimpleUsage')\n    ,['ListItemWithAccessory']: () => sharingHeightContainer(ListItemWithAccessoryShowcase, 'ListItemWithAccessory')\n    ,['ListItemWithExternalIcon']: () => sharingHeightContainer(ListItemWithExternalIconShowcase, 'ListItemWithExternalIcon')\n    ,['ListItemWithIcon']: () => sharingHeightContainer(ListItemWithIconShowcase, 'ListItemWithIcon')\n    ,['ListSimpleUsage']: () => sharingHeightContainer(ListSimpleUsageShowcase, 'ListSimpleUsage')\n    ,['MenuAppearance']: () => sharingHeightContainer(MenuAppearanceShowcase, 'MenuAppearance')\n    ,['MenuInlineStyling']: () => sharingHeightContainer(MenuInlineStylingShowcase, 'MenuInlineStyling')\n    ,['MenuSimpleUsage']: () => sharingHeightContainer(MenuSimpleUsageShowcase, 'MenuSimpleUsage')\n    ,['MenuWithIcons']: () => sharingHeightContainer(MenuWithIconsShowcase, 'MenuWithIcons')\n    ,['MenuWithSubMenu']: () => sharingHeightContainer(MenuWithSubMenuShowcase, 'MenuWithSubMenu')\n    ,['OverflowMenuWithoutDivider']: () => sharingHeightContainer(OverflowMenuWithoutDividerShowcase, 'OverflowMenuWithoutDivider')\n    ,['OverflowMenuExternalSourceIcons']: () => sharingHeightContainer(OverflowMenuExternalSourceIconsShowcase, 'OverflowMenuExternalSourceIcons')\n    ,['OverflowMenuSimpleUsage']: () => sharingHeightContainer(OverflowMenuSimpleUsageShowcase, 'OverflowMenuSimpleUsage')\n    ,['OverflowMenuWithDisabledItems']: () => sharingHeightContainer(OverflowMenuWithDisabledItemsShowcase, 'OverflowMenuWithDisabledItems')\n    ,['OverflowMenuWithIcons']: () => sharingHeightContainer(OverflowMenuWithIconsShowcase, 'OverflowMenuWithIcons')\n    ,['PopoverPlacement']: () => sharingHeightContainer(PopoverPlacementShowcase, 'PopoverPlacement')\n    ,['PopoverSimpleUsage']: () => sharingHeightContainer(PopoverSimpleUsageShowcase, 'PopoverSimpleUsage')\n    ,['RadioInlineStyling']: () => sharingHeightContainer(RadioInlineStylingShowcase, 'RadioInlineStyling')\n    ,['RadioSimpleUsage']: () => sharingHeightContainer(RadioSimpleUsageShowcase, 'RadioSimpleUsage')\n    ,['RadioStatus']: () => sharingHeightContainer(RadioStatusShowcase, 'RadioStatus')\n    ,['RadioWithText']: () => sharingHeightContainer(RadioWithTextShowcase, 'RadioWithText')\n    ,['RadioGroupSimpleUsage']: () => sharingHeightContainer(RadioGroupSimpleUsageShowcase, 'RadioGroupSimpleUsage')\n    ,['SelectCustomIcon']: () => sharingHeightContainer(SelectCustomIconShowcase, 'SelectCustomIcon')\n    ,['SelectInlineStyling']: () => sharingHeightContainer(SelectInlineStylingShowcase, 'SelectInlineStyling')\n    ,['SelectMultiSelect']: () => sharingHeightContainer(SelectMultiSelectShowcase, 'SelectMultiSelect')\n    ,['SelectSimpleUsage']: () => sharingHeightContainer(SelectSimpleUsageShowcase, 'SelectSimpleUsage')\n    ,['SelectStatus']: () => sharingHeightContainer(SelectStatusShowcase, 'SelectStatus')\n    ,['SelectWithGroups']: () => sharingHeightContainer(SelectWithGroupsShowcase, 'SelectWithGroups')\n    ,['SpinnerDataLoading']: () => sharingHeightContainer(SpinnerDataLoadingShowcase, 'SpinnerDataLoading')\n    ,['SpinnerSimpleUsage']: () => sharingHeightContainer(SpinnerSimpleUsageShowcase, 'SpinnerSimpleUsage')\n    ,['SpinnerSizes']: () => sharingHeightContainer(SpinnerSizesShowcase, 'SpinnerSizes')\n    ,['SpinnerStatuses']: () => sharingHeightContainer(SpinnerStatusesShowcase, 'SpinnerStatuses')\n    ,['TabBarSimpleUsage']: () => sharingHeightContainer(TabBarSimpleUsageShowcase, 'TabBarSimpleUsage')\n    ,['TabInlineStyling']: () => sharingHeightContainer(TabInlineStylingShowcase, 'TabInlineStyling')\n    ,['TabSimpleUsage']: () => sharingHeightContainer(TabSimpleUsageShowcase, 'TabSimpleUsage')\n    ,['TabViewInlineStyling']: () => sharingHeightContainer(TabViewInlineStylingShowcase, 'TabViewInlineStyling')\n    ,['TabViewLazyLoading']: () => sharingHeightContainer(TabViewLazyLoadingShowcase, 'TabViewLazyLoading')\n    ,['TabViewSimpleUsage']: () => sharingHeightContainer(TabViewSimpleUsageShowcase, 'TabViewSimpleUsage')\n    ,['TabWithExternalSourceIcon']: () => sharingHeightContainer(TabWithExternalSourceIconShowcase, 'TabWithExternalSourceIcon')\n    ,['TabWithIcon']: () => sharingHeightContainer(TabWithIconShowcase, 'TabWithIcon')\n    ,['TextAppearances']: () => sharingHeightContainer(TextAppearancesShowcase, 'TextAppearances')\n    ,['TextCategories']: () => sharingHeightContainer(TextCategoriesShowcase, 'TextCategories')\n    ,['TextInlineStyling']: () => sharingHeightContainer(TextInlineStylingShowcase, 'TextInlineStyling')\n    ,['TextSimpleUsage']: () => sharingHeightContainer(TextSimpleUsageShowcase, 'TextSimpleUsage')\n    ,['TextStatuses']: () => sharingHeightContainer(TextStatusesShowcase, 'TextStatuses')\n    ,['ToggleInlineStyling']: () => sharingHeightContainer(ToggleInlineStylingShowcase, 'ToggleInlineStyling')\n    ,['ToggleSimpleUsage']: () => sharingHeightContainer(ToggleSimpleUsageShowcase, 'ToggleSimpleUsage')\n    ,['ToggleSize']: () => sharingHeightContainer(ToggleSizeShowcase, 'ToggleSize')\n    ,['ToggleStatus']: () => sharingHeightContainer(ToggleStatusShowcase, 'ToggleStatus')\n    ,['ToggleWithText']: () => sharingHeightContainer(ToggleWithTextShowcase, 'ToggleWithText')\n    ,['TooltipInlineStyling']: () => sharingHeightContainer(TooltipInlineStylingShowcase, 'TooltipInlineStyling')\n    ,['TooltipPlacement']: () => sharingHeightContainer(TooltipPlacementShowcase, 'TooltipPlacement')\n    ,['TooltipSimpleUsage']: () => sharingHeightContainer(TooltipSimpleUsageShowcase, 'TooltipSimpleUsage')\n    ,['TooltipWithExternalSourceIcon']: () => sharingHeightContainer(TooltipWithExternalSourceIconShowcase, 'TooltipWithExternalSourceIcon')\n    ,['TooltipWithIcon']: () => sharingHeightContainer(TooltipWithIconShowcase, 'TooltipWithIcon')\n    ,['TopNavigationActionExternalSourceIcon']: () => sharingHeightContainer(TopNavigationActionExternalSourceIconShowcase, 'TopNavigationActionExternalSourceIcon')\n    ,['TopNavigationActionInlineStyling']: () => sharingHeightContainer(TopNavigationActionInlineStylingShowcase, 'TopNavigationActionInlineStyling')\n    ,['TopNavigationActions']: () => sharingHeightContainer(TopNavigationActionsShowcase, 'TopNavigationActions')\n    ,['TopNavigationActionSimpleUsage']: () => sharingHeightContainer(TopNavigationActionSimpleUsageShowcase, 'TopNavigationActionSimpleUsage')\n    ,['TopNavigationAlignments']: () => sharingHeightContainer(TopNavigationAlignmentsShowcase, 'TopNavigationAlignments')\n    ,['TopNavigationInlineStyling']: () => sharingHeightContainer(TopNavigationInlineStylingShowcase, 'TopNavigationInlineStyling')\n    ,['TopNavigationSimpleUsage']: () => sharingHeightContainer(TopNavigationSimpleUsageShowcase, 'TopNavigationSimpleUsage')\n    ,['TopNavigationWithMenu']: () => sharingHeightContainer(TopNavigationWithMenuShowcase, 'TopNavigationWithMenu')\n    ,['ViewPagerInlineStyling']: () => sharingHeightContainer(ViewPagerInlineStylingShowcase, 'ViewPagerInlineStyling')\n    ,['ViewPagerLazyLoading']: () => sharingHeightContainer(ViewPagerLazyLoadingShowcase, 'ViewPagerLazyLoading')\n    ,['ViewPagerSimpleUsage']: () => sharingHeightContainer(ViewPagerSimpleUsageShowcase, 'ViewPagerSimpleUsage')\n    };\nconst MenuNavigator = createStackNavigator(routes, {\n      initialRouteName: 'Home',\n      headerMode: Platform.select({\n        ios: 'screen',\n        android: 'screen',\n        default: 'none',\n      }),\n    });\nconst DrawerNavigator = createDrawerNavigator({\n      ...routes,\n      ['Home']: MenuNavigator,\n    }, {\n      contentComponent: DrawerNavigation,\n      initialRouteName: 'Home',\n    });\nexport let Router: any;\nswitch (Platform.OS) {\n  case 'web':\n    Router = createBrowserApp(MenuNavigator, { history: 'hash' });\n    break;\n  default:\n    Router = createAppContainer(DrawerNavigator);\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { AntDesign } from '@expo/vector-icons';\n\nexport const AntDesignIconsPack = {\n  name: 'ant',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy({}, {\n    get(target, name) {\n      return IconProvider(name);\n    },\n  });\n}\n\nfunction IconProvider(name) {\n  return {\n    toReactElement: (props) => AntDesignIcon({ name, ...props }),\n  };\n}\n\nfunction AntDesignIcon(props) {\n  const { name, style } = props;\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <AntDesign\n      name={name}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Feather } from '@expo/vector-icons';\n\nexport const FeatherIconsPack = {\n  name: 'feather',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy({}, {\n    get(target, name) {\n      return IconProvider(name);\n    },\n  });\n}\n\nfunction IconProvider(name) {\n  return {\n    toReactElement: (props) => FeatherIcon({ name, ...props }),\n  };\n}\n\nfunction FeatherIcon(props) {\n  const { name, style } = props;\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <Feather\n      name={name}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n","import React from 'react';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { StyleSheet } from 'react-native';\n\nexport const FontAwesomeIconsPack = {\n  name: 'font-awesome',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy({}, {\n    get(target, name) {\n      return IconProvider(name);\n    },\n  });\n}\n\nfunction IconProvider(name) {\n  return {\n    toReactElement: (props) => FontAwesomeIcon({ name, ...props }),\n  };\n}\n\nfunction FontAwesomeIcon(props) {\n  const { name, style } = props;\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <FontAwesome\n      name={name}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nexport const MaterialIconsPack = {\n  name: 'material',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy({}, {\n    get(target, name) {\n      return IconProvider(name);\n    },\n  });\n}\n\nfunction IconProvider(name) {\n  return {\n    toReactElement: (props) => MaterialIcon({ name, ...props }),\n  };\n}\n\nfunction MaterialIcon(props) {\n  const { name, style } = props;\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <MaterialIcons\n      name={name}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n","import React from 'react';\nimport { mapping as evaMapping } from '@eva-design/eva';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport {\n  ApplicationProvider,\n  ApplicationProviderProps,\n  IconPack,\n  IconRegistry,\n} from 'react-native-ui-kitten';\nimport { Router } from './navigation';\nimport {\n  AntDesignIconsPack,\n  FeatherIconsPack,\n  FontAwesomeIconsPack,\n  MaterialCommunityIconsPack,\n  MaterialIconsPack,\n} from './icons';\nimport {\n  ThemeContext,\n  ThemeContextType,\n  ThemeKey,\n  themes,\n} from './themes';\n\ninterface State {\n  theme: ThemeKey;\n}\n\nconst icons: IconPack<any>[] = [\n  EvaIconsPack,\n  AntDesignIconsPack,\n  FeatherIconsPack,\n  FontAwesomeIconsPack,\n  MaterialIconsPack,\n  MaterialCommunityIconsPack,\n];\n\nexport default class App extends React.Component<{}, State> {\n\n  public state: State = {\n    theme: 'Eva Light',\n  };\n\n  private get appConfig(): ApplicationProviderProps {\n    const { [this.state.theme]: currentTheme } = themes;\n\n    return {\n      mapping: evaMapping,\n      theme: currentTheme,\n    };\n  }\n\n  private get themeContext(): ThemeContextType {\n    return {\n      name: this.state.theme,\n      toggleTheme: this.toggleTheme,\n    };\n  }\n\n  private toggleTheme = (theme: ThemeKey): void => {\n    this.setState({ theme });\n  };\n\n  public render(): React.ReactFragment {\n    return (\n      <React.Fragment>\n        <IconRegistry icons={icons}/>\n        <ApplicationProvider {...this.appConfig}>\n          <ThemeContext.Provider value={this.themeContext}>\n            <Router/>\n          </ThemeContext.Provider>\n        </ApplicationProvider>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nexport const MaterialCommunityIconsPack = {\n  name: 'material-community',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy({}, {\n    get(target, name) {\n      return IconProvider(name);\n    },\n  });\n}\n\nfunction IconProvider(name) {\n  return {\n    toReactElement: (props) => MaterialCommunityIcon({ name, ...props }),\n  };\n}\n\nfunction MaterialCommunityIcon(props) {\n  const { name, style } = props;\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <MaterialCommunityIcons\n      name={name}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n","import App from './src/app.component';\n\nexport default App;\n","var map = {\n\t\"./af\": 257,\n\t\"./af.js\": 257,\n\t\"./ar\": 258,\n\t\"./ar-dz\": 259,\n\t\"./ar-dz.js\": 259,\n\t\"./ar-kw\": 260,\n\t\"./ar-kw.js\": 260,\n\t\"./ar-ly\": 261,\n\t\"./ar-ly.js\": 261,\n\t\"./ar-ma\": 262,\n\t\"./ar-ma.js\": 262,\n\t\"./ar-sa\": 263,\n\t\"./ar-sa.js\": 263,\n\t\"./ar-tn\": 264,\n\t\"./ar-tn.js\": 264,\n\t\"./ar.js\": 258,\n\t\"./az\": 265,\n\t\"./az.js\": 265,\n\t\"./be\": 266,\n\t\"./be.js\": 266,\n\t\"./bg\": 267,\n\t\"./bg.js\": 267,\n\t\"./bm\": 268,\n\t\"./bm.js\": 268,\n\t\"./bn\": 269,\n\t\"./bn.js\": 269,\n\t\"./bo\": 270,\n\t\"./bo.js\": 270,\n\t\"./br\": 271,\n\t\"./br.js\": 271,\n\t\"./bs\": 272,\n\t\"./bs.js\": 272,\n\t\"./ca\": 273,\n\t\"./ca.js\": 273,\n\t\"./cs\": 274,\n\t\"./cs.js\": 274,\n\t\"./cv\": 275,\n\t\"./cv.js\": 275,\n\t\"./cy\": 276,\n\t\"./cy.js\": 276,\n\t\"./da\": 277,\n\t\"./da.js\": 277,\n\t\"./de\": 278,\n\t\"./de-at\": 279,\n\t\"./de-at.js\": 279,\n\t\"./de-ch\": 280,\n\t\"./de-ch.js\": 280,\n\t\"./de.js\": 278,\n\t\"./dv\": 281,\n\t\"./dv.js\": 281,\n\t\"./el\": 282,\n\t\"./el.js\": 282,\n\t\"./en-SG\": 283,\n\t\"./en-SG.js\": 283,\n\t\"./en-au\": 284,\n\t\"./en-au.js\": 284,\n\t\"./en-ca\": 285,\n\t\"./en-ca.js\": 285,\n\t\"./en-gb\": 286,\n\t\"./en-gb.js\": 286,\n\t\"./en-ie\": 287,\n\t\"./en-ie.js\": 287,\n\t\"./en-il\": 288,\n\t\"./en-il.js\": 288,\n\t\"./en-nz\": 289,\n\t\"./en-nz.js\": 289,\n\t\"./eo\": 290,\n\t\"./eo.js\": 290,\n\t\"./es\": 291,\n\t\"./es-do\": 292,\n\t\"./es-do.js\": 292,\n\t\"./es-us\": 293,\n\t\"./es-us.js\": 293,\n\t\"./es.js\": 291,\n\t\"./et\": 294,\n\t\"./et.js\": 294,\n\t\"./eu\": 295,\n\t\"./eu.js\": 295,\n\t\"./fa\": 296,\n\t\"./fa.js\": 296,\n\t\"./fi\": 297,\n\t\"./fi.js\": 297,\n\t\"./fo\": 298,\n\t\"./fo.js\": 298,\n\t\"./fr\": 299,\n\t\"./fr-ca\": 300,\n\t\"./fr-ca.js\": 300,\n\t\"./fr-ch\": 301,\n\t\"./fr-ch.js\": 301,\n\t\"./fr.js\": 299,\n\t\"./fy\": 302,\n\t\"./fy.js\": 302,\n\t\"./ga\": 303,\n\t\"./ga.js\": 303,\n\t\"./gd\": 304,\n\t\"./gd.js\": 304,\n\t\"./gl\": 305,\n\t\"./gl.js\": 305,\n\t\"./gom-latn\": 306,\n\t\"./gom-latn.js\": 306,\n\t\"./gu\": 307,\n\t\"./gu.js\": 307,\n\t\"./he\": 308,\n\t\"./he.js\": 308,\n\t\"./hi\": 309,\n\t\"./hi.js\": 309,\n\t\"./hr\": 310,\n\t\"./hr.js\": 310,\n\t\"./hu\": 311,\n\t\"./hu.js\": 311,\n\t\"./hy-am\": 312,\n\t\"./hy-am.js\": 312,\n\t\"./id\": 313,\n\t\"./id.js\": 313,\n\t\"./is\": 314,\n\t\"./is.js\": 314,\n\t\"./it\": 315,\n\t\"./it-ch\": 316,\n\t\"./it-ch.js\": 316,\n\t\"./it.js\": 315,\n\t\"./ja\": 317,\n\t\"./ja.js\": 317,\n\t\"./jv\": 318,\n\t\"./jv.js\": 318,\n\t\"./ka\": 319,\n\t\"./ka.js\": 319,\n\t\"./kk\": 320,\n\t\"./kk.js\": 320,\n\t\"./km\": 321,\n\t\"./km.js\": 321,\n\t\"./kn\": 322,\n\t\"./kn.js\": 322,\n\t\"./ko\": 323,\n\t\"./ko.js\": 323,\n\t\"./ku\": 324,\n\t\"./ku.js\": 324,\n\t\"./ky\": 325,\n\t\"./ky.js\": 325,\n\t\"./lb\": 326,\n\t\"./lb.js\": 326,\n\t\"./lo\": 327,\n\t\"./lo.js\": 327,\n\t\"./lt\": 328,\n\t\"./lt.js\": 328,\n\t\"./lv\": 329,\n\t\"./lv.js\": 329,\n\t\"./me\": 330,\n\t\"./me.js\": 330,\n\t\"./mi\": 331,\n\t\"./mi.js\": 331,\n\t\"./mk\": 332,\n\t\"./mk.js\": 332,\n\t\"./ml\": 333,\n\t\"./ml.js\": 333,\n\t\"./mn\": 334,\n\t\"./mn.js\": 334,\n\t\"./mr\": 335,\n\t\"./mr.js\": 335,\n\t\"./ms\": 336,\n\t\"./ms-my\": 337,\n\t\"./ms-my.js\": 337,\n\t\"./ms.js\": 336,\n\t\"./mt\": 338,\n\t\"./mt.js\": 338,\n\t\"./my\": 339,\n\t\"./my.js\": 339,\n\t\"./nb\": 340,\n\t\"./nb.js\": 340,\n\t\"./ne\": 341,\n\t\"./ne.js\": 341,\n\t\"./nl\": 342,\n\t\"./nl-be\": 343,\n\t\"./nl-be.js\": 343,\n\t\"./nl.js\": 342,\n\t\"./nn\": 344,\n\t\"./nn.js\": 344,\n\t\"./pa-in\": 345,\n\t\"./pa-in.js\": 345,\n\t\"./pl\": 346,\n\t\"./pl.js\": 346,\n\t\"./pt\": 347,\n\t\"./pt-br\": 348,\n\t\"./pt-br.js\": 348,\n\t\"./pt.js\": 347,\n\t\"./ro\": 349,\n\t\"./ro.js\": 349,\n\t\"./ru\": 350,\n\t\"./ru.js\": 350,\n\t\"./sd\": 351,\n\t\"./sd.js\": 351,\n\t\"./se\": 352,\n\t\"./se.js\": 352,\n\t\"./si\": 353,\n\t\"./si.js\": 353,\n\t\"./sk\": 354,\n\t\"./sk.js\": 354,\n\t\"./sl\": 355,\n\t\"./sl.js\": 355,\n\t\"./sq\": 356,\n\t\"./sq.js\": 356,\n\t\"./sr\": 357,\n\t\"./sr-cyrl\": 358,\n\t\"./sr-cyrl.js\": 358,\n\t\"./sr.js\": 357,\n\t\"./ss\": 359,\n\t\"./ss.js\": 359,\n\t\"./sv\": 360,\n\t\"./sv.js\": 360,\n\t\"./sw\": 361,\n\t\"./sw.js\": 361,\n\t\"./ta\": 362,\n\t\"./ta.js\": 362,\n\t\"./te\": 363,\n\t\"./te.js\": 363,\n\t\"./tet\": 364,\n\t\"./tet.js\": 364,\n\t\"./tg\": 365,\n\t\"./tg.js\": 365,\n\t\"./th\": 366,\n\t\"./th.js\": 366,\n\t\"./tl-ph\": 367,\n\t\"./tl-ph.js\": 367,\n\t\"./tlh\": 368,\n\t\"./tlh.js\": 368,\n\t\"./tr\": 369,\n\t\"./tr.js\": 369,\n\t\"./tzl\": 370,\n\t\"./tzl.js\": 370,\n\t\"./tzm\": 371,\n\t\"./tzm-latn\": 372,\n\t\"./tzm-latn.js\": 372,\n\t\"./tzm.js\": 371,\n\t\"./ug-cn\": 373,\n\t\"./ug-cn.js\": 373,\n\t\"./uk\": 374,\n\t\"./uk.js\": 374,\n\t\"./ur\": 375,\n\t\"./ur.js\": 375,\n\t\"./uz\": 376,\n\t\"./uz-latn\": 377,\n\t\"./uz-latn.js\": 377,\n\t\"./uz.js\": 376,\n\t\"./vi\": 378,\n\t\"./vi.js\": 378,\n\t\"./x-pseudo\": 379,\n\t\"./x-pseudo.js\": 379,\n\t\"./yo\": 380,\n\t\"./yo.js\": 380,\n\t\"./zh-cn\": 381,\n\t\"./zh-cn.js\": 381,\n\t\"./zh-hk\": 382,\n\t\"./zh-hk.js\": 382,\n\t\"./zh-tw\": 383,\n\t\"./zh-tw.js\": 383\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 615;","module.exports = __webpack_public_path__ + \"static/media/brand-logo.a78e4b51.png\";"],"sourceRoot":""}